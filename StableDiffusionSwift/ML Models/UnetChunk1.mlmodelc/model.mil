program(1.0)
[buildInfo = dict<tensor<string, []>, tensor<string, []>>({{"coremlc-component-MIL", "4.28.4"}, {"coremlc-version", "1429.0.0"}})]
{
    func main<ios16>(tensor<fp16, [2, 1024, 1, 77]> encoder_hidden_states, tensor<fp16, [2, 4, 64, 64]> sample, tensor<fp16, [2]> timestep) {
            tensor<int32, []> var_25 = const()[name = tensor<string, []>("op_25"), val = tensor<int32, []>(-1)];
            tensor<int32, [1]> var_42_axes_0 = const()[name = tensor<string, []>("op_42_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1]> var_42_cast = expand_dims(axes = var_42_axes_0, x = timestep);
            tensor<fp16, [1, 160]> var_44_to_fp16 = const()[name = tensor<string, []>("op_44_to_fp16"), val = tensor<fp16, [1, 160]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(64)))];
            tensor<fp16, [2, 160]> emb_3_cast = mul(x = var_42_cast, y = var_44_to_fp16);
            tensor<fp16, [2, 160]> var_49_cast = sin(x = emb_3_cast);
            tensor<fp16, [2, 160]> var_50_cast = cos(x = emb_3_cast);
            tensor<bool, []> emb_interleave_0 = const()[name = tensor<string, []>("emb_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 320]> emb_cast = concat(axis = var_25, interleave = emb_interleave_0, values = (var_49_cast, var_50_cast));
            tensor<int32, [2]> var_54_begin_0 = const()[name = tensor<string, []>("op_54_begin_0"), val = tensor<int32, [2]>([0, 160])];
            tensor<int32, [2]> var_54_end_0 = const()[name = tensor<string, []>("op_54_end_0"), val = tensor<int32, [2]>([2, 320])];
            tensor<bool, [2]> var_54_end_mask_0 = const()[name = tensor<string, []>("op_54_end_mask_0"), val = tensor<bool, [2]>([true, true])];
            tensor<fp16, [2, 160]> var_54_cast = slice_by_index(begin = var_54_begin_0, end = var_54_end_0, end_mask = var_54_end_mask_0, x = emb_cast);
            tensor<int32, [2]> var_56_begin_0 = const()[name = tensor<string, []>("op_56_begin_0"), val = tensor<int32, [2]>([0, 0])];
            tensor<int32, [2]> var_56_end_0 = const()[name = tensor<string, []>("op_56_end_0"), val = tensor<int32, [2]>([2, 160])];
            tensor<bool, [2]> var_56_end_mask_0 = const()[name = tensor<string, []>("op_56_end_mask_0"), val = tensor<bool, [2]>([true, false])];
            tensor<fp16, [2, 160]> var_56_cast = slice_by_index(begin = var_56_begin_0, end = var_56_end_0, end_mask = var_56_end_mask_0, x = emb_cast);
            tensor<bool, []> sample_interleave_0 = const()[name = tensor<string, []>("sample_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 320]> sample_cast = concat(axis = var_25, interleave = sample_interleave_0, values = (var_54_cast, var_56_cast));
            tensor<int32, []> var_59 = const()[name = tensor<string, []>("op_59"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> var_66_axes_0 = const()[name = tensor<string, []>("op_66_axes_0"), val = tensor<int32, [1]>([-1])];
            tensor<fp16, [2, 320, 1]> var_66_cast = expand_dims(axes = var_66_axes_0, x = sample_cast);
            tensor<int32, [1]> input_1_axes_0 = const()[name = tensor<string, []>("input_1_axes_0"), val = tensor<int32, [1]>([-1])];
            tensor<fp16, [2, 320, 1, 1]> input_1_cast = expand_dims(axes = input_1_axes_0, x = var_66_cast);
            tensor<int32, [2]> var_70 = const()[name = tensor<string, []>("op_70"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_72 = const()[name = tensor<string, []>("op_72"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_3_pad_type_0 = const()[name = tensor<string, []>("input_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_3_pad_0 = const()[name = tensor<string, []>("input_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 320, 1, 1]> time_embedding_linear_1_weight_to_fp16 = const()[name = tensor<string, []>("time_embedding_linear_1_weight_to_fp16"), val = tensor<fp16, [1280, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(448)))];
            tensor<fp16, [1280]> time_embedding_linear_1_bias_to_fp16 = const()[name = tensor<string, []>("time_embedding_linear_1_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(819712)))];
            tensor<fp16, [2, 1280, 1, 1]> input_3_cast = conv(bias = time_embedding_linear_1_bias_to_fp16, dilations = var_72, groups = var_59, pad = input_3_pad_0, pad_type = input_3_pad_type_0, strides = var_70, weight = time_embedding_linear_1_weight_to_fp16, x = input_1_cast);
            tensor<fp16, [2, 1280, 1, 1]> input_5_cast = silu(x = input_3_cast);
            tensor<int32, [2]> var_78 = const()[name = tensor<string, []>("op_78"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_80 = const()[name = tensor<string, []>("op_80"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_13_pad_type_0 = const()[name = tensor<string, []>("input_13_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_13_pad_0 = const()[name = tensor<string, []>("input_13_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> time_embedding_linear_2_weight_to_fp16 = const()[name = tensor<string, []>("time_embedding_linear_2_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(822336)))];
            tensor<fp16, [1280]> time_embedding_linear_2_bias_to_fp16 = const()[name = tensor<string, []>("time_embedding_linear_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4099200)))];
            tensor<fp16, [2, 1280, 1, 1]> input_13_cast = conv(bias = time_embedding_linear_2_bias_to_fp16, dilations = var_80, groups = var_59, pad = input_13_pad_0, pad_type = input_13_pad_type_0, strides = var_78, weight = time_embedding_linear_2_weight_to_fp16, x = input_5_cast);
            tensor<int32, []> var_86 = const()[name = tensor<string, []>("op_86"), val = tensor<int32, []>(1)];
            tensor<int32, [2]> var_89 = const()[name = tensor<string, []>("op_89"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_91 = const()[name = tensor<string, []>("op_91"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_7_pad_type_0 = const()[name = tensor<string, []>("input_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_7_pad_0 = const()[name = tensor<string, []>("input_7_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [320, 4, 3, 3]> conv_in_weight_to_fp16 = const()[name = tensor<string, []>("conv_in_weight_to_fp16"), val = tensor<fp16, [320, 4, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4101824)))];
            tensor<fp16, [320]> conv_in_bias_to_fp16 = const()[name = tensor<string, []>("conv_in_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4124928)))];
            tensor<fp16, [2, 320, 64, 64]> input_7_cast_1 = conv(bias = conv_in_bias_to_fp16, dilations = var_91, groups = var_86, pad = input_7_pad_0, pad_type = input_7_pad_type_0, strides = var_89, weight = conv_in_weight_to_fp16, x = sample);
            tensor<bool, []> var_107 = const()[name = tensor<string, []>("op_107"), val = tensor<bool, []>(true)];
            tensor<int32, []> var_112 = const()[name = tensor<string, []>("op_112"), val = tensor<int32, []>(1)];
            tensor<int32, [5]> reshape_0_shape_0 = const()[name = tensor<string, []>("reshape_0_shape_0"), val = tensor<int32, [5]>([2, 32, 10, 64, 64])];
            tensor<fp16, [2, 32, 10, 64, 64]> reshape_0_cast = reshape(shape = reshape_0_shape_0, x = input_7_cast_1);
            tensor<int32, [3]> reduce_mean_0_axes_0 = const()[name = tensor<string, []>("reduce_mean_0_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_0_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_0_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_0_cast = reduce_mean(axes = reduce_mean_0_axes_0, keep_dims = reduce_mean_0_keep_dims_0, x = reshape_0_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> sub_0_cast = sub(x = reshape_0_cast, y = reduce_mean_0_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> square_0_cast = square(x = sub_0_cast);
            tensor<int32, [3]> reduce_mean_2_axes_0 = const()[name = tensor<string, []>("reduce_mean_2_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_2_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_2_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_2_cast = reduce_mean(axes = reduce_mean_2_axes_0, keep_dims = reduce_mean_2_keep_dims_0, x = square_0_cast);
            tensor<fp16, []> add_0_y_0_to_fp16 = const()[name = tensor<string, []>("add_0_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_0_cast = add(x = reduce_mean_2_cast, y = add_0_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_0_cast = sqrt(x = add_0_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> real_div_0_cast = real_div(x = sub_0_cast, y = sqrt_0_cast);
            tensor<int32, [4]> reshape_1_shape_0 = const()[name = tensor<string, []>("reshape_1_shape_0"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> reshape_1_cast = reshape(shape = reshape_1_shape_0, x = real_div_0_cast);
            tensor<fp16, [320]> add_1_mean_0_to_fp16 = const()[name = tensor<string, []>("add_1_mean_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4125632)))];
            tensor<fp16, [320]> add_1_variance_0_to_fp16 = const()[name = tensor<string, []>("add_1_variance_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4126336)))];
            tensor<fp16, [320]> add_1_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_1_gamma_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4127040)))];
            tensor<fp16, [320]> add_1_beta_0_to_fp16 = const()[name = tensor<string, []>("add_1_beta_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4127744)))];
            tensor<fp16, []> add_1_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_1_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 320, 64, 64]> add_1_cast = batch_norm(beta = add_1_beta_0_to_fp16, epsilon = add_1_epsilon_0_to_fp16, gamma = add_1_gamma_0_to_fp16, mean = add_1_mean_0_to_fp16, variance = add_1_variance_0_to_fp16, x = reshape_1_cast);
            tensor<fp16, [2, 320, 64, 64]> input_11_cast = silu(x = add_1_cast);
            tensor<int32, [2]> var_134 = const()[name = tensor<string, []>("op_134"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_136 = const()[name = tensor<string, []>("op_136"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_1_pad_type_0 = const()[name = tensor<string, []>("hidden_states_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_1_pad_0 = const()[name = tensor<string, []>("hidden_states_1_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [320, 320, 3, 3]> down_blocks_0_resnets_0_conv1_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_resnets_0_conv1_weight_to_fp16"), val = tensor<fp16, [320, 320, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4128448)))];
            tensor<fp16, [320]> down_blocks_0_resnets_0_conv1_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_resnets_0_conv1_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5971712)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_1_cast = conv(bias = down_blocks_0_resnets_0_conv1_bias_to_fp16, dilations = var_136, groups = var_112, pad = hidden_states_1_pad_0, pad_type = hidden_states_1_pad_type_0, strides = var_134, weight = down_blocks_0_resnets_0_conv1_weight_to_fp16, x = input_11_cast);
            tensor<fp16, [2, 1280, 1, 1]> input_15_cast_1 = silu(x = input_13_cast);
            tensor<int32, [2]> var_142 = const()[name = tensor<string, []>("op_142"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_144 = const()[name = tensor<string, []>("op_144"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_1_pad_type_0 = const()[name = tensor<string, []>("temb_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_1_pad_0 = const()[name = tensor<string, []>("temb_1_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 1280, 1, 1]> down_blocks_0_resnets_0_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_resnets_0_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [320, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5972416)))];
            tensor<fp16, [320]> down_blocks_0_resnets_0_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_resnets_0_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6791680)))];
            tensor<fp16, [2, 320, 1, 1]> temb_1_cast = conv(bias = down_blocks_0_resnets_0_time_emb_proj_bias_to_fp16, dilations = var_144, groups = var_112, pad = temb_1_pad_0, pad_type = temb_1_pad_type_0, strides = var_142, weight = down_blocks_0_resnets_0_time_emb_proj_weight_to_fp16, x = input_15_cast_1);
            tensor<fp16, [2, 320, 64, 64]> input_17_cast = add(x = hidden_states_1_cast, y = temb_1_cast);
            tensor<int32, [5]> reshape_4_shape_0 = const()[name = tensor<string, []>("reshape_4_shape_0"), val = tensor<int32, [5]>([2, 32, 10, 64, 64])];
            tensor<fp16, [2, 32, 10, 64, 64]> reshape_4_cast = reshape(shape = reshape_4_shape_0, x = input_17_cast);
            tensor<int32, [3]> reduce_mean_3_axes_0 = const()[name = tensor<string, []>("reduce_mean_3_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_3_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_3_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_3_cast = reduce_mean(axes = reduce_mean_3_axes_0, keep_dims = reduce_mean_3_keep_dims_0, x = reshape_4_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> sub_2_cast = sub(x = reshape_4_cast, y = reduce_mean_3_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> square_1_cast = square(x = sub_2_cast);
            tensor<int32, [3]> reduce_mean_5_axes_0 = const()[name = tensor<string, []>("reduce_mean_5_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_5_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_5_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_5_cast = reduce_mean(axes = reduce_mean_5_axes_0, keep_dims = reduce_mean_5_keep_dims_0, x = square_1_cast);
            tensor<fp16, []> add_2_y_0_to_fp16 = const()[name = tensor<string, []>("add_2_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_2_cast = add(x = reduce_mean_5_cast, y = add_2_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_1_cast = sqrt(x = add_2_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> real_div_1_cast = real_div(x = sub_2_cast, y = sqrt_1_cast);
            tensor<int32, [4]> reshape_5_shape_0 = const()[name = tensor<string, []>("reshape_5_shape_0"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> reshape_5_cast = reshape(shape = reshape_5_shape_0, x = real_div_1_cast);
            tensor<fp16, [320]> add_3_mean_0_to_fp16 = const()[name = tensor<string, []>("add_3_mean_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6792384)))];
            tensor<fp16, [320]> add_3_variance_0_to_fp16 = const()[name = tensor<string, []>("add_3_variance_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6793088)))];
            tensor<fp16, [320]> add_3_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_3_gamma_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6793792)))];
            tensor<fp16, [320]> add_3_beta_0_to_fp16 = const()[name = tensor<string, []>("add_3_beta_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6794496)))];
            tensor<fp16, []> add_3_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_3_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 320, 64, 64]> add_3_cast = batch_norm(beta = add_3_beta_0_to_fp16, epsilon = add_3_epsilon_0_to_fp16, gamma = add_3_gamma_0_to_fp16, mean = add_3_mean_0_to_fp16, variance = add_3_variance_0_to_fp16, x = reshape_5_cast);
            tensor<fp16, [2, 320, 64, 64]> input_21_cast = silu(x = add_3_cast);
            tensor<int32, [2]> var_154 = const()[name = tensor<string, []>("op_154"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_156 = const()[name = tensor<string, []>("op_156"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_3_pad_type_0 = const()[name = tensor<string, []>("hidden_states_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_3_pad_0 = const()[name = tensor<string, []>("hidden_states_3_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [320, 320, 3, 3]> down_blocks_0_resnets_0_conv2_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_resnets_0_conv2_weight_to_fp16"), val = tensor<fp16, [320, 320, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6795200)))];
            tensor<fp16, [320]> down_blocks_0_resnets_0_conv2_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_resnets_0_conv2_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8638464)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_3_cast = conv(bias = down_blocks_0_resnets_0_conv2_bias_to_fp16, dilations = var_156, groups = var_112, pad = hidden_states_3_pad_0, pad_type = hidden_states_3_pad_type_0, strides = var_154, weight = down_blocks_0_resnets_0_conv2_weight_to_fp16, x = input_21_cast);
            tensor<fp16, [2, 320, 64, 64]> hidden_states_5_cast = add(x = input_7_cast_1, y = hidden_states_3_cast);
            tensor<int32, [5]> reshape_8_shape_0 = const()[name = tensor<string, []>("reshape_8_shape_0"), val = tensor<int32, [5]>([2, 32, 10, 64, 64])];
            tensor<fp16, [2, 32, 10, 64, 64]> reshape_8_cast = reshape(shape = reshape_8_shape_0, x = hidden_states_5_cast);
            tensor<int32, [3]> reduce_mean_6_axes_0 = const()[name = tensor<string, []>("reduce_mean_6_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_6_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_6_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_6_cast = reduce_mean(axes = reduce_mean_6_axes_0, keep_dims = reduce_mean_6_keep_dims_0, x = reshape_8_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> sub_4_cast = sub(x = reshape_8_cast, y = reduce_mean_6_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> square_2_cast = square(x = sub_4_cast);
            tensor<int32, [3]> reduce_mean_8_axes_0 = const()[name = tensor<string, []>("reduce_mean_8_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_8_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_8_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_8_cast = reduce_mean(axes = reduce_mean_8_axes_0, keep_dims = reduce_mean_8_keep_dims_0, x = square_2_cast);
            tensor<fp16, []> add_4_y_0_to_fp16 = const()[name = tensor<string, []>("add_4_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_4_cast = add(x = reduce_mean_8_cast, y = add_4_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_2_cast = sqrt(x = add_4_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> real_div_2_cast = real_div(x = sub_4_cast, y = sqrt_2_cast);
            tensor<int32, [4]> reshape_9_shape_0 = const()[name = tensor<string, []>("reshape_9_shape_0"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> reshape_9_cast = reshape(shape = reshape_9_shape_0, x = real_div_2_cast);
            tensor<fp16, [320]> add_5_mean_0_to_fp16 = const()[name = tensor<string, []>("add_5_mean_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8639168)))];
            tensor<fp16, [320]> add_5_variance_0_to_fp16 = const()[name = tensor<string, []>("add_5_variance_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8639872)))];
            tensor<fp16, [320]> add_5_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_5_gamma_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8640576)))];
            tensor<fp16, [320]> add_5_beta_0_to_fp16 = const()[name = tensor<string, []>("add_5_beta_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8641280)))];
            tensor<fp16, []> add_5_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_5_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 320, 64, 64]> add_5_cast = batch_norm(beta = add_5_beta_0_to_fp16, epsilon = add_5_epsilon_0_to_fp16, gamma = add_5_gamma_0_to_fp16, mean = add_5_mean_0_to_fp16, variance = add_5_variance_0_to_fp16, x = reshape_9_cast);
            tensor<int32, [2]> var_176 = const()[name = tensor<string, []>("op_176"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_178 = const()[name = tensor<string, []>("op_178"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_7_pad_type_0 = const()[name = tensor<string, []>("hidden_states_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_7_pad_0 = const()[name = tensor<string, []>("hidden_states_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> down_blocks_0_attentions_0_proj_in_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_proj_in_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8641984)))];
            tensor<fp16, [320]> down_blocks_0_attentions_0_proj_in_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_proj_in_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8846848)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_7_cast = conv(bias = down_blocks_0_attentions_0_proj_in_bias_to_fp16, dilations = var_178, groups = var_112, pad = hidden_states_7_pad_0, pad_type = hidden_states_7_pad_type_0, strides = var_176, weight = down_blocks_0_attentions_0_proj_in_weight_to_fp16, x = add_5_cast);
            tensor<int32, [4]> var_183 = const()[name = tensor<string, []>("op_183"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<fp16, [2, 320, 1, 4096]> inputs_1_cast = reshape(shape = var_183, x = hidden_states_7_cast);
            tensor<int32, [1]> var_193 = const()[name = tensor<string, []>("op_193"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> channels_mean_1_cast = reduce_mean(axes = var_193, keep_dims = var_107, x = inputs_1_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_1_cast = sub(x = inputs_1_cast, y = channels_mean_1_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_sq_1_cast = mul(x = zero_mean_1_cast, y = zero_mean_1_cast);
            tensor<int32, [1]> var_197 = const()[name = tensor<string, []>("op_197"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> var_198_cast = reduce_mean(axes = var_197, keep_dims = var_107, x = zero_mean_sq_1_cast);
            tensor<fp16, []> var_199_to_fp16 = const()[name = tensor<string, []>("op_199_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 4096]> var_200_cast = add(x = var_198_cast, y = var_199_to_fp16);
            tensor<fp16, []> denom_1_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_1_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 4096]> denom_1_cast = rsqrt(epsilon = denom_1_epsilon_0_to_fp16, x = var_200_cast);
            tensor<fp16, [2, 320, 1, 4096]> out_1_cast = mul(x = zero_mean_1_cast, y = denom_1_cast);
            tensor<fp16, [1, 320, 1, 1]> var_204_to_fp16 = const()[name = tensor<string, []>("op_204_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8847552)))];
            tensor<fp16, [2, 320, 1, 4096]> var_205_cast = add(x = out_1_cast, y = var_204_to_fp16);
            tensor<fp16, [1, 320, 1, 1]> var_207_to_fp16 = const()[name = tensor<string, []>("op_207_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8848256)))];
            tensor<fp16, [2, 320, 1, 4096]> hidden_states_9_cast = mul(x = var_205_cast, y = var_207_to_fp16);
            tensor<int32, [2]> var_214 = const()[name = tensor<string, []>("op_214"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_216 = const()[name = tensor<string, []>("op_216"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_1_pad_type_0 = const()[name = tensor<string, []>("q_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_1_pad_0 = const()[name = tensor<string, []>("q_1_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> down_blocks_0_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8848960)))];
            tensor<fp16, [2, 320, 1, 4096]> q_1_cast = conv(dilations = var_216, groups = var_112, pad = q_1_pad_0, pad_type = q_1_pad_type_0, strides = var_214, weight = down_blocks_0_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16, x = hidden_states_9_cast);
            tensor<int32, [2]> var_220 = const()[name = tensor<string, []>("op_220"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_222 = const()[name = tensor<string, []>("op_222"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_1_pad_type_0 = const()[name = tensor<string, []>("k_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_1_pad_0 = const()[name = tensor<string, []>("k_1_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> down_blocks_0_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9053824)))];
            tensor<fp16, [2, 320, 1, 4096]> k_1_cast = conv(dilations = var_222, groups = var_112, pad = k_1_pad_0, pad_type = k_1_pad_type_0, strides = var_220, weight = down_blocks_0_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16, x = hidden_states_9_cast);
            tensor<int32, [2]> var_226 = const()[name = tensor<string, []>("op_226"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_228 = const()[name = tensor<string, []>("op_228"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_1_pad_type_0 = const()[name = tensor<string, []>("v_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_1_pad_0 = const()[name = tensor<string, []>("v_1_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> down_blocks_0_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9258688)))];
            tensor<fp16, [2, 320, 1, 4096]> v_1_cast = conv(dilations = var_228, groups = var_112, pad = v_1_pad_0, pad_type = v_1_pad_type_0, strides = var_226, weight = down_blocks_0_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16, x = hidden_states_9_cast);
            tensor<int32, [4]> var_232_begin_0 = const()[name = tensor<string, []>("op_232_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_232_end_0 = const()[name = tensor<string, []>("op_232_end_0"), val = tensor<int32, [4]>([2, 64, 1, 4096])];
            tensor<bool, [4]> var_232_end_mask_0 = const()[name = tensor<string, []>("op_232_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_232_cast = slice_by_index(begin = var_232_begin_0, end = var_232_end_0, end_mask = var_232_end_mask_0, x = q_1_cast);
            tensor<int32, [4]> var_236_begin_0 = const()[name = tensor<string, []>("op_236_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_236_end_0 = const()[name = tensor<string, []>("op_236_end_0"), val = tensor<int32, [4]>([2, 128, 1, 4096])];
            tensor<bool, [4]> var_236_end_mask_0 = const()[name = tensor<string, []>("op_236_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_236_cast = slice_by_index(begin = var_236_begin_0, end = var_236_end_0, end_mask = var_236_end_mask_0, x = q_1_cast);
            tensor<int32, [4]> var_240_begin_0 = const()[name = tensor<string, []>("op_240_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_240_end_0 = const()[name = tensor<string, []>("op_240_end_0"), val = tensor<int32, [4]>([2, 192, 1, 4096])];
            tensor<bool, [4]> var_240_end_mask_0 = const()[name = tensor<string, []>("op_240_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_240_cast = slice_by_index(begin = var_240_begin_0, end = var_240_end_0, end_mask = var_240_end_mask_0, x = q_1_cast);
            tensor<int32, [4]> var_244_begin_0 = const()[name = tensor<string, []>("op_244_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_244_end_0 = const()[name = tensor<string, []>("op_244_end_0"), val = tensor<int32, [4]>([2, 256, 1, 4096])];
            tensor<bool, [4]> var_244_end_mask_0 = const()[name = tensor<string, []>("op_244_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_244_cast = slice_by_index(begin = var_244_begin_0, end = var_244_end_0, end_mask = var_244_end_mask_0, x = q_1_cast);
            tensor<int32, [4]> var_248_begin_0 = const()[name = tensor<string, []>("op_248_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_248_end_0 = const()[name = tensor<string, []>("op_248_end_0"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<bool, [4]> var_248_end_mask_0 = const()[name = tensor<string, []>("op_248_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_248_cast = slice_by_index(begin = var_248_begin_0, end = var_248_end_0, end_mask = var_248_end_mask_0, x = q_1_cast);
            tensor<int32, [4]> k_3_perm_0 = const()[name = tensor<string, []>("k_3_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_255_begin_0 = const()[name = tensor<string, []>("op_255_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_255_end_0 = const()[name = tensor<string, []>("op_255_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 64])];
            tensor<bool, [4]> var_255_end_mask_0 = const()[name = tensor<string, []>("op_255_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 320]> transpose_77 = transpose(perm = k_3_perm_0, x = k_1_cast);
            tensor<fp16, [2, 4096, 1, 64]> var_255_cast = slice_by_index(begin = var_255_begin_0, end = var_255_end_0, end_mask = var_255_end_mask_0, x = transpose_77);
            tensor<int32, [4]> var_259_begin_0 = const()[name = tensor<string, []>("op_259_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 64])];
            tensor<int32, [4]> var_259_end_0 = const()[name = tensor<string, []>("op_259_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 128])];
            tensor<bool, [4]> var_259_end_mask_0 = const()[name = tensor<string, []>("op_259_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 64]> var_259_cast = slice_by_index(begin = var_259_begin_0, end = var_259_end_0, end_mask = var_259_end_mask_0, x = transpose_77);
            tensor<int32, [4]> var_263_begin_0 = const()[name = tensor<string, []>("op_263_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 128])];
            tensor<int32, [4]> var_263_end_0 = const()[name = tensor<string, []>("op_263_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 192])];
            tensor<bool, [4]> var_263_end_mask_0 = const()[name = tensor<string, []>("op_263_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 64]> var_263_cast = slice_by_index(begin = var_263_begin_0, end = var_263_end_0, end_mask = var_263_end_mask_0, x = transpose_77);
            tensor<int32, [4]> var_267_begin_0 = const()[name = tensor<string, []>("op_267_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 192])];
            tensor<int32, [4]> var_267_end_0 = const()[name = tensor<string, []>("op_267_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 256])];
            tensor<bool, [4]> var_267_end_mask_0 = const()[name = tensor<string, []>("op_267_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 64]> var_267_cast = slice_by_index(begin = var_267_begin_0, end = var_267_end_0, end_mask = var_267_end_mask_0, x = transpose_77);
            tensor<int32, [4]> var_271_begin_0 = const()[name = tensor<string, []>("op_271_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 256])];
            tensor<int32, [4]> var_271_end_0 = const()[name = tensor<string, []>("op_271_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 320])];
            tensor<bool, [4]> var_271_end_mask_0 = const()[name = tensor<string, []>("op_271_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 64]> var_271_cast = slice_by_index(begin = var_271_begin_0, end = var_271_end_0, end_mask = var_271_end_mask_0, x = transpose_77);
            tensor<int32, [4]> var_273_begin_0 = const()[name = tensor<string, []>("op_273_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_273_end_0 = const()[name = tensor<string, []>("op_273_end_0"), val = tensor<int32, [4]>([2, 64, 1, 4096])];
            tensor<bool, [4]> var_273_end_mask_0 = const()[name = tensor<string, []>("op_273_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_273_cast = slice_by_index(begin = var_273_begin_0, end = var_273_end_0, end_mask = var_273_end_mask_0, x = v_1_cast);
            tensor<int32, [4]> var_277_begin_0 = const()[name = tensor<string, []>("op_277_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_277_end_0 = const()[name = tensor<string, []>("op_277_end_0"), val = tensor<int32, [4]>([2, 128, 1, 4096])];
            tensor<bool, [4]> var_277_end_mask_0 = const()[name = tensor<string, []>("op_277_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_277_cast = slice_by_index(begin = var_277_begin_0, end = var_277_end_0, end_mask = var_277_end_mask_0, x = v_1_cast);
            tensor<int32, [4]> var_281_begin_0 = const()[name = tensor<string, []>("op_281_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_281_end_0 = const()[name = tensor<string, []>("op_281_end_0"), val = tensor<int32, [4]>([2, 192, 1, 4096])];
            tensor<bool, [4]> var_281_end_mask_0 = const()[name = tensor<string, []>("op_281_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_281_cast = slice_by_index(begin = var_281_begin_0, end = var_281_end_0, end_mask = var_281_end_mask_0, x = v_1_cast);
            tensor<int32, [4]> var_285_begin_0 = const()[name = tensor<string, []>("op_285_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_285_end_0 = const()[name = tensor<string, []>("op_285_end_0"), val = tensor<int32, [4]>([2, 256, 1, 4096])];
            tensor<bool, [4]> var_285_end_mask_0 = const()[name = tensor<string, []>("op_285_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_285_cast = slice_by_index(begin = var_285_begin_0, end = var_285_end_0, end_mask = var_285_end_mask_0, x = v_1_cast);
            tensor<int32, [4]> var_289_begin_0 = const()[name = tensor<string, []>("op_289_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_289_end_0 = const()[name = tensor<string, []>("op_289_end_0"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<bool, [4]> var_289_end_mask_0 = const()[name = tensor<string, []>("op_289_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_289_cast = slice_by_index(begin = var_289_begin_0, end = var_289_end_0, end_mask = var_289_end_mask_0, x = v_1_cast);
            tensor<string, []> var_293_equation_0 = const()[name = tensor<string, []>("op_293_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_293_cast = einsum(equation = var_293_equation_0, values = (var_255_cast, var_232_cast));
            tensor<fp16, []> var_294_to_fp16 = const()[name = tensor<string, []>("op_294_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_1_cast = mul(x = var_293_cast, y = var_294_to_fp16);
            tensor<string, []> var_297_equation_0 = const()[name = tensor<string, []>("op_297_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_297_cast = einsum(equation = var_297_equation_0, values = (var_259_cast, var_236_cast));
            tensor<fp16, []> var_298_to_fp16 = const()[name = tensor<string, []>("op_298_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_3_cast = mul(x = var_297_cast, y = var_298_to_fp16);
            tensor<string, []> var_301_equation_0 = const()[name = tensor<string, []>("op_301_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_301_cast = einsum(equation = var_301_equation_0, values = (var_263_cast, var_240_cast));
            tensor<fp16, []> var_302_to_fp16 = const()[name = tensor<string, []>("op_302_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_5_cast = mul(x = var_301_cast, y = var_302_to_fp16);
            tensor<string, []> var_305_equation_0 = const()[name = tensor<string, []>("op_305_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_305_cast = einsum(equation = var_305_equation_0, values = (var_267_cast, var_244_cast));
            tensor<fp16, []> var_306_to_fp16 = const()[name = tensor<string, []>("op_306_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_7_cast = mul(x = var_305_cast, y = var_306_to_fp16);
            tensor<string, []> var_309_equation_0 = const()[name = tensor<string, []>("op_309_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_309_cast = einsum(equation = var_309_equation_0, values = (var_271_cast, var_248_cast));
            tensor<fp16, []> var_310_to_fp16 = const()[name = tensor<string, []>("op_310_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_9_cast = mul(x = var_309_cast, y = var_310_to_fp16);
            tensor<fp16, [2, 4096, 1, 4096]> var_312_cast = softmax(axis = var_112, x = aw_1_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_313_cast = softmax(axis = var_112, x = aw_3_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_314_cast = softmax(axis = var_112, x = aw_5_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_315_cast = softmax(axis = var_112, x = aw_7_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_316_cast = softmax(axis = var_112, x = aw_9_cast);
            tensor<string, []> var_318_equation_0 = const()[name = tensor<string, []>("op_318_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_318_cast = einsum(equation = var_318_equation_0, values = (var_273_cast, var_312_cast));
            tensor<string, []> var_320_equation_0 = const()[name = tensor<string, []>("op_320_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_320_cast = einsum(equation = var_320_equation_0, values = (var_277_cast, var_313_cast));
            tensor<string, []> var_322_equation_0 = const()[name = tensor<string, []>("op_322_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_322_cast = einsum(equation = var_322_equation_0, values = (var_281_cast, var_314_cast));
            tensor<string, []> var_324_equation_0 = const()[name = tensor<string, []>("op_324_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_324_cast = einsum(equation = var_324_equation_0, values = (var_285_cast, var_315_cast));
            tensor<string, []> var_326_equation_0 = const()[name = tensor<string, []>("op_326_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_326_cast = einsum(equation = var_326_equation_0, values = (var_289_cast, var_316_cast));
            tensor<bool, []> input_25_interleave_0 = const()[name = tensor<string, []>("input_25_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 320, 1, 4096]> input_25_cast = concat(axis = var_112, interleave = input_25_interleave_0, values = (var_318_cast, var_320_cast, var_322_cast, var_324_cast, var_326_cast));
            tensor<int32, [2]> var_332 = const()[name = tensor<string, []>("op_332"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_334 = const()[name = tensor<string, []>("op_334"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_336_pad_type_0 = const()[name = tensor<string, []>("op_336_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_336_pad_0 = const()[name = tensor<string, []>("op_336_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> down_blocks_0_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9463552)))];
            tensor<fp16, [320]> down_blocks_0_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9668416)))];
            tensor<fp16, [2, 320, 1, 4096]> var_336_cast = conv(bias = down_blocks_0_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16, dilations = var_334, groups = var_112, pad = var_336_pad_0, pad_type = var_336_pad_type_0, strides = var_332, weight = down_blocks_0_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16, x = input_25_cast);
            tensor<fp16, [2, 320, 1, 4096]> inputs_3_cast = add(x = var_336_cast, y = inputs_1_cast);
            tensor<int32, [1]> var_340 = const()[name = tensor<string, []>("op_340"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> channels_mean_3_cast = reduce_mean(axes = var_340, keep_dims = var_107, x = inputs_3_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_3_cast = sub(x = inputs_3_cast, y = channels_mean_3_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_sq_3_cast = mul(x = zero_mean_3_cast, y = zero_mean_3_cast);
            tensor<int32, [1]> var_344 = const()[name = tensor<string, []>("op_344"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> var_345_cast = reduce_mean(axes = var_344, keep_dims = var_107, x = zero_mean_sq_3_cast);
            tensor<fp16, []> var_346_to_fp16 = const()[name = tensor<string, []>("op_346_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 4096]> var_347_cast = add(x = var_345_cast, y = var_346_to_fp16);
            tensor<fp16, []> denom_3_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_3_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 4096]> denom_3_cast = rsqrt(epsilon = denom_3_epsilon_0_to_fp16, x = var_347_cast);
            tensor<fp16, [2, 320, 1, 4096]> out_3_cast = mul(x = zero_mean_3_cast, y = denom_3_cast);
            tensor<fp16, [1, 320, 1, 1]> var_351_to_fp16 = const()[name = tensor<string, []>("op_351_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9669120)))];
            tensor<fp16, [2, 320, 1, 4096]> var_352_cast = add(x = out_3_cast, y = var_351_to_fp16);
            tensor<fp16, [1, 320, 1, 1]> var_354_to_fp16 = const()[name = tensor<string, []>("op_354_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9669824)))];
            tensor<fp16, [2, 320, 1, 4096]> hidden_states_11_cast = mul(x = var_352_cast, y = var_354_to_fp16);
            tensor<int32, [2]> var_361 = const()[name = tensor<string, []>("op_361"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_363 = const()[name = tensor<string, []>("op_363"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_3_pad_type_0 = const()[name = tensor<string, []>("q_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_3_pad_0 = const()[name = tensor<string, []>("q_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> down_blocks_0_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9670528)))];
            tensor<fp16, [2, 320, 1, 4096]> q_3_cast = conv(dilations = var_363, groups = var_112, pad = q_3_pad_0, pad_type = q_3_pad_type_0, strides = var_361, weight = down_blocks_0_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16, x = hidden_states_11_cast);
            tensor<int32, [2]> var_367 = const()[name = tensor<string, []>("op_367"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_369 = const()[name = tensor<string, []>("op_369"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_5_pad_type_0 = const()[name = tensor<string, []>("k_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_5_pad_0 = const()[name = tensor<string, []>("k_5_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 1024, 1, 1]> down_blocks_0_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16"), val = tensor<fp16, [320, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9875392)))];
            tensor<fp16, [2, 320, 1, 77]> k_5_cast = conv(dilations = var_369, groups = var_112, pad = k_5_pad_0, pad_type = k_5_pad_type_0, strides = var_367, weight = down_blocks_0_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [2]> var_373 = const()[name = tensor<string, []>("op_373"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_375 = const()[name = tensor<string, []>("op_375"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_3_pad_type_0 = const()[name = tensor<string, []>("v_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_3_pad_0 = const()[name = tensor<string, []>("v_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 1024, 1, 1]> down_blocks_0_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16"), val = tensor<fp16, [320, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10530816)))];
            tensor<fp16, [2, 320, 1, 77]> v_3_cast = conv(dilations = var_375, groups = var_112, pad = v_3_pad_0, pad_type = v_3_pad_type_0, strides = var_373, weight = down_blocks_0_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [4]> var_379_begin_0 = const()[name = tensor<string, []>("op_379_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_379_end_0 = const()[name = tensor<string, []>("op_379_end_0"), val = tensor<int32, [4]>([2, 64, 1, 4096])];
            tensor<bool, [4]> var_379_end_mask_0 = const()[name = tensor<string, []>("op_379_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_379_cast = slice_by_index(begin = var_379_begin_0, end = var_379_end_0, end_mask = var_379_end_mask_0, x = q_3_cast);
            tensor<int32, [4]> var_383_begin_0 = const()[name = tensor<string, []>("op_383_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_383_end_0 = const()[name = tensor<string, []>("op_383_end_0"), val = tensor<int32, [4]>([2, 128, 1, 4096])];
            tensor<bool, [4]> var_383_end_mask_0 = const()[name = tensor<string, []>("op_383_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_383_cast = slice_by_index(begin = var_383_begin_0, end = var_383_end_0, end_mask = var_383_end_mask_0, x = q_3_cast);
            tensor<int32, [4]> var_387_begin_0 = const()[name = tensor<string, []>("op_387_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_387_end_0 = const()[name = tensor<string, []>("op_387_end_0"), val = tensor<int32, [4]>([2, 192, 1, 4096])];
            tensor<bool, [4]> var_387_end_mask_0 = const()[name = tensor<string, []>("op_387_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_387_cast = slice_by_index(begin = var_387_begin_0, end = var_387_end_0, end_mask = var_387_end_mask_0, x = q_3_cast);
            tensor<int32, [4]> var_391_begin_0 = const()[name = tensor<string, []>("op_391_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_391_end_0 = const()[name = tensor<string, []>("op_391_end_0"), val = tensor<int32, [4]>([2, 256, 1, 4096])];
            tensor<bool, [4]> var_391_end_mask_0 = const()[name = tensor<string, []>("op_391_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_391_cast = slice_by_index(begin = var_391_begin_0, end = var_391_end_0, end_mask = var_391_end_mask_0, x = q_3_cast);
            tensor<int32, [4]> var_395_begin_0 = const()[name = tensor<string, []>("op_395_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_395_end_0 = const()[name = tensor<string, []>("op_395_end_0"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<bool, [4]> var_395_end_mask_0 = const()[name = tensor<string, []>("op_395_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_395_cast = slice_by_index(begin = var_395_begin_0, end = var_395_end_0, end_mask = var_395_end_mask_0, x = q_3_cast);
            tensor<int32, [4]> k_7_perm_0 = const()[name = tensor<string, []>("k_7_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_402_begin_0 = const()[name = tensor<string, []>("op_402_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_402_end_0 = const()[name = tensor<string, []>("op_402_end_0"), val = tensor<int32, [4]>([2, 77, 1, 64])];
            tensor<bool, [4]> var_402_end_mask_0 = const()[name = tensor<string, []>("op_402_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 320]> transpose_76 = transpose(perm = k_7_perm_0, x = k_5_cast);
            tensor<fp16, [2, 77, 1, 64]> var_402_cast = slice_by_index(begin = var_402_begin_0, end = var_402_end_0, end_mask = var_402_end_mask_0, x = transpose_76);
            tensor<int32, [4]> var_406_begin_0 = const()[name = tensor<string, []>("op_406_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 64])];
            tensor<int32, [4]> var_406_end_0 = const()[name = tensor<string, []>("op_406_end_0"), val = tensor<int32, [4]>([2, 77, 1, 128])];
            tensor<bool, [4]> var_406_end_mask_0 = const()[name = tensor<string, []>("op_406_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_406_cast = slice_by_index(begin = var_406_begin_0, end = var_406_end_0, end_mask = var_406_end_mask_0, x = transpose_76);
            tensor<int32, [4]> var_410_begin_0 = const()[name = tensor<string, []>("op_410_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 128])];
            tensor<int32, [4]> var_410_end_0 = const()[name = tensor<string, []>("op_410_end_0"), val = tensor<int32, [4]>([2, 77, 1, 192])];
            tensor<bool, [4]> var_410_end_mask_0 = const()[name = tensor<string, []>("op_410_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_410_cast = slice_by_index(begin = var_410_begin_0, end = var_410_end_0, end_mask = var_410_end_mask_0, x = transpose_76);
            tensor<int32, [4]> var_414_begin_0 = const()[name = tensor<string, []>("op_414_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 192])];
            tensor<int32, [4]> var_414_end_0 = const()[name = tensor<string, []>("op_414_end_0"), val = tensor<int32, [4]>([2, 77, 1, 256])];
            tensor<bool, [4]> var_414_end_mask_0 = const()[name = tensor<string, []>("op_414_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_414_cast = slice_by_index(begin = var_414_begin_0, end = var_414_end_0, end_mask = var_414_end_mask_0, x = transpose_76);
            tensor<int32, [4]> var_418_begin_0 = const()[name = tensor<string, []>("op_418_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 256])];
            tensor<int32, [4]> var_418_end_0 = const()[name = tensor<string, []>("op_418_end_0"), val = tensor<int32, [4]>([2, 77, 1, 320])];
            tensor<bool, [4]> var_418_end_mask_0 = const()[name = tensor<string, []>("op_418_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_418_cast = slice_by_index(begin = var_418_begin_0, end = var_418_end_0, end_mask = var_418_end_mask_0, x = transpose_76);
            tensor<int32, [4]> var_420_begin_0 = const()[name = tensor<string, []>("op_420_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_420_end_0 = const()[name = tensor<string, []>("op_420_end_0"), val = tensor<int32, [4]>([2, 64, 1, 77])];
            tensor<bool, [4]> var_420_end_mask_0 = const()[name = tensor<string, []>("op_420_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_420_cast = slice_by_index(begin = var_420_begin_0, end = var_420_end_0, end_mask = var_420_end_mask_0, x = v_3_cast);
            tensor<int32, [4]> var_424_begin_0 = const()[name = tensor<string, []>("op_424_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_424_end_0 = const()[name = tensor<string, []>("op_424_end_0"), val = tensor<int32, [4]>([2, 128, 1, 77])];
            tensor<bool, [4]> var_424_end_mask_0 = const()[name = tensor<string, []>("op_424_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_424_cast = slice_by_index(begin = var_424_begin_0, end = var_424_end_0, end_mask = var_424_end_mask_0, x = v_3_cast);
            tensor<int32, [4]> var_428_begin_0 = const()[name = tensor<string, []>("op_428_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_428_end_0 = const()[name = tensor<string, []>("op_428_end_0"), val = tensor<int32, [4]>([2, 192, 1, 77])];
            tensor<bool, [4]> var_428_end_mask_0 = const()[name = tensor<string, []>("op_428_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_428_cast = slice_by_index(begin = var_428_begin_0, end = var_428_end_0, end_mask = var_428_end_mask_0, x = v_3_cast);
            tensor<int32, [4]> var_432_begin_0 = const()[name = tensor<string, []>("op_432_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_432_end_0 = const()[name = tensor<string, []>("op_432_end_0"), val = tensor<int32, [4]>([2, 256, 1, 77])];
            tensor<bool, [4]> var_432_end_mask_0 = const()[name = tensor<string, []>("op_432_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_432_cast = slice_by_index(begin = var_432_begin_0, end = var_432_end_0, end_mask = var_432_end_mask_0, x = v_3_cast);
            tensor<int32, [4]> var_436_begin_0 = const()[name = tensor<string, []>("op_436_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_436_end_0 = const()[name = tensor<string, []>("op_436_end_0"), val = tensor<int32, [4]>([2, 320, 1, 77])];
            tensor<bool, [4]> var_436_end_mask_0 = const()[name = tensor<string, []>("op_436_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_436_cast = slice_by_index(begin = var_436_begin_0, end = var_436_end_0, end_mask = var_436_end_mask_0, x = v_3_cast);
            tensor<string, []> var_440_equation_0 = const()[name = tensor<string, []>("op_440_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_440_cast = einsum(equation = var_440_equation_0, values = (var_402_cast, var_379_cast));
            tensor<fp16, []> var_441_to_fp16 = const()[name = tensor<string, []>("op_441_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_11_cast = mul(x = var_440_cast, y = var_441_to_fp16);
            tensor<string, []> var_444_equation_0 = const()[name = tensor<string, []>("op_444_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_444_cast = einsum(equation = var_444_equation_0, values = (var_406_cast, var_383_cast));
            tensor<fp16, []> var_445_to_fp16 = const()[name = tensor<string, []>("op_445_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_13_cast = mul(x = var_444_cast, y = var_445_to_fp16);
            tensor<string, []> var_448_equation_0 = const()[name = tensor<string, []>("op_448_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_448_cast = einsum(equation = var_448_equation_0, values = (var_410_cast, var_387_cast));
            tensor<fp16, []> var_449_to_fp16 = const()[name = tensor<string, []>("op_449_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_15_cast = mul(x = var_448_cast, y = var_449_to_fp16);
            tensor<string, []> var_452_equation_0 = const()[name = tensor<string, []>("op_452_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_452_cast = einsum(equation = var_452_equation_0, values = (var_414_cast, var_391_cast));
            tensor<fp16, []> var_453_to_fp16 = const()[name = tensor<string, []>("op_453_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_17_cast = mul(x = var_452_cast, y = var_453_to_fp16);
            tensor<string, []> var_456_equation_0 = const()[name = tensor<string, []>("op_456_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_456_cast = einsum(equation = var_456_equation_0, values = (var_418_cast, var_395_cast));
            tensor<fp16, []> var_457_to_fp16 = const()[name = tensor<string, []>("op_457_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_19_cast = mul(x = var_456_cast, y = var_457_to_fp16);
            tensor<fp16, [2, 77, 1, 4096]> var_459_cast = softmax(axis = var_112, x = aw_11_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_460_cast = softmax(axis = var_112, x = aw_13_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_461_cast = softmax(axis = var_112, x = aw_15_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_462_cast = softmax(axis = var_112, x = aw_17_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_463_cast = softmax(axis = var_112, x = aw_19_cast);
            tensor<string, []> var_465_equation_0 = const()[name = tensor<string, []>("op_465_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_465_cast = einsum(equation = var_465_equation_0, values = (var_420_cast, var_459_cast));
            tensor<string, []> var_467_equation_0 = const()[name = tensor<string, []>("op_467_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_467_cast = einsum(equation = var_467_equation_0, values = (var_424_cast, var_460_cast));
            tensor<string, []> var_469_equation_0 = const()[name = tensor<string, []>("op_469_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_469_cast = einsum(equation = var_469_equation_0, values = (var_428_cast, var_461_cast));
            tensor<string, []> var_471_equation_0 = const()[name = tensor<string, []>("op_471_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_471_cast = einsum(equation = var_471_equation_0, values = (var_432_cast, var_462_cast));
            tensor<string, []> var_473_equation_0 = const()[name = tensor<string, []>("op_473_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_473_cast = einsum(equation = var_473_equation_0, values = (var_436_cast, var_463_cast));
            tensor<bool, []> input_27_interleave_0 = const()[name = tensor<string, []>("input_27_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 320, 1, 4096]> input_27_cast = concat(axis = var_112, interleave = input_27_interleave_0, values = (var_465_cast, var_467_cast, var_469_cast, var_471_cast, var_473_cast));
            tensor<int32, [2]> var_479 = const()[name = tensor<string, []>("op_479"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_481 = const()[name = tensor<string, []>("op_481"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_483_pad_type_0 = const()[name = tensor<string, []>("op_483_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_483_pad_0 = const()[name = tensor<string, []>("op_483_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> down_blocks_0_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11186240)))];
            tensor<fp16, [320]> down_blocks_0_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11391104)))];
            tensor<fp16, [2, 320, 1, 4096]> var_483_cast = conv(bias = down_blocks_0_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16, dilations = var_481, groups = var_112, pad = var_483_pad_0, pad_type = var_483_pad_type_0, strides = var_479, weight = down_blocks_0_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16, x = input_27_cast);
            tensor<fp16, [2, 320, 1, 4096]> inputs_5_cast = add(x = var_483_cast, y = inputs_3_cast);
            tensor<int32, [1]> var_487 = const()[name = tensor<string, []>("op_487"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> channels_mean_5_cast = reduce_mean(axes = var_487, keep_dims = var_107, x = inputs_5_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_5_cast = sub(x = inputs_5_cast, y = channels_mean_5_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_sq_5_cast = mul(x = zero_mean_5_cast, y = zero_mean_5_cast);
            tensor<int32, [1]> var_491 = const()[name = tensor<string, []>("op_491"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> var_492_cast = reduce_mean(axes = var_491, keep_dims = var_107, x = zero_mean_sq_5_cast);
            tensor<fp16, []> var_493_to_fp16 = const()[name = tensor<string, []>("op_493_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 4096]> var_494_cast = add(x = var_492_cast, y = var_493_to_fp16);
            tensor<fp16, []> denom_5_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_5_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 4096]> denom_5_cast = rsqrt(epsilon = denom_5_epsilon_0_to_fp16, x = var_494_cast);
            tensor<fp16, [2, 320, 1, 4096]> out_5_cast = mul(x = zero_mean_5_cast, y = denom_5_cast);
            tensor<fp16, [1, 320, 1, 1]> var_498_to_fp16 = const()[name = tensor<string, []>("op_498_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11391808)))];
            tensor<fp16, [2, 320, 1, 4096]> var_499_cast = add(x = out_5_cast, y = var_498_to_fp16);
            tensor<fp16, [1, 320, 1, 1]> var_501_to_fp16 = const()[name = tensor<string, []>("op_501_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11392512)))];
            tensor<fp16, [2, 320, 1, 4096]> input_29_cast = mul(x = var_499_cast, y = var_501_to_fp16);
            tensor<int32, [2]> var_509 = const()[name = tensor<string, []>("op_509"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_511 = const()[name = tensor<string, []>("op_511"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_513_pad_type_0 = const()[name = tensor<string, []>("op_513_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_513_pad_0 = const()[name = tensor<string, []>("op_513_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [2560, 320, 1, 1]> down_blocks_0_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16"), val = tensor<fp16, [2560, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11393216)))];
            tensor<fp16, [2560]> down_blocks_0_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13031680)))];
            tensor<fp16, [2, 2560, 1, 4096]> var_513_cast = conv(bias = down_blocks_0_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16, dilations = var_511, groups = var_112, pad = var_513_pad_0, pad_type = var_513_pad_type_0, strides = var_509, weight = down_blocks_0_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16, x = input_29_cast);
            tensor<int32, [2]> var_514_split_sizes_0 = const()[name = tensor<string, []>("op_514_split_sizes_0"), val = tensor<int32, [2]>([1280, 1280])];
            tensor<int32, []> var_514_axis_0 = const()[name = tensor<string, []>("op_514_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [2, 1280, 1, 4096]> var_514_cast_0, tensor<fp16, [2, 1280, 1, 4096]> var_514_cast_1 = split(axis = var_514_axis_0, split_sizes = var_514_split_sizes_0, x = var_513_cast);
            tensor<string, []> var_516_mode_0 = const()[name = tensor<string, []>("op_516_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [2, 1280, 1, 4096]> var_516_cast = gelu(mode = var_516_mode_0, x = var_514_cast_1);
            tensor<fp16, [2, 1280, 1, 4096]> input_31_cast = mul(x = var_514_cast_0, y = var_516_cast);
            tensor<int32, [2]> var_520 = const()[name = tensor<string, []>("op_520"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_522 = const()[name = tensor<string, []>("op_522"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_524_pad_type_0 = const()[name = tensor<string, []>("op_524_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_524_pad_0 = const()[name = tensor<string, []>("op_524_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 1280, 1, 1]> down_blocks_0_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16"), val = tensor<fp16, [320, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13036864)))];
            tensor<fp16, [320]> down_blocks_0_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13856128)))];
            tensor<fp16, [2, 320, 1, 4096]> var_524_cast = conv(bias = down_blocks_0_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16, dilations = var_522, groups = var_112, pad = var_524_pad_0, pad_type = var_524_pad_type_0, strides = var_520, weight = down_blocks_0_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16, x = input_31_cast);
            tensor<fp16, [2, 320, 1, 4096]> hidden_states_15_cast = add(x = var_524_cast, y = inputs_5_cast);
            tensor<int32, [4]> var_526 = const()[name = tensor<string, []>("op_526"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> input_33_cast = reshape(shape = var_526, x = hidden_states_15_cast);
            tensor<int32, [2]> var_530 = const()[name = tensor<string, []>("op_530"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_532 = const()[name = tensor<string, []>("op_532"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_17_pad_type_0 = const()[name = tensor<string, []>("hidden_states_17_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_17_pad_0 = const()[name = tensor<string, []>("hidden_states_17_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> down_blocks_0_attentions_0_proj_out_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_proj_out_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13856832)))];
            tensor<fp16, [320]> down_blocks_0_attentions_0_proj_out_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_proj_out_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14061696)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_17_cast = conv(bias = down_blocks_0_attentions_0_proj_out_bias_to_fp16, dilations = var_532, groups = var_112, pad = hidden_states_17_pad_0, pad_type = hidden_states_17_pad_type_0, strides = var_530, weight = down_blocks_0_attentions_0_proj_out_weight_to_fp16, x = input_33_cast);
            tensor<fp16, [2, 320, 64, 64]> input_35_cast_1 = add(x = hidden_states_17_cast, y = hidden_states_5_cast);
            tensor<int32, [5]> reshape_12_shape_0 = const()[name = tensor<string, []>("reshape_12_shape_0"), val = tensor<int32, [5]>([2, 32, 10, 64, 64])];
            tensor<fp16, [2, 32, 10, 64, 64]> reshape_12_cast = reshape(shape = reshape_12_shape_0, x = input_35_cast_1);
            tensor<int32, [3]> reduce_mean_9_axes_0 = const()[name = tensor<string, []>("reduce_mean_9_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_9_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_9_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_9_cast = reduce_mean(axes = reduce_mean_9_axes_0, keep_dims = reduce_mean_9_keep_dims_0, x = reshape_12_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> sub_6_cast = sub(x = reshape_12_cast, y = reduce_mean_9_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> square_3_cast = square(x = sub_6_cast);
            tensor<int32, [3]> reduce_mean_11_axes_0 = const()[name = tensor<string, []>("reduce_mean_11_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_11_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_11_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_11_cast = reduce_mean(axes = reduce_mean_11_axes_0, keep_dims = reduce_mean_11_keep_dims_0, x = square_3_cast);
            tensor<fp16, []> add_6_y_0_to_fp16 = const()[name = tensor<string, []>("add_6_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_6_cast = add(x = reduce_mean_11_cast, y = add_6_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_3_cast = sqrt(x = add_6_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> real_div_3_cast = real_div(x = sub_6_cast, y = sqrt_3_cast);
            tensor<int32, [4]> reshape_13_shape_0 = const()[name = tensor<string, []>("reshape_13_shape_0"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> reshape_13_cast = reshape(shape = reshape_13_shape_0, x = real_div_3_cast);
            tensor<fp16, [320]> add_7_mean_0_to_fp16 = const()[name = tensor<string, []>("add_7_mean_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14062400)))];
            tensor<fp16, [320]> add_7_variance_0_to_fp16 = const()[name = tensor<string, []>("add_7_variance_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14063104)))];
            tensor<fp16, [320]> add_7_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_7_gamma_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14063808)))];
            tensor<fp16, [320]> add_7_beta_0_to_fp16 = const()[name = tensor<string, []>("add_7_beta_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14064512)))];
            tensor<fp16, []> add_7_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_7_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 320, 64, 64]> add_7_cast = batch_norm(beta = add_7_beta_0_to_fp16, epsilon = add_7_epsilon_0_to_fp16, gamma = add_7_gamma_0_to_fp16, mean = add_7_mean_0_to_fp16, variance = add_7_variance_0_to_fp16, x = reshape_13_cast);
            tensor<fp16, [2, 320, 64, 64]> input_39_cast = silu(x = add_7_cast);
            tensor<int32, [2]> var_547 = const()[name = tensor<string, []>("op_547"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_549 = const()[name = tensor<string, []>("op_549"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_19_pad_type_0 = const()[name = tensor<string, []>("hidden_states_19_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_19_pad_0 = const()[name = tensor<string, []>("hidden_states_19_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [320, 320, 3, 3]> down_blocks_0_resnets_1_conv1_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_resnets_1_conv1_weight_to_fp16"), val = tensor<fp16, [320, 320, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14065216)))];
            tensor<fp16, [320]> down_blocks_0_resnets_1_conv1_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_resnets_1_conv1_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(15908480)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_19_cast = conv(bias = down_blocks_0_resnets_1_conv1_bias_to_fp16, dilations = var_549, groups = var_112, pad = hidden_states_19_pad_0, pad_type = hidden_states_19_pad_type_0, strides = var_547, weight = down_blocks_0_resnets_1_conv1_weight_to_fp16, x = input_39_cast);
            tensor<int32, [2]> var_555 = const()[name = tensor<string, []>("op_555"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_557 = const()[name = tensor<string, []>("op_557"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_3_pad_type_0 = const()[name = tensor<string, []>("temb_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_3_pad_0 = const()[name = tensor<string, []>("temb_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 1280, 1, 1]> down_blocks_0_resnets_1_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_resnets_1_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [320, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(15909184)))];
            tensor<fp16, [320]> down_blocks_0_resnets_1_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_resnets_1_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16728448)))];
            tensor<fp16, [2, 320, 1, 1]> temb_3_cast = conv(bias = down_blocks_0_resnets_1_time_emb_proj_bias_to_fp16, dilations = var_557, groups = var_112, pad = temb_3_pad_0, pad_type = temb_3_pad_type_0, strides = var_555, weight = down_blocks_0_resnets_1_time_emb_proj_weight_to_fp16, x = input_15_cast_1);
            tensor<fp16, [2, 320, 64, 64]> input_43_cast = add(x = hidden_states_19_cast, y = temb_3_cast);
            tensor<int32, [5]> reshape_16_shape_0 = const()[name = tensor<string, []>("reshape_16_shape_0"), val = tensor<int32, [5]>([2, 32, 10, 64, 64])];
            tensor<fp16, [2, 32, 10, 64, 64]> reshape_16_cast = reshape(shape = reshape_16_shape_0, x = input_43_cast);
            tensor<int32, [3]> reduce_mean_12_axes_0 = const()[name = tensor<string, []>("reduce_mean_12_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_12_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_12_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_12_cast = reduce_mean(axes = reduce_mean_12_axes_0, keep_dims = reduce_mean_12_keep_dims_0, x = reshape_16_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> sub_8_cast = sub(x = reshape_16_cast, y = reduce_mean_12_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> square_4_cast = square(x = sub_8_cast);
            tensor<int32, [3]> reduce_mean_14_axes_0 = const()[name = tensor<string, []>("reduce_mean_14_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_14_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_14_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_14_cast = reduce_mean(axes = reduce_mean_14_axes_0, keep_dims = reduce_mean_14_keep_dims_0, x = square_4_cast);
            tensor<fp16, []> add_8_y_0_to_fp16 = const()[name = tensor<string, []>("add_8_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_8_cast = add(x = reduce_mean_14_cast, y = add_8_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_4_cast = sqrt(x = add_8_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> real_div_4_cast = real_div(x = sub_8_cast, y = sqrt_4_cast);
            tensor<int32, [4]> reshape_17_shape_0 = const()[name = tensor<string, []>("reshape_17_shape_0"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> reshape_17_cast = reshape(shape = reshape_17_shape_0, x = real_div_4_cast);
            tensor<fp16, [320]> add_9_mean_0_to_fp16 = const()[name = tensor<string, []>("add_9_mean_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16729152)))];
            tensor<fp16, [320]> add_9_variance_0_to_fp16 = const()[name = tensor<string, []>("add_9_variance_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16729856)))];
            tensor<fp16, [320]> add_9_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_9_gamma_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16730560)))];
            tensor<fp16, [320]> add_9_beta_0_to_fp16 = const()[name = tensor<string, []>("add_9_beta_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16731264)))];
            tensor<fp16, []> add_9_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_9_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 320, 64, 64]> add_9_cast = batch_norm(beta = add_9_beta_0_to_fp16, epsilon = add_9_epsilon_0_to_fp16, gamma = add_9_gamma_0_to_fp16, mean = add_9_mean_0_to_fp16, variance = add_9_variance_0_to_fp16, x = reshape_17_cast);
            tensor<fp16, [2, 320, 64, 64]> input_47_cast = silu(x = add_9_cast);
            tensor<int32, [2]> var_567 = const()[name = tensor<string, []>("op_567"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_569 = const()[name = tensor<string, []>("op_569"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_21_pad_type_0 = const()[name = tensor<string, []>("hidden_states_21_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_21_pad_0 = const()[name = tensor<string, []>("hidden_states_21_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [320, 320, 3, 3]> down_blocks_0_resnets_1_conv2_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_resnets_1_conv2_weight_to_fp16"), val = tensor<fp16, [320, 320, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16731968)))];
            tensor<fp16, [320]> down_blocks_0_resnets_1_conv2_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_resnets_1_conv2_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18575232)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_21_cast = conv(bias = down_blocks_0_resnets_1_conv2_bias_to_fp16, dilations = var_569, groups = var_112, pad = hidden_states_21_pad_0, pad_type = hidden_states_21_pad_type_0, strides = var_567, weight = down_blocks_0_resnets_1_conv2_weight_to_fp16, x = input_47_cast);
            tensor<fp16, [2, 320, 64, 64]> hidden_states_23_cast = add(x = input_35_cast_1, y = hidden_states_21_cast);
            tensor<int32, [5]> reshape_20_shape_0 = const()[name = tensor<string, []>("reshape_20_shape_0"), val = tensor<int32, [5]>([2, 32, 10, 64, 64])];
            tensor<fp16, [2, 32, 10, 64, 64]> reshape_20_cast = reshape(shape = reshape_20_shape_0, x = hidden_states_23_cast);
            tensor<int32, [3]> reduce_mean_15_axes_0 = const()[name = tensor<string, []>("reduce_mean_15_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_15_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_15_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_15_cast = reduce_mean(axes = reduce_mean_15_axes_0, keep_dims = reduce_mean_15_keep_dims_0, x = reshape_20_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> sub_10_cast = sub(x = reshape_20_cast, y = reduce_mean_15_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> square_5_cast = square(x = sub_10_cast);
            tensor<int32, [3]> reduce_mean_17_axes_0 = const()[name = tensor<string, []>("reduce_mean_17_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_17_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_17_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_17_cast = reduce_mean(axes = reduce_mean_17_axes_0, keep_dims = reduce_mean_17_keep_dims_0, x = square_5_cast);
            tensor<fp16, []> add_10_y_0_to_fp16 = const()[name = tensor<string, []>("add_10_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_10_cast = add(x = reduce_mean_17_cast, y = add_10_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_5_cast = sqrt(x = add_10_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> real_div_5_cast = real_div(x = sub_10_cast, y = sqrt_5_cast);
            tensor<int32, [4]> reshape_21_shape_0 = const()[name = tensor<string, []>("reshape_21_shape_0"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> reshape_21_cast = reshape(shape = reshape_21_shape_0, x = real_div_5_cast);
            tensor<fp16, [320]> add_11_mean_0_to_fp16 = const()[name = tensor<string, []>("add_11_mean_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18575936)))];
            tensor<fp16, [320]> add_11_variance_0_to_fp16 = const()[name = tensor<string, []>("add_11_variance_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18576640)))];
            tensor<fp16, [320]> add_11_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_11_gamma_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18577344)))];
            tensor<fp16, [320]> add_11_beta_0_to_fp16 = const()[name = tensor<string, []>("add_11_beta_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18578048)))];
            tensor<fp16, []> add_11_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_11_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 320, 64, 64]> add_11_cast = batch_norm(beta = add_11_beta_0_to_fp16, epsilon = add_11_epsilon_0_to_fp16, gamma = add_11_gamma_0_to_fp16, mean = add_11_mean_0_to_fp16, variance = add_11_variance_0_to_fp16, x = reshape_21_cast);
            tensor<int32, [2]> var_589 = const()[name = tensor<string, []>("op_589"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_591 = const()[name = tensor<string, []>("op_591"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_25_pad_type_0 = const()[name = tensor<string, []>("hidden_states_25_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_25_pad_0 = const()[name = tensor<string, []>("hidden_states_25_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> down_blocks_0_attentions_1_proj_in_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_proj_in_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18578752)))];
            tensor<fp16, [320]> down_blocks_0_attentions_1_proj_in_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_proj_in_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18783616)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_25_cast = conv(bias = down_blocks_0_attentions_1_proj_in_bias_to_fp16, dilations = var_591, groups = var_112, pad = hidden_states_25_pad_0, pad_type = hidden_states_25_pad_type_0, strides = var_589, weight = down_blocks_0_attentions_1_proj_in_weight_to_fp16, x = add_11_cast);
            tensor<int32, [4]> var_596 = const()[name = tensor<string, []>("op_596"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<fp16, [2, 320, 1, 4096]> inputs_7_cast = reshape(shape = var_596, x = hidden_states_25_cast);
            tensor<int32, [1]> var_606 = const()[name = tensor<string, []>("op_606"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> channels_mean_7_cast = reduce_mean(axes = var_606, keep_dims = var_107, x = inputs_7_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_7_cast = sub(x = inputs_7_cast, y = channels_mean_7_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_sq_7_cast = mul(x = zero_mean_7_cast, y = zero_mean_7_cast);
            tensor<int32, [1]> var_610 = const()[name = tensor<string, []>("op_610"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> var_611_cast = reduce_mean(axes = var_610, keep_dims = var_107, x = zero_mean_sq_7_cast);
            tensor<fp16, []> var_612_to_fp16 = const()[name = tensor<string, []>("op_612_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 4096]> var_613_cast = add(x = var_611_cast, y = var_612_to_fp16);
            tensor<fp16, []> denom_7_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_7_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 4096]> denom_7_cast = rsqrt(epsilon = denom_7_epsilon_0_to_fp16, x = var_613_cast);
            tensor<fp16, [2, 320, 1, 4096]> out_7_cast = mul(x = zero_mean_7_cast, y = denom_7_cast);
            tensor<fp16, [1, 320, 1, 1]> var_617_to_fp16 = const()[name = tensor<string, []>("op_617_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18784320)))];
            tensor<fp16, [2, 320, 1, 4096]> var_618_cast = add(x = out_7_cast, y = var_617_to_fp16);
            tensor<fp16, [1, 320, 1, 1]> var_620_to_fp16 = const()[name = tensor<string, []>("op_620_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18785024)))];
            tensor<fp16, [2, 320, 1, 4096]> hidden_states_27_cast = mul(x = var_618_cast, y = var_620_to_fp16);
            tensor<int32, [2]> var_627 = const()[name = tensor<string, []>("op_627"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_629 = const()[name = tensor<string, []>("op_629"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_5_pad_type_0 = const()[name = tensor<string, []>("q_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_5_pad_0 = const()[name = tensor<string, []>("q_5_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> down_blocks_0_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18785728)))];
            tensor<fp16, [2, 320, 1, 4096]> q_5_cast = conv(dilations = var_629, groups = var_112, pad = q_5_pad_0, pad_type = q_5_pad_type_0, strides = var_627, weight = down_blocks_0_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16, x = hidden_states_27_cast);
            tensor<int32, [2]> var_633 = const()[name = tensor<string, []>("op_633"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_635 = const()[name = tensor<string, []>("op_635"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_9_pad_type_0 = const()[name = tensor<string, []>("k_9_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_9_pad_0 = const()[name = tensor<string, []>("k_9_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> down_blocks_0_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18990592)))];
            tensor<fp16, [2, 320, 1, 4096]> k_9_cast = conv(dilations = var_635, groups = var_112, pad = k_9_pad_0, pad_type = k_9_pad_type_0, strides = var_633, weight = down_blocks_0_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16, x = hidden_states_27_cast);
            tensor<int32, [2]> var_639 = const()[name = tensor<string, []>("op_639"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_641 = const()[name = tensor<string, []>("op_641"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_5_pad_type_0 = const()[name = tensor<string, []>("v_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_5_pad_0 = const()[name = tensor<string, []>("v_5_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> down_blocks_0_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19195456)))];
            tensor<fp16, [2, 320, 1, 4096]> v_5_cast = conv(dilations = var_641, groups = var_112, pad = v_5_pad_0, pad_type = v_5_pad_type_0, strides = var_639, weight = down_blocks_0_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16, x = hidden_states_27_cast);
            tensor<int32, [4]> var_645_begin_0 = const()[name = tensor<string, []>("op_645_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_645_end_0 = const()[name = tensor<string, []>("op_645_end_0"), val = tensor<int32, [4]>([2, 64, 1, 4096])];
            tensor<bool, [4]> var_645_end_mask_0 = const()[name = tensor<string, []>("op_645_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_645_cast = slice_by_index(begin = var_645_begin_0, end = var_645_end_0, end_mask = var_645_end_mask_0, x = q_5_cast);
            tensor<int32, [4]> var_649_begin_0 = const()[name = tensor<string, []>("op_649_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_649_end_0 = const()[name = tensor<string, []>("op_649_end_0"), val = tensor<int32, [4]>([2, 128, 1, 4096])];
            tensor<bool, [4]> var_649_end_mask_0 = const()[name = tensor<string, []>("op_649_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_649_cast = slice_by_index(begin = var_649_begin_0, end = var_649_end_0, end_mask = var_649_end_mask_0, x = q_5_cast);
            tensor<int32, [4]> var_653_begin_0 = const()[name = tensor<string, []>("op_653_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_653_end_0 = const()[name = tensor<string, []>("op_653_end_0"), val = tensor<int32, [4]>([2, 192, 1, 4096])];
            tensor<bool, [4]> var_653_end_mask_0 = const()[name = tensor<string, []>("op_653_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_653_cast = slice_by_index(begin = var_653_begin_0, end = var_653_end_0, end_mask = var_653_end_mask_0, x = q_5_cast);
            tensor<int32, [4]> var_657_begin_0 = const()[name = tensor<string, []>("op_657_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_657_end_0 = const()[name = tensor<string, []>("op_657_end_0"), val = tensor<int32, [4]>([2, 256, 1, 4096])];
            tensor<bool, [4]> var_657_end_mask_0 = const()[name = tensor<string, []>("op_657_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_657_cast = slice_by_index(begin = var_657_begin_0, end = var_657_end_0, end_mask = var_657_end_mask_0, x = q_5_cast);
            tensor<int32, [4]> var_661_begin_0 = const()[name = tensor<string, []>("op_661_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_661_end_0 = const()[name = tensor<string, []>("op_661_end_0"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<bool, [4]> var_661_end_mask_0 = const()[name = tensor<string, []>("op_661_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_661_cast = slice_by_index(begin = var_661_begin_0, end = var_661_end_0, end_mask = var_661_end_mask_0, x = q_5_cast);
            tensor<int32, [4]> k_11_perm_0 = const()[name = tensor<string, []>("k_11_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_668_begin_0 = const()[name = tensor<string, []>("op_668_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_668_end_0 = const()[name = tensor<string, []>("op_668_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 64])];
            tensor<bool, [4]> var_668_end_mask_0 = const()[name = tensor<string, []>("op_668_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 320]> transpose_75 = transpose(perm = k_11_perm_0, x = k_9_cast);
            tensor<fp16, [2, 4096, 1, 64]> var_668_cast = slice_by_index(begin = var_668_begin_0, end = var_668_end_0, end_mask = var_668_end_mask_0, x = transpose_75);
            tensor<int32, [4]> var_672_begin_0 = const()[name = tensor<string, []>("op_672_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 64])];
            tensor<int32, [4]> var_672_end_0 = const()[name = tensor<string, []>("op_672_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 128])];
            tensor<bool, [4]> var_672_end_mask_0 = const()[name = tensor<string, []>("op_672_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 64]> var_672_cast = slice_by_index(begin = var_672_begin_0, end = var_672_end_0, end_mask = var_672_end_mask_0, x = transpose_75);
            tensor<int32, [4]> var_676_begin_0 = const()[name = tensor<string, []>("op_676_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 128])];
            tensor<int32, [4]> var_676_end_0 = const()[name = tensor<string, []>("op_676_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 192])];
            tensor<bool, [4]> var_676_end_mask_0 = const()[name = tensor<string, []>("op_676_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 64]> var_676_cast = slice_by_index(begin = var_676_begin_0, end = var_676_end_0, end_mask = var_676_end_mask_0, x = transpose_75);
            tensor<int32, [4]> var_680_begin_0 = const()[name = tensor<string, []>("op_680_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 192])];
            tensor<int32, [4]> var_680_end_0 = const()[name = tensor<string, []>("op_680_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 256])];
            tensor<bool, [4]> var_680_end_mask_0 = const()[name = tensor<string, []>("op_680_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 64]> var_680_cast = slice_by_index(begin = var_680_begin_0, end = var_680_end_0, end_mask = var_680_end_mask_0, x = transpose_75);
            tensor<int32, [4]> var_684_begin_0 = const()[name = tensor<string, []>("op_684_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 256])];
            tensor<int32, [4]> var_684_end_0 = const()[name = tensor<string, []>("op_684_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 320])];
            tensor<bool, [4]> var_684_end_mask_0 = const()[name = tensor<string, []>("op_684_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 64]> var_684_cast = slice_by_index(begin = var_684_begin_0, end = var_684_end_0, end_mask = var_684_end_mask_0, x = transpose_75);
            tensor<int32, [4]> var_686_begin_0 = const()[name = tensor<string, []>("op_686_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_686_end_0 = const()[name = tensor<string, []>("op_686_end_0"), val = tensor<int32, [4]>([2, 64, 1, 4096])];
            tensor<bool, [4]> var_686_end_mask_0 = const()[name = tensor<string, []>("op_686_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_686_cast = slice_by_index(begin = var_686_begin_0, end = var_686_end_0, end_mask = var_686_end_mask_0, x = v_5_cast);
            tensor<int32, [4]> var_690_begin_0 = const()[name = tensor<string, []>("op_690_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_690_end_0 = const()[name = tensor<string, []>("op_690_end_0"), val = tensor<int32, [4]>([2, 128, 1, 4096])];
            tensor<bool, [4]> var_690_end_mask_0 = const()[name = tensor<string, []>("op_690_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_690_cast = slice_by_index(begin = var_690_begin_0, end = var_690_end_0, end_mask = var_690_end_mask_0, x = v_5_cast);
            tensor<int32, [4]> var_694_begin_0 = const()[name = tensor<string, []>("op_694_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_694_end_0 = const()[name = tensor<string, []>("op_694_end_0"), val = tensor<int32, [4]>([2, 192, 1, 4096])];
            tensor<bool, [4]> var_694_end_mask_0 = const()[name = tensor<string, []>("op_694_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_694_cast = slice_by_index(begin = var_694_begin_0, end = var_694_end_0, end_mask = var_694_end_mask_0, x = v_5_cast);
            tensor<int32, [4]> var_698_begin_0 = const()[name = tensor<string, []>("op_698_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_698_end_0 = const()[name = tensor<string, []>("op_698_end_0"), val = tensor<int32, [4]>([2, 256, 1, 4096])];
            tensor<bool, [4]> var_698_end_mask_0 = const()[name = tensor<string, []>("op_698_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_698_cast = slice_by_index(begin = var_698_begin_0, end = var_698_end_0, end_mask = var_698_end_mask_0, x = v_5_cast);
            tensor<int32, [4]> var_702_begin_0 = const()[name = tensor<string, []>("op_702_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_702_end_0 = const()[name = tensor<string, []>("op_702_end_0"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<bool, [4]> var_702_end_mask_0 = const()[name = tensor<string, []>("op_702_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_702_cast = slice_by_index(begin = var_702_begin_0, end = var_702_end_0, end_mask = var_702_end_mask_0, x = v_5_cast);
            tensor<string, []> var_706_equation_0 = const()[name = tensor<string, []>("op_706_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_706_cast = einsum(equation = var_706_equation_0, values = (var_668_cast, var_645_cast));
            tensor<fp16, []> var_707_to_fp16 = const()[name = tensor<string, []>("op_707_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_21_cast = mul(x = var_706_cast, y = var_707_to_fp16);
            tensor<string, []> var_710_equation_0 = const()[name = tensor<string, []>("op_710_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_710_cast = einsum(equation = var_710_equation_0, values = (var_672_cast, var_649_cast));
            tensor<fp16, []> var_711_to_fp16 = const()[name = tensor<string, []>("op_711_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_23_cast = mul(x = var_710_cast, y = var_711_to_fp16);
            tensor<string, []> var_714_equation_0 = const()[name = tensor<string, []>("op_714_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_714_cast = einsum(equation = var_714_equation_0, values = (var_676_cast, var_653_cast));
            tensor<fp16, []> var_715_to_fp16 = const()[name = tensor<string, []>("op_715_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_25_cast = mul(x = var_714_cast, y = var_715_to_fp16);
            tensor<string, []> var_718_equation_0 = const()[name = tensor<string, []>("op_718_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_718_cast = einsum(equation = var_718_equation_0, values = (var_680_cast, var_657_cast));
            tensor<fp16, []> var_719_to_fp16 = const()[name = tensor<string, []>("op_719_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_27_cast = mul(x = var_718_cast, y = var_719_to_fp16);
            tensor<string, []> var_722_equation_0 = const()[name = tensor<string, []>("op_722_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_722_cast = einsum(equation = var_722_equation_0, values = (var_684_cast, var_661_cast));
            tensor<fp16, []> var_723_to_fp16 = const()[name = tensor<string, []>("op_723_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_29_cast = mul(x = var_722_cast, y = var_723_to_fp16);
            tensor<fp16, [2, 4096, 1, 4096]> var_725_cast = softmax(axis = var_112, x = aw_21_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_726_cast = softmax(axis = var_112, x = aw_23_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_727_cast = softmax(axis = var_112, x = aw_25_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_728_cast = softmax(axis = var_112, x = aw_27_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_729_cast = softmax(axis = var_112, x = aw_29_cast);
            tensor<string, []> var_731_equation_0 = const()[name = tensor<string, []>("op_731_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_731_cast = einsum(equation = var_731_equation_0, values = (var_686_cast, var_725_cast));
            tensor<string, []> var_733_equation_0 = const()[name = tensor<string, []>("op_733_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_733_cast = einsum(equation = var_733_equation_0, values = (var_690_cast, var_726_cast));
            tensor<string, []> var_735_equation_0 = const()[name = tensor<string, []>("op_735_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_735_cast = einsum(equation = var_735_equation_0, values = (var_694_cast, var_727_cast));
            tensor<string, []> var_737_equation_0 = const()[name = tensor<string, []>("op_737_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_737_cast = einsum(equation = var_737_equation_0, values = (var_698_cast, var_728_cast));
            tensor<string, []> var_739_equation_0 = const()[name = tensor<string, []>("op_739_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_739_cast = einsum(equation = var_739_equation_0, values = (var_702_cast, var_729_cast));
            tensor<bool, []> input_51_interleave_0 = const()[name = tensor<string, []>("input_51_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 320, 1, 4096]> input_51_cast = concat(axis = var_112, interleave = input_51_interleave_0, values = (var_731_cast, var_733_cast, var_735_cast, var_737_cast, var_739_cast));
            tensor<int32, [2]> var_745 = const()[name = tensor<string, []>("op_745"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_747 = const()[name = tensor<string, []>("op_747"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_749_pad_type_0 = const()[name = tensor<string, []>("op_749_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_749_pad_0 = const()[name = tensor<string, []>("op_749_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> down_blocks_0_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19400320)))];
            tensor<fp16, [320]> down_blocks_0_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19605184)))];
            tensor<fp16, [2, 320, 1, 4096]> var_749_cast = conv(bias = down_blocks_0_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16, dilations = var_747, groups = var_112, pad = var_749_pad_0, pad_type = var_749_pad_type_0, strides = var_745, weight = down_blocks_0_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16, x = input_51_cast);
            tensor<fp16, [2, 320, 1, 4096]> inputs_9_cast = add(x = var_749_cast, y = inputs_7_cast);
            tensor<int32, [1]> var_753 = const()[name = tensor<string, []>("op_753"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> channels_mean_9_cast = reduce_mean(axes = var_753, keep_dims = var_107, x = inputs_9_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_9_cast = sub(x = inputs_9_cast, y = channels_mean_9_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_sq_9_cast = mul(x = zero_mean_9_cast, y = zero_mean_9_cast);
            tensor<int32, [1]> var_757 = const()[name = tensor<string, []>("op_757"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> var_758_cast = reduce_mean(axes = var_757, keep_dims = var_107, x = zero_mean_sq_9_cast);
            tensor<fp16, []> var_759_to_fp16 = const()[name = tensor<string, []>("op_759_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 4096]> var_760_cast = add(x = var_758_cast, y = var_759_to_fp16);
            tensor<fp16, []> denom_9_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_9_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 4096]> denom_9_cast = rsqrt(epsilon = denom_9_epsilon_0_to_fp16, x = var_760_cast);
            tensor<fp16, [2, 320, 1, 4096]> out_9_cast = mul(x = zero_mean_9_cast, y = denom_9_cast);
            tensor<fp16, [1, 320, 1, 1]> var_764_to_fp16 = const()[name = tensor<string, []>("op_764_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19605888)))];
            tensor<fp16, [2, 320, 1, 4096]> var_765_cast = add(x = out_9_cast, y = var_764_to_fp16);
            tensor<fp16, [1, 320, 1, 1]> var_767_to_fp16 = const()[name = tensor<string, []>("op_767_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19606592)))];
            tensor<fp16, [2, 320, 1, 4096]> hidden_states_29_cast = mul(x = var_765_cast, y = var_767_to_fp16);
            tensor<int32, [2]> var_774 = const()[name = tensor<string, []>("op_774"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_776 = const()[name = tensor<string, []>("op_776"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_7_pad_type_0 = const()[name = tensor<string, []>("q_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_7_pad_0 = const()[name = tensor<string, []>("q_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> down_blocks_0_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19607296)))];
            tensor<fp16, [2, 320, 1, 4096]> q_7_cast = conv(dilations = var_776, groups = var_112, pad = q_7_pad_0, pad_type = q_7_pad_type_0, strides = var_774, weight = down_blocks_0_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16, x = hidden_states_29_cast);
            tensor<int32, [2]> var_780 = const()[name = tensor<string, []>("op_780"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_782 = const()[name = tensor<string, []>("op_782"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_13_pad_type_0 = const()[name = tensor<string, []>("k_13_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_13_pad_0 = const()[name = tensor<string, []>("k_13_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 1024, 1, 1]> down_blocks_0_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16"), val = tensor<fp16, [320, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19812160)))];
            tensor<fp16, [2, 320, 1, 77]> k_13_cast = conv(dilations = var_782, groups = var_112, pad = k_13_pad_0, pad_type = k_13_pad_type_0, strides = var_780, weight = down_blocks_0_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [2]> var_786 = const()[name = tensor<string, []>("op_786"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_788 = const()[name = tensor<string, []>("op_788"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_7_pad_type_0 = const()[name = tensor<string, []>("v_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_7_pad_0 = const()[name = tensor<string, []>("v_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 1024, 1, 1]> down_blocks_0_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16"), val = tensor<fp16, [320, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20467584)))];
            tensor<fp16, [2, 320, 1, 77]> v_7_cast = conv(dilations = var_788, groups = var_112, pad = v_7_pad_0, pad_type = v_7_pad_type_0, strides = var_786, weight = down_blocks_0_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [4]> var_792_begin_0 = const()[name = tensor<string, []>("op_792_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_792_end_0 = const()[name = tensor<string, []>("op_792_end_0"), val = tensor<int32, [4]>([2, 64, 1, 4096])];
            tensor<bool, [4]> var_792_end_mask_0 = const()[name = tensor<string, []>("op_792_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_792_cast = slice_by_index(begin = var_792_begin_0, end = var_792_end_0, end_mask = var_792_end_mask_0, x = q_7_cast);
            tensor<int32, [4]> var_796_begin_0 = const()[name = tensor<string, []>("op_796_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_796_end_0 = const()[name = tensor<string, []>("op_796_end_0"), val = tensor<int32, [4]>([2, 128, 1, 4096])];
            tensor<bool, [4]> var_796_end_mask_0 = const()[name = tensor<string, []>("op_796_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_796_cast = slice_by_index(begin = var_796_begin_0, end = var_796_end_0, end_mask = var_796_end_mask_0, x = q_7_cast);
            tensor<int32, [4]> var_800_begin_0 = const()[name = tensor<string, []>("op_800_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_800_end_0 = const()[name = tensor<string, []>("op_800_end_0"), val = tensor<int32, [4]>([2, 192, 1, 4096])];
            tensor<bool, [4]> var_800_end_mask_0 = const()[name = tensor<string, []>("op_800_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_800_cast = slice_by_index(begin = var_800_begin_0, end = var_800_end_0, end_mask = var_800_end_mask_0, x = q_7_cast);
            tensor<int32, [4]> var_804_begin_0 = const()[name = tensor<string, []>("op_804_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_804_end_0 = const()[name = tensor<string, []>("op_804_end_0"), val = tensor<int32, [4]>([2, 256, 1, 4096])];
            tensor<bool, [4]> var_804_end_mask_0 = const()[name = tensor<string, []>("op_804_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_804_cast = slice_by_index(begin = var_804_begin_0, end = var_804_end_0, end_mask = var_804_end_mask_0, x = q_7_cast);
            tensor<int32, [4]> var_808_begin_0 = const()[name = tensor<string, []>("op_808_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_808_end_0 = const()[name = tensor<string, []>("op_808_end_0"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<bool, [4]> var_808_end_mask_0 = const()[name = tensor<string, []>("op_808_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_808_cast = slice_by_index(begin = var_808_begin_0, end = var_808_end_0, end_mask = var_808_end_mask_0, x = q_7_cast);
            tensor<int32, [4]> k_15_perm_0 = const()[name = tensor<string, []>("k_15_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_815_begin_0 = const()[name = tensor<string, []>("op_815_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_815_end_0 = const()[name = tensor<string, []>("op_815_end_0"), val = tensor<int32, [4]>([2, 77, 1, 64])];
            tensor<bool, [4]> var_815_end_mask_0 = const()[name = tensor<string, []>("op_815_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 320]> transpose_74 = transpose(perm = k_15_perm_0, x = k_13_cast);
            tensor<fp16, [2, 77, 1, 64]> var_815_cast = slice_by_index(begin = var_815_begin_0, end = var_815_end_0, end_mask = var_815_end_mask_0, x = transpose_74);
            tensor<int32, [4]> var_819_begin_0 = const()[name = tensor<string, []>("op_819_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 64])];
            tensor<int32, [4]> var_819_end_0 = const()[name = tensor<string, []>("op_819_end_0"), val = tensor<int32, [4]>([2, 77, 1, 128])];
            tensor<bool, [4]> var_819_end_mask_0 = const()[name = tensor<string, []>("op_819_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_819_cast = slice_by_index(begin = var_819_begin_0, end = var_819_end_0, end_mask = var_819_end_mask_0, x = transpose_74);
            tensor<int32, [4]> var_823_begin_0 = const()[name = tensor<string, []>("op_823_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 128])];
            tensor<int32, [4]> var_823_end_0 = const()[name = tensor<string, []>("op_823_end_0"), val = tensor<int32, [4]>([2, 77, 1, 192])];
            tensor<bool, [4]> var_823_end_mask_0 = const()[name = tensor<string, []>("op_823_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_823_cast = slice_by_index(begin = var_823_begin_0, end = var_823_end_0, end_mask = var_823_end_mask_0, x = transpose_74);
            tensor<int32, [4]> var_827_begin_0 = const()[name = tensor<string, []>("op_827_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 192])];
            tensor<int32, [4]> var_827_end_0 = const()[name = tensor<string, []>("op_827_end_0"), val = tensor<int32, [4]>([2, 77, 1, 256])];
            tensor<bool, [4]> var_827_end_mask_0 = const()[name = tensor<string, []>("op_827_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_827_cast = slice_by_index(begin = var_827_begin_0, end = var_827_end_0, end_mask = var_827_end_mask_0, x = transpose_74);
            tensor<int32, [4]> var_831_begin_0 = const()[name = tensor<string, []>("op_831_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 256])];
            tensor<int32, [4]> var_831_end_0 = const()[name = tensor<string, []>("op_831_end_0"), val = tensor<int32, [4]>([2, 77, 1, 320])];
            tensor<bool, [4]> var_831_end_mask_0 = const()[name = tensor<string, []>("op_831_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_831_cast = slice_by_index(begin = var_831_begin_0, end = var_831_end_0, end_mask = var_831_end_mask_0, x = transpose_74);
            tensor<int32, [4]> var_833_begin_0 = const()[name = tensor<string, []>("op_833_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_833_end_0 = const()[name = tensor<string, []>("op_833_end_0"), val = tensor<int32, [4]>([2, 64, 1, 77])];
            tensor<bool, [4]> var_833_end_mask_0 = const()[name = tensor<string, []>("op_833_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_833_cast = slice_by_index(begin = var_833_begin_0, end = var_833_end_0, end_mask = var_833_end_mask_0, x = v_7_cast);
            tensor<int32, [4]> var_837_begin_0 = const()[name = tensor<string, []>("op_837_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_837_end_0 = const()[name = tensor<string, []>("op_837_end_0"), val = tensor<int32, [4]>([2, 128, 1, 77])];
            tensor<bool, [4]> var_837_end_mask_0 = const()[name = tensor<string, []>("op_837_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_837_cast = slice_by_index(begin = var_837_begin_0, end = var_837_end_0, end_mask = var_837_end_mask_0, x = v_7_cast);
            tensor<int32, [4]> var_841_begin_0 = const()[name = tensor<string, []>("op_841_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_841_end_0 = const()[name = tensor<string, []>("op_841_end_0"), val = tensor<int32, [4]>([2, 192, 1, 77])];
            tensor<bool, [4]> var_841_end_mask_0 = const()[name = tensor<string, []>("op_841_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_841_cast = slice_by_index(begin = var_841_begin_0, end = var_841_end_0, end_mask = var_841_end_mask_0, x = v_7_cast);
            tensor<int32, [4]> var_845_begin_0 = const()[name = tensor<string, []>("op_845_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_845_end_0 = const()[name = tensor<string, []>("op_845_end_0"), val = tensor<int32, [4]>([2, 256, 1, 77])];
            tensor<bool, [4]> var_845_end_mask_0 = const()[name = tensor<string, []>("op_845_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_845_cast = slice_by_index(begin = var_845_begin_0, end = var_845_end_0, end_mask = var_845_end_mask_0, x = v_7_cast);
            tensor<int32, [4]> var_849_begin_0 = const()[name = tensor<string, []>("op_849_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_849_end_0 = const()[name = tensor<string, []>("op_849_end_0"), val = tensor<int32, [4]>([2, 320, 1, 77])];
            tensor<bool, [4]> var_849_end_mask_0 = const()[name = tensor<string, []>("op_849_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_849_cast = slice_by_index(begin = var_849_begin_0, end = var_849_end_0, end_mask = var_849_end_mask_0, x = v_7_cast);
            tensor<string, []> var_853_equation_0 = const()[name = tensor<string, []>("op_853_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_853_cast = einsum(equation = var_853_equation_0, values = (var_815_cast, var_792_cast));
            tensor<fp16, []> var_854_to_fp16 = const()[name = tensor<string, []>("op_854_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_31_cast = mul(x = var_853_cast, y = var_854_to_fp16);
            tensor<string, []> var_857_equation_0 = const()[name = tensor<string, []>("op_857_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_857_cast = einsum(equation = var_857_equation_0, values = (var_819_cast, var_796_cast));
            tensor<fp16, []> var_858_to_fp16 = const()[name = tensor<string, []>("op_858_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_33_cast = mul(x = var_857_cast, y = var_858_to_fp16);
            tensor<string, []> var_861_equation_0 = const()[name = tensor<string, []>("op_861_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_861_cast = einsum(equation = var_861_equation_0, values = (var_823_cast, var_800_cast));
            tensor<fp16, []> var_862_to_fp16 = const()[name = tensor<string, []>("op_862_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_35_cast = mul(x = var_861_cast, y = var_862_to_fp16);
            tensor<string, []> var_865_equation_0 = const()[name = tensor<string, []>("op_865_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_865_cast = einsum(equation = var_865_equation_0, values = (var_827_cast, var_804_cast));
            tensor<fp16, []> var_866_to_fp16 = const()[name = tensor<string, []>("op_866_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_37_cast = mul(x = var_865_cast, y = var_866_to_fp16);
            tensor<string, []> var_869_equation_0 = const()[name = tensor<string, []>("op_869_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_869_cast = einsum(equation = var_869_equation_0, values = (var_831_cast, var_808_cast));
            tensor<fp16, []> var_870_to_fp16 = const()[name = tensor<string, []>("op_870_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_39_cast = mul(x = var_869_cast, y = var_870_to_fp16);
            tensor<fp16, [2, 77, 1, 4096]> var_872_cast = softmax(axis = var_112, x = aw_31_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_873_cast = softmax(axis = var_112, x = aw_33_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_874_cast = softmax(axis = var_112, x = aw_35_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_875_cast = softmax(axis = var_112, x = aw_37_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_876_cast = softmax(axis = var_112, x = aw_39_cast);
            tensor<string, []> var_878_equation_0 = const()[name = tensor<string, []>("op_878_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_878_cast = einsum(equation = var_878_equation_0, values = (var_833_cast, var_872_cast));
            tensor<string, []> var_880_equation_0 = const()[name = tensor<string, []>("op_880_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_880_cast = einsum(equation = var_880_equation_0, values = (var_837_cast, var_873_cast));
            tensor<string, []> var_882_equation_0 = const()[name = tensor<string, []>("op_882_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_882_cast = einsum(equation = var_882_equation_0, values = (var_841_cast, var_874_cast));
            tensor<string, []> var_884_equation_0 = const()[name = tensor<string, []>("op_884_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_884_cast = einsum(equation = var_884_equation_0, values = (var_845_cast, var_875_cast));
            tensor<string, []> var_886_equation_0 = const()[name = tensor<string, []>("op_886_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_886_cast = einsum(equation = var_886_equation_0, values = (var_849_cast, var_876_cast));
            tensor<bool, []> input_53_interleave_0 = const()[name = tensor<string, []>("input_53_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 320, 1, 4096]> input_53_cast = concat(axis = var_112, interleave = input_53_interleave_0, values = (var_878_cast, var_880_cast, var_882_cast, var_884_cast, var_886_cast));
            tensor<int32, [2]> var_892 = const()[name = tensor<string, []>("op_892"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_894 = const()[name = tensor<string, []>("op_894"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_896_pad_type_0 = const()[name = tensor<string, []>("op_896_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_896_pad_0 = const()[name = tensor<string, []>("op_896_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> down_blocks_0_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(21123008)))];
            tensor<fp16, [320]> down_blocks_0_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(21327872)))];
            tensor<fp16, [2, 320, 1, 4096]> var_896_cast = conv(bias = down_blocks_0_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16, dilations = var_894, groups = var_112, pad = var_896_pad_0, pad_type = var_896_pad_type_0, strides = var_892, weight = down_blocks_0_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16, x = input_53_cast);
            tensor<fp16, [2, 320, 1, 4096]> inputs_11_cast = add(x = var_896_cast, y = inputs_9_cast);
            tensor<int32, [1]> var_900 = const()[name = tensor<string, []>("op_900"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> channels_mean_11_cast = reduce_mean(axes = var_900, keep_dims = var_107, x = inputs_11_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_11_cast = sub(x = inputs_11_cast, y = channels_mean_11_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_sq_11_cast = mul(x = zero_mean_11_cast, y = zero_mean_11_cast);
            tensor<int32, [1]> var_904 = const()[name = tensor<string, []>("op_904"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> var_905_cast = reduce_mean(axes = var_904, keep_dims = var_107, x = zero_mean_sq_11_cast);
            tensor<fp16, []> var_906_to_fp16 = const()[name = tensor<string, []>("op_906_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 4096]> var_907_cast = add(x = var_905_cast, y = var_906_to_fp16);
            tensor<fp16, []> denom_11_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_11_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 4096]> denom_11_cast = rsqrt(epsilon = denom_11_epsilon_0_to_fp16, x = var_907_cast);
            tensor<fp16, [2, 320, 1, 4096]> out_11_cast = mul(x = zero_mean_11_cast, y = denom_11_cast);
            tensor<fp16, [1, 320, 1, 1]> var_911_to_fp16 = const()[name = tensor<string, []>("op_911_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(21328576)))];
            tensor<fp16, [2, 320, 1, 4096]> var_912_cast = add(x = out_11_cast, y = var_911_to_fp16);
            tensor<fp16, [1, 320, 1, 1]> var_914_to_fp16 = const()[name = tensor<string, []>("op_914_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(21329280)))];
            tensor<fp16, [2, 320, 1, 4096]> input_55_cast = mul(x = var_912_cast, y = var_914_to_fp16);
            tensor<int32, [2]> var_922 = const()[name = tensor<string, []>("op_922"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_924 = const()[name = tensor<string, []>("op_924"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_926_pad_type_0 = const()[name = tensor<string, []>("op_926_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_926_pad_0 = const()[name = tensor<string, []>("op_926_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [2560, 320, 1, 1]> down_blocks_0_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16"), val = tensor<fp16, [2560, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(21329984)))];
            tensor<fp16, [2560]> down_blocks_0_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(22968448)))];
            tensor<fp16, [2, 2560, 1, 4096]> var_926_cast = conv(bias = down_blocks_0_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16, dilations = var_924, groups = var_112, pad = var_926_pad_0, pad_type = var_926_pad_type_0, strides = var_922, weight = down_blocks_0_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16, x = input_55_cast);
            tensor<int32, [2]> var_927_split_sizes_0 = const()[name = tensor<string, []>("op_927_split_sizes_0"), val = tensor<int32, [2]>([1280, 1280])];
            tensor<int32, []> var_927_axis_0 = const()[name = tensor<string, []>("op_927_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [2, 1280, 1, 4096]> var_927_cast_0, tensor<fp16, [2, 1280, 1, 4096]> var_927_cast_1 = split(axis = var_927_axis_0, split_sizes = var_927_split_sizes_0, x = var_926_cast);
            tensor<string, []> var_929_mode_0 = const()[name = tensor<string, []>("op_929_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [2, 1280, 1, 4096]> var_929_cast = gelu(mode = var_929_mode_0, x = var_927_cast_1);
            tensor<fp16, [2, 1280, 1, 4096]> input_57_cast = mul(x = var_927_cast_0, y = var_929_cast);
            tensor<int32, [2]> var_933 = const()[name = tensor<string, []>("op_933"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_935 = const()[name = tensor<string, []>("op_935"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_937_pad_type_0 = const()[name = tensor<string, []>("op_937_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_937_pad_0 = const()[name = tensor<string, []>("op_937_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 1280, 1, 1]> down_blocks_0_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16"), val = tensor<fp16, [320, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(22973632)))];
            tensor<fp16, [320]> down_blocks_0_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(23792896)))];
            tensor<fp16, [2, 320, 1, 4096]> var_937_cast = conv(bias = down_blocks_0_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16, dilations = var_935, groups = var_112, pad = var_937_pad_0, pad_type = var_937_pad_type_0, strides = var_933, weight = down_blocks_0_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16, x = input_57_cast);
            tensor<fp16, [2, 320, 1, 4096]> hidden_states_33_cast = add(x = var_937_cast, y = inputs_11_cast);
            tensor<int32, [4]> var_939 = const()[name = tensor<string, []>("op_939"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> input_59_cast = reshape(shape = var_939, x = hidden_states_33_cast);
            tensor<int32, [2]> var_943 = const()[name = tensor<string, []>("op_943"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_945 = const()[name = tensor<string, []>("op_945"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_35_pad_type_0 = const()[name = tensor<string, []>("hidden_states_35_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_35_pad_0 = const()[name = tensor<string, []>("hidden_states_35_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> down_blocks_0_attentions_1_proj_out_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_proj_out_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(23793600)))];
            tensor<fp16, [320]> down_blocks_0_attentions_1_proj_out_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_proj_out_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(23998464)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_35_cast = conv(bias = down_blocks_0_attentions_1_proj_out_bias_to_fp16, dilations = var_945, groups = var_112, pad = hidden_states_35_pad_0, pad_type = hidden_states_35_pad_type_0, strides = var_943, weight = down_blocks_0_attentions_1_proj_out_weight_to_fp16, x = input_59_cast);
            tensor<fp16, [2, 320, 64, 64]> input_61_cast_1 = add(x = hidden_states_35_cast, y = hidden_states_23_cast);
            tensor<int32, [2]> var_952 = const()[name = tensor<string, []>("op_952"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_954 = const()[name = tensor<string, []>("op_954"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_63_pad_type_0 = const()[name = tensor<string, []>("input_63_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_63_pad_0 = const()[name = tensor<string, []>("input_63_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [320, 320, 3, 3]> down_blocks_0_downsamplers_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_downsamplers_0_conv_weight_to_fp16"), val = tensor<fp16, [320, 320, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(23999168)))];
            tensor<fp16, [320]> down_blocks_0_downsamplers_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_downsamplers_0_conv_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25842432)))];
            tensor<fp16, [2, 320, 32, 32]> input_63_cast_1 = conv(bias = down_blocks_0_downsamplers_0_conv_bias_to_fp16, dilations = var_954, groups = var_112, pad = input_63_pad_0, pad_type = input_63_pad_type_0, strides = var_952, weight = down_blocks_0_downsamplers_0_conv_weight_to_fp16, x = input_61_cast_1);
            tensor<bool, []> var_979 = const()[name = tensor<string, []>("op_979"), val = tensor<bool, []>(true)];
            tensor<int32, []> var_984 = const()[name = tensor<string, []>("op_984"), val = tensor<int32, []>(1)];
            tensor<int32, [5]> reshape_24_shape_0 = const()[name = tensor<string, []>("reshape_24_shape_0"), val = tensor<int32, [5]>([2, 32, 10, 32, 32])];
            tensor<fp16, [2, 32, 10, 32, 32]> reshape_24_cast = reshape(shape = reshape_24_shape_0, x = input_63_cast_1);
            tensor<int32, [3]> reduce_mean_18_axes_0 = const()[name = tensor<string, []>("reduce_mean_18_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_18_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_18_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_18_cast = reduce_mean(axes = reduce_mean_18_axes_0, keep_dims = reduce_mean_18_keep_dims_0, x = reshape_24_cast);
            tensor<fp16, [2, 32, 10, 32, 32]> sub_12_cast = sub(x = reshape_24_cast, y = reduce_mean_18_cast);
            tensor<fp16, [2, 32, 10, 32, 32]> square_6_cast = square(x = sub_12_cast);
            tensor<int32, [3]> reduce_mean_20_axes_0 = const()[name = tensor<string, []>("reduce_mean_20_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_20_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_20_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_20_cast = reduce_mean(axes = reduce_mean_20_axes_0, keep_dims = reduce_mean_20_keep_dims_0, x = square_6_cast);
            tensor<fp16, []> add_12_y_0_to_fp16 = const()[name = tensor<string, []>("add_12_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_12_cast = add(x = reduce_mean_20_cast, y = add_12_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_6_cast = sqrt(x = add_12_cast);
            tensor<fp16, [2, 32, 10, 32, 32]> real_div_6_cast = real_div(x = sub_12_cast, y = sqrt_6_cast);
            tensor<int32, [4]> reshape_25_shape_0 = const()[name = tensor<string, []>("reshape_25_shape_0"), val = tensor<int32, [4]>([2, 320, 32, 32])];
            tensor<fp16, [2, 320, 32, 32]> reshape_25_cast = reshape(shape = reshape_25_shape_0, x = real_div_6_cast);
            tensor<fp16, [320]> add_13_mean_0_to_fp16 = const()[name = tensor<string, []>("add_13_mean_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25843136)))];
            tensor<fp16, [320]> add_13_variance_0_to_fp16 = const()[name = tensor<string, []>("add_13_variance_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25843840)))];
            tensor<fp16, [320]> add_13_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_13_gamma_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25844544)))];
            tensor<fp16, [320]> add_13_beta_0_to_fp16 = const()[name = tensor<string, []>("add_13_beta_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25845248)))];
            tensor<fp16, []> add_13_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_13_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 320, 32, 32]> add_13_cast = batch_norm(beta = add_13_beta_0_to_fp16, epsilon = add_13_epsilon_0_to_fp16, gamma = add_13_gamma_0_to_fp16, mean = add_13_mean_0_to_fp16, variance = add_13_variance_0_to_fp16, x = reshape_25_cast);
            tensor<fp16, [2, 320, 32, 32]> input_67_cast = silu(x = add_13_cast);
            tensor<int32, [2]> var_1007 = const()[name = tensor<string, []>("op_1007"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1009 = const()[name = tensor<string, []>("op_1009"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_37_pad_type_0 = const()[name = tensor<string, []>("hidden_states_37_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_37_pad_0 = const()[name = tensor<string, []>("hidden_states_37_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [640, 320, 3, 3]> down_blocks_1_resnets_0_conv1_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_resnets_0_conv1_weight_to_fp16"), val = tensor<fp16, [640, 320, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25845952)))];
            tensor<fp16, [640]> down_blocks_1_resnets_0_conv1_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_resnets_0_conv1_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(29532416)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_37_cast = conv(bias = down_blocks_1_resnets_0_conv1_bias_to_fp16, dilations = var_1009, groups = var_984, pad = hidden_states_37_pad_0, pad_type = hidden_states_37_pad_type_0, strides = var_1007, weight = down_blocks_1_resnets_0_conv1_weight_to_fp16, x = input_67_cast);
            tensor<int32, [2]> var_1015 = const()[name = tensor<string, []>("op_1015"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1017 = const()[name = tensor<string, []>("op_1017"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_5_pad_type_0 = const()[name = tensor<string, []>("temb_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_5_pad_0 = const()[name = tensor<string, []>("temb_5_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 1280, 1, 1]> down_blocks_1_resnets_0_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_resnets_0_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [640, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(29533760)))];
            tensor<fp16, [640]> down_blocks_1_resnets_0_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_resnets_0_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(31172224)))];
            tensor<fp16, [2, 640, 1, 1]> temb_5_cast = conv(bias = down_blocks_1_resnets_0_time_emb_proj_bias_to_fp16, dilations = var_1017, groups = var_984, pad = temb_5_pad_0, pad_type = temb_5_pad_type_0, strides = var_1015, weight = down_blocks_1_resnets_0_time_emb_proj_weight_to_fp16, x = input_15_cast_1);
            tensor<fp16, [2, 640, 32, 32]> input_71_cast = add(x = hidden_states_37_cast, y = temb_5_cast);
            tensor<int32, [5]> reshape_28_shape_0 = const()[name = tensor<string, []>("reshape_28_shape_0"), val = tensor<int32, [5]>([2, 32, 20, 32, 32])];
            tensor<fp16, [2, 32, 20, 32, 32]> reshape_28_cast = reshape(shape = reshape_28_shape_0, x = input_71_cast);
            tensor<int32, [3]> reduce_mean_21_axes_0 = const()[name = tensor<string, []>("reduce_mean_21_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_21_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_21_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_21_cast = reduce_mean(axes = reduce_mean_21_axes_0, keep_dims = reduce_mean_21_keep_dims_0, x = reshape_28_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> sub_14_cast = sub(x = reshape_28_cast, y = reduce_mean_21_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> square_7_cast = square(x = sub_14_cast);
            tensor<int32, [3]> reduce_mean_23_axes_0 = const()[name = tensor<string, []>("reduce_mean_23_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_23_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_23_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_23_cast = reduce_mean(axes = reduce_mean_23_axes_0, keep_dims = reduce_mean_23_keep_dims_0, x = square_7_cast);
            tensor<fp16, []> add_14_y_0_to_fp16 = const()[name = tensor<string, []>("add_14_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_14_cast = add(x = reduce_mean_23_cast, y = add_14_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_7_cast = sqrt(x = add_14_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> real_div_7_cast = real_div(x = sub_14_cast, y = sqrt_7_cast);
            tensor<int32, [4]> reshape_29_shape_0 = const()[name = tensor<string, []>("reshape_29_shape_0"), val = tensor<int32, [4]>([2, 640, 32, 32])];
            tensor<fp16, [2, 640, 32, 32]> reshape_29_cast = reshape(shape = reshape_29_shape_0, x = real_div_7_cast);
            tensor<fp16, [640]> add_15_mean_0_to_fp16 = const()[name = tensor<string, []>("add_15_mean_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(31173568)))];
            tensor<fp16, [640]> add_15_variance_0_to_fp16 = const()[name = tensor<string, []>("add_15_variance_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(31174912)))];
            tensor<fp16, [640]> add_15_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_15_gamma_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(31176256)))];
            tensor<fp16, [640]> add_15_beta_0_to_fp16 = const()[name = tensor<string, []>("add_15_beta_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(31177600)))];
            tensor<fp16, []> add_15_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_15_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 640, 32, 32]> add_15_cast = batch_norm(beta = add_15_beta_0_to_fp16, epsilon = add_15_epsilon_0_to_fp16, gamma = add_15_gamma_0_to_fp16, mean = add_15_mean_0_to_fp16, variance = add_15_variance_0_to_fp16, x = reshape_29_cast);
            tensor<fp16, [2, 640, 32, 32]> input_75_cast = silu(x = add_15_cast);
            tensor<int32, [2]> var_1027 = const()[name = tensor<string, []>("op_1027"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1029 = const()[name = tensor<string, []>("op_1029"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_39_pad_type_0 = const()[name = tensor<string, []>("hidden_states_39_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_39_pad_0 = const()[name = tensor<string, []>("hidden_states_39_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [640, 640, 3, 3]> down_blocks_1_resnets_0_conv2_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_resnets_0_conv2_weight_to_fp16"), val = tensor<fp16, [640, 640, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(31178944)))];
            tensor<fp16, [640]> down_blocks_1_resnets_0_conv2_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_resnets_0_conv2_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(38551808)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_39_cast = conv(bias = down_blocks_1_resnets_0_conv2_bias_to_fp16, dilations = var_1029, groups = var_984, pad = hidden_states_39_pad_0, pad_type = hidden_states_39_pad_type_0, strides = var_1027, weight = down_blocks_1_resnets_0_conv2_weight_to_fp16, x = input_75_cast);
            tensor<int32, [2]> var_1034 = const()[name = tensor<string, []>("op_1034"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1036 = const()[name = tensor<string, []>("op_1036"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_1_pad_type_0 = const()[name = tensor<string, []>("x_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_1_pad_0 = const()[name = tensor<string, []>("x_1_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 320, 1, 1]> down_blocks_1_resnets_0_conv_shortcut_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_resnets_0_conv_shortcut_weight_to_fp16"), val = tensor<fp16, [640, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(38553152)))];
            tensor<fp16, [640]> down_blocks_1_resnets_0_conv_shortcut_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_resnets_0_conv_shortcut_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(38962816)))];
            tensor<fp16, [2, 640, 32, 32]> x_1_cast = conv(bias = down_blocks_1_resnets_0_conv_shortcut_bias_to_fp16, dilations = var_1036, groups = var_984, pad = x_1_pad_0, pad_type = x_1_pad_type_0, strides = var_1034, weight = down_blocks_1_resnets_0_conv_shortcut_weight_to_fp16, x = input_63_cast_1);
            tensor<fp16, [2, 640, 32, 32]> hidden_states_41_cast = add(x = x_1_cast, y = hidden_states_39_cast);
            tensor<int32, [5]> reshape_32_shape_0 = const()[name = tensor<string, []>("reshape_32_shape_0"), val = tensor<int32, [5]>([2, 32, 20, 32, 32])];
            tensor<fp16, [2, 32, 20, 32, 32]> reshape_32_cast = reshape(shape = reshape_32_shape_0, x = hidden_states_41_cast);
            tensor<int32, [3]> reduce_mean_24_axes_0 = const()[name = tensor<string, []>("reduce_mean_24_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_24_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_24_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_24_cast = reduce_mean(axes = reduce_mean_24_axes_0, keep_dims = reduce_mean_24_keep_dims_0, x = reshape_32_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> sub_16_cast = sub(x = reshape_32_cast, y = reduce_mean_24_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> square_8_cast = square(x = sub_16_cast);
            tensor<int32, [3]> reduce_mean_26_axes_0 = const()[name = tensor<string, []>("reduce_mean_26_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_26_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_26_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_26_cast = reduce_mean(axes = reduce_mean_26_axes_0, keep_dims = reduce_mean_26_keep_dims_0, x = square_8_cast);
            tensor<fp16, []> add_16_y_0_to_fp16 = const()[name = tensor<string, []>("add_16_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_16_cast = add(x = reduce_mean_26_cast, y = add_16_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_8_cast = sqrt(x = add_16_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> real_div_8_cast = real_div(x = sub_16_cast, y = sqrt_8_cast);
            tensor<int32, [4]> reshape_33_shape_0 = const()[name = tensor<string, []>("reshape_33_shape_0"), val = tensor<int32, [4]>([2, 640, 32, 32])];
            tensor<fp16, [2, 640, 32, 32]> reshape_33_cast = reshape(shape = reshape_33_shape_0, x = real_div_8_cast);
            tensor<fp16, [640]> add_17_mean_0_to_fp16 = const()[name = tensor<string, []>("add_17_mean_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(38964160)))];
            tensor<fp16, [640]> add_17_variance_0_to_fp16 = const()[name = tensor<string, []>("add_17_variance_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(38965504)))];
            tensor<fp16, [640]> add_17_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_17_gamma_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(38966848)))];
            tensor<fp16, [640]> add_17_beta_0_to_fp16 = const()[name = tensor<string, []>("add_17_beta_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(38968192)))];
            tensor<fp16, []> add_17_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_17_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 640, 32, 32]> add_17_cast = batch_norm(beta = add_17_beta_0_to_fp16, epsilon = add_17_epsilon_0_to_fp16, gamma = add_17_gamma_0_to_fp16, mean = add_17_mean_0_to_fp16, variance = add_17_variance_0_to_fp16, x = reshape_33_cast);
            tensor<int32, [2]> var_1056 = const()[name = tensor<string, []>("op_1056"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1058 = const()[name = tensor<string, []>("op_1058"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_43_pad_type_0 = const()[name = tensor<string, []>("hidden_states_43_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_43_pad_0 = const()[name = tensor<string, []>("hidden_states_43_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> down_blocks_1_attentions_0_proj_in_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_proj_in_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(38969536)))];
            tensor<fp16, [640]> down_blocks_1_attentions_0_proj_in_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_proj_in_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(39788800)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_43_cast = conv(bias = down_blocks_1_attentions_0_proj_in_bias_to_fp16, dilations = var_1058, groups = var_984, pad = hidden_states_43_pad_0, pad_type = hidden_states_43_pad_type_0, strides = var_1056, weight = down_blocks_1_attentions_0_proj_in_weight_to_fp16, x = add_17_cast);
            tensor<int32, [4]> var_1063 = const()[name = tensor<string, []>("op_1063"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<fp16, [2, 640, 1, 1024]> inputs_13_cast = reshape(shape = var_1063, x = hidden_states_43_cast);
            tensor<int32, [1]> var_1073 = const()[name = tensor<string, []>("op_1073"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> channels_mean_13_cast = reduce_mean(axes = var_1073, keep_dims = var_979, x = inputs_13_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_13_cast = sub(x = inputs_13_cast, y = channels_mean_13_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_sq_13_cast = mul(x = zero_mean_13_cast, y = zero_mean_13_cast);
            tensor<int32, [1]> var_1077 = const()[name = tensor<string, []>("op_1077"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> var_1078_cast = reduce_mean(axes = var_1077, keep_dims = var_979, x = zero_mean_sq_13_cast);
            tensor<fp16, []> var_1079_to_fp16 = const()[name = tensor<string, []>("op_1079_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 1024]> var_1080_cast = add(x = var_1078_cast, y = var_1079_to_fp16);
            tensor<fp16, []> denom_13_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_13_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 1024]> denom_13_cast = rsqrt(epsilon = denom_13_epsilon_0_to_fp16, x = var_1080_cast);
            tensor<fp16, [2, 640, 1, 1024]> out_13_cast = mul(x = zero_mean_13_cast, y = denom_13_cast);
            tensor<fp16, [1, 640, 1, 1]> var_1084_to_fp16 = const()[name = tensor<string, []>("op_1084_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(39790144)))];
            tensor<fp16, [2, 640, 1, 1024]> var_1085_cast = add(x = out_13_cast, y = var_1084_to_fp16);
            tensor<fp16, [1, 640, 1, 1]> var_1087_to_fp16 = const()[name = tensor<string, []>("op_1087_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(39791488)))];
            tensor<fp16, [2, 640, 1, 1024]> hidden_states_45_cast = mul(x = var_1085_cast, y = var_1087_to_fp16);
            tensor<int32, [2]> var_1094 = const()[name = tensor<string, []>("op_1094"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1096 = const()[name = tensor<string, []>("op_1096"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_9_pad_type_0 = const()[name = tensor<string, []>("q_9_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_9_pad_0 = const()[name = tensor<string, []>("q_9_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> down_blocks_1_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(39792832)))];
            tensor<fp16, [2, 640, 1, 1024]> q_9_cast = conv(dilations = var_1096, groups = var_984, pad = q_9_pad_0, pad_type = q_9_pad_type_0, strides = var_1094, weight = down_blocks_1_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16, x = hidden_states_45_cast);
            tensor<int32, [2]> var_1100 = const()[name = tensor<string, []>("op_1100"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1102 = const()[name = tensor<string, []>("op_1102"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_17_pad_type_0 = const()[name = tensor<string, []>("k_17_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_17_pad_0 = const()[name = tensor<string, []>("k_17_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> down_blocks_1_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(40612096)))];
            tensor<fp16, [2, 640, 1, 1024]> k_17_cast = conv(dilations = var_1102, groups = var_984, pad = k_17_pad_0, pad_type = k_17_pad_type_0, strides = var_1100, weight = down_blocks_1_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16, x = hidden_states_45_cast);
            tensor<int32, [2]> var_1106 = const()[name = tensor<string, []>("op_1106"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1108 = const()[name = tensor<string, []>("op_1108"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_9_pad_type_0 = const()[name = tensor<string, []>("v_9_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_9_pad_0 = const()[name = tensor<string, []>("v_9_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> down_blocks_1_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(41431360)))];
            tensor<fp16, [2, 640, 1, 1024]> v_9_cast = conv(dilations = var_1108, groups = var_984, pad = v_9_pad_0, pad_type = v_9_pad_type_0, strides = var_1106, weight = down_blocks_1_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16, x = hidden_states_45_cast);
            tensor<int32, [4]> var_1112_begin_0 = const()[name = tensor<string, []>("op_1112_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1112_end_0 = const()[name = tensor<string, []>("op_1112_end_0"), val = tensor<int32, [4]>([2, 64, 1, 1024])];
            tensor<bool, [4]> var_1112_end_mask_0 = const()[name = tensor<string, []>("op_1112_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1112_cast = slice_by_index(begin = var_1112_begin_0, end = var_1112_end_0, end_mask = var_1112_end_mask_0, x = q_9_cast);
            tensor<int32, [4]> var_1116_begin_0 = const()[name = tensor<string, []>("op_1116_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_1116_end_0 = const()[name = tensor<string, []>("op_1116_end_0"), val = tensor<int32, [4]>([2, 128, 1, 1024])];
            tensor<bool, [4]> var_1116_end_mask_0 = const()[name = tensor<string, []>("op_1116_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1116_cast = slice_by_index(begin = var_1116_begin_0, end = var_1116_end_0, end_mask = var_1116_end_mask_0, x = q_9_cast);
            tensor<int32, [4]> var_1120_begin_0 = const()[name = tensor<string, []>("op_1120_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_1120_end_0 = const()[name = tensor<string, []>("op_1120_end_0"), val = tensor<int32, [4]>([2, 192, 1, 1024])];
            tensor<bool, [4]> var_1120_end_mask_0 = const()[name = tensor<string, []>("op_1120_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1120_cast = slice_by_index(begin = var_1120_begin_0, end = var_1120_end_0, end_mask = var_1120_end_mask_0, x = q_9_cast);
            tensor<int32, [4]> var_1124_begin_0 = const()[name = tensor<string, []>("op_1124_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_1124_end_0 = const()[name = tensor<string, []>("op_1124_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1024])];
            tensor<bool, [4]> var_1124_end_mask_0 = const()[name = tensor<string, []>("op_1124_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1124_cast = slice_by_index(begin = var_1124_begin_0, end = var_1124_end_0, end_mask = var_1124_end_mask_0, x = q_9_cast);
            tensor<int32, [4]> var_1128_begin_0 = const()[name = tensor<string, []>("op_1128_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_1128_end_0 = const()[name = tensor<string, []>("op_1128_end_0"), val = tensor<int32, [4]>([2, 320, 1, 1024])];
            tensor<bool, [4]> var_1128_end_mask_0 = const()[name = tensor<string, []>("op_1128_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1128_cast = slice_by_index(begin = var_1128_begin_0, end = var_1128_end_0, end_mask = var_1128_end_mask_0, x = q_9_cast);
            tensor<int32, [4]> var_1132_begin_0 = const()[name = tensor<string, []>("op_1132_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_1132_end_0 = const()[name = tensor<string, []>("op_1132_end_0"), val = tensor<int32, [4]>([2, 384, 1, 1024])];
            tensor<bool, [4]> var_1132_end_mask_0 = const()[name = tensor<string, []>("op_1132_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1132_cast = slice_by_index(begin = var_1132_begin_0, end = var_1132_end_0, end_mask = var_1132_end_mask_0, x = q_9_cast);
            tensor<int32, [4]> var_1136_begin_0 = const()[name = tensor<string, []>("op_1136_begin_0"), val = tensor<int32, [4]>([0, 384, 0, 0])];
            tensor<int32, [4]> var_1136_end_0 = const()[name = tensor<string, []>("op_1136_end_0"), val = tensor<int32, [4]>([2, 448, 1, 1024])];
            tensor<bool, [4]> var_1136_end_mask_0 = const()[name = tensor<string, []>("op_1136_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1136_cast = slice_by_index(begin = var_1136_begin_0, end = var_1136_end_0, end_mask = var_1136_end_mask_0, x = q_9_cast);
            tensor<int32, [4]> var_1140_begin_0 = const()[name = tensor<string, []>("op_1140_begin_0"), val = tensor<int32, [4]>([0, 448, 0, 0])];
            tensor<int32, [4]> var_1140_end_0 = const()[name = tensor<string, []>("op_1140_end_0"), val = tensor<int32, [4]>([2, 512, 1, 1024])];
            tensor<bool, [4]> var_1140_end_mask_0 = const()[name = tensor<string, []>("op_1140_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1140_cast = slice_by_index(begin = var_1140_begin_0, end = var_1140_end_0, end_mask = var_1140_end_mask_0, x = q_9_cast);
            tensor<int32, [4]> var_1144_begin_0 = const()[name = tensor<string, []>("op_1144_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_1144_end_0 = const()[name = tensor<string, []>("op_1144_end_0"), val = tensor<int32, [4]>([2, 576, 1, 1024])];
            tensor<bool, [4]> var_1144_end_mask_0 = const()[name = tensor<string, []>("op_1144_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1144_cast = slice_by_index(begin = var_1144_begin_0, end = var_1144_end_0, end_mask = var_1144_end_mask_0, x = q_9_cast);
            tensor<int32, [4]> var_1148_begin_0 = const()[name = tensor<string, []>("op_1148_begin_0"), val = tensor<int32, [4]>([0, 576, 0, 0])];
            tensor<int32, [4]> var_1148_end_0 = const()[name = tensor<string, []>("op_1148_end_0"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<bool, [4]> var_1148_end_mask_0 = const()[name = tensor<string, []>("op_1148_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1148_cast = slice_by_index(begin = var_1148_begin_0, end = var_1148_end_0, end_mask = var_1148_end_mask_0, x = q_9_cast);
            tensor<int32, [4]> k_19_perm_0 = const()[name = tensor<string, []>("k_19_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_1155_begin_0 = const()[name = tensor<string, []>("op_1155_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1155_end_0 = const()[name = tensor<string, []>("op_1155_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 64])];
            tensor<bool, [4]> var_1155_end_mask_0 = const()[name = tensor<string, []>("op_1155_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 640]> transpose_73 = transpose(perm = k_19_perm_0, x = k_17_cast);
            tensor<fp16, [2, 1024, 1, 64]> var_1155_cast = slice_by_index(begin = var_1155_begin_0, end = var_1155_end_0, end_mask = var_1155_end_mask_0, x = transpose_73);
            tensor<int32, [4]> var_1159_begin_0 = const()[name = tensor<string, []>("op_1159_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 64])];
            tensor<int32, [4]> var_1159_end_0 = const()[name = tensor<string, []>("op_1159_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 128])];
            tensor<bool, [4]> var_1159_end_mask_0 = const()[name = tensor<string, []>("op_1159_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 64]> var_1159_cast = slice_by_index(begin = var_1159_begin_0, end = var_1159_end_0, end_mask = var_1159_end_mask_0, x = transpose_73);
            tensor<int32, [4]> var_1163_begin_0 = const()[name = tensor<string, []>("op_1163_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 128])];
            tensor<int32, [4]> var_1163_end_0 = const()[name = tensor<string, []>("op_1163_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 192])];
            tensor<bool, [4]> var_1163_end_mask_0 = const()[name = tensor<string, []>("op_1163_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 64]> var_1163_cast = slice_by_index(begin = var_1163_begin_0, end = var_1163_end_0, end_mask = var_1163_end_mask_0, x = transpose_73);
            tensor<int32, [4]> var_1167_begin_0 = const()[name = tensor<string, []>("op_1167_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 192])];
            tensor<int32, [4]> var_1167_end_0 = const()[name = tensor<string, []>("op_1167_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 256])];
            tensor<bool, [4]> var_1167_end_mask_0 = const()[name = tensor<string, []>("op_1167_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 64]> var_1167_cast = slice_by_index(begin = var_1167_begin_0, end = var_1167_end_0, end_mask = var_1167_end_mask_0, x = transpose_73);
            tensor<int32, [4]> var_1171_begin_0 = const()[name = tensor<string, []>("op_1171_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 256])];
            tensor<int32, [4]> var_1171_end_0 = const()[name = tensor<string, []>("op_1171_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 320])];
            tensor<bool, [4]> var_1171_end_mask_0 = const()[name = tensor<string, []>("op_1171_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 64]> var_1171_cast = slice_by_index(begin = var_1171_begin_0, end = var_1171_end_0, end_mask = var_1171_end_mask_0, x = transpose_73);
            tensor<int32, [4]> var_1175_begin_0 = const()[name = tensor<string, []>("op_1175_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_1175_end_0 = const()[name = tensor<string, []>("op_1175_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 384])];
            tensor<bool, [4]> var_1175_end_mask_0 = const()[name = tensor<string, []>("op_1175_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 64]> var_1175_cast = slice_by_index(begin = var_1175_begin_0, end = var_1175_end_0, end_mask = var_1175_end_mask_0, x = transpose_73);
            tensor<int32, [4]> var_1179_begin_0 = const()[name = tensor<string, []>("op_1179_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 384])];
            tensor<int32, [4]> var_1179_end_0 = const()[name = tensor<string, []>("op_1179_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 448])];
            tensor<bool, [4]> var_1179_end_mask_0 = const()[name = tensor<string, []>("op_1179_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 64]> var_1179_cast = slice_by_index(begin = var_1179_begin_0, end = var_1179_end_0, end_mask = var_1179_end_mask_0, x = transpose_73);
            tensor<int32, [4]> var_1183_begin_0 = const()[name = tensor<string, []>("op_1183_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 448])];
            tensor<int32, [4]> var_1183_end_0 = const()[name = tensor<string, []>("op_1183_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 512])];
            tensor<bool, [4]> var_1183_end_mask_0 = const()[name = tensor<string, []>("op_1183_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 64]> var_1183_cast = slice_by_index(begin = var_1183_begin_0, end = var_1183_end_0, end_mask = var_1183_end_mask_0, x = transpose_73);
            tensor<int32, [4]> var_1187_begin_0 = const()[name = tensor<string, []>("op_1187_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 512])];
            tensor<int32, [4]> var_1187_end_0 = const()[name = tensor<string, []>("op_1187_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 576])];
            tensor<bool, [4]> var_1187_end_mask_0 = const()[name = tensor<string, []>("op_1187_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 64]> var_1187_cast = slice_by_index(begin = var_1187_begin_0, end = var_1187_end_0, end_mask = var_1187_end_mask_0, x = transpose_73);
            tensor<int32, [4]> var_1191_begin_0 = const()[name = tensor<string, []>("op_1191_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 576])];
            tensor<int32, [4]> var_1191_end_0 = const()[name = tensor<string, []>("op_1191_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 640])];
            tensor<bool, [4]> var_1191_end_mask_0 = const()[name = tensor<string, []>("op_1191_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 64]> var_1191_cast = slice_by_index(begin = var_1191_begin_0, end = var_1191_end_0, end_mask = var_1191_end_mask_0, x = transpose_73);
            tensor<int32, [4]> var_1193_begin_0 = const()[name = tensor<string, []>("op_1193_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1193_end_0 = const()[name = tensor<string, []>("op_1193_end_0"), val = tensor<int32, [4]>([2, 64, 1, 1024])];
            tensor<bool, [4]> var_1193_end_mask_0 = const()[name = tensor<string, []>("op_1193_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1193_cast = slice_by_index(begin = var_1193_begin_0, end = var_1193_end_0, end_mask = var_1193_end_mask_0, x = v_9_cast);
            tensor<int32, [4]> var_1197_begin_0 = const()[name = tensor<string, []>("op_1197_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_1197_end_0 = const()[name = tensor<string, []>("op_1197_end_0"), val = tensor<int32, [4]>([2, 128, 1, 1024])];
            tensor<bool, [4]> var_1197_end_mask_0 = const()[name = tensor<string, []>("op_1197_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1197_cast = slice_by_index(begin = var_1197_begin_0, end = var_1197_end_0, end_mask = var_1197_end_mask_0, x = v_9_cast);
            tensor<int32, [4]> var_1201_begin_0 = const()[name = tensor<string, []>("op_1201_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_1201_end_0 = const()[name = tensor<string, []>("op_1201_end_0"), val = tensor<int32, [4]>([2, 192, 1, 1024])];
            tensor<bool, [4]> var_1201_end_mask_0 = const()[name = tensor<string, []>("op_1201_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1201_cast = slice_by_index(begin = var_1201_begin_0, end = var_1201_end_0, end_mask = var_1201_end_mask_0, x = v_9_cast);
            tensor<int32, [4]> var_1205_begin_0 = const()[name = tensor<string, []>("op_1205_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_1205_end_0 = const()[name = tensor<string, []>("op_1205_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1024])];
            tensor<bool, [4]> var_1205_end_mask_0 = const()[name = tensor<string, []>("op_1205_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1205_cast = slice_by_index(begin = var_1205_begin_0, end = var_1205_end_0, end_mask = var_1205_end_mask_0, x = v_9_cast);
            tensor<int32, [4]> var_1209_begin_0 = const()[name = tensor<string, []>("op_1209_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_1209_end_0 = const()[name = tensor<string, []>("op_1209_end_0"), val = tensor<int32, [4]>([2, 320, 1, 1024])];
            tensor<bool, [4]> var_1209_end_mask_0 = const()[name = tensor<string, []>("op_1209_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1209_cast = slice_by_index(begin = var_1209_begin_0, end = var_1209_end_0, end_mask = var_1209_end_mask_0, x = v_9_cast);
            tensor<int32, [4]> var_1213_begin_0 = const()[name = tensor<string, []>("op_1213_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_1213_end_0 = const()[name = tensor<string, []>("op_1213_end_0"), val = tensor<int32, [4]>([2, 384, 1, 1024])];
            tensor<bool, [4]> var_1213_end_mask_0 = const()[name = tensor<string, []>("op_1213_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1213_cast = slice_by_index(begin = var_1213_begin_0, end = var_1213_end_0, end_mask = var_1213_end_mask_0, x = v_9_cast);
            tensor<int32, [4]> var_1217_begin_0 = const()[name = tensor<string, []>("op_1217_begin_0"), val = tensor<int32, [4]>([0, 384, 0, 0])];
            tensor<int32, [4]> var_1217_end_0 = const()[name = tensor<string, []>("op_1217_end_0"), val = tensor<int32, [4]>([2, 448, 1, 1024])];
            tensor<bool, [4]> var_1217_end_mask_0 = const()[name = tensor<string, []>("op_1217_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1217_cast = slice_by_index(begin = var_1217_begin_0, end = var_1217_end_0, end_mask = var_1217_end_mask_0, x = v_9_cast);
            tensor<int32, [4]> var_1221_begin_0 = const()[name = tensor<string, []>("op_1221_begin_0"), val = tensor<int32, [4]>([0, 448, 0, 0])];
            tensor<int32, [4]> var_1221_end_0 = const()[name = tensor<string, []>("op_1221_end_0"), val = tensor<int32, [4]>([2, 512, 1, 1024])];
            tensor<bool, [4]> var_1221_end_mask_0 = const()[name = tensor<string, []>("op_1221_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1221_cast = slice_by_index(begin = var_1221_begin_0, end = var_1221_end_0, end_mask = var_1221_end_mask_0, x = v_9_cast);
            tensor<int32, [4]> var_1225_begin_0 = const()[name = tensor<string, []>("op_1225_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_1225_end_0 = const()[name = tensor<string, []>("op_1225_end_0"), val = tensor<int32, [4]>([2, 576, 1, 1024])];
            tensor<bool, [4]> var_1225_end_mask_0 = const()[name = tensor<string, []>("op_1225_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1225_cast = slice_by_index(begin = var_1225_begin_0, end = var_1225_end_0, end_mask = var_1225_end_mask_0, x = v_9_cast);
            tensor<int32, [4]> var_1229_begin_0 = const()[name = tensor<string, []>("op_1229_begin_0"), val = tensor<int32, [4]>([0, 576, 0, 0])];
            tensor<int32, [4]> var_1229_end_0 = const()[name = tensor<string, []>("op_1229_end_0"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<bool, [4]> var_1229_end_mask_0 = const()[name = tensor<string, []>("op_1229_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1229_cast = slice_by_index(begin = var_1229_begin_0, end = var_1229_end_0, end_mask = var_1229_end_mask_0, x = v_9_cast);
            tensor<string, []> var_1233_equation_0 = const()[name = tensor<string, []>("op_1233_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1233_cast = einsum(equation = var_1233_equation_0, values = (var_1155_cast, var_1112_cast));
            tensor<fp16, []> var_1234_to_fp16 = const()[name = tensor<string, []>("op_1234_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_41_cast = mul(x = var_1233_cast, y = var_1234_to_fp16);
            tensor<string, []> var_1237_equation_0 = const()[name = tensor<string, []>("op_1237_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1237_cast = einsum(equation = var_1237_equation_0, values = (var_1159_cast, var_1116_cast));
            tensor<fp16, []> var_1238_to_fp16 = const()[name = tensor<string, []>("op_1238_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_43_cast = mul(x = var_1237_cast, y = var_1238_to_fp16);
            tensor<string, []> var_1241_equation_0 = const()[name = tensor<string, []>("op_1241_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1241_cast = einsum(equation = var_1241_equation_0, values = (var_1163_cast, var_1120_cast));
            tensor<fp16, []> var_1242_to_fp16 = const()[name = tensor<string, []>("op_1242_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_45_cast = mul(x = var_1241_cast, y = var_1242_to_fp16);
            tensor<string, []> var_1245_equation_0 = const()[name = tensor<string, []>("op_1245_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1245_cast = einsum(equation = var_1245_equation_0, values = (var_1167_cast, var_1124_cast));
            tensor<fp16, []> var_1246_to_fp16 = const()[name = tensor<string, []>("op_1246_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_47_cast = mul(x = var_1245_cast, y = var_1246_to_fp16);
            tensor<string, []> var_1249_equation_0 = const()[name = tensor<string, []>("op_1249_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1249_cast = einsum(equation = var_1249_equation_0, values = (var_1171_cast, var_1128_cast));
            tensor<fp16, []> var_1250_to_fp16 = const()[name = tensor<string, []>("op_1250_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_49_cast = mul(x = var_1249_cast, y = var_1250_to_fp16);
            tensor<string, []> var_1253_equation_0 = const()[name = tensor<string, []>("op_1253_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1253_cast = einsum(equation = var_1253_equation_0, values = (var_1175_cast, var_1132_cast));
            tensor<fp16, []> var_1254_to_fp16 = const()[name = tensor<string, []>("op_1254_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_51_cast = mul(x = var_1253_cast, y = var_1254_to_fp16);
            tensor<string, []> var_1257_equation_0 = const()[name = tensor<string, []>("op_1257_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1257_cast = einsum(equation = var_1257_equation_0, values = (var_1179_cast, var_1136_cast));
            tensor<fp16, []> var_1258_to_fp16 = const()[name = tensor<string, []>("op_1258_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_53_cast = mul(x = var_1257_cast, y = var_1258_to_fp16);
            tensor<string, []> var_1261_equation_0 = const()[name = tensor<string, []>("op_1261_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1261_cast = einsum(equation = var_1261_equation_0, values = (var_1183_cast, var_1140_cast));
            tensor<fp16, []> var_1262_to_fp16 = const()[name = tensor<string, []>("op_1262_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_55_cast = mul(x = var_1261_cast, y = var_1262_to_fp16);
            tensor<string, []> var_1265_equation_0 = const()[name = tensor<string, []>("op_1265_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1265_cast = einsum(equation = var_1265_equation_0, values = (var_1187_cast, var_1144_cast));
            tensor<fp16, []> var_1266_to_fp16 = const()[name = tensor<string, []>("op_1266_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_57_cast = mul(x = var_1265_cast, y = var_1266_to_fp16);
            tensor<string, []> var_1269_equation_0 = const()[name = tensor<string, []>("op_1269_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1269_cast = einsum(equation = var_1269_equation_0, values = (var_1191_cast, var_1148_cast));
            tensor<fp16, []> var_1270_to_fp16 = const()[name = tensor<string, []>("op_1270_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_59_cast = mul(x = var_1269_cast, y = var_1270_to_fp16);
            tensor<fp16, [2, 1024, 1, 1024]> var_1272_cast = softmax(axis = var_984, x = aw_41_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_1273_cast = softmax(axis = var_984, x = aw_43_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_1274_cast = softmax(axis = var_984, x = aw_45_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_1275_cast = softmax(axis = var_984, x = aw_47_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_1276_cast = softmax(axis = var_984, x = aw_49_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_1277_cast = softmax(axis = var_984, x = aw_51_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_1278_cast = softmax(axis = var_984, x = aw_53_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_1279_cast = softmax(axis = var_984, x = aw_55_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_1280_cast = softmax(axis = var_984, x = aw_57_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_1281_cast = softmax(axis = var_984, x = aw_59_cast);
            tensor<string, []> var_1283_equation_0 = const()[name = tensor<string, []>("op_1283_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_1283_cast = einsum(equation = var_1283_equation_0, values = (var_1193_cast, var_1272_cast));
            tensor<string, []> var_1285_equation_0 = const()[name = tensor<string, []>("op_1285_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_1285_cast = einsum(equation = var_1285_equation_0, values = (var_1197_cast, var_1273_cast));
            tensor<string, []> var_1287_equation_0 = const()[name = tensor<string, []>("op_1287_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_1287_cast = einsum(equation = var_1287_equation_0, values = (var_1201_cast, var_1274_cast));
            tensor<string, []> var_1289_equation_0 = const()[name = tensor<string, []>("op_1289_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_1289_cast = einsum(equation = var_1289_equation_0, values = (var_1205_cast, var_1275_cast));
            tensor<string, []> var_1291_equation_0 = const()[name = tensor<string, []>("op_1291_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_1291_cast = einsum(equation = var_1291_equation_0, values = (var_1209_cast, var_1276_cast));
            tensor<string, []> var_1293_equation_0 = const()[name = tensor<string, []>("op_1293_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_1293_cast = einsum(equation = var_1293_equation_0, values = (var_1213_cast, var_1277_cast));
            tensor<string, []> var_1295_equation_0 = const()[name = tensor<string, []>("op_1295_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_1295_cast = einsum(equation = var_1295_equation_0, values = (var_1217_cast, var_1278_cast));
            tensor<string, []> var_1297_equation_0 = const()[name = tensor<string, []>("op_1297_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_1297_cast = einsum(equation = var_1297_equation_0, values = (var_1221_cast, var_1279_cast));
            tensor<string, []> var_1299_equation_0 = const()[name = tensor<string, []>("op_1299_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_1299_cast = einsum(equation = var_1299_equation_0, values = (var_1225_cast, var_1280_cast));
            tensor<string, []> var_1301_equation_0 = const()[name = tensor<string, []>("op_1301_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_1301_cast = einsum(equation = var_1301_equation_0, values = (var_1229_cast, var_1281_cast));
            tensor<bool, []> input_79_interleave_0 = const()[name = tensor<string, []>("input_79_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 640, 1, 1024]> input_79_cast = concat(axis = var_984, interleave = input_79_interleave_0, values = (var_1283_cast, var_1285_cast, var_1287_cast, var_1289_cast, var_1291_cast, var_1293_cast, var_1295_cast, var_1297_cast, var_1299_cast, var_1301_cast));
            tensor<int32, [2]> var_1307 = const()[name = tensor<string, []>("op_1307"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1309 = const()[name = tensor<string, []>("op_1309"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_1311_pad_type_0 = const()[name = tensor<string, []>("op_1311_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_1311_pad_0 = const()[name = tensor<string, []>("op_1311_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> down_blocks_1_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42250624)))];
            tensor<fp16, [640]> down_blocks_1_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(43069888)))];
            tensor<fp16, [2, 640, 1, 1024]> var_1311_cast = conv(bias = down_blocks_1_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16, dilations = var_1309, groups = var_984, pad = var_1311_pad_0, pad_type = var_1311_pad_type_0, strides = var_1307, weight = down_blocks_1_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16, x = input_79_cast);
            tensor<fp16, [2, 640, 1, 1024]> inputs_15_cast = add(x = var_1311_cast, y = inputs_13_cast);
            tensor<int32, [1]> var_1315 = const()[name = tensor<string, []>("op_1315"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> channels_mean_15_cast = reduce_mean(axes = var_1315, keep_dims = var_979, x = inputs_15_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_15_cast = sub(x = inputs_15_cast, y = channels_mean_15_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_sq_15_cast = mul(x = zero_mean_15_cast, y = zero_mean_15_cast);
            tensor<int32, [1]> var_1319 = const()[name = tensor<string, []>("op_1319"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> var_1320_cast = reduce_mean(axes = var_1319, keep_dims = var_979, x = zero_mean_sq_15_cast);
            tensor<fp16, []> var_1321_to_fp16 = const()[name = tensor<string, []>("op_1321_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 1024]> var_1322_cast = add(x = var_1320_cast, y = var_1321_to_fp16);
            tensor<fp16, []> denom_15_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_15_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 1024]> denom_15_cast = rsqrt(epsilon = denom_15_epsilon_0_to_fp16, x = var_1322_cast);
            tensor<fp16, [2, 640, 1, 1024]> out_15_cast = mul(x = zero_mean_15_cast, y = denom_15_cast);
            tensor<fp16, [1, 640, 1, 1]> var_1326_to_fp16 = const()[name = tensor<string, []>("op_1326_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(43071232)))];
            tensor<fp16, [2, 640, 1, 1024]> var_1327_cast = add(x = out_15_cast, y = var_1326_to_fp16);
            tensor<fp16, [1, 640, 1, 1]> var_1329_to_fp16 = const()[name = tensor<string, []>("op_1329_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(43072576)))];
            tensor<fp16, [2, 640, 1, 1024]> hidden_states_47_cast = mul(x = var_1327_cast, y = var_1329_to_fp16);
            tensor<int32, [2]> var_1336 = const()[name = tensor<string, []>("op_1336"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1338 = const()[name = tensor<string, []>("op_1338"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_11_pad_type_0 = const()[name = tensor<string, []>("q_11_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_11_pad_0 = const()[name = tensor<string, []>("q_11_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> down_blocks_1_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(43073920)))];
            tensor<fp16, [2, 640, 1, 1024]> q_11_cast = conv(dilations = var_1338, groups = var_984, pad = q_11_pad_0, pad_type = q_11_pad_type_0, strides = var_1336, weight = down_blocks_1_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16, x = hidden_states_47_cast);
            tensor<int32, [2]> var_1342 = const()[name = tensor<string, []>("op_1342"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1344 = const()[name = tensor<string, []>("op_1344"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_21_pad_type_0 = const()[name = tensor<string, []>("k_21_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_21_pad_0 = const()[name = tensor<string, []>("k_21_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 1024, 1, 1]> down_blocks_1_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16"), val = tensor<fp16, [640, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(43893184)))];
            tensor<fp16, [2, 640, 1, 77]> k_21_cast = conv(dilations = var_1344, groups = var_984, pad = k_21_pad_0, pad_type = k_21_pad_type_0, strides = var_1342, weight = down_blocks_1_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [2]> var_1348 = const()[name = tensor<string, []>("op_1348"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1350 = const()[name = tensor<string, []>("op_1350"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_11_pad_type_0 = const()[name = tensor<string, []>("v_11_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_11_pad_0 = const()[name = tensor<string, []>("v_11_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 1024, 1, 1]> down_blocks_1_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16"), val = tensor<fp16, [640, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(45203968)))];
            tensor<fp16, [2, 640, 1, 77]> v_11_cast = conv(dilations = var_1350, groups = var_984, pad = v_11_pad_0, pad_type = v_11_pad_type_0, strides = var_1348, weight = down_blocks_1_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [4]> var_1354_begin_0 = const()[name = tensor<string, []>("op_1354_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1354_end_0 = const()[name = tensor<string, []>("op_1354_end_0"), val = tensor<int32, [4]>([2, 64, 1, 1024])];
            tensor<bool, [4]> var_1354_end_mask_0 = const()[name = tensor<string, []>("op_1354_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1354_cast = slice_by_index(begin = var_1354_begin_0, end = var_1354_end_0, end_mask = var_1354_end_mask_0, x = q_11_cast);
            tensor<int32, [4]> var_1358_begin_0 = const()[name = tensor<string, []>("op_1358_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_1358_end_0 = const()[name = tensor<string, []>("op_1358_end_0"), val = tensor<int32, [4]>([2, 128, 1, 1024])];
            tensor<bool, [4]> var_1358_end_mask_0 = const()[name = tensor<string, []>("op_1358_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1358_cast = slice_by_index(begin = var_1358_begin_0, end = var_1358_end_0, end_mask = var_1358_end_mask_0, x = q_11_cast);
            tensor<int32, [4]> var_1362_begin_0 = const()[name = tensor<string, []>("op_1362_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_1362_end_0 = const()[name = tensor<string, []>("op_1362_end_0"), val = tensor<int32, [4]>([2, 192, 1, 1024])];
            tensor<bool, [4]> var_1362_end_mask_0 = const()[name = tensor<string, []>("op_1362_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1362_cast = slice_by_index(begin = var_1362_begin_0, end = var_1362_end_0, end_mask = var_1362_end_mask_0, x = q_11_cast);
            tensor<int32, [4]> var_1366_begin_0 = const()[name = tensor<string, []>("op_1366_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_1366_end_0 = const()[name = tensor<string, []>("op_1366_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1024])];
            tensor<bool, [4]> var_1366_end_mask_0 = const()[name = tensor<string, []>("op_1366_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1366_cast = slice_by_index(begin = var_1366_begin_0, end = var_1366_end_0, end_mask = var_1366_end_mask_0, x = q_11_cast);
            tensor<int32, [4]> var_1370_begin_0 = const()[name = tensor<string, []>("op_1370_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_1370_end_0 = const()[name = tensor<string, []>("op_1370_end_0"), val = tensor<int32, [4]>([2, 320, 1, 1024])];
            tensor<bool, [4]> var_1370_end_mask_0 = const()[name = tensor<string, []>("op_1370_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1370_cast = slice_by_index(begin = var_1370_begin_0, end = var_1370_end_0, end_mask = var_1370_end_mask_0, x = q_11_cast);
            tensor<int32, [4]> var_1374_begin_0 = const()[name = tensor<string, []>("op_1374_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_1374_end_0 = const()[name = tensor<string, []>("op_1374_end_0"), val = tensor<int32, [4]>([2, 384, 1, 1024])];
            tensor<bool, [4]> var_1374_end_mask_0 = const()[name = tensor<string, []>("op_1374_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1374_cast = slice_by_index(begin = var_1374_begin_0, end = var_1374_end_0, end_mask = var_1374_end_mask_0, x = q_11_cast);
            tensor<int32, [4]> var_1378_begin_0 = const()[name = tensor<string, []>("op_1378_begin_0"), val = tensor<int32, [4]>([0, 384, 0, 0])];
            tensor<int32, [4]> var_1378_end_0 = const()[name = tensor<string, []>("op_1378_end_0"), val = tensor<int32, [4]>([2, 448, 1, 1024])];
            tensor<bool, [4]> var_1378_end_mask_0 = const()[name = tensor<string, []>("op_1378_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1378_cast = slice_by_index(begin = var_1378_begin_0, end = var_1378_end_0, end_mask = var_1378_end_mask_0, x = q_11_cast);
            tensor<int32, [4]> var_1382_begin_0 = const()[name = tensor<string, []>("op_1382_begin_0"), val = tensor<int32, [4]>([0, 448, 0, 0])];
            tensor<int32, [4]> var_1382_end_0 = const()[name = tensor<string, []>("op_1382_end_0"), val = tensor<int32, [4]>([2, 512, 1, 1024])];
            tensor<bool, [4]> var_1382_end_mask_0 = const()[name = tensor<string, []>("op_1382_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1382_cast = slice_by_index(begin = var_1382_begin_0, end = var_1382_end_0, end_mask = var_1382_end_mask_0, x = q_11_cast);
            tensor<int32, [4]> var_1386_begin_0 = const()[name = tensor<string, []>("op_1386_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_1386_end_0 = const()[name = tensor<string, []>("op_1386_end_0"), val = tensor<int32, [4]>([2, 576, 1, 1024])];
            tensor<bool, [4]> var_1386_end_mask_0 = const()[name = tensor<string, []>("op_1386_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1386_cast = slice_by_index(begin = var_1386_begin_0, end = var_1386_end_0, end_mask = var_1386_end_mask_0, x = q_11_cast);
            tensor<int32, [4]> var_1390_begin_0 = const()[name = tensor<string, []>("op_1390_begin_0"), val = tensor<int32, [4]>([0, 576, 0, 0])];
            tensor<int32, [4]> var_1390_end_0 = const()[name = tensor<string, []>("op_1390_end_0"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<bool, [4]> var_1390_end_mask_0 = const()[name = tensor<string, []>("op_1390_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1390_cast = slice_by_index(begin = var_1390_begin_0, end = var_1390_end_0, end_mask = var_1390_end_mask_0, x = q_11_cast);
            tensor<int32, [4]> k_23_perm_0 = const()[name = tensor<string, []>("k_23_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_1397_begin_0 = const()[name = tensor<string, []>("op_1397_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1397_end_0 = const()[name = tensor<string, []>("op_1397_end_0"), val = tensor<int32, [4]>([2, 77, 1, 64])];
            tensor<bool, [4]> var_1397_end_mask_0 = const()[name = tensor<string, []>("op_1397_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 640]> transpose_72 = transpose(perm = k_23_perm_0, x = k_21_cast);
            tensor<fp16, [2, 77, 1, 64]> var_1397_cast = slice_by_index(begin = var_1397_begin_0, end = var_1397_end_0, end_mask = var_1397_end_mask_0, x = transpose_72);
            tensor<int32, [4]> var_1401_begin_0 = const()[name = tensor<string, []>("op_1401_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 64])];
            tensor<int32, [4]> var_1401_end_0 = const()[name = tensor<string, []>("op_1401_end_0"), val = tensor<int32, [4]>([2, 77, 1, 128])];
            tensor<bool, [4]> var_1401_end_mask_0 = const()[name = tensor<string, []>("op_1401_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_1401_cast = slice_by_index(begin = var_1401_begin_0, end = var_1401_end_0, end_mask = var_1401_end_mask_0, x = transpose_72);
            tensor<int32, [4]> var_1405_begin_0 = const()[name = tensor<string, []>("op_1405_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 128])];
            tensor<int32, [4]> var_1405_end_0 = const()[name = tensor<string, []>("op_1405_end_0"), val = tensor<int32, [4]>([2, 77, 1, 192])];
            tensor<bool, [4]> var_1405_end_mask_0 = const()[name = tensor<string, []>("op_1405_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_1405_cast = slice_by_index(begin = var_1405_begin_0, end = var_1405_end_0, end_mask = var_1405_end_mask_0, x = transpose_72);
            tensor<int32, [4]> var_1409_begin_0 = const()[name = tensor<string, []>("op_1409_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 192])];
            tensor<int32, [4]> var_1409_end_0 = const()[name = tensor<string, []>("op_1409_end_0"), val = tensor<int32, [4]>([2, 77, 1, 256])];
            tensor<bool, [4]> var_1409_end_mask_0 = const()[name = tensor<string, []>("op_1409_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_1409_cast = slice_by_index(begin = var_1409_begin_0, end = var_1409_end_0, end_mask = var_1409_end_mask_0, x = transpose_72);
            tensor<int32, [4]> var_1413_begin_0 = const()[name = tensor<string, []>("op_1413_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 256])];
            tensor<int32, [4]> var_1413_end_0 = const()[name = tensor<string, []>("op_1413_end_0"), val = tensor<int32, [4]>([2, 77, 1, 320])];
            tensor<bool, [4]> var_1413_end_mask_0 = const()[name = tensor<string, []>("op_1413_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_1413_cast = slice_by_index(begin = var_1413_begin_0, end = var_1413_end_0, end_mask = var_1413_end_mask_0, x = transpose_72);
            tensor<int32, [4]> var_1417_begin_0 = const()[name = tensor<string, []>("op_1417_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_1417_end_0 = const()[name = tensor<string, []>("op_1417_end_0"), val = tensor<int32, [4]>([2, 77, 1, 384])];
            tensor<bool, [4]> var_1417_end_mask_0 = const()[name = tensor<string, []>("op_1417_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_1417_cast = slice_by_index(begin = var_1417_begin_0, end = var_1417_end_0, end_mask = var_1417_end_mask_0, x = transpose_72);
            tensor<int32, [4]> var_1421_begin_0 = const()[name = tensor<string, []>("op_1421_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 384])];
            tensor<int32, [4]> var_1421_end_0 = const()[name = tensor<string, []>("op_1421_end_0"), val = tensor<int32, [4]>([2, 77, 1, 448])];
            tensor<bool, [4]> var_1421_end_mask_0 = const()[name = tensor<string, []>("op_1421_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_1421_cast = slice_by_index(begin = var_1421_begin_0, end = var_1421_end_0, end_mask = var_1421_end_mask_0, x = transpose_72);
            tensor<int32, [4]> var_1425_begin_0 = const()[name = tensor<string, []>("op_1425_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 448])];
            tensor<int32, [4]> var_1425_end_0 = const()[name = tensor<string, []>("op_1425_end_0"), val = tensor<int32, [4]>([2, 77, 1, 512])];
            tensor<bool, [4]> var_1425_end_mask_0 = const()[name = tensor<string, []>("op_1425_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_1425_cast = slice_by_index(begin = var_1425_begin_0, end = var_1425_end_0, end_mask = var_1425_end_mask_0, x = transpose_72);
            tensor<int32, [4]> var_1429_begin_0 = const()[name = tensor<string, []>("op_1429_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 512])];
            tensor<int32, [4]> var_1429_end_0 = const()[name = tensor<string, []>("op_1429_end_0"), val = tensor<int32, [4]>([2, 77, 1, 576])];
            tensor<bool, [4]> var_1429_end_mask_0 = const()[name = tensor<string, []>("op_1429_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_1429_cast = slice_by_index(begin = var_1429_begin_0, end = var_1429_end_0, end_mask = var_1429_end_mask_0, x = transpose_72);
            tensor<int32, [4]> var_1433_begin_0 = const()[name = tensor<string, []>("op_1433_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 576])];
            tensor<int32, [4]> var_1433_end_0 = const()[name = tensor<string, []>("op_1433_end_0"), val = tensor<int32, [4]>([2, 77, 1, 640])];
            tensor<bool, [4]> var_1433_end_mask_0 = const()[name = tensor<string, []>("op_1433_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_1433_cast = slice_by_index(begin = var_1433_begin_0, end = var_1433_end_0, end_mask = var_1433_end_mask_0, x = transpose_72);
            tensor<int32, [4]> var_1435_begin_0 = const()[name = tensor<string, []>("op_1435_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1435_end_0 = const()[name = tensor<string, []>("op_1435_end_0"), val = tensor<int32, [4]>([2, 64, 1, 77])];
            tensor<bool, [4]> var_1435_end_mask_0 = const()[name = tensor<string, []>("op_1435_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_1435_cast = slice_by_index(begin = var_1435_begin_0, end = var_1435_end_0, end_mask = var_1435_end_mask_0, x = v_11_cast);
            tensor<int32, [4]> var_1439_begin_0 = const()[name = tensor<string, []>("op_1439_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_1439_end_0 = const()[name = tensor<string, []>("op_1439_end_0"), val = tensor<int32, [4]>([2, 128, 1, 77])];
            tensor<bool, [4]> var_1439_end_mask_0 = const()[name = tensor<string, []>("op_1439_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_1439_cast = slice_by_index(begin = var_1439_begin_0, end = var_1439_end_0, end_mask = var_1439_end_mask_0, x = v_11_cast);
            tensor<int32, [4]> var_1443_begin_0 = const()[name = tensor<string, []>("op_1443_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_1443_end_0 = const()[name = tensor<string, []>("op_1443_end_0"), val = tensor<int32, [4]>([2, 192, 1, 77])];
            tensor<bool, [4]> var_1443_end_mask_0 = const()[name = tensor<string, []>("op_1443_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_1443_cast = slice_by_index(begin = var_1443_begin_0, end = var_1443_end_0, end_mask = var_1443_end_mask_0, x = v_11_cast);
            tensor<int32, [4]> var_1447_begin_0 = const()[name = tensor<string, []>("op_1447_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_1447_end_0 = const()[name = tensor<string, []>("op_1447_end_0"), val = tensor<int32, [4]>([2, 256, 1, 77])];
            tensor<bool, [4]> var_1447_end_mask_0 = const()[name = tensor<string, []>("op_1447_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_1447_cast = slice_by_index(begin = var_1447_begin_0, end = var_1447_end_0, end_mask = var_1447_end_mask_0, x = v_11_cast);
            tensor<int32, [4]> var_1451_begin_0 = const()[name = tensor<string, []>("op_1451_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_1451_end_0 = const()[name = tensor<string, []>("op_1451_end_0"), val = tensor<int32, [4]>([2, 320, 1, 77])];
            tensor<bool, [4]> var_1451_end_mask_0 = const()[name = tensor<string, []>("op_1451_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_1451_cast = slice_by_index(begin = var_1451_begin_0, end = var_1451_end_0, end_mask = var_1451_end_mask_0, x = v_11_cast);
            tensor<int32, [4]> var_1455_begin_0 = const()[name = tensor<string, []>("op_1455_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_1455_end_0 = const()[name = tensor<string, []>("op_1455_end_0"), val = tensor<int32, [4]>([2, 384, 1, 77])];
            tensor<bool, [4]> var_1455_end_mask_0 = const()[name = tensor<string, []>("op_1455_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_1455_cast = slice_by_index(begin = var_1455_begin_0, end = var_1455_end_0, end_mask = var_1455_end_mask_0, x = v_11_cast);
            tensor<int32, [4]> var_1459_begin_0 = const()[name = tensor<string, []>("op_1459_begin_0"), val = tensor<int32, [4]>([0, 384, 0, 0])];
            tensor<int32, [4]> var_1459_end_0 = const()[name = tensor<string, []>("op_1459_end_0"), val = tensor<int32, [4]>([2, 448, 1, 77])];
            tensor<bool, [4]> var_1459_end_mask_0 = const()[name = tensor<string, []>("op_1459_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_1459_cast = slice_by_index(begin = var_1459_begin_0, end = var_1459_end_0, end_mask = var_1459_end_mask_0, x = v_11_cast);
            tensor<int32, [4]> var_1463_begin_0 = const()[name = tensor<string, []>("op_1463_begin_0"), val = tensor<int32, [4]>([0, 448, 0, 0])];
            tensor<int32, [4]> var_1463_end_0 = const()[name = tensor<string, []>("op_1463_end_0"), val = tensor<int32, [4]>([2, 512, 1, 77])];
            tensor<bool, [4]> var_1463_end_mask_0 = const()[name = tensor<string, []>("op_1463_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_1463_cast = slice_by_index(begin = var_1463_begin_0, end = var_1463_end_0, end_mask = var_1463_end_mask_0, x = v_11_cast);
            tensor<int32, [4]> var_1467_begin_0 = const()[name = tensor<string, []>("op_1467_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_1467_end_0 = const()[name = tensor<string, []>("op_1467_end_0"), val = tensor<int32, [4]>([2, 576, 1, 77])];
            tensor<bool, [4]> var_1467_end_mask_0 = const()[name = tensor<string, []>("op_1467_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_1467_cast = slice_by_index(begin = var_1467_begin_0, end = var_1467_end_0, end_mask = var_1467_end_mask_0, x = v_11_cast);
            tensor<int32, [4]> var_1471_begin_0 = const()[name = tensor<string, []>("op_1471_begin_0"), val = tensor<int32, [4]>([0, 576, 0, 0])];
            tensor<int32, [4]> var_1471_end_0 = const()[name = tensor<string, []>("op_1471_end_0"), val = tensor<int32, [4]>([2, 640, 1, 77])];
            tensor<bool, [4]> var_1471_end_mask_0 = const()[name = tensor<string, []>("op_1471_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_1471_cast = slice_by_index(begin = var_1471_begin_0, end = var_1471_end_0, end_mask = var_1471_end_mask_0, x = v_11_cast);
            tensor<string, []> var_1475_equation_0 = const()[name = tensor<string, []>("op_1475_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_1475_cast = einsum(equation = var_1475_equation_0, values = (var_1397_cast, var_1354_cast));
            tensor<fp16, []> var_1476_to_fp16 = const()[name = tensor<string, []>("op_1476_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_61_cast = mul(x = var_1475_cast, y = var_1476_to_fp16);
            tensor<string, []> var_1479_equation_0 = const()[name = tensor<string, []>("op_1479_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_1479_cast = einsum(equation = var_1479_equation_0, values = (var_1401_cast, var_1358_cast));
            tensor<fp16, []> var_1480_to_fp16 = const()[name = tensor<string, []>("op_1480_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_63_cast = mul(x = var_1479_cast, y = var_1480_to_fp16);
            tensor<string, []> var_1483_equation_0 = const()[name = tensor<string, []>("op_1483_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_1483_cast = einsum(equation = var_1483_equation_0, values = (var_1405_cast, var_1362_cast));
            tensor<fp16, []> var_1484_to_fp16 = const()[name = tensor<string, []>("op_1484_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_65_cast = mul(x = var_1483_cast, y = var_1484_to_fp16);
            tensor<string, []> var_1487_equation_0 = const()[name = tensor<string, []>("op_1487_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_1487_cast = einsum(equation = var_1487_equation_0, values = (var_1409_cast, var_1366_cast));
            tensor<fp16, []> var_1488_to_fp16 = const()[name = tensor<string, []>("op_1488_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_67_cast = mul(x = var_1487_cast, y = var_1488_to_fp16);
            tensor<string, []> var_1491_equation_0 = const()[name = tensor<string, []>("op_1491_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_1491_cast = einsum(equation = var_1491_equation_0, values = (var_1413_cast, var_1370_cast));
            tensor<fp16, []> var_1492_to_fp16 = const()[name = tensor<string, []>("op_1492_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_69_cast = mul(x = var_1491_cast, y = var_1492_to_fp16);
            tensor<string, []> var_1495_equation_0 = const()[name = tensor<string, []>("op_1495_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_1495_cast = einsum(equation = var_1495_equation_0, values = (var_1417_cast, var_1374_cast));
            tensor<fp16, []> var_1496_to_fp16 = const()[name = tensor<string, []>("op_1496_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_71_cast = mul(x = var_1495_cast, y = var_1496_to_fp16);
            tensor<string, []> var_1499_equation_0 = const()[name = tensor<string, []>("op_1499_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_1499_cast = einsum(equation = var_1499_equation_0, values = (var_1421_cast, var_1378_cast));
            tensor<fp16, []> var_1500_to_fp16 = const()[name = tensor<string, []>("op_1500_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_73_cast = mul(x = var_1499_cast, y = var_1500_to_fp16);
            tensor<string, []> var_1503_equation_0 = const()[name = tensor<string, []>("op_1503_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_1503_cast = einsum(equation = var_1503_equation_0, values = (var_1425_cast, var_1382_cast));
            tensor<fp16, []> var_1504_to_fp16 = const()[name = tensor<string, []>("op_1504_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_75_cast = mul(x = var_1503_cast, y = var_1504_to_fp16);
            tensor<string, []> var_1507_equation_0 = const()[name = tensor<string, []>("op_1507_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_1507_cast = einsum(equation = var_1507_equation_0, values = (var_1429_cast, var_1386_cast));
            tensor<fp16, []> var_1508_to_fp16 = const()[name = tensor<string, []>("op_1508_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_77_cast = mul(x = var_1507_cast, y = var_1508_to_fp16);
            tensor<string, []> var_1511_equation_0 = const()[name = tensor<string, []>("op_1511_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_1511_cast = einsum(equation = var_1511_equation_0, values = (var_1433_cast, var_1390_cast));
            tensor<fp16, []> var_1512_to_fp16 = const()[name = tensor<string, []>("op_1512_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_79_cast = mul(x = var_1511_cast, y = var_1512_to_fp16);
            tensor<fp16, [2, 77, 1, 1024]> var_1514_cast = softmax(axis = var_984, x = aw_61_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_1515_cast = softmax(axis = var_984, x = aw_63_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_1516_cast = softmax(axis = var_984, x = aw_65_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_1517_cast = softmax(axis = var_984, x = aw_67_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_1518_cast = softmax(axis = var_984, x = aw_69_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_1519_cast = softmax(axis = var_984, x = aw_71_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_1520_cast = softmax(axis = var_984, x = aw_73_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_1521_cast = softmax(axis = var_984, x = aw_75_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_1522_cast = softmax(axis = var_984, x = aw_77_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_1523_cast = softmax(axis = var_984, x = aw_79_cast);
            tensor<string, []> var_1525_equation_0 = const()[name = tensor<string, []>("op_1525_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_1525_cast = einsum(equation = var_1525_equation_0, values = (var_1435_cast, var_1514_cast));
            tensor<string, []> var_1527_equation_0 = const()[name = tensor<string, []>("op_1527_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_1527_cast = einsum(equation = var_1527_equation_0, values = (var_1439_cast, var_1515_cast));
            tensor<string, []> var_1529_equation_0 = const()[name = tensor<string, []>("op_1529_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_1529_cast = einsum(equation = var_1529_equation_0, values = (var_1443_cast, var_1516_cast));
            tensor<string, []> var_1531_equation_0 = const()[name = tensor<string, []>("op_1531_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_1531_cast = einsum(equation = var_1531_equation_0, values = (var_1447_cast, var_1517_cast));
            tensor<string, []> var_1533_equation_0 = const()[name = tensor<string, []>("op_1533_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_1533_cast = einsum(equation = var_1533_equation_0, values = (var_1451_cast, var_1518_cast));
            tensor<string, []> var_1535_equation_0 = const()[name = tensor<string, []>("op_1535_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_1535_cast = einsum(equation = var_1535_equation_0, values = (var_1455_cast, var_1519_cast));
            tensor<string, []> var_1537_equation_0 = const()[name = tensor<string, []>("op_1537_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_1537_cast = einsum(equation = var_1537_equation_0, values = (var_1459_cast, var_1520_cast));
            tensor<string, []> var_1539_equation_0 = const()[name = tensor<string, []>("op_1539_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_1539_cast = einsum(equation = var_1539_equation_0, values = (var_1463_cast, var_1521_cast));
            tensor<string, []> var_1541_equation_0 = const()[name = tensor<string, []>("op_1541_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_1541_cast = einsum(equation = var_1541_equation_0, values = (var_1467_cast, var_1522_cast));
            tensor<string, []> var_1543_equation_0 = const()[name = tensor<string, []>("op_1543_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_1543_cast = einsum(equation = var_1543_equation_0, values = (var_1471_cast, var_1523_cast));
            tensor<bool, []> input_81_interleave_0 = const()[name = tensor<string, []>("input_81_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 640, 1, 1024]> input_81_cast = concat(axis = var_984, interleave = input_81_interleave_0, values = (var_1525_cast, var_1527_cast, var_1529_cast, var_1531_cast, var_1533_cast, var_1535_cast, var_1537_cast, var_1539_cast, var_1541_cast, var_1543_cast));
            tensor<int32, [2]> var_1549 = const()[name = tensor<string, []>("op_1549"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1551 = const()[name = tensor<string, []>("op_1551"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_1553_pad_type_0 = const()[name = tensor<string, []>("op_1553_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_1553_pad_0 = const()[name = tensor<string, []>("op_1553_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> down_blocks_1_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(46514752)))];
            tensor<fp16, [640]> down_blocks_1_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(47334016)))];
            tensor<fp16, [2, 640, 1, 1024]> var_1553_cast = conv(bias = down_blocks_1_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16, dilations = var_1551, groups = var_984, pad = var_1553_pad_0, pad_type = var_1553_pad_type_0, strides = var_1549, weight = down_blocks_1_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16, x = input_81_cast);
            tensor<fp16, [2, 640, 1, 1024]> inputs_17_cast = add(x = var_1553_cast, y = inputs_15_cast);
            tensor<int32, [1]> var_1557 = const()[name = tensor<string, []>("op_1557"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> channels_mean_17_cast = reduce_mean(axes = var_1557, keep_dims = var_979, x = inputs_17_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_17_cast = sub(x = inputs_17_cast, y = channels_mean_17_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_sq_17_cast = mul(x = zero_mean_17_cast, y = zero_mean_17_cast);
            tensor<int32, [1]> var_1561 = const()[name = tensor<string, []>("op_1561"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> var_1562_cast = reduce_mean(axes = var_1561, keep_dims = var_979, x = zero_mean_sq_17_cast);
            tensor<fp16, []> var_1563_to_fp16 = const()[name = tensor<string, []>("op_1563_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 1024]> var_1564_cast = add(x = var_1562_cast, y = var_1563_to_fp16);
            tensor<fp16, []> denom_17_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_17_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 1024]> denom_17_cast = rsqrt(epsilon = denom_17_epsilon_0_to_fp16, x = var_1564_cast);
            tensor<fp16, [2, 640, 1, 1024]> out_17_cast = mul(x = zero_mean_17_cast, y = denom_17_cast);
            tensor<fp16, [1, 640, 1, 1]> var_1568_to_fp16 = const()[name = tensor<string, []>("op_1568_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(47335360)))];
            tensor<fp16, [2, 640, 1, 1024]> var_1569_cast = add(x = out_17_cast, y = var_1568_to_fp16);
            tensor<fp16, [1, 640, 1, 1]> var_1571_to_fp16 = const()[name = tensor<string, []>("op_1571_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(47336704)))];
            tensor<fp16, [2, 640, 1, 1024]> input_83_cast = mul(x = var_1569_cast, y = var_1571_to_fp16);
            tensor<int32, [2]> var_1579 = const()[name = tensor<string, []>("op_1579"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1581 = const()[name = tensor<string, []>("op_1581"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_1583_pad_type_0 = const()[name = tensor<string, []>("op_1583_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_1583_pad_0 = const()[name = tensor<string, []>("op_1583_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [5120, 640, 1, 1]> down_blocks_1_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16"), val = tensor<fp16, [5120, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(47338048)))];
            tensor<fp16, [5120]> down_blocks_1_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16"), val = tensor<fp16, [5120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(53891712)))];
            tensor<fp16, [2, 5120, 1, 1024]> var_1583_cast = conv(bias = down_blocks_1_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16, dilations = var_1581, groups = var_984, pad = var_1583_pad_0, pad_type = var_1583_pad_type_0, strides = var_1579, weight = down_blocks_1_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16, x = input_83_cast);
            tensor<int32, [2]> var_1584_split_sizes_0 = const()[name = tensor<string, []>("op_1584_split_sizes_0"), val = tensor<int32, [2]>([2560, 2560])];
            tensor<int32, []> var_1584_axis_0 = const()[name = tensor<string, []>("op_1584_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [2, 2560, 1, 1024]> var_1584_cast_0, tensor<fp16, [2, 2560, 1, 1024]> var_1584_cast_1 = split(axis = var_1584_axis_0, split_sizes = var_1584_split_sizes_0, x = var_1583_cast);
            tensor<string, []> var_1586_mode_0 = const()[name = tensor<string, []>("op_1586_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [2, 2560, 1, 1024]> var_1586_cast = gelu(mode = var_1586_mode_0, x = var_1584_cast_1);
            tensor<fp16, [2, 2560, 1, 1024]> input_85_cast = mul(x = var_1584_cast_0, y = var_1586_cast);
            tensor<int32, [2]> var_1590 = const()[name = tensor<string, []>("op_1590"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1592 = const()[name = tensor<string, []>("op_1592"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_1594_pad_type_0 = const()[name = tensor<string, []>("op_1594_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_1594_pad_0 = const()[name = tensor<string, []>("op_1594_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 2560, 1, 1]> down_blocks_1_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16"), val = tensor<fp16, [640, 2560, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(53902016)))];
            tensor<fp16, [640]> down_blocks_1_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(57178880)))];
            tensor<fp16, [2, 640, 1, 1024]> var_1594_cast = conv(bias = down_blocks_1_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16, dilations = var_1592, groups = var_984, pad = var_1594_pad_0, pad_type = var_1594_pad_type_0, strides = var_1590, weight = down_blocks_1_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16, x = input_85_cast);
            tensor<fp16, [2, 640, 1, 1024]> hidden_states_51_cast = add(x = var_1594_cast, y = inputs_17_cast);
            tensor<int32, [4]> var_1596 = const()[name = tensor<string, []>("op_1596"), val = tensor<int32, [4]>([2, 640, 32, 32])];
            tensor<fp16, [2, 640, 32, 32]> input_87_cast = reshape(shape = var_1596, x = hidden_states_51_cast);
            tensor<int32, [2]> var_1600 = const()[name = tensor<string, []>("op_1600"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1602 = const()[name = tensor<string, []>("op_1602"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_53_pad_type_0 = const()[name = tensor<string, []>("hidden_states_53_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_53_pad_0 = const()[name = tensor<string, []>("hidden_states_53_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> down_blocks_1_attentions_0_proj_out_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_proj_out_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(57180224)))];
            tensor<fp16, [640]> down_blocks_1_attentions_0_proj_out_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_proj_out_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(57999488)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_53_cast = conv(bias = down_blocks_1_attentions_0_proj_out_bias_to_fp16, dilations = var_1602, groups = var_984, pad = hidden_states_53_pad_0, pad_type = hidden_states_53_pad_type_0, strides = var_1600, weight = down_blocks_1_attentions_0_proj_out_weight_to_fp16, x = input_87_cast);
            tensor<fp16, [2, 640, 32, 32]> input_89_cast_1 = add(x = hidden_states_53_cast, y = hidden_states_41_cast);
            tensor<int32, [5]> reshape_36_shape_0 = const()[name = tensor<string, []>("reshape_36_shape_0"), val = tensor<int32, [5]>([2, 32, 20, 32, 32])];
            tensor<fp16, [2, 32, 20, 32, 32]> reshape_36_cast = reshape(shape = reshape_36_shape_0, x = input_89_cast_1);
            tensor<int32, [3]> reduce_mean_27_axes_0 = const()[name = tensor<string, []>("reduce_mean_27_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_27_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_27_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_27_cast = reduce_mean(axes = reduce_mean_27_axes_0, keep_dims = reduce_mean_27_keep_dims_0, x = reshape_36_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> sub_18_cast = sub(x = reshape_36_cast, y = reduce_mean_27_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> square_9_cast = square(x = sub_18_cast);
            tensor<int32, [3]> reduce_mean_29_axes_0 = const()[name = tensor<string, []>("reduce_mean_29_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_29_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_29_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_29_cast = reduce_mean(axes = reduce_mean_29_axes_0, keep_dims = reduce_mean_29_keep_dims_0, x = square_9_cast);
            tensor<fp16, []> add_18_y_0_to_fp16 = const()[name = tensor<string, []>("add_18_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_18_cast = add(x = reduce_mean_29_cast, y = add_18_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_9_cast = sqrt(x = add_18_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> real_div_9_cast = real_div(x = sub_18_cast, y = sqrt_9_cast);
            tensor<int32, [4]> reshape_37_shape_0 = const()[name = tensor<string, []>("reshape_37_shape_0"), val = tensor<int32, [4]>([2, 640, 32, 32])];
            tensor<fp16, [2, 640, 32, 32]> reshape_37_cast = reshape(shape = reshape_37_shape_0, x = real_div_9_cast);
            tensor<fp16, [640]> add_19_mean_0_to_fp16 = const()[name = tensor<string, []>("add_19_mean_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(58000832)))];
            tensor<fp16, [640]> add_19_variance_0_to_fp16 = const()[name = tensor<string, []>("add_19_variance_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(58002176)))];
            tensor<fp16, [640]> add_19_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_19_gamma_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(58003520)))];
            tensor<fp16, [640]> add_19_beta_0_to_fp16 = const()[name = tensor<string, []>("add_19_beta_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(58004864)))];
            tensor<fp16, []> add_19_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_19_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 640, 32, 32]> add_19_cast = batch_norm(beta = add_19_beta_0_to_fp16, epsilon = add_19_epsilon_0_to_fp16, gamma = add_19_gamma_0_to_fp16, mean = add_19_mean_0_to_fp16, variance = add_19_variance_0_to_fp16, x = reshape_37_cast);
            tensor<fp16, [2, 640, 32, 32]> input_93_cast = silu(x = add_19_cast);
            tensor<int32, [2]> var_1617 = const()[name = tensor<string, []>("op_1617"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1619 = const()[name = tensor<string, []>("op_1619"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_55_pad_type_0 = const()[name = tensor<string, []>("hidden_states_55_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_55_pad_0 = const()[name = tensor<string, []>("hidden_states_55_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [640, 640, 3, 3]> down_blocks_1_resnets_1_conv1_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_resnets_1_conv1_weight_to_fp16"), val = tensor<fp16, [640, 640, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(58006208)))];
            tensor<fp16, [640]> down_blocks_1_resnets_1_conv1_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_resnets_1_conv1_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(65379072)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_55_cast = conv(bias = down_blocks_1_resnets_1_conv1_bias_to_fp16, dilations = var_1619, groups = var_984, pad = hidden_states_55_pad_0, pad_type = hidden_states_55_pad_type_0, strides = var_1617, weight = down_blocks_1_resnets_1_conv1_weight_to_fp16, x = input_93_cast);
            tensor<int32, [2]> var_1625 = const()[name = tensor<string, []>("op_1625"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1627 = const()[name = tensor<string, []>("op_1627"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_7_pad_type_0 = const()[name = tensor<string, []>("temb_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_7_pad_0 = const()[name = tensor<string, []>("temb_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 1280, 1, 1]> down_blocks_1_resnets_1_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_resnets_1_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [640, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(65380416)))];
            tensor<fp16, [640]> down_blocks_1_resnets_1_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_resnets_1_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(67018880)))];
            tensor<fp16, [2, 640, 1, 1]> temb_7_cast = conv(bias = down_blocks_1_resnets_1_time_emb_proj_bias_to_fp16, dilations = var_1627, groups = var_984, pad = temb_7_pad_0, pad_type = temb_7_pad_type_0, strides = var_1625, weight = down_blocks_1_resnets_1_time_emb_proj_weight_to_fp16, x = input_15_cast_1);
            tensor<fp16, [2, 640, 32, 32]> input_97_cast = add(x = hidden_states_55_cast, y = temb_7_cast);
            tensor<int32, [5]> reshape_40_shape_0 = const()[name = tensor<string, []>("reshape_40_shape_0"), val = tensor<int32, [5]>([2, 32, 20, 32, 32])];
            tensor<fp16, [2, 32, 20, 32, 32]> reshape_40_cast = reshape(shape = reshape_40_shape_0, x = input_97_cast);
            tensor<int32, [3]> reduce_mean_30_axes_0 = const()[name = tensor<string, []>("reduce_mean_30_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_30_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_30_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_30_cast = reduce_mean(axes = reduce_mean_30_axes_0, keep_dims = reduce_mean_30_keep_dims_0, x = reshape_40_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> sub_20_cast = sub(x = reshape_40_cast, y = reduce_mean_30_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> square_10_cast = square(x = sub_20_cast);
            tensor<int32, [3]> reduce_mean_32_axes_0 = const()[name = tensor<string, []>("reduce_mean_32_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_32_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_32_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_32_cast = reduce_mean(axes = reduce_mean_32_axes_0, keep_dims = reduce_mean_32_keep_dims_0, x = square_10_cast);
            tensor<fp16, []> add_20_y_0_to_fp16 = const()[name = tensor<string, []>("add_20_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_20_cast = add(x = reduce_mean_32_cast, y = add_20_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_10_cast = sqrt(x = add_20_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> real_div_10_cast = real_div(x = sub_20_cast, y = sqrt_10_cast);
            tensor<int32, [4]> reshape_41_shape_0 = const()[name = tensor<string, []>("reshape_41_shape_0"), val = tensor<int32, [4]>([2, 640, 32, 32])];
            tensor<fp16, [2, 640, 32, 32]> reshape_41_cast = reshape(shape = reshape_41_shape_0, x = real_div_10_cast);
            tensor<fp16, [640]> add_21_mean_0_to_fp16 = const()[name = tensor<string, []>("add_21_mean_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(67020224)))];
            tensor<fp16, [640]> add_21_variance_0_to_fp16 = const()[name = tensor<string, []>("add_21_variance_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(67021568)))];
            tensor<fp16, [640]> add_21_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_21_gamma_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(67022912)))];
            tensor<fp16, [640]> add_21_beta_0_to_fp16 = const()[name = tensor<string, []>("add_21_beta_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(67024256)))];
            tensor<fp16, []> add_21_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_21_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 640, 32, 32]> add_21_cast = batch_norm(beta = add_21_beta_0_to_fp16, epsilon = add_21_epsilon_0_to_fp16, gamma = add_21_gamma_0_to_fp16, mean = add_21_mean_0_to_fp16, variance = add_21_variance_0_to_fp16, x = reshape_41_cast);
            tensor<fp16, [2, 640, 32, 32]> input_101_cast = silu(x = add_21_cast);
            tensor<int32, [2]> var_1637 = const()[name = tensor<string, []>("op_1637"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1639 = const()[name = tensor<string, []>("op_1639"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_57_pad_type_0 = const()[name = tensor<string, []>("hidden_states_57_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_57_pad_0 = const()[name = tensor<string, []>("hidden_states_57_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [640, 640, 3, 3]> down_blocks_1_resnets_1_conv2_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_resnets_1_conv2_weight_to_fp16"), val = tensor<fp16, [640, 640, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(67025600)))];
            tensor<fp16, [640]> down_blocks_1_resnets_1_conv2_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_resnets_1_conv2_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(74398464)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_57_cast = conv(bias = down_blocks_1_resnets_1_conv2_bias_to_fp16, dilations = var_1639, groups = var_984, pad = hidden_states_57_pad_0, pad_type = hidden_states_57_pad_type_0, strides = var_1637, weight = down_blocks_1_resnets_1_conv2_weight_to_fp16, x = input_101_cast);
            tensor<fp16, [2, 640, 32, 32]> hidden_states_59_cast = add(x = input_89_cast_1, y = hidden_states_57_cast);
            tensor<int32, [5]> reshape_44_shape_0 = const()[name = tensor<string, []>("reshape_44_shape_0"), val = tensor<int32, [5]>([2, 32, 20, 32, 32])];
            tensor<fp16, [2, 32, 20, 32, 32]> reshape_44_cast = reshape(shape = reshape_44_shape_0, x = hidden_states_59_cast);
            tensor<int32, [3]> reduce_mean_33_axes_0 = const()[name = tensor<string, []>("reduce_mean_33_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_33_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_33_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_33_cast = reduce_mean(axes = reduce_mean_33_axes_0, keep_dims = reduce_mean_33_keep_dims_0, x = reshape_44_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> sub_22_cast = sub(x = reshape_44_cast, y = reduce_mean_33_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> square_11_cast = square(x = sub_22_cast);
            tensor<int32, [3]> reduce_mean_35_axes_0 = const()[name = tensor<string, []>("reduce_mean_35_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_35_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_35_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_35_cast = reduce_mean(axes = reduce_mean_35_axes_0, keep_dims = reduce_mean_35_keep_dims_0, x = square_11_cast);
            tensor<fp16, []> add_22_y_0_to_fp16 = const()[name = tensor<string, []>("add_22_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_22_cast = add(x = reduce_mean_35_cast, y = add_22_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_11_cast = sqrt(x = add_22_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> real_div_11_cast = real_div(x = sub_22_cast, y = sqrt_11_cast);
            tensor<int32, [4]> reshape_45_shape_0 = const()[name = tensor<string, []>("reshape_45_shape_0"), val = tensor<int32, [4]>([2, 640, 32, 32])];
            tensor<fp16, [2, 640, 32, 32]> reshape_45_cast = reshape(shape = reshape_45_shape_0, x = real_div_11_cast);
            tensor<fp16, [640]> add_23_mean_0_to_fp16 = const()[name = tensor<string, []>("add_23_mean_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(74399808)))];
            tensor<fp16, [640]> add_23_variance_0_to_fp16 = const()[name = tensor<string, []>("add_23_variance_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(74401152)))];
            tensor<fp16, [640]> add_23_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_23_gamma_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(74402496)))];
            tensor<fp16, [640]> add_23_beta_0_to_fp16 = const()[name = tensor<string, []>("add_23_beta_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(74403840)))];
            tensor<fp16, []> add_23_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_23_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 640, 32, 32]> add_23_cast = batch_norm(beta = add_23_beta_0_to_fp16, epsilon = add_23_epsilon_0_to_fp16, gamma = add_23_gamma_0_to_fp16, mean = add_23_mean_0_to_fp16, variance = add_23_variance_0_to_fp16, x = reshape_45_cast);
            tensor<int32, [2]> var_1659 = const()[name = tensor<string, []>("op_1659"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1661 = const()[name = tensor<string, []>("op_1661"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_61_pad_type_0 = const()[name = tensor<string, []>("hidden_states_61_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_61_pad_0 = const()[name = tensor<string, []>("hidden_states_61_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> down_blocks_1_attentions_1_proj_in_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_proj_in_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(74405184)))];
            tensor<fp16, [640]> down_blocks_1_attentions_1_proj_in_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_proj_in_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(75224448)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_61_cast = conv(bias = down_blocks_1_attentions_1_proj_in_bias_to_fp16, dilations = var_1661, groups = var_984, pad = hidden_states_61_pad_0, pad_type = hidden_states_61_pad_type_0, strides = var_1659, weight = down_blocks_1_attentions_1_proj_in_weight_to_fp16, x = add_23_cast);
            tensor<int32, [4]> var_1666 = const()[name = tensor<string, []>("op_1666"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<fp16, [2, 640, 1, 1024]> inputs_19_cast = reshape(shape = var_1666, x = hidden_states_61_cast);
            tensor<int32, [1]> var_1676 = const()[name = tensor<string, []>("op_1676"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> channels_mean_19_cast = reduce_mean(axes = var_1676, keep_dims = var_979, x = inputs_19_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_19_cast = sub(x = inputs_19_cast, y = channels_mean_19_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_sq_19_cast = mul(x = zero_mean_19_cast, y = zero_mean_19_cast);
            tensor<int32, [1]> var_1680 = const()[name = tensor<string, []>("op_1680"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> var_1681_cast = reduce_mean(axes = var_1680, keep_dims = var_979, x = zero_mean_sq_19_cast);
            tensor<fp16, []> var_1682_to_fp16 = const()[name = tensor<string, []>("op_1682_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 1024]> var_1683_cast = add(x = var_1681_cast, y = var_1682_to_fp16);
            tensor<fp16, []> denom_19_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_19_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 1024]> denom_19_cast = rsqrt(epsilon = denom_19_epsilon_0_to_fp16, x = var_1683_cast);
            tensor<fp16, [2, 640, 1, 1024]> out_19_cast = mul(x = zero_mean_19_cast, y = denom_19_cast);
            tensor<fp16, [1, 640, 1, 1]> var_1687_to_fp16 = const()[name = tensor<string, []>("op_1687_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(75225792)))];
            tensor<fp16, [2, 640, 1, 1024]> var_1688_cast = add(x = out_19_cast, y = var_1687_to_fp16);
            tensor<fp16, [1, 640, 1, 1]> var_1690_to_fp16 = const()[name = tensor<string, []>("op_1690_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(75227136)))];
            tensor<fp16, [2, 640, 1, 1024]> hidden_states_63_cast = mul(x = var_1688_cast, y = var_1690_to_fp16);
            tensor<int32, [2]> var_1697 = const()[name = tensor<string, []>("op_1697"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1699 = const()[name = tensor<string, []>("op_1699"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_13_pad_type_0 = const()[name = tensor<string, []>("q_13_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_13_pad_0 = const()[name = tensor<string, []>("q_13_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> down_blocks_1_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(75228480)))];
            tensor<fp16, [2, 640, 1, 1024]> q_13_cast = conv(dilations = var_1699, groups = var_984, pad = q_13_pad_0, pad_type = q_13_pad_type_0, strides = var_1697, weight = down_blocks_1_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16, x = hidden_states_63_cast);
            tensor<int32, [2]> var_1703 = const()[name = tensor<string, []>("op_1703"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1705 = const()[name = tensor<string, []>("op_1705"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_25_pad_type_0 = const()[name = tensor<string, []>("k_25_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_25_pad_0 = const()[name = tensor<string, []>("k_25_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> down_blocks_1_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(76047744)))];
            tensor<fp16, [2, 640, 1, 1024]> k_25_cast = conv(dilations = var_1705, groups = var_984, pad = k_25_pad_0, pad_type = k_25_pad_type_0, strides = var_1703, weight = down_blocks_1_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16, x = hidden_states_63_cast);
            tensor<int32, [2]> var_1709 = const()[name = tensor<string, []>("op_1709"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1711 = const()[name = tensor<string, []>("op_1711"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_13_pad_type_0 = const()[name = tensor<string, []>("v_13_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_13_pad_0 = const()[name = tensor<string, []>("v_13_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> down_blocks_1_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(76867008)))];
            tensor<fp16, [2, 640, 1, 1024]> v_13_cast = conv(dilations = var_1711, groups = var_984, pad = v_13_pad_0, pad_type = v_13_pad_type_0, strides = var_1709, weight = down_blocks_1_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16, x = hidden_states_63_cast);
            tensor<int32, [4]> var_1715_begin_0 = const()[name = tensor<string, []>("op_1715_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1715_end_0 = const()[name = tensor<string, []>("op_1715_end_0"), val = tensor<int32, [4]>([2, 64, 1, 1024])];
            tensor<bool, [4]> var_1715_end_mask_0 = const()[name = tensor<string, []>("op_1715_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1715_cast = slice_by_index(begin = var_1715_begin_0, end = var_1715_end_0, end_mask = var_1715_end_mask_0, x = q_13_cast);
            tensor<int32, [4]> var_1719_begin_0 = const()[name = tensor<string, []>("op_1719_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_1719_end_0 = const()[name = tensor<string, []>("op_1719_end_0"), val = tensor<int32, [4]>([2, 128, 1, 1024])];
            tensor<bool, [4]> var_1719_end_mask_0 = const()[name = tensor<string, []>("op_1719_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1719_cast = slice_by_index(begin = var_1719_begin_0, end = var_1719_end_0, end_mask = var_1719_end_mask_0, x = q_13_cast);
            tensor<int32, [4]> var_1723_begin_0 = const()[name = tensor<string, []>("op_1723_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_1723_end_0 = const()[name = tensor<string, []>("op_1723_end_0"), val = tensor<int32, [4]>([2, 192, 1, 1024])];
            tensor<bool, [4]> var_1723_end_mask_0 = const()[name = tensor<string, []>("op_1723_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1723_cast = slice_by_index(begin = var_1723_begin_0, end = var_1723_end_0, end_mask = var_1723_end_mask_0, x = q_13_cast);
            tensor<int32, [4]> var_1727_begin_0 = const()[name = tensor<string, []>("op_1727_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_1727_end_0 = const()[name = tensor<string, []>("op_1727_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1024])];
            tensor<bool, [4]> var_1727_end_mask_0 = const()[name = tensor<string, []>("op_1727_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1727_cast = slice_by_index(begin = var_1727_begin_0, end = var_1727_end_0, end_mask = var_1727_end_mask_0, x = q_13_cast);
            tensor<int32, [4]> var_1731_begin_0 = const()[name = tensor<string, []>("op_1731_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_1731_end_0 = const()[name = tensor<string, []>("op_1731_end_0"), val = tensor<int32, [4]>([2, 320, 1, 1024])];
            tensor<bool, [4]> var_1731_end_mask_0 = const()[name = tensor<string, []>("op_1731_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1731_cast = slice_by_index(begin = var_1731_begin_0, end = var_1731_end_0, end_mask = var_1731_end_mask_0, x = q_13_cast);
            tensor<int32, [4]> var_1735_begin_0 = const()[name = tensor<string, []>("op_1735_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_1735_end_0 = const()[name = tensor<string, []>("op_1735_end_0"), val = tensor<int32, [4]>([2, 384, 1, 1024])];
            tensor<bool, [4]> var_1735_end_mask_0 = const()[name = tensor<string, []>("op_1735_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1735_cast = slice_by_index(begin = var_1735_begin_0, end = var_1735_end_0, end_mask = var_1735_end_mask_0, x = q_13_cast);
            tensor<int32, [4]> var_1739_begin_0 = const()[name = tensor<string, []>("op_1739_begin_0"), val = tensor<int32, [4]>([0, 384, 0, 0])];
            tensor<int32, [4]> var_1739_end_0 = const()[name = tensor<string, []>("op_1739_end_0"), val = tensor<int32, [4]>([2, 448, 1, 1024])];
            tensor<bool, [4]> var_1739_end_mask_0 = const()[name = tensor<string, []>("op_1739_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1739_cast = slice_by_index(begin = var_1739_begin_0, end = var_1739_end_0, end_mask = var_1739_end_mask_0, x = q_13_cast);
            tensor<int32, [4]> var_1743_begin_0 = const()[name = tensor<string, []>("op_1743_begin_0"), val = tensor<int32, [4]>([0, 448, 0, 0])];
            tensor<int32, [4]> var_1743_end_0 = const()[name = tensor<string, []>("op_1743_end_0"), val = tensor<int32, [4]>([2, 512, 1, 1024])];
            tensor<bool, [4]> var_1743_end_mask_0 = const()[name = tensor<string, []>("op_1743_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1743_cast = slice_by_index(begin = var_1743_begin_0, end = var_1743_end_0, end_mask = var_1743_end_mask_0, x = q_13_cast);
            tensor<int32, [4]> var_1747_begin_0 = const()[name = tensor<string, []>("op_1747_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_1747_end_0 = const()[name = tensor<string, []>("op_1747_end_0"), val = tensor<int32, [4]>([2, 576, 1, 1024])];
            tensor<bool, [4]> var_1747_end_mask_0 = const()[name = tensor<string, []>("op_1747_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1747_cast = slice_by_index(begin = var_1747_begin_0, end = var_1747_end_0, end_mask = var_1747_end_mask_0, x = q_13_cast);
            tensor<int32, [4]> var_1751_begin_0 = const()[name = tensor<string, []>("op_1751_begin_0"), val = tensor<int32, [4]>([0, 576, 0, 0])];
            tensor<int32, [4]> var_1751_end_0 = const()[name = tensor<string, []>("op_1751_end_0"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<bool, [4]> var_1751_end_mask_0 = const()[name = tensor<string, []>("op_1751_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1751_cast = slice_by_index(begin = var_1751_begin_0, end = var_1751_end_0, end_mask = var_1751_end_mask_0, x = q_13_cast);
            tensor<int32, [4]> k_27_perm_0 = const()[name = tensor<string, []>("k_27_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_1758_begin_0 = const()[name = tensor<string, []>("op_1758_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1758_end_0 = const()[name = tensor<string, []>("op_1758_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 64])];
            tensor<bool, [4]> var_1758_end_mask_0 = const()[name = tensor<string, []>("op_1758_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 640]> transpose_71 = transpose(perm = k_27_perm_0, x = k_25_cast);
            tensor<fp16, [2, 1024, 1, 64]> var_1758_cast = slice_by_index(begin = var_1758_begin_0, end = var_1758_end_0, end_mask = var_1758_end_mask_0, x = transpose_71);
            tensor<int32, [4]> var_1762_begin_0 = const()[name = tensor<string, []>("op_1762_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 64])];
            tensor<int32, [4]> var_1762_end_0 = const()[name = tensor<string, []>("op_1762_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 128])];
            tensor<bool, [4]> var_1762_end_mask_0 = const()[name = tensor<string, []>("op_1762_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 64]> var_1762_cast = slice_by_index(begin = var_1762_begin_0, end = var_1762_end_0, end_mask = var_1762_end_mask_0, x = transpose_71);
            tensor<int32, [4]> var_1766_begin_0 = const()[name = tensor<string, []>("op_1766_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 128])];
            tensor<int32, [4]> var_1766_end_0 = const()[name = tensor<string, []>("op_1766_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 192])];
            tensor<bool, [4]> var_1766_end_mask_0 = const()[name = tensor<string, []>("op_1766_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 64]> var_1766_cast = slice_by_index(begin = var_1766_begin_0, end = var_1766_end_0, end_mask = var_1766_end_mask_0, x = transpose_71);
            tensor<int32, [4]> var_1770_begin_0 = const()[name = tensor<string, []>("op_1770_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 192])];
            tensor<int32, [4]> var_1770_end_0 = const()[name = tensor<string, []>("op_1770_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 256])];
            tensor<bool, [4]> var_1770_end_mask_0 = const()[name = tensor<string, []>("op_1770_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 64]> var_1770_cast = slice_by_index(begin = var_1770_begin_0, end = var_1770_end_0, end_mask = var_1770_end_mask_0, x = transpose_71);
            tensor<int32, [4]> var_1774_begin_0 = const()[name = tensor<string, []>("op_1774_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 256])];
            tensor<int32, [4]> var_1774_end_0 = const()[name = tensor<string, []>("op_1774_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 320])];
            tensor<bool, [4]> var_1774_end_mask_0 = const()[name = tensor<string, []>("op_1774_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 64]> var_1774_cast = slice_by_index(begin = var_1774_begin_0, end = var_1774_end_0, end_mask = var_1774_end_mask_0, x = transpose_71);
            tensor<int32, [4]> var_1778_begin_0 = const()[name = tensor<string, []>("op_1778_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_1778_end_0 = const()[name = tensor<string, []>("op_1778_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 384])];
            tensor<bool, [4]> var_1778_end_mask_0 = const()[name = tensor<string, []>("op_1778_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 64]> var_1778_cast = slice_by_index(begin = var_1778_begin_0, end = var_1778_end_0, end_mask = var_1778_end_mask_0, x = transpose_71);
            tensor<int32, [4]> var_1782_begin_0 = const()[name = tensor<string, []>("op_1782_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 384])];
            tensor<int32, [4]> var_1782_end_0 = const()[name = tensor<string, []>("op_1782_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 448])];
            tensor<bool, [4]> var_1782_end_mask_0 = const()[name = tensor<string, []>("op_1782_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 64]> var_1782_cast = slice_by_index(begin = var_1782_begin_0, end = var_1782_end_0, end_mask = var_1782_end_mask_0, x = transpose_71);
            tensor<int32, [4]> var_1786_begin_0 = const()[name = tensor<string, []>("op_1786_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 448])];
            tensor<int32, [4]> var_1786_end_0 = const()[name = tensor<string, []>("op_1786_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 512])];
            tensor<bool, [4]> var_1786_end_mask_0 = const()[name = tensor<string, []>("op_1786_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 64]> var_1786_cast = slice_by_index(begin = var_1786_begin_0, end = var_1786_end_0, end_mask = var_1786_end_mask_0, x = transpose_71);
            tensor<int32, [4]> var_1790_begin_0 = const()[name = tensor<string, []>("op_1790_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 512])];
            tensor<int32, [4]> var_1790_end_0 = const()[name = tensor<string, []>("op_1790_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 576])];
            tensor<bool, [4]> var_1790_end_mask_0 = const()[name = tensor<string, []>("op_1790_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 64]> var_1790_cast = slice_by_index(begin = var_1790_begin_0, end = var_1790_end_0, end_mask = var_1790_end_mask_0, x = transpose_71);
            tensor<int32, [4]> var_1794_begin_0 = const()[name = tensor<string, []>("op_1794_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 576])];
            tensor<int32, [4]> var_1794_end_0 = const()[name = tensor<string, []>("op_1794_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 640])];
            tensor<bool, [4]> var_1794_end_mask_0 = const()[name = tensor<string, []>("op_1794_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 64]> var_1794_cast = slice_by_index(begin = var_1794_begin_0, end = var_1794_end_0, end_mask = var_1794_end_mask_0, x = transpose_71);
            tensor<int32, [4]> var_1796_begin_0 = const()[name = tensor<string, []>("op_1796_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1796_end_0 = const()[name = tensor<string, []>("op_1796_end_0"), val = tensor<int32, [4]>([2, 64, 1, 1024])];
            tensor<bool, [4]> var_1796_end_mask_0 = const()[name = tensor<string, []>("op_1796_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1796_cast = slice_by_index(begin = var_1796_begin_0, end = var_1796_end_0, end_mask = var_1796_end_mask_0, x = v_13_cast);
            tensor<int32, [4]> var_1800_begin_0 = const()[name = tensor<string, []>("op_1800_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_1800_end_0 = const()[name = tensor<string, []>("op_1800_end_0"), val = tensor<int32, [4]>([2, 128, 1, 1024])];
            tensor<bool, [4]> var_1800_end_mask_0 = const()[name = tensor<string, []>("op_1800_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1800_cast = slice_by_index(begin = var_1800_begin_0, end = var_1800_end_0, end_mask = var_1800_end_mask_0, x = v_13_cast);
            tensor<int32, [4]> var_1804_begin_0 = const()[name = tensor<string, []>("op_1804_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_1804_end_0 = const()[name = tensor<string, []>("op_1804_end_0"), val = tensor<int32, [4]>([2, 192, 1, 1024])];
            tensor<bool, [4]> var_1804_end_mask_0 = const()[name = tensor<string, []>("op_1804_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1804_cast = slice_by_index(begin = var_1804_begin_0, end = var_1804_end_0, end_mask = var_1804_end_mask_0, x = v_13_cast);
            tensor<int32, [4]> var_1808_begin_0 = const()[name = tensor<string, []>("op_1808_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_1808_end_0 = const()[name = tensor<string, []>("op_1808_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1024])];
            tensor<bool, [4]> var_1808_end_mask_0 = const()[name = tensor<string, []>("op_1808_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1808_cast = slice_by_index(begin = var_1808_begin_0, end = var_1808_end_0, end_mask = var_1808_end_mask_0, x = v_13_cast);
            tensor<int32, [4]> var_1812_begin_0 = const()[name = tensor<string, []>("op_1812_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_1812_end_0 = const()[name = tensor<string, []>("op_1812_end_0"), val = tensor<int32, [4]>([2, 320, 1, 1024])];
            tensor<bool, [4]> var_1812_end_mask_0 = const()[name = tensor<string, []>("op_1812_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1812_cast = slice_by_index(begin = var_1812_begin_0, end = var_1812_end_0, end_mask = var_1812_end_mask_0, x = v_13_cast);
            tensor<int32, [4]> var_1816_begin_0 = const()[name = tensor<string, []>("op_1816_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_1816_end_0 = const()[name = tensor<string, []>("op_1816_end_0"), val = tensor<int32, [4]>([2, 384, 1, 1024])];
            tensor<bool, [4]> var_1816_end_mask_0 = const()[name = tensor<string, []>("op_1816_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1816_cast = slice_by_index(begin = var_1816_begin_0, end = var_1816_end_0, end_mask = var_1816_end_mask_0, x = v_13_cast);
            tensor<int32, [4]> var_1820_begin_0 = const()[name = tensor<string, []>("op_1820_begin_0"), val = tensor<int32, [4]>([0, 384, 0, 0])];
            tensor<int32, [4]> var_1820_end_0 = const()[name = tensor<string, []>("op_1820_end_0"), val = tensor<int32, [4]>([2, 448, 1, 1024])];
            tensor<bool, [4]> var_1820_end_mask_0 = const()[name = tensor<string, []>("op_1820_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1820_cast = slice_by_index(begin = var_1820_begin_0, end = var_1820_end_0, end_mask = var_1820_end_mask_0, x = v_13_cast);
            tensor<int32, [4]> var_1824_begin_0 = const()[name = tensor<string, []>("op_1824_begin_0"), val = tensor<int32, [4]>([0, 448, 0, 0])];
            tensor<int32, [4]> var_1824_end_0 = const()[name = tensor<string, []>("op_1824_end_0"), val = tensor<int32, [4]>([2, 512, 1, 1024])];
            tensor<bool, [4]> var_1824_end_mask_0 = const()[name = tensor<string, []>("op_1824_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1824_cast = slice_by_index(begin = var_1824_begin_0, end = var_1824_end_0, end_mask = var_1824_end_mask_0, x = v_13_cast);
            tensor<int32, [4]> var_1828_begin_0 = const()[name = tensor<string, []>("op_1828_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_1828_end_0 = const()[name = tensor<string, []>("op_1828_end_0"), val = tensor<int32, [4]>([2, 576, 1, 1024])];
            tensor<bool, [4]> var_1828_end_mask_0 = const()[name = tensor<string, []>("op_1828_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1828_cast = slice_by_index(begin = var_1828_begin_0, end = var_1828_end_0, end_mask = var_1828_end_mask_0, x = v_13_cast);
            tensor<int32, [4]> var_1832_begin_0 = const()[name = tensor<string, []>("op_1832_begin_0"), val = tensor<int32, [4]>([0, 576, 0, 0])];
            tensor<int32, [4]> var_1832_end_0 = const()[name = tensor<string, []>("op_1832_end_0"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<bool, [4]> var_1832_end_mask_0 = const()[name = tensor<string, []>("op_1832_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1832_cast = slice_by_index(begin = var_1832_begin_0, end = var_1832_end_0, end_mask = var_1832_end_mask_0, x = v_13_cast);
            tensor<string, []> var_1836_equation_0 = const()[name = tensor<string, []>("op_1836_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1836_cast = einsum(equation = var_1836_equation_0, values = (var_1758_cast, var_1715_cast));
            tensor<fp16, []> var_1837_to_fp16 = const()[name = tensor<string, []>("op_1837_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_81_cast = mul(x = var_1836_cast, y = var_1837_to_fp16);
            tensor<string, []> var_1840_equation_0 = const()[name = tensor<string, []>("op_1840_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1840_cast = einsum(equation = var_1840_equation_0, values = (var_1762_cast, var_1719_cast));
            tensor<fp16, []> var_1841_to_fp16 = const()[name = tensor<string, []>("op_1841_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_83_cast = mul(x = var_1840_cast, y = var_1841_to_fp16);
            tensor<string, []> var_1844_equation_0 = const()[name = tensor<string, []>("op_1844_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1844_cast = einsum(equation = var_1844_equation_0, values = (var_1766_cast, var_1723_cast));
            tensor<fp16, []> var_1845_to_fp16 = const()[name = tensor<string, []>("op_1845_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_85_cast = mul(x = var_1844_cast, y = var_1845_to_fp16);
            tensor<string, []> var_1848_equation_0 = const()[name = tensor<string, []>("op_1848_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1848_cast = einsum(equation = var_1848_equation_0, values = (var_1770_cast, var_1727_cast));
            tensor<fp16, []> var_1849_to_fp16 = const()[name = tensor<string, []>("op_1849_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_87_cast = mul(x = var_1848_cast, y = var_1849_to_fp16);
            tensor<string, []> var_1852_equation_0 = const()[name = tensor<string, []>("op_1852_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1852_cast = einsum(equation = var_1852_equation_0, values = (var_1774_cast, var_1731_cast));
            tensor<fp16, []> var_1853_to_fp16 = const()[name = tensor<string, []>("op_1853_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_89_cast = mul(x = var_1852_cast, y = var_1853_to_fp16);
            tensor<string, []> var_1856_equation_0 = const()[name = tensor<string, []>("op_1856_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1856_cast = einsum(equation = var_1856_equation_0, values = (var_1778_cast, var_1735_cast));
            tensor<fp16, []> var_1857_to_fp16 = const()[name = tensor<string, []>("op_1857_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_91_cast = mul(x = var_1856_cast, y = var_1857_to_fp16);
            tensor<string, []> var_1860_equation_0 = const()[name = tensor<string, []>("op_1860_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1860_cast = einsum(equation = var_1860_equation_0, values = (var_1782_cast, var_1739_cast));
            tensor<fp16, []> var_1861_to_fp16 = const()[name = tensor<string, []>("op_1861_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_93_cast = mul(x = var_1860_cast, y = var_1861_to_fp16);
            tensor<string, []> var_1864_equation_0 = const()[name = tensor<string, []>("op_1864_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1864_cast = einsum(equation = var_1864_equation_0, values = (var_1786_cast, var_1743_cast));
            tensor<fp16, []> var_1865_to_fp16 = const()[name = tensor<string, []>("op_1865_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_95_cast = mul(x = var_1864_cast, y = var_1865_to_fp16);
            tensor<string, []> var_1868_equation_0 = const()[name = tensor<string, []>("op_1868_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1868_cast = einsum(equation = var_1868_equation_0, values = (var_1790_cast, var_1747_cast));
            tensor<fp16, []> var_1869_to_fp16 = const()[name = tensor<string, []>("op_1869_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_97_cast = mul(x = var_1868_cast, y = var_1869_to_fp16);
            tensor<string, []> var_1872_equation_0 = const()[name = tensor<string, []>("op_1872_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1872_cast = einsum(equation = var_1872_equation_0, values = (var_1794_cast, var_1751_cast));
            tensor<fp16, []> var_1873_to_fp16 = const()[name = tensor<string, []>("op_1873_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_99_cast = mul(x = var_1872_cast, y = var_1873_to_fp16);
            tensor<fp16, [2, 1024, 1, 1024]> var_1875_cast = softmax(axis = var_984, x = aw_81_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_1876_cast = softmax(axis = var_984, x = aw_83_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_1877_cast = softmax(axis = var_984, x = aw_85_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_1878_cast = softmax(axis = var_984, x = aw_87_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_1879_cast = softmax(axis = var_984, x = aw_89_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_1880_cast = softmax(axis = var_984, x = aw_91_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_1881_cast = softmax(axis = var_984, x = aw_93_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_1882_cast = softmax(axis = var_984, x = aw_95_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_1883_cast = softmax(axis = var_984, x = aw_97_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_1884_cast = softmax(axis = var_984, x = aw_99_cast);
            tensor<string, []> var_1886_equation_0 = const()[name = tensor<string, []>("op_1886_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_1886_cast = einsum(equation = var_1886_equation_0, values = (var_1796_cast, var_1875_cast));
            tensor<string, []> var_1888_equation_0 = const()[name = tensor<string, []>("op_1888_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_1888_cast = einsum(equation = var_1888_equation_0, values = (var_1800_cast, var_1876_cast));
            tensor<string, []> var_1890_equation_0 = const()[name = tensor<string, []>("op_1890_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_1890_cast = einsum(equation = var_1890_equation_0, values = (var_1804_cast, var_1877_cast));
            tensor<string, []> var_1892_equation_0 = const()[name = tensor<string, []>("op_1892_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_1892_cast = einsum(equation = var_1892_equation_0, values = (var_1808_cast, var_1878_cast));
            tensor<string, []> var_1894_equation_0 = const()[name = tensor<string, []>("op_1894_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_1894_cast = einsum(equation = var_1894_equation_0, values = (var_1812_cast, var_1879_cast));
            tensor<string, []> var_1896_equation_0 = const()[name = tensor<string, []>("op_1896_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_1896_cast = einsum(equation = var_1896_equation_0, values = (var_1816_cast, var_1880_cast));
            tensor<string, []> var_1898_equation_0 = const()[name = tensor<string, []>("op_1898_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_1898_cast = einsum(equation = var_1898_equation_0, values = (var_1820_cast, var_1881_cast));
            tensor<string, []> var_1900_equation_0 = const()[name = tensor<string, []>("op_1900_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_1900_cast = einsum(equation = var_1900_equation_0, values = (var_1824_cast, var_1882_cast));
            tensor<string, []> var_1902_equation_0 = const()[name = tensor<string, []>("op_1902_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_1902_cast = einsum(equation = var_1902_equation_0, values = (var_1828_cast, var_1883_cast));
            tensor<string, []> var_1904_equation_0 = const()[name = tensor<string, []>("op_1904_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_1904_cast = einsum(equation = var_1904_equation_0, values = (var_1832_cast, var_1884_cast));
            tensor<bool, []> input_105_interleave_0 = const()[name = tensor<string, []>("input_105_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 640, 1, 1024]> input_105_cast = concat(axis = var_984, interleave = input_105_interleave_0, values = (var_1886_cast, var_1888_cast, var_1890_cast, var_1892_cast, var_1894_cast, var_1896_cast, var_1898_cast, var_1900_cast, var_1902_cast, var_1904_cast));
            tensor<int32, [2]> var_1910 = const()[name = tensor<string, []>("op_1910"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1912 = const()[name = tensor<string, []>("op_1912"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_1914_pad_type_0 = const()[name = tensor<string, []>("op_1914_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_1914_pad_0 = const()[name = tensor<string, []>("op_1914_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> down_blocks_1_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(77686272)))];
            tensor<fp16, [640]> down_blocks_1_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(78505536)))];
            tensor<fp16, [2, 640, 1, 1024]> var_1914_cast = conv(bias = down_blocks_1_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16, dilations = var_1912, groups = var_984, pad = var_1914_pad_0, pad_type = var_1914_pad_type_0, strides = var_1910, weight = down_blocks_1_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16, x = input_105_cast);
            tensor<fp16, [2, 640, 1, 1024]> inputs_21_cast = add(x = var_1914_cast, y = inputs_19_cast);
            tensor<int32, [1]> var_1918 = const()[name = tensor<string, []>("op_1918"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> channels_mean_21_cast = reduce_mean(axes = var_1918, keep_dims = var_979, x = inputs_21_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_21_cast = sub(x = inputs_21_cast, y = channels_mean_21_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_sq_21_cast = mul(x = zero_mean_21_cast, y = zero_mean_21_cast);
            tensor<int32, [1]> var_1922 = const()[name = tensor<string, []>("op_1922"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> var_1923_cast = reduce_mean(axes = var_1922, keep_dims = var_979, x = zero_mean_sq_21_cast);
            tensor<fp16, []> var_1924_to_fp16 = const()[name = tensor<string, []>("op_1924_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 1024]> var_1925_cast = add(x = var_1923_cast, y = var_1924_to_fp16);
            tensor<fp16, []> denom_21_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_21_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 1024]> denom_21_cast = rsqrt(epsilon = denom_21_epsilon_0_to_fp16, x = var_1925_cast);
            tensor<fp16, [2, 640, 1, 1024]> out_21_cast = mul(x = zero_mean_21_cast, y = denom_21_cast);
            tensor<fp16, [1, 640, 1, 1]> var_1929_to_fp16 = const()[name = tensor<string, []>("op_1929_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(78506880)))];
            tensor<fp16, [2, 640, 1, 1024]> var_1930_cast = add(x = out_21_cast, y = var_1929_to_fp16);
            tensor<fp16, [1, 640, 1, 1]> var_1932_to_fp16 = const()[name = tensor<string, []>("op_1932_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(78508224)))];
            tensor<fp16, [2, 640, 1, 1024]> hidden_states_65_cast = mul(x = var_1930_cast, y = var_1932_to_fp16);
            tensor<int32, [2]> var_1939 = const()[name = tensor<string, []>("op_1939"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1941 = const()[name = tensor<string, []>("op_1941"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_15_pad_type_0 = const()[name = tensor<string, []>("q_15_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_15_pad_0 = const()[name = tensor<string, []>("q_15_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> down_blocks_1_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(78509568)))];
            tensor<fp16, [2, 640, 1, 1024]> q_15_cast = conv(dilations = var_1941, groups = var_984, pad = q_15_pad_0, pad_type = q_15_pad_type_0, strides = var_1939, weight = down_blocks_1_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16, x = hidden_states_65_cast);
            tensor<int32, [2]> var_1945 = const()[name = tensor<string, []>("op_1945"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1947 = const()[name = tensor<string, []>("op_1947"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_29_pad_type_0 = const()[name = tensor<string, []>("k_29_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_29_pad_0 = const()[name = tensor<string, []>("k_29_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 1024, 1, 1]> down_blocks_1_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16"), val = tensor<fp16, [640, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(79328832)))];
            tensor<fp16, [2, 640, 1, 77]> k_29_cast = conv(dilations = var_1947, groups = var_984, pad = k_29_pad_0, pad_type = k_29_pad_type_0, strides = var_1945, weight = down_blocks_1_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [2]> var_1951 = const()[name = tensor<string, []>("op_1951"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1953 = const()[name = tensor<string, []>("op_1953"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_15_pad_type_0 = const()[name = tensor<string, []>("v_15_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_15_pad_0 = const()[name = tensor<string, []>("v_15_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 1024, 1, 1]> down_blocks_1_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16"), val = tensor<fp16, [640, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(80639616)))];
            tensor<fp16, [2, 640, 1, 77]> v_15_cast = conv(dilations = var_1953, groups = var_984, pad = v_15_pad_0, pad_type = v_15_pad_type_0, strides = var_1951, weight = down_blocks_1_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [4]> var_1957_begin_0 = const()[name = tensor<string, []>("op_1957_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1957_end_0 = const()[name = tensor<string, []>("op_1957_end_0"), val = tensor<int32, [4]>([2, 64, 1, 1024])];
            tensor<bool, [4]> var_1957_end_mask_0 = const()[name = tensor<string, []>("op_1957_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1957_cast = slice_by_index(begin = var_1957_begin_0, end = var_1957_end_0, end_mask = var_1957_end_mask_0, x = q_15_cast);
            tensor<int32, [4]> var_1961_begin_0 = const()[name = tensor<string, []>("op_1961_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_1961_end_0 = const()[name = tensor<string, []>("op_1961_end_0"), val = tensor<int32, [4]>([2, 128, 1, 1024])];
            tensor<bool, [4]> var_1961_end_mask_0 = const()[name = tensor<string, []>("op_1961_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1961_cast = slice_by_index(begin = var_1961_begin_0, end = var_1961_end_0, end_mask = var_1961_end_mask_0, x = q_15_cast);
            tensor<int32, [4]> var_1965_begin_0 = const()[name = tensor<string, []>("op_1965_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_1965_end_0 = const()[name = tensor<string, []>("op_1965_end_0"), val = tensor<int32, [4]>([2, 192, 1, 1024])];
            tensor<bool, [4]> var_1965_end_mask_0 = const()[name = tensor<string, []>("op_1965_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1965_cast = slice_by_index(begin = var_1965_begin_0, end = var_1965_end_0, end_mask = var_1965_end_mask_0, x = q_15_cast);
            tensor<int32, [4]> var_1969_begin_0 = const()[name = tensor<string, []>("op_1969_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_1969_end_0 = const()[name = tensor<string, []>("op_1969_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1024])];
            tensor<bool, [4]> var_1969_end_mask_0 = const()[name = tensor<string, []>("op_1969_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1969_cast = slice_by_index(begin = var_1969_begin_0, end = var_1969_end_0, end_mask = var_1969_end_mask_0, x = q_15_cast);
            tensor<int32, [4]> var_1973_begin_0 = const()[name = tensor<string, []>("op_1973_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_1973_end_0 = const()[name = tensor<string, []>("op_1973_end_0"), val = tensor<int32, [4]>([2, 320, 1, 1024])];
            tensor<bool, [4]> var_1973_end_mask_0 = const()[name = tensor<string, []>("op_1973_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1973_cast = slice_by_index(begin = var_1973_begin_0, end = var_1973_end_0, end_mask = var_1973_end_mask_0, x = q_15_cast);
            tensor<int32, [4]> var_1977_begin_0 = const()[name = tensor<string, []>("op_1977_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_1977_end_0 = const()[name = tensor<string, []>("op_1977_end_0"), val = tensor<int32, [4]>([2, 384, 1, 1024])];
            tensor<bool, [4]> var_1977_end_mask_0 = const()[name = tensor<string, []>("op_1977_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1977_cast = slice_by_index(begin = var_1977_begin_0, end = var_1977_end_0, end_mask = var_1977_end_mask_0, x = q_15_cast);
            tensor<int32, [4]> var_1981_begin_0 = const()[name = tensor<string, []>("op_1981_begin_0"), val = tensor<int32, [4]>([0, 384, 0, 0])];
            tensor<int32, [4]> var_1981_end_0 = const()[name = tensor<string, []>("op_1981_end_0"), val = tensor<int32, [4]>([2, 448, 1, 1024])];
            tensor<bool, [4]> var_1981_end_mask_0 = const()[name = tensor<string, []>("op_1981_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1981_cast = slice_by_index(begin = var_1981_begin_0, end = var_1981_end_0, end_mask = var_1981_end_mask_0, x = q_15_cast);
            tensor<int32, [4]> var_1985_begin_0 = const()[name = tensor<string, []>("op_1985_begin_0"), val = tensor<int32, [4]>([0, 448, 0, 0])];
            tensor<int32, [4]> var_1985_end_0 = const()[name = tensor<string, []>("op_1985_end_0"), val = tensor<int32, [4]>([2, 512, 1, 1024])];
            tensor<bool, [4]> var_1985_end_mask_0 = const()[name = tensor<string, []>("op_1985_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1985_cast = slice_by_index(begin = var_1985_begin_0, end = var_1985_end_0, end_mask = var_1985_end_mask_0, x = q_15_cast);
            tensor<int32, [4]> var_1989_begin_0 = const()[name = tensor<string, []>("op_1989_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_1989_end_0 = const()[name = tensor<string, []>("op_1989_end_0"), val = tensor<int32, [4]>([2, 576, 1, 1024])];
            tensor<bool, [4]> var_1989_end_mask_0 = const()[name = tensor<string, []>("op_1989_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1989_cast = slice_by_index(begin = var_1989_begin_0, end = var_1989_end_0, end_mask = var_1989_end_mask_0, x = q_15_cast);
            tensor<int32, [4]> var_1993_begin_0 = const()[name = tensor<string, []>("op_1993_begin_0"), val = tensor<int32, [4]>([0, 576, 0, 0])];
            tensor<int32, [4]> var_1993_end_0 = const()[name = tensor<string, []>("op_1993_end_0"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<bool, [4]> var_1993_end_mask_0 = const()[name = tensor<string, []>("op_1993_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_1993_cast = slice_by_index(begin = var_1993_begin_0, end = var_1993_end_0, end_mask = var_1993_end_mask_0, x = q_15_cast);
            tensor<int32, [4]> k_31_perm_0 = const()[name = tensor<string, []>("k_31_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_2000_begin_0 = const()[name = tensor<string, []>("op_2000_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2000_end_0 = const()[name = tensor<string, []>("op_2000_end_0"), val = tensor<int32, [4]>([2, 77, 1, 64])];
            tensor<bool, [4]> var_2000_end_mask_0 = const()[name = tensor<string, []>("op_2000_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 640]> transpose_70 = transpose(perm = k_31_perm_0, x = k_29_cast);
            tensor<fp16, [2, 77, 1, 64]> var_2000_cast = slice_by_index(begin = var_2000_begin_0, end = var_2000_end_0, end_mask = var_2000_end_mask_0, x = transpose_70);
            tensor<int32, [4]> var_2004_begin_0 = const()[name = tensor<string, []>("op_2004_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 64])];
            tensor<int32, [4]> var_2004_end_0 = const()[name = tensor<string, []>("op_2004_end_0"), val = tensor<int32, [4]>([2, 77, 1, 128])];
            tensor<bool, [4]> var_2004_end_mask_0 = const()[name = tensor<string, []>("op_2004_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_2004_cast = slice_by_index(begin = var_2004_begin_0, end = var_2004_end_0, end_mask = var_2004_end_mask_0, x = transpose_70);
            tensor<int32, [4]> var_2008_begin_0 = const()[name = tensor<string, []>("op_2008_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 128])];
            tensor<int32, [4]> var_2008_end_0 = const()[name = tensor<string, []>("op_2008_end_0"), val = tensor<int32, [4]>([2, 77, 1, 192])];
            tensor<bool, [4]> var_2008_end_mask_0 = const()[name = tensor<string, []>("op_2008_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_2008_cast = slice_by_index(begin = var_2008_begin_0, end = var_2008_end_0, end_mask = var_2008_end_mask_0, x = transpose_70);
            tensor<int32, [4]> var_2012_begin_0 = const()[name = tensor<string, []>("op_2012_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 192])];
            tensor<int32, [4]> var_2012_end_0 = const()[name = tensor<string, []>("op_2012_end_0"), val = tensor<int32, [4]>([2, 77, 1, 256])];
            tensor<bool, [4]> var_2012_end_mask_0 = const()[name = tensor<string, []>("op_2012_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_2012_cast = slice_by_index(begin = var_2012_begin_0, end = var_2012_end_0, end_mask = var_2012_end_mask_0, x = transpose_70);
            tensor<int32, [4]> var_2016_begin_0 = const()[name = tensor<string, []>("op_2016_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 256])];
            tensor<int32, [4]> var_2016_end_0 = const()[name = tensor<string, []>("op_2016_end_0"), val = tensor<int32, [4]>([2, 77, 1, 320])];
            tensor<bool, [4]> var_2016_end_mask_0 = const()[name = tensor<string, []>("op_2016_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_2016_cast = slice_by_index(begin = var_2016_begin_0, end = var_2016_end_0, end_mask = var_2016_end_mask_0, x = transpose_70);
            tensor<int32, [4]> var_2020_begin_0 = const()[name = tensor<string, []>("op_2020_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_2020_end_0 = const()[name = tensor<string, []>("op_2020_end_0"), val = tensor<int32, [4]>([2, 77, 1, 384])];
            tensor<bool, [4]> var_2020_end_mask_0 = const()[name = tensor<string, []>("op_2020_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_2020_cast = slice_by_index(begin = var_2020_begin_0, end = var_2020_end_0, end_mask = var_2020_end_mask_0, x = transpose_70);
            tensor<int32, [4]> var_2024_begin_0 = const()[name = tensor<string, []>("op_2024_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 384])];
            tensor<int32, [4]> var_2024_end_0 = const()[name = tensor<string, []>("op_2024_end_0"), val = tensor<int32, [4]>([2, 77, 1, 448])];
            tensor<bool, [4]> var_2024_end_mask_0 = const()[name = tensor<string, []>("op_2024_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_2024_cast = slice_by_index(begin = var_2024_begin_0, end = var_2024_end_0, end_mask = var_2024_end_mask_0, x = transpose_70);
            tensor<int32, [4]> var_2028_begin_0 = const()[name = tensor<string, []>("op_2028_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 448])];
            tensor<int32, [4]> var_2028_end_0 = const()[name = tensor<string, []>("op_2028_end_0"), val = tensor<int32, [4]>([2, 77, 1, 512])];
            tensor<bool, [4]> var_2028_end_mask_0 = const()[name = tensor<string, []>("op_2028_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_2028_cast = slice_by_index(begin = var_2028_begin_0, end = var_2028_end_0, end_mask = var_2028_end_mask_0, x = transpose_70);
            tensor<int32, [4]> var_2032_begin_0 = const()[name = tensor<string, []>("op_2032_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 512])];
            tensor<int32, [4]> var_2032_end_0 = const()[name = tensor<string, []>("op_2032_end_0"), val = tensor<int32, [4]>([2, 77, 1, 576])];
            tensor<bool, [4]> var_2032_end_mask_0 = const()[name = tensor<string, []>("op_2032_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_2032_cast = slice_by_index(begin = var_2032_begin_0, end = var_2032_end_0, end_mask = var_2032_end_mask_0, x = transpose_70);
            tensor<int32, [4]> var_2036_begin_0 = const()[name = tensor<string, []>("op_2036_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 576])];
            tensor<int32, [4]> var_2036_end_0 = const()[name = tensor<string, []>("op_2036_end_0"), val = tensor<int32, [4]>([2, 77, 1, 640])];
            tensor<bool, [4]> var_2036_end_mask_0 = const()[name = tensor<string, []>("op_2036_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_2036_cast = slice_by_index(begin = var_2036_begin_0, end = var_2036_end_0, end_mask = var_2036_end_mask_0, x = transpose_70);
            tensor<int32, [4]> var_2038_begin_0 = const()[name = tensor<string, []>("op_2038_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2038_end_0 = const()[name = tensor<string, []>("op_2038_end_0"), val = tensor<int32, [4]>([2, 64, 1, 77])];
            tensor<bool, [4]> var_2038_end_mask_0 = const()[name = tensor<string, []>("op_2038_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_2038_cast = slice_by_index(begin = var_2038_begin_0, end = var_2038_end_0, end_mask = var_2038_end_mask_0, x = v_15_cast);
            tensor<int32, [4]> var_2042_begin_0 = const()[name = tensor<string, []>("op_2042_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_2042_end_0 = const()[name = tensor<string, []>("op_2042_end_0"), val = tensor<int32, [4]>([2, 128, 1, 77])];
            tensor<bool, [4]> var_2042_end_mask_0 = const()[name = tensor<string, []>("op_2042_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_2042_cast = slice_by_index(begin = var_2042_begin_0, end = var_2042_end_0, end_mask = var_2042_end_mask_0, x = v_15_cast);
            tensor<int32, [4]> var_2046_begin_0 = const()[name = tensor<string, []>("op_2046_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_2046_end_0 = const()[name = tensor<string, []>("op_2046_end_0"), val = tensor<int32, [4]>([2, 192, 1, 77])];
            tensor<bool, [4]> var_2046_end_mask_0 = const()[name = tensor<string, []>("op_2046_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_2046_cast = slice_by_index(begin = var_2046_begin_0, end = var_2046_end_0, end_mask = var_2046_end_mask_0, x = v_15_cast);
            tensor<int32, [4]> var_2050_begin_0 = const()[name = tensor<string, []>("op_2050_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_2050_end_0 = const()[name = tensor<string, []>("op_2050_end_0"), val = tensor<int32, [4]>([2, 256, 1, 77])];
            tensor<bool, [4]> var_2050_end_mask_0 = const()[name = tensor<string, []>("op_2050_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_2050_cast = slice_by_index(begin = var_2050_begin_0, end = var_2050_end_0, end_mask = var_2050_end_mask_0, x = v_15_cast);
            tensor<int32, [4]> var_2054_begin_0 = const()[name = tensor<string, []>("op_2054_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_2054_end_0 = const()[name = tensor<string, []>("op_2054_end_0"), val = tensor<int32, [4]>([2, 320, 1, 77])];
            tensor<bool, [4]> var_2054_end_mask_0 = const()[name = tensor<string, []>("op_2054_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_2054_cast = slice_by_index(begin = var_2054_begin_0, end = var_2054_end_0, end_mask = var_2054_end_mask_0, x = v_15_cast);
            tensor<int32, [4]> var_2058_begin_0 = const()[name = tensor<string, []>("op_2058_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_2058_end_0 = const()[name = tensor<string, []>("op_2058_end_0"), val = tensor<int32, [4]>([2, 384, 1, 77])];
            tensor<bool, [4]> var_2058_end_mask_0 = const()[name = tensor<string, []>("op_2058_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_2058_cast = slice_by_index(begin = var_2058_begin_0, end = var_2058_end_0, end_mask = var_2058_end_mask_0, x = v_15_cast);
            tensor<int32, [4]> var_2062_begin_0 = const()[name = tensor<string, []>("op_2062_begin_0"), val = tensor<int32, [4]>([0, 384, 0, 0])];
            tensor<int32, [4]> var_2062_end_0 = const()[name = tensor<string, []>("op_2062_end_0"), val = tensor<int32, [4]>([2, 448, 1, 77])];
            tensor<bool, [4]> var_2062_end_mask_0 = const()[name = tensor<string, []>("op_2062_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_2062_cast = slice_by_index(begin = var_2062_begin_0, end = var_2062_end_0, end_mask = var_2062_end_mask_0, x = v_15_cast);
            tensor<int32, [4]> var_2066_begin_0 = const()[name = tensor<string, []>("op_2066_begin_0"), val = tensor<int32, [4]>([0, 448, 0, 0])];
            tensor<int32, [4]> var_2066_end_0 = const()[name = tensor<string, []>("op_2066_end_0"), val = tensor<int32, [4]>([2, 512, 1, 77])];
            tensor<bool, [4]> var_2066_end_mask_0 = const()[name = tensor<string, []>("op_2066_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_2066_cast = slice_by_index(begin = var_2066_begin_0, end = var_2066_end_0, end_mask = var_2066_end_mask_0, x = v_15_cast);
            tensor<int32, [4]> var_2070_begin_0 = const()[name = tensor<string, []>("op_2070_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_2070_end_0 = const()[name = tensor<string, []>("op_2070_end_0"), val = tensor<int32, [4]>([2, 576, 1, 77])];
            tensor<bool, [4]> var_2070_end_mask_0 = const()[name = tensor<string, []>("op_2070_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_2070_cast = slice_by_index(begin = var_2070_begin_0, end = var_2070_end_0, end_mask = var_2070_end_mask_0, x = v_15_cast);
            tensor<int32, [4]> var_2074_begin_0 = const()[name = tensor<string, []>("op_2074_begin_0"), val = tensor<int32, [4]>([0, 576, 0, 0])];
            tensor<int32, [4]> var_2074_end_0 = const()[name = tensor<string, []>("op_2074_end_0"), val = tensor<int32, [4]>([2, 640, 1, 77])];
            tensor<bool, [4]> var_2074_end_mask_0 = const()[name = tensor<string, []>("op_2074_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_2074_cast = slice_by_index(begin = var_2074_begin_0, end = var_2074_end_0, end_mask = var_2074_end_mask_0, x = v_15_cast);
            tensor<string, []> var_2078_equation_0 = const()[name = tensor<string, []>("op_2078_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_2078_cast = einsum(equation = var_2078_equation_0, values = (var_2000_cast, var_1957_cast));
            tensor<fp16, []> var_2079_to_fp16 = const()[name = tensor<string, []>("op_2079_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_101_cast = mul(x = var_2078_cast, y = var_2079_to_fp16);
            tensor<string, []> var_2082_equation_0 = const()[name = tensor<string, []>("op_2082_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_2082_cast = einsum(equation = var_2082_equation_0, values = (var_2004_cast, var_1961_cast));
            tensor<fp16, []> var_2083_to_fp16 = const()[name = tensor<string, []>("op_2083_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_103_cast = mul(x = var_2082_cast, y = var_2083_to_fp16);
            tensor<string, []> var_2086_equation_0 = const()[name = tensor<string, []>("op_2086_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_2086_cast = einsum(equation = var_2086_equation_0, values = (var_2008_cast, var_1965_cast));
            tensor<fp16, []> var_2087_to_fp16 = const()[name = tensor<string, []>("op_2087_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_105_cast = mul(x = var_2086_cast, y = var_2087_to_fp16);
            tensor<string, []> var_2090_equation_0 = const()[name = tensor<string, []>("op_2090_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_2090_cast = einsum(equation = var_2090_equation_0, values = (var_2012_cast, var_1969_cast));
            tensor<fp16, []> var_2091_to_fp16 = const()[name = tensor<string, []>("op_2091_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_107_cast = mul(x = var_2090_cast, y = var_2091_to_fp16);
            tensor<string, []> var_2094_equation_0 = const()[name = tensor<string, []>("op_2094_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_2094_cast = einsum(equation = var_2094_equation_0, values = (var_2016_cast, var_1973_cast));
            tensor<fp16, []> var_2095_to_fp16 = const()[name = tensor<string, []>("op_2095_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_109_cast = mul(x = var_2094_cast, y = var_2095_to_fp16);
            tensor<string, []> var_2098_equation_0 = const()[name = tensor<string, []>("op_2098_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_2098_cast = einsum(equation = var_2098_equation_0, values = (var_2020_cast, var_1977_cast));
            tensor<fp16, []> var_2099_to_fp16 = const()[name = tensor<string, []>("op_2099_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_111_cast = mul(x = var_2098_cast, y = var_2099_to_fp16);
            tensor<string, []> var_2102_equation_0 = const()[name = tensor<string, []>("op_2102_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_2102_cast = einsum(equation = var_2102_equation_0, values = (var_2024_cast, var_1981_cast));
            tensor<fp16, []> var_2103_to_fp16 = const()[name = tensor<string, []>("op_2103_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_113_cast = mul(x = var_2102_cast, y = var_2103_to_fp16);
            tensor<string, []> var_2106_equation_0 = const()[name = tensor<string, []>("op_2106_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_2106_cast = einsum(equation = var_2106_equation_0, values = (var_2028_cast, var_1985_cast));
            tensor<fp16, []> var_2107_to_fp16 = const()[name = tensor<string, []>("op_2107_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_115_cast = mul(x = var_2106_cast, y = var_2107_to_fp16);
            tensor<string, []> var_2110_equation_0 = const()[name = tensor<string, []>("op_2110_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_2110_cast = einsum(equation = var_2110_equation_0, values = (var_2032_cast, var_1989_cast));
            tensor<fp16, []> var_2111_to_fp16 = const()[name = tensor<string, []>("op_2111_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_117_cast = mul(x = var_2110_cast, y = var_2111_to_fp16);
            tensor<string, []> var_2114_equation_0 = const()[name = tensor<string, []>("op_2114_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_2114_cast = einsum(equation = var_2114_equation_0, values = (var_2036_cast, var_1993_cast));
            tensor<fp16, []> var_2115_to_fp16 = const()[name = tensor<string, []>("op_2115_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_119_cast = mul(x = var_2114_cast, y = var_2115_to_fp16);
            tensor<fp16, [2, 77, 1, 1024]> var_2117_cast = softmax(axis = var_984, x = aw_101_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_2118_cast = softmax(axis = var_984, x = aw_103_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_2119_cast = softmax(axis = var_984, x = aw_105_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_2120_cast = softmax(axis = var_984, x = aw_107_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_2121_cast = softmax(axis = var_984, x = aw_109_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_2122_cast = softmax(axis = var_984, x = aw_111_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_2123_cast = softmax(axis = var_984, x = aw_113_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_2124_cast = softmax(axis = var_984, x = aw_115_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_2125_cast = softmax(axis = var_984, x = aw_117_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_2126_cast = softmax(axis = var_984, x = aw_119_cast);
            tensor<string, []> var_2128_equation_0 = const()[name = tensor<string, []>("op_2128_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_2128_cast = einsum(equation = var_2128_equation_0, values = (var_2038_cast, var_2117_cast));
            tensor<string, []> var_2130_equation_0 = const()[name = tensor<string, []>("op_2130_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_2130_cast = einsum(equation = var_2130_equation_0, values = (var_2042_cast, var_2118_cast));
            tensor<string, []> var_2132_equation_0 = const()[name = tensor<string, []>("op_2132_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_2132_cast = einsum(equation = var_2132_equation_0, values = (var_2046_cast, var_2119_cast));
            tensor<string, []> var_2134_equation_0 = const()[name = tensor<string, []>("op_2134_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_2134_cast = einsum(equation = var_2134_equation_0, values = (var_2050_cast, var_2120_cast));
            tensor<string, []> var_2136_equation_0 = const()[name = tensor<string, []>("op_2136_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_2136_cast = einsum(equation = var_2136_equation_0, values = (var_2054_cast, var_2121_cast));
            tensor<string, []> var_2138_equation_0 = const()[name = tensor<string, []>("op_2138_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_2138_cast = einsum(equation = var_2138_equation_0, values = (var_2058_cast, var_2122_cast));
            tensor<string, []> var_2140_equation_0 = const()[name = tensor<string, []>("op_2140_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_2140_cast = einsum(equation = var_2140_equation_0, values = (var_2062_cast, var_2123_cast));
            tensor<string, []> var_2142_equation_0 = const()[name = tensor<string, []>("op_2142_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_2142_cast = einsum(equation = var_2142_equation_0, values = (var_2066_cast, var_2124_cast));
            tensor<string, []> var_2144_equation_0 = const()[name = tensor<string, []>("op_2144_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_2144_cast = einsum(equation = var_2144_equation_0, values = (var_2070_cast, var_2125_cast));
            tensor<string, []> var_2146_equation_0 = const()[name = tensor<string, []>("op_2146_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_2146_cast = einsum(equation = var_2146_equation_0, values = (var_2074_cast, var_2126_cast));
            tensor<bool, []> input_107_interleave_0 = const()[name = tensor<string, []>("input_107_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 640, 1, 1024]> input_107_cast = concat(axis = var_984, interleave = input_107_interleave_0, values = (var_2128_cast, var_2130_cast, var_2132_cast, var_2134_cast, var_2136_cast, var_2138_cast, var_2140_cast, var_2142_cast, var_2144_cast, var_2146_cast));
            tensor<int32, [2]> var_2152 = const()[name = tensor<string, []>("op_2152"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2154 = const()[name = tensor<string, []>("op_2154"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_2156_pad_type_0 = const()[name = tensor<string, []>("op_2156_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_2156_pad_0 = const()[name = tensor<string, []>("op_2156_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> down_blocks_1_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(81950400)))];
            tensor<fp16, [640]> down_blocks_1_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(82769664)))];
            tensor<fp16, [2, 640, 1, 1024]> var_2156_cast = conv(bias = down_blocks_1_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16, dilations = var_2154, groups = var_984, pad = var_2156_pad_0, pad_type = var_2156_pad_type_0, strides = var_2152, weight = down_blocks_1_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16, x = input_107_cast);
            tensor<fp16, [2, 640, 1, 1024]> inputs_23_cast = add(x = var_2156_cast, y = inputs_21_cast);
            tensor<int32, [1]> var_2160 = const()[name = tensor<string, []>("op_2160"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> channels_mean_23_cast = reduce_mean(axes = var_2160, keep_dims = var_979, x = inputs_23_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_23_cast = sub(x = inputs_23_cast, y = channels_mean_23_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_sq_23_cast = mul(x = zero_mean_23_cast, y = zero_mean_23_cast);
            tensor<int32, [1]> var_2164 = const()[name = tensor<string, []>("op_2164"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> var_2165_cast = reduce_mean(axes = var_2164, keep_dims = var_979, x = zero_mean_sq_23_cast);
            tensor<fp16, []> var_2166_to_fp16 = const()[name = tensor<string, []>("op_2166_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 1024]> var_2167_cast = add(x = var_2165_cast, y = var_2166_to_fp16);
            tensor<fp16, []> denom_23_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_23_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 1024]> denom_23_cast = rsqrt(epsilon = denom_23_epsilon_0_to_fp16, x = var_2167_cast);
            tensor<fp16, [2, 640, 1, 1024]> out_23_cast = mul(x = zero_mean_23_cast, y = denom_23_cast);
            tensor<fp16, [1, 640, 1, 1]> var_2171_to_fp16 = const()[name = tensor<string, []>("op_2171_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(82771008)))];
            tensor<fp16, [2, 640, 1, 1024]> var_2172_cast = add(x = out_23_cast, y = var_2171_to_fp16);
            tensor<fp16, [1, 640, 1, 1]> var_2174_to_fp16 = const()[name = tensor<string, []>("op_2174_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(82772352)))];
            tensor<fp16, [2, 640, 1, 1024]> input_109_cast = mul(x = var_2172_cast, y = var_2174_to_fp16);
            tensor<int32, [2]> var_2182 = const()[name = tensor<string, []>("op_2182"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2184 = const()[name = tensor<string, []>("op_2184"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_2186_pad_type_0 = const()[name = tensor<string, []>("op_2186_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_2186_pad_0 = const()[name = tensor<string, []>("op_2186_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [5120, 640, 1, 1]> down_blocks_1_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16"), val = tensor<fp16, [5120, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(82773696)))];
            tensor<fp16, [5120]> down_blocks_1_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16"), val = tensor<fp16, [5120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(89327360)))];
            tensor<fp16, [2, 5120, 1, 1024]> var_2186_cast = conv(bias = down_blocks_1_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16, dilations = var_2184, groups = var_984, pad = var_2186_pad_0, pad_type = var_2186_pad_type_0, strides = var_2182, weight = down_blocks_1_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16, x = input_109_cast);
            tensor<int32, [2]> var_2187_split_sizes_0 = const()[name = tensor<string, []>("op_2187_split_sizes_0"), val = tensor<int32, [2]>([2560, 2560])];
            tensor<int32, []> var_2187_axis_0 = const()[name = tensor<string, []>("op_2187_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [2, 2560, 1, 1024]> var_2187_cast_0, tensor<fp16, [2, 2560, 1, 1024]> var_2187_cast_1 = split(axis = var_2187_axis_0, split_sizes = var_2187_split_sizes_0, x = var_2186_cast);
            tensor<string, []> var_2189_mode_0 = const()[name = tensor<string, []>("op_2189_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [2, 2560, 1, 1024]> var_2189_cast = gelu(mode = var_2189_mode_0, x = var_2187_cast_1);
            tensor<fp16, [2, 2560, 1, 1024]> input_111_cast = mul(x = var_2187_cast_0, y = var_2189_cast);
            tensor<int32, [2]> var_2193 = const()[name = tensor<string, []>("op_2193"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2195 = const()[name = tensor<string, []>("op_2195"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_2197_pad_type_0 = const()[name = tensor<string, []>("op_2197_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_2197_pad_0 = const()[name = tensor<string, []>("op_2197_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 2560, 1, 1]> down_blocks_1_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16"), val = tensor<fp16, [640, 2560, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(89337664)))];
            tensor<fp16, [640]> down_blocks_1_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(92614528)))];
            tensor<fp16, [2, 640, 1, 1024]> var_2197_cast = conv(bias = down_blocks_1_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16, dilations = var_2195, groups = var_984, pad = var_2197_pad_0, pad_type = var_2197_pad_type_0, strides = var_2193, weight = down_blocks_1_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16, x = input_111_cast);
            tensor<fp16, [2, 640, 1, 1024]> hidden_states_69_cast = add(x = var_2197_cast, y = inputs_23_cast);
            tensor<int32, [4]> var_2199 = const()[name = tensor<string, []>("op_2199"), val = tensor<int32, [4]>([2, 640, 32, 32])];
            tensor<fp16, [2, 640, 32, 32]> input_113_cast = reshape(shape = var_2199, x = hidden_states_69_cast);
            tensor<int32, [2]> var_2203 = const()[name = tensor<string, []>("op_2203"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2205 = const()[name = tensor<string, []>("op_2205"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_71_pad_type_0 = const()[name = tensor<string, []>("hidden_states_71_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_71_pad_0 = const()[name = tensor<string, []>("hidden_states_71_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> down_blocks_1_attentions_1_proj_out_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_proj_out_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(92615872)))];
            tensor<fp16, [640]> down_blocks_1_attentions_1_proj_out_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_proj_out_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(93435136)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_71_cast = conv(bias = down_blocks_1_attentions_1_proj_out_bias_to_fp16, dilations = var_2205, groups = var_984, pad = hidden_states_71_pad_0, pad_type = hidden_states_71_pad_type_0, strides = var_2203, weight = down_blocks_1_attentions_1_proj_out_weight_to_fp16, x = input_113_cast);
            tensor<fp16, [2, 640, 32, 32]> input_115_cast_1 = add(x = hidden_states_71_cast, y = hidden_states_59_cast);
            tensor<int32, [2]> var_2212 = const()[name = tensor<string, []>("op_2212"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_2214 = const()[name = tensor<string, []>("op_2214"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_117_pad_type_0 = const()[name = tensor<string, []>("input_117_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_117_pad_0 = const()[name = tensor<string, []>("input_117_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [640, 640, 3, 3]> down_blocks_1_downsamplers_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_downsamplers_0_conv_weight_to_fp16"), val = tensor<fp16, [640, 640, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(93436480)))];
            tensor<fp16, [640]> down_blocks_1_downsamplers_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_downsamplers_0_conv_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(100809344)))];
            tensor<fp16, [2, 640, 16, 16]> input_117_cast_1 = conv(bias = down_blocks_1_downsamplers_0_conv_bias_to_fp16, dilations = var_2214, groups = var_984, pad = input_117_pad_0, pad_type = input_117_pad_type_0, strides = var_2212, weight = down_blocks_1_downsamplers_0_conv_weight_to_fp16, x = input_115_cast_1);
            tensor<bool, []> var_2249 = const()[name = tensor<string, []>("op_2249"), val = tensor<bool, []>(true)];
            tensor<int32, []> var_2254 = const()[name = tensor<string, []>("op_2254"), val = tensor<int32, []>(1)];
            tensor<int32, [5]> reshape_48_shape_0 = const()[name = tensor<string, []>("reshape_48_shape_0"), val = tensor<int32, [5]>([2, 32, 20, 16, 16])];
            tensor<fp16, [2, 32, 20, 16, 16]> reshape_48_cast = reshape(shape = reshape_48_shape_0, x = input_117_cast_1);
            tensor<int32, [3]> reduce_mean_36_axes_0 = const()[name = tensor<string, []>("reduce_mean_36_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_36_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_36_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_36_cast = reduce_mean(axes = reduce_mean_36_axes_0, keep_dims = reduce_mean_36_keep_dims_0, x = reshape_48_cast);
            tensor<fp16, [2, 32, 20, 16, 16]> sub_24_cast = sub(x = reshape_48_cast, y = reduce_mean_36_cast);
            tensor<fp16, [2, 32, 20, 16, 16]> square_12_cast = square(x = sub_24_cast);
            tensor<int32, [3]> reduce_mean_38_axes_0 = const()[name = tensor<string, []>("reduce_mean_38_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_38_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_38_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_38_cast = reduce_mean(axes = reduce_mean_38_axes_0, keep_dims = reduce_mean_38_keep_dims_0, x = square_12_cast);
            tensor<fp16, []> add_24_y_0_to_fp16 = const()[name = tensor<string, []>("add_24_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_24_cast = add(x = reduce_mean_38_cast, y = add_24_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_12_cast = sqrt(x = add_24_cast);
            tensor<fp16, [2, 32, 20, 16, 16]> real_div_12_cast = real_div(x = sub_24_cast, y = sqrt_12_cast);
            tensor<int32, [4]> reshape_49_shape_0 = const()[name = tensor<string, []>("reshape_49_shape_0"), val = tensor<int32, [4]>([2, 640, 16, 16])];
            tensor<fp16, [2, 640, 16, 16]> reshape_49_cast = reshape(shape = reshape_49_shape_0, x = real_div_12_cast);
            tensor<fp16, [640]> add_25_mean_0_to_fp16 = const()[name = tensor<string, []>("add_25_mean_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(100810688)))];
            tensor<fp16, [640]> add_25_variance_0_to_fp16 = const()[name = tensor<string, []>("add_25_variance_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(100812032)))];
            tensor<fp16, [640]> add_25_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_25_gamma_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(100813376)))];
            tensor<fp16, [640]> add_25_beta_0_to_fp16 = const()[name = tensor<string, []>("add_25_beta_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(100814720)))];
            tensor<fp16, []> add_25_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_25_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 640, 16, 16]> add_25_cast = batch_norm(beta = add_25_beta_0_to_fp16, epsilon = add_25_epsilon_0_to_fp16, gamma = add_25_gamma_0_to_fp16, mean = add_25_mean_0_to_fp16, variance = add_25_variance_0_to_fp16, x = reshape_49_cast);
            tensor<fp16, [2, 640, 16, 16]> input_121_cast = silu(x = add_25_cast);
            tensor<int32, [2]> var_2277 = const()[name = tensor<string, []>("op_2277"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2279 = const()[name = tensor<string, []>("op_2279"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_73_pad_type_0 = const()[name = tensor<string, []>("hidden_states_73_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_73_pad_0 = const()[name = tensor<string, []>("hidden_states_73_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 640, 3, 3]> down_blocks_2_resnets_0_conv1_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_resnets_0_conv1_weight_to_fp16"), val = tensor<fp16, [1280, 640, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(100816064)))];
            tensor<fp16, [1280]> down_blocks_2_resnets_0_conv1_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_resnets_0_conv1_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(115561728)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_73_cast = conv(bias = down_blocks_2_resnets_0_conv1_bias_to_fp16, dilations = var_2279, groups = var_2254, pad = hidden_states_73_pad_0, pad_type = hidden_states_73_pad_type_0, strides = var_2277, weight = down_blocks_2_resnets_0_conv1_weight_to_fp16, x = input_121_cast);
            tensor<int32, [2]> var_2285 = const()[name = tensor<string, []>("op_2285"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2287 = const()[name = tensor<string, []>("op_2287"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_9_pad_type_0 = const()[name = tensor<string, []>("temb_9_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_9_pad_0 = const()[name = tensor<string, []>("temb_9_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_resnets_0_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_resnets_0_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(115564352)))];
            tensor<fp16, [1280]> down_blocks_2_resnets_0_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_resnets_0_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(118841216)))];
            tensor<fp16, [2, 1280, 1, 1]> temb_9_cast = conv(bias = down_blocks_2_resnets_0_time_emb_proj_bias_to_fp16, dilations = var_2287, groups = var_2254, pad = temb_9_pad_0, pad_type = temb_9_pad_type_0, strides = var_2285, weight = down_blocks_2_resnets_0_time_emb_proj_weight_to_fp16, x = input_15_cast_1);
            tensor<fp16, [2, 1280, 16, 16]> input_125_cast = add(x = hidden_states_73_cast, y = temb_9_cast);
            tensor<int32, [5]> reshape_52_shape_0 = const()[name = tensor<string, []>("reshape_52_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 16, 16])];
            tensor<fp16, [2, 32, 40, 16, 16]> reshape_52_cast = reshape(shape = reshape_52_shape_0, x = input_125_cast);
            tensor<int32, [3]> reduce_mean_39_axes_0 = const()[name = tensor<string, []>("reduce_mean_39_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_39_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_39_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_39_cast = reduce_mean(axes = reduce_mean_39_axes_0, keep_dims = reduce_mean_39_keep_dims_0, x = reshape_52_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> sub_26_cast = sub(x = reshape_52_cast, y = reduce_mean_39_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> square_13_cast = square(x = sub_26_cast);
            tensor<int32, [3]> reduce_mean_41_axes_0 = const()[name = tensor<string, []>("reduce_mean_41_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_41_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_41_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_41_cast = reduce_mean(axes = reduce_mean_41_axes_0, keep_dims = reduce_mean_41_keep_dims_0, x = square_13_cast);
            tensor<fp16, []> add_26_y_0_to_fp16 = const()[name = tensor<string, []>("add_26_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_26_cast = add(x = reduce_mean_41_cast, y = add_26_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_13_cast = sqrt(x = add_26_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> real_div_13_cast = real_div(x = sub_26_cast, y = sqrt_13_cast);
            tensor<int32, [4]> reshape_53_shape_0 = const()[name = tensor<string, []>("reshape_53_shape_0"), val = tensor<int32, [4]>([2, 1280, 16, 16])];
            tensor<fp16, [2, 1280, 16, 16]> reshape_53_cast = reshape(shape = reshape_53_shape_0, x = real_div_13_cast);
            tensor<fp16, [1280]> add_27_mean_0_to_fp16 = const()[name = tensor<string, []>("add_27_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(118843840)))];
            tensor<fp16, [1280]> add_27_variance_0_to_fp16 = const()[name = tensor<string, []>("add_27_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(118846464)))];
            tensor<fp16, [1280]> add_27_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_27_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(118849088)))];
            tensor<fp16, [1280]> add_27_beta_0_to_fp16 = const()[name = tensor<string, []>("add_27_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(118851712)))];
            tensor<fp16, []> add_27_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_27_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 16, 16]> add_27_cast = batch_norm(beta = add_27_beta_0_to_fp16, epsilon = add_27_epsilon_0_to_fp16, gamma = add_27_gamma_0_to_fp16, mean = add_27_mean_0_to_fp16, variance = add_27_variance_0_to_fp16, x = reshape_53_cast);
            tensor<fp16, [2, 1280, 16, 16]> input_129_cast = silu(x = add_27_cast);
            tensor<int32, [2]> var_2297 = const()[name = tensor<string, []>("op_2297"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2299 = const()[name = tensor<string, []>("op_2299"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_75_pad_type_0 = const()[name = tensor<string, []>("hidden_states_75_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_75_pad_0 = const()[name = tensor<string, []>("hidden_states_75_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> down_blocks_2_resnets_0_conv2_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_resnets_0_conv2_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(118854336)))];
            tensor<fp16, [1280]> down_blocks_2_resnets_0_conv2_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_resnets_0_conv2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(148345600)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_75_cast = conv(bias = down_blocks_2_resnets_0_conv2_bias_to_fp16, dilations = var_2299, groups = var_2254, pad = hidden_states_75_pad_0, pad_type = hidden_states_75_pad_type_0, strides = var_2297, weight = down_blocks_2_resnets_0_conv2_weight_to_fp16, x = input_129_cast);
            tensor<int32, [2]> var_2304 = const()[name = tensor<string, []>("op_2304"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2306 = const()[name = tensor<string, []>("op_2306"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_3_pad_type_0 = const()[name = tensor<string, []>("x_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_3_pad_0 = const()[name = tensor<string, []>("x_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 640, 1, 1]> down_blocks_2_resnets_0_conv_shortcut_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_resnets_0_conv_shortcut_weight_to_fp16"), val = tensor<fp16, [1280, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(148348224)))];
            tensor<fp16, [1280]> down_blocks_2_resnets_0_conv_shortcut_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_resnets_0_conv_shortcut_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(149986688)))];
            tensor<fp16, [2, 1280, 16, 16]> x_3_cast = conv(bias = down_blocks_2_resnets_0_conv_shortcut_bias_to_fp16, dilations = var_2306, groups = var_2254, pad = x_3_pad_0, pad_type = x_3_pad_type_0, strides = var_2304, weight = down_blocks_2_resnets_0_conv_shortcut_weight_to_fp16, x = input_117_cast_1);
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_77_cast = add(x = x_3_cast, y = hidden_states_75_cast);
            tensor<int32, [5]> reshape_56_shape_0 = const()[name = tensor<string, []>("reshape_56_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 16, 16])];
            tensor<fp16, [2, 32, 40, 16, 16]> reshape_56_cast = reshape(shape = reshape_56_shape_0, x = hidden_states_77_cast);
            tensor<int32, [3]> reduce_mean_42_axes_0 = const()[name = tensor<string, []>("reduce_mean_42_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_42_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_42_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_42_cast = reduce_mean(axes = reduce_mean_42_axes_0, keep_dims = reduce_mean_42_keep_dims_0, x = reshape_56_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> sub_28_cast = sub(x = reshape_56_cast, y = reduce_mean_42_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> square_14_cast = square(x = sub_28_cast);
            tensor<int32, [3]> reduce_mean_44_axes_0 = const()[name = tensor<string, []>("reduce_mean_44_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_44_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_44_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_44_cast = reduce_mean(axes = reduce_mean_44_axes_0, keep_dims = reduce_mean_44_keep_dims_0, x = square_14_cast);
            tensor<fp16, []> add_28_y_0_to_fp16 = const()[name = tensor<string, []>("add_28_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_28_cast = add(x = reduce_mean_44_cast, y = add_28_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_14_cast = sqrt(x = add_28_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> real_div_14_cast = real_div(x = sub_28_cast, y = sqrt_14_cast);
            tensor<int32, [4]> reshape_57_shape_0 = const()[name = tensor<string, []>("reshape_57_shape_0"), val = tensor<int32, [4]>([2, 1280, 16, 16])];
            tensor<fp16, [2, 1280, 16, 16]> reshape_57_cast = reshape(shape = reshape_57_shape_0, x = real_div_14_cast);
            tensor<fp16, [1280]> add_29_mean_0_to_fp16 = const()[name = tensor<string, []>("add_29_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(149989312)))];
            tensor<fp16, [1280]> add_29_variance_0_to_fp16 = const()[name = tensor<string, []>("add_29_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(149991936)))];
            tensor<fp16, [1280]> add_29_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_29_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(149994560)))];
            tensor<fp16, [1280]> add_29_beta_0_to_fp16 = const()[name = tensor<string, []>("add_29_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(149997184)))];
            tensor<fp16, []> add_29_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_29_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 16, 16]> add_29_cast = batch_norm(beta = add_29_beta_0_to_fp16, epsilon = add_29_epsilon_0_to_fp16, gamma = add_29_gamma_0_to_fp16, mean = add_29_mean_0_to_fp16, variance = add_29_variance_0_to_fp16, x = reshape_57_cast);
            tensor<int32, [2]> var_2326 = const()[name = tensor<string, []>("op_2326"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2328 = const()[name = tensor<string, []>("op_2328"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_79_pad_type_0 = const()[name = tensor<string, []>("hidden_states_79_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_79_pad_0 = const()[name = tensor<string, []>("hidden_states_79_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_attentions_0_proj_in_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_proj_in_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(149999808)))];
            tensor<fp16, [1280]> down_blocks_2_attentions_0_proj_in_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_proj_in_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(153276672)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_79_cast = conv(bias = down_blocks_2_attentions_0_proj_in_bias_to_fp16, dilations = var_2328, groups = var_2254, pad = hidden_states_79_pad_0, pad_type = hidden_states_79_pad_type_0, strides = var_2326, weight = down_blocks_2_attentions_0_proj_in_weight_to_fp16, x = add_29_cast);
            tensor<int32, [4]> var_2333 = const()[name = tensor<string, []>("op_2333"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<fp16, [2, 1280, 1, 256]> inputs_25_cast = reshape(shape = var_2333, x = hidden_states_79_cast);
            tensor<int32, [1]> var_2343 = const()[name = tensor<string, []>("op_2343"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> channels_mean_25_cast = reduce_mean(axes = var_2343, keep_dims = var_2249, x = inputs_25_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_25_cast = sub(x = inputs_25_cast, y = channels_mean_25_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_sq_25_cast = mul(x = zero_mean_25_cast, y = zero_mean_25_cast);
            tensor<int32, [1]> var_2347 = const()[name = tensor<string, []>("op_2347"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> var_2348_cast = reduce_mean(axes = var_2347, keep_dims = var_2249, x = zero_mean_sq_25_cast);
            tensor<fp16, []> var_2349_to_fp16 = const()[name = tensor<string, []>("op_2349_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 256]> var_2350_cast = add(x = var_2348_cast, y = var_2349_to_fp16);
            tensor<fp16, []> denom_25_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_25_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 256]> denom_25_cast = rsqrt(epsilon = denom_25_epsilon_0_to_fp16, x = var_2350_cast);
            tensor<fp16, [2, 1280, 1, 256]> out_25_cast = mul(x = zero_mean_25_cast, y = denom_25_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_2354_to_fp16 = const()[name = tensor<string, []>("op_2354_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(153279296)))];
            tensor<fp16, [2, 1280, 1, 256]> var_2355_cast = add(x = out_25_cast, y = var_2354_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_2357_to_fp16 = const()[name = tensor<string, []>("op_2357_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(153281920)))];
            tensor<fp16, [2, 1280, 1, 256]> hidden_states_81_cast = mul(x = var_2355_cast, y = var_2357_to_fp16);
            tensor<int32, [2]> var_2364 = const()[name = tensor<string, []>("op_2364"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2366 = const()[name = tensor<string, []>("op_2366"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_17_pad_type_0 = const()[name = tensor<string, []>("q_17_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_17_pad_0 = const()[name = tensor<string, []>("q_17_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(153284544)))];
            tensor<fp16, [2, 1280, 1, 256]> q_17_cast = conv(dilations = var_2366, groups = var_2254, pad = q_17_pad_0, pad_type = q_17_pad_type_0, strides = var_2364, weight = down_blocks_2_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16, x = hidden_states_81_cast);
            tensor<int32, [2]> var_2370 = const()[name = tensor<string, []>("op_2370"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2372 = const()[name = tensor<string, []>("op_2372"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_33_pad_type_0 = const()[name = tensor<string, []>("k_33_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_33_pad_0 = const()[name = tensor<string, []>("k_33_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(156561408)))];
            tensor<fp16, [2, 1280, 1, 256]> k_33_cast = conv(dilations = var_2372, groups = var_2254, pad = k_33_pad_0, pad_type = k_33_pad_type_0, strides = var_2370, weight = down_blocks_2_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16, x = hidden_states_81_cast);
            tensor<int32, [2]> var_2376 = const()[name = tensor<string, []>("op_2376"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2378 = const()[name = tensor<string, []>("op_2378"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_17_pad_type_0 = const()[name = tensor<string, []>("v_17_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_17_pad_0 = const()[name = tensor<string, []>("v_17_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(159838272)))];
            tensor<fp16, [2, 1280, 1, 256]> v_17_cast = conv(dilations = var_2378, groups = var_2254, pad = v_17_pad_0, pad_type = v_17_pad_type_0, strides = var_2376, weight = down_blocks_2_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16, x = hidden_states_81_cast);
            tensor<int32, [4]> var_2382_begin_0 = const()[name = tensor<string, []>("op_2382_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2382_end_0 = const()[name = tensor<string, []>("op_2382_end_0"), val = tensor<int32, [4]>([2, 64, 1, 256])];
            tensor<bool, [4]> var_2382_end_mask_0 = const()[name = tensor<string, []>("op_2382_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2382_cast = slice_by_index(begin = var_2382_begin_0, end = var_2382_end_0, end_mask = var_2382_end_mask_0, x = q_17_cast);
            tensor<int32, [4]> var_2386_begin_0 = const()[name = tensor<string, []>("op_2386_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_2386_end_0 = const()[name = tensor<string, []>("op_2386_end_0"), val = tensor<int32, [4]>([2, 128, 1, 256])];
            tensor<bool, [4]> var_2386_end_mask_0 = const()[name = tensor<string, []>("op_2386_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2386_cast = slice_by_index(begin = var_2386_begin_0, end = var_2386_end_0, end_mask = var_2386_end_mask_0, x = q_17_cast);
            tensor<int32, [4]> var_2390_begin_0 = const()[name = tensor<string, []>("op_2390_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_2390_end_0 = const()[name = tensor<string, []>("op_2390_end_0"), val = tensor<int32, [4]>([2, 192, 1, 256])];
            tensor<bool, [4]> var_2390_end_mask_0 = const()[name = tensor<string, []>("op_2390_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2390_cast = slice_by_index(begin = var_2390_begin_0, end = var_2390_end_0, end_mask = var_2390_end_mask_0, x = q_17_cast);
            tensor<int32, [4]> var_2394_begin_0 = const()[name = tensor<string, []>("op_2394_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_2394_end_0 = const()[name = tensor<string, []>("op_2394_end_0"), val = tensor<int32, [4]>([2, 256, 1, 256])];
            tensor<bool, [4]> var_2394_end_mask_0 = const()[name = tensor<string, []>("op_2394_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2394_cast = slice_by_index(begin = var_2394_begin_0, end = var_2394_end_0, end_mask = var_2394_end_mask_0, x = q_17_cast);
            tensor<int32, [4]> var_2398_begin_0 = const()[name = tensor<string, []>("op_2398_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_2398_end_0 = const()[name = tensor<string, []>("op_2398_end_0"), val = tensor<int32, [4]>([2, 320, 1, 256])];
            tensor<bool, [4]> var_2398_end_mask_0 = const()[name = tensor<string, []>("op_2398_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2398_cast = slice_by_index(begin = var_2398_begin_0, end = var_2398_end_0, end_mask = var_2398_end_mask_0, x = q_17_cast);
            tensor<int32, [4]> var_2402_begin_0 = const()[name = tensor<string, []>("op_2402_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_2402_end_0 = const()[name = tensor<string, []>("op_2402_end_0"), val = tensor<int32, [4]>([2, 384, 1, 256])];
            tensor<bool, [4]> var_2402_end_mask_0 = const()[name = tensor<string, []>("op_2402_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2402_cast = slice_by_index(begin = var_2402_begin_0, end = var_2402_end_0, end_mask = var_2402_end_mask_0, x = q_17_cast);
            tensor<int32, [4]> var_2406_begin_0 = const()[name = tensor<string, []>("op_2406_begin_0"), val = tensor<int32, [4]>([0, 384, 0, 0])];
            tensor<int32, [4]> var_2406_end_0 = const()[name = tensor<string, []>("op_2406_end_0"), val = tensor<int32, [4]>([2, 448, 1, 256])];
            tensor<bool, [4]> var_2406_end_mask_0 = const()[name = tensor<string, []>("op_2406_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2406_cast = slice_by_index(begin = var_2406_begin_0, end = var_2406_end_0, end_mask = var_2406_end_mask_0, x = q_17_cast);
            tensor<int32, [4]> var_2410_begin_0 = const()[name = tensor<string, []>("op_2410_begin_0"), val = tensor<int32, [4]>([0, 448, 0, 0])];
            tensor<int32, [4]> var_2410_end_0 = const()[name = tensor<string, []>("op_2410_end_0"), val = tensor<int32, [4]>([2, 512, 1, 256])];
            tensor<bool, [4]> var_2410_end_mask_0 = const()[name = tensor<string, []>("op_2410_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2410_cast = slice_by_index(begin = var_2410_begin_0, end = var_2410_end_0, end_mask = var_2410_end_mask_0, x = q_17_cast);
            tensor<int32, [4]> var_2414_begin_0 = const()[name = tensor<string, []>("op_2414_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_2414_end_0 = const()[name = tensor<string, []>("op_2414_end_0"), val = tensor<int32, [4]>([2, 576, 1, 256])];
            tensor<bool, [4]> var_2414_end_mask_0 = const()[name = tensor<string, []>("op_2414_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2414_cast = slice_by_index(begin = var_2414_begin_0, end = var_2414_end_0, end_mask = var_2414_end_mask_0, x = q_17_cast);
            tensor<int32, [4]> var_2418_begin_0 = const()[name = tensor<string, []>("op_2418_begin_0"), val = tensor<int32, [4]>([0, 576, 0, 0])];
            tensor<int32, [4]> var_2418_end_0 = const()[name = tensor<string, []>("op_2418_end_0"), val = tensor<int32, [4]>([2, 640, 1, 256])];
            tensor<bool, [4]> var_2418_end_mask_0 = const()[name = tensor<string, []>("op_2418_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2418_cast = slice_by_index(begin = var_2418_begin_0, end = var_2418_end_0, end_mask = var_2418_end_mask_0, x = q_17_cast);
            tensor<int32, [4]> var_2422_begin_0 = const()[name = tensor<string, []>("op_2422_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_2422_end_0 = const()[name = tensor<string, []>("op_2422_end_0"), val = tensor<int32, [4]>([2, 704, 1, 256])];
            tensor<bool, [4]> var_2422_end_mask_0 = const()[name = tensor<string, []>("op_2422_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2422_cast = slice_by_index(begin = var_2422_begin_0, end = var_2422_end_0, end_mask = var_2422_end_mask_0, x = q_17_cast);
            tensor<int32, [4]> var_2426_begin_0 = const()[name = tensor<string, []>("op_2426_begin_0"), val = tensor<int32, [4]>([0, 704, 0, 0])];
            tensor<int32, [4]> var_2426_end_0 = const()[name = tensor<string, []>("op_2426_end_0"), val = tensor<int32, [4]>([2, 768, 1, 256])];
            tensor<bool, [4]> var_2426_end_mask_0 = const()[name = tensor<string, []>("op_2426_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2426_cast = slice_by_index(begin = var_2426_begin_0, end = var_2426_end_0, end_mask = var_2426_end_mask_0, x = q_17_cast);
            tensor<int32, [4]> var_2430_begin_0 = const()[name = tensor<string, []>("op_2430_begin_0"), val = tensor<int32, [4]>([0, 768, 0, 0])];
            tensor<int32, [4]> var_2430_end_0 = const()[name = tensor<string, []>("op_2430_end_0"), val = tensor<int32, [4]>([2, 832, 1, 256])];
            tensor<bool, [4]> var_2430_end_mask_0 = const()[name = tensor<string, []>("op_2430_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2430_cast = slice_by_index(begin = var_2430_begin_0, end = var_2430_end_0, end_mask = var_2430_end_mask_0, x = q_17_cast);
            tensor<int32, [4]> var_2434_begin_0 = const()[name = tensor<string, []>("op_2434_begin_0"), val = tensor<int32, [4]>([0, 832, 0, 0])];
            tensor<int32, [4]> var_2434_end_0 = const()[name = tensor<string, []>("op_2434_end_0"), val = tensor<int32, [4]>([2, 896, 1, 256])];
            tensor<bool, [4]> var_2434_end_mask_0 = const()[name = tensor<string, []>("op_2434_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2434_cast = slice_by_index(begin = var_2434_begin_0, end = var_2434_end_0, end_mask = var_2434_end_mask_0, x = q_17_cast);
            tensor<int32, [4]> var_2438_begin_0 = const()[name = tensor<string, []>("op_2438_begin_0"), val = tensor<int32, [4]>([0, 896, 0, 0])];
            tensor<int32, [4]> var_2438_end_0 = const()[name = tensor<string, []>("op_2438_end_0"), val = tensor<int32, [4]>([2, 960, 1, 256])];
            tensor<bool, [4]> var_2438_end_mask_0 = const()[name = tensor<string, []>("op_2438_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2438_cast = slice_by_index(begin = var_2438_begin_0, end = var_2438_end_0, end_mask = var_2438_end_mask_0, x = q_17_cast);
            tensor<int32, [4]> var_2442_begin_0 = const()[name = tensor<string, []>("op_2442_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_2442_end_0 = const()[name = tensor<string, []>("op_2442_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 256])];
            tensor<bool, [4]> var_2442_end_mask_0 = const()[name = tensor<string, []>("op_2442_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2442_cast = slice_by_index(begin = var_2442_begin_0, end = var_2442_end_0, end_mask = var_2442_end_mask_0, x = q_17_cast);
            tensor<int32, [4]> var_2446_begin_0 = const()[name = tensor<string, []>("op_2446_begin_0"), val = tensor<int32, [4]>([0, 1024, 0, 0])];
            tensor<int32, [4]> var_2446_end_0 = const()[name = tensor<string, []>("op_2446_end_0"), val = tensor<int32, [4]>([2, 1088, 1, 256])];
            tensor<bool, [4]> var_2446_end_mask_0 = const()[name = tensor<string, []>("op_2446_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2446_cast = slice_by_index(begin = var_2446_begin_0, end = var_2446_end_0, end_mask = var_2446_end_mask_0, x = q_17_cast);
            tensor<int32, [4]> var_2450_begin_0 = const()[name = tensor<string, []>("op_2450_begin_0"), val = tensor<int32, [4]>([0, 1088, 0, 0])];
            tensor<int32, [4]> var_2450_end_0 = const()[name = tensor<string, []>("op_2450_end_0"), val = tensor<int32, [4]>([2, 1152, 1, 256])];
            tensor<bool, [4]> var_2450_end_mask_0 = const()[name = tensor<string, []>("op_2450_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2450_cast = slice_by_index(begin = var_2450_begin_0, end = var_2450_end_0, end_mask = var_2450_end_mask_0, x = q_17_cast);
            tensor<int32, [4]> var_2454_begin_0 = const()[name = tensor<string, []>("op_2454_begin_0"), val = tensor<int32, [4]>([0, 1152, 0, 0])];
            tensor<int32, [4]> var_2454_end_0 = const()[name = tensor<string, []>("op_2454_end_0"), val = tensor<int32, [4]>([2, 1216, 1, 256])];
            tensor<bool, [4]> var_2454_end_mask_0 = const()[name = tensor<string, []>("op_2454_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2454_cast = slice_by_index(begin = var_2454_begin_0, end = var_2454_end_0, end_mask = var_2454_end_mask_0, x = q_17_cast);
            tensor<int32, [4]> var_2458_begin_0 = const()[name = tensor<string, []>("op_2458_begin_0"), val = tensor<int32, [4]>([0, 1216, 0, 0])];
            tensor<int32, [4]> var_2458_end_0 = const()[name = tensor<string, []>("op_2458_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<bool, [4]> var_2458_end_mask_0 = const()[name = tensor<string, []>("op_2458_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2458_cast = slice_by_index(begin = var_2458_begin_0, end = var_2458_end_0, end_mask = var_2458_end_mask_0, x = q_17_cast);
            tensor<int32, [4]> k_35_perm_0 = const()[name = tensor<string, []>("k_35_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_2465_begin_0 = const()[name = tensor<string, []>("op_2465_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2465_end_0 = const()[name = tensor<string, []>("op_2465_end_0"), val = tensor<int32, [4]>([2, 256, 1, 64])];
            tensor<bool, [4]> var_2465_end_mask_0 = const()[name = tensor<string, []>("op_2465_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 1280]> transpose_69 = transpose(perm = k_35_perm_0, x = k_33_cast);
            tensor<fp16, [2, 256, 1, 64]> var_2465_cast = slice_by_index(begin = var_2465_begin_0, end = var_2465_end_0, end_mask = var_2465_end_mask_0, x = transpose_69);
            tensor<int32, [4]> var_2469_begin_0 = const()[name = tensor<string, []>("op_2469_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 64])];
            tensor<int32, [4]> var_2469_end_0 = const()[name = tensor<string, []>("op_2469_end_0"), val = tensor<int32, [4]>([2, 256, 1, 128])];
            tensor<bool, [4]> var_2469_end_mask_0 = const()[name = tensor<string, []>("op_2469_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_2469_cast = slice_by_index(begin = var_2469_begin_0, end = var_2469_end_0, end_mask = var_2469_end_mask_0, x = transpose_69);
            tensor<int32, [4]> var_2473_begin_0 = const()[name = tensor<string, []>("op_2473_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 128])];
            tensor<int32, [4]> var_2473_end_0 = const()[name = tensor<string, []>("op_2473_end_0"), val = tensor<int32, [4]>([2, 256, 1, 192])];
            tensor<bool, [4]> var_2473_end_mask_0 = const()[name = tensor<string, []>("op_2473_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_2473_cast = slice_by_index(begin = var_2473_begin_0, end = var_2473_end_0, end_mask = var_2473_end_mask_0, x = transpose_69);
            tensor<int32, [4]> var_2477_begin_0 = const()[name = tensor<string, []>("op_2477_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 192])];
            tensor<int32, [4]> var_2477_end_0 = const()[name = tensor<string, []>("op_2477_end_0"), val = tensor<int32, [4]>([2, 256, 1, 256])];
            tensor<bool, [4]> var_2477_end_mask_0 = const()[name = tensor<string, []>("op_2477_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_2477_cast = slice_by_index(begin = var_2477_begin_0, end = var_2477_end_0, end_mask = var_2477_end_mask_0, x = transpose_69);
            tensor<int32, [4]> var_2481_begin_0 = const()[name = tensor<string, []>("op_2481_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 256])];
            tensor<int32, [4]> var_2481_end_0 = const()[name = tensor<string, []>("op_2481_end_0"), val = tensor<int32, [4]>([2, 256, 1, 320])];
            tensor<bool, [4]> var_2481_end_mask_0 = const()[name = tensor<string, []>("op_2481_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_2481_cast = slice_by_index(begin = var_2481_begin_0, end = var_2481_end_0, end_mask = var_2481_end_mask_0, x = transpose_69);
            tensor<int32, [4]> var_2485_begin_0 = const()[name = tensor<string, []>("op_2485_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_2485_end_0 = const()[name = tensor<string, []>("op_2485_end_0"), val = tensor<int32, [4]>([2, 256, 1, 384])];
            tensor<bool, [4]> var_2485_end_mask_0 = const()[name = tensor<string, []>("op_2485_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_2485_cast = slice_by_index(begin = var_2485_begin_0, end = var_2485_end_0, end_mask = var_2485_end_mask_0, x = transpose_69);
            tensor<int32, [4]> var_2489_begin_0 = const()[name = tensor<string, []>("op_2489_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 384])];
            tensor<int32, [4]> var_2489_end_0 = const()[name = tensor<string, []>("op_2489_end_0"), val = tensor<int32, [4]>([2, 256, 1, 448])];
            tensor<bool, [4]> var_2489_end_mask_0 = const()[name = tensor<string, []>("op_2489_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_2489_cast = slice_by_index(begin = var_2489_begin_0, end = var_2489_end_0, end_mask = var_2489_end_mask_0, x = transpose_69);
            tensor<int32, [4]> var_2493_begin_0 = const()[name = tensor<string, []>("op_2493_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 448])];
            tensor<int32, [4]> var_2493_end_0 = const()[name = tensor<string, []>("op_2493_end_0"), val = tensor<int32, [4]>([2, 256, 1, 512])];
            tensor<bool, [4]> var_2493_end_mask_0 = const()[name = tensor<string, []>("op_2493_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_2493_cast = slice_by_index(begin = var_2493_begin_0, end = var_2493_end_0, end_mask = var_2493_end_mask_0, x = transpose_69);
            tensor<int32, [4]> var_2497_begin_0 = const()[name = tensor<string, []>("op_2497_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 512])];
            tensor<int32, [4]> var_2497_end_0 = const()[name = tensor<string, []>("op_2497_end_0"), val = tensor<int32, [4]>([2, 256, 1, 576])];
            tensor<bool, [4]> var_2497_end_mask_0 = const()[name = tensor<string, []>("op_2497_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_2497_cast = slice_by_index(begin = var_2497_begin_0, end = var_2497_end_0, end_mask = var_2497_end_mask_0, x = transpose_69);
            tensor<int32, [4]> var_2501_begin_0 = const()[name = tensor<string, []>("op_2501_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 576])];
            tensor<int32, [4]> var_2501_end_0 = const()[name = tensor<string, []>("op_2501_end_0"), val = tensor<int32, [4]>([2, 256, 1, 640])];
            tensor<bool, [4]> var_2501_end_mask_0 = const()[name = tensor<string, []>("op_2501_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_2501_cast = slice_by_index(begin = var_2501_begin_0, end = var_2501_end_0, end_mask = var_2501_end_mask_0, x = transpose_69);
            tensor<int32, [4]> var_2505_begin_0 = const()[name = tensor<string, []>("op_2505_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 640])];
            tensor<int32, [4]> var_2505_end_0 = const()[name = tensor<string, []>("op_2505_end_0"), val = tensor<int32, [4]>([2, 256, 1, 704])];
            tensor<bool, [4]> var_2505_end_mask_0 = const()[name = tensor<string, []>("op_2505_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_2505_cast = slice_by_index(begin = var_2505_begin_0, end = var_2505_end_0, end_mask = var_2505_end_mask_0, x = transpose_69);
            tensor<int32, [4]> var_2509_begin_0 = const()[name = tensor<string, []>("op_2509_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 704])];
            tensor<int32, [4]> var_2509_end_0 = const()[name = tensor<string, []>("op_2509_end_0"), val = tensor<int32, [4]>([2, 256, 1, 768])];
            tensor<bool, [4]> var_2509_end_mask_0 = const()[name = tensor<string, []>("op_2509_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_2509_cast = slice_by_index(begin = var_2509_begin_0, end = var_2509_end_0, end_mask = var_2509_end_mask_0, x = transpose_69);
            tensor<int32, [4]> var_2513_begin_0 = const()[name = tensor<string, []>("op_2513_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 768])];
            tensor<int32, [4]> var_2513_end_0 = const()[name = tensor<string, []>("op_2513_end_0"), val = tensor<int32, [4]>([2, 256, 1, 832])];
            tensor<bool, [4]> var_2513_end_mask_0 = const()[name = tensor<string, []>("op_2513_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_2513_cast = slice_by_index(begin = var_2513_begin_0, end = var_2513_end_0, end_mask = var_2513_end_mask_0, x = transpose_69);
            tensor<int32, [4]> var_2517_begin_0 = const()[name = tensor<string, []>("op_2517_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 832])];
            tensor<int32, [4]> var_2517_end_0 = const()[name = tensor<string, []>("op_2517_end_0"), val = tensor<int32, [4]>([2, 256, 1, 896])];
            tensor<bool, [4]> var_2517_end_mask_0 = const()[name = tensor<string, []>("op_2517_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_2517_cast = slice_by_index(begin = var_2517_begin_0, end = var_2517_end_0, end_mask = var_2517_end_mask_0, x = transpose_69);
            tensor<int32, [4]> var_2521_begin_0 = const()[name = tensor<string, []>("op_2521_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 896])];
            tensor<int32, [4]> var_2521_end_0 = const()[name = tensor<string, []>("op_2521_end_0"), val = tensor<int32, [4]>([2, 256, 1, 960])];
            tensor<bool, [4]> var_2521_end_mask_0 = const()[name = tensor<string, []>("op_2521_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_2521_cast = slice_by_index(begin = var_2521_begin_0, end = var_2521_end_0, end_mask = var_2521_end_mask_0, x = transpose_69);
            tensor<int32, [4]> var_2525_begin_0 = const()[name = tensor<string, []>("op_2525_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 960])];
            tensor<int32, [4]> var_2525_end_0 = const()[name = tensor<string, []>("op_2525_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1024])];
            tensor<bool, [4]> var_2525_end_mask_0 = const()[name = tensor<string, []>("op_2525_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_2525_cast = slice_by_index(begin = var_2525_begin_0, end = var_2525_end_0, end_mask = var_2525_end_mask_0, x = transpose_69);
            tensor<int32, [4]> var_2529_begin_0 = const()[name = tensor<string, []>("op_2529_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1024])];
            tensor<int32, [4]> var_2529_end_0 = const()[name = tensor<string, []>("op_2529_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1088])];
            tensor<bool, [4]> var_2529_end_mask_0 = const()[name = tensor<string, []>("op_2529_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_2529_cast = slice_by_index(begin = var_2529_begin_0, end = var_2529_end_0, end_mask = var_2529_end_mask_0, x = transpose_69);
            tensor<int32, [4]> var_2533_begin_0 = const()[name = tensor<string, []>("op_2533_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1088])];
            tensor<int32, [4]> var_2533_end_0 = const()[name = tensor<string, []>("op_2533_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1152])];
            tensor<bool, [4]> var_2533_end_mask_0 = const()[name = tensor<string, []>("op_2533_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_2533_cast = slice_by_index(begin = var_2533_begin_0, end = var_2533_end_0, end_mask = var_2533_end_mask_0, x = transpose_69);
            tensor<int32, [4]> var_2537_begin_0 = const()[name = tensor<string, []>("op_2537_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1152])];
            tensor<int32, [4]> var_2537_end_0 = const()[name = tensor<string, []>("op_2537_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1216])];
            tensor<bool, [4]> var_2537_end_mask_0 = const()[name = tensor<string, []>("op_2537_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_2537_cast = slice_by_index(begin = var_2537_begin_0, end = var_2537_end_0, end_mask = var_2537_end_mask_0, x = transpose_69);
            tensor<int32, [4]> var_2541_begin_0 = const()[name = tensor<string, []>("op_2541_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1216])];
            tensor<int32, [4]> var_2541_end_0 = const()[name = tensor<string, []>("op_2541_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1280])];
            tensor<bool, [4]> var_2541_end_mask_0 = const()[name = tensor<string, []>("op_2541_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_2541_cast = slice_by_index(begin = var_2541_begin_0, end = var_2541_end_0, end_mask = var_2541_end_mask_0, x = transpose_69);
            tensor<int32, [4]> var_2543_begin_0 = const()[name = tensor<string, []>("op_2543_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2543_end_0 = const()[name = tensor<string, []>("op_2543_end_0"), val = tensor<int32, [4]>([2, 64, 1, 256])];
            tensor<bool, [4]> var_2543_end_mask_0 = const()[name = tensor<string, []>("op_2543_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2543_cast = slice_by_index(begin = var_2543_begin_0, end = var_2543_end_0, end_mask = var_2543_end_mask_0, x = v_17_cast);
            tensor<int32, [4]> var_2547_begin_0 = const()[name = tensor<string, []>("op_2547_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_2547_end_0 = const()[name = tensor<string, []>("op_2547_end_0"), val = tensor<int32, [4]>([2, 128, 1, 256])];
            tensor<bool, [4]> var_2547_end_mask_0 = const()[name = tensor<string, []>("op_2547_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2547_cast = slice_by_index(begin = var_2547_begin_0, end = var_2547_end_0, end_mask = var_2547_end_mask_0, x = v_17_cast);
            tensor<int32, [4]> var_2551_begin_0 = const()[name = tensor<string, []>("op_2551_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_2551_end_0 = const()[name = tensor<string, []>("op_2551_end_0"), val = tensor<int32, [4]>([2, 192, 1, 256])];
            tensor<bool, [4]> var_2551_end_mask_0 = const()[name = tensor<string, []>("op_2551_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2551_cast = slice_by_index(begin = var_2551_begin_0, end = var_2551_end_0, end_mask = var_2551_end_mask_0, x = v_17_cast);
            tensor<int32, [4]> var_2555_begin_0 = const()[name = tensor<string, []>("op_2555_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_2555_end_0 = const()[name = tensor<string, []>("op_2555_end_0"), val = tensor<int32, [4]>([2, 256, 1, 256])];
            tensor<bool, [4]> var_2555_end_mask_0 = const()[name = tensor<string, []>("op_2555_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2555_cast = slice_by_index(begin = var_2555_begin_0, end = var_2555_end_0, end_mask = var_2555_end_mask_0, x = v_17_cast);
            tensor<int32, [4]> var_2559_begin_0 = const()[name = tensor<string, []>("op_2559_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_2559_end_0 = const()[name = tensor<string, []>("op_2559_end_0"), val = tensor<int32, [4]>([2, 320, 1, 256])];
            tensor<bool, [4]> var_2559_end_mask_0 = const()[name = tensor<string, []>("op_2559_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2559_cast = slice_by_index(begin = var_2559_begin_0, end = var_2559_end_0, end_mask = var_2559_end_mask_0, x = v_17_cast);
            tensor<int32, [4]> var_2563_begin_0 = const()[name = tensor<string, []>("op_2563_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_2563_end_0 = const()[name = tensor<string, []>("op_2563_end_0"), val = tensor<int32, [4]>([2, 384, 1, 256])];
            tensor<bool, [4]> var_2563_end_mask_0 = const()[name = tensor<string, []>("op_2563_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2563_cast = slice_by_index(begin = var_2563_begin_0, end = var_2563_end_0, end_mask = var_2563_end_mask_0, x = v_17_cast);
            tensor<int32, [4]> var_2567_begin_0 = const()[name = tensor<string, []>("op_2567_begin_0"), val = tensor<int32, [4]>([0, 384, 0, 0])];
            tensor<int32, [4]> var_2567_end_0 = const()[name = tensor<string, []>("op_2567_end_0"), val = tensor<int32, [4]>([2, 448, 1, 256])];
            tensor<bool, [4]> var_2567_end_mask_0 = const()[name = tensor<string, []>("op_2567_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2567_cast = slice_by_index(begin = var_2567_begin_0, end = var_2567_end_0, end_mask = var_2567_end_mask_0, x = v_17_cast);
            tensor<int32, [4]> var_2571_begin_0 = const()[name = tensor<string, []>("op_2571_begin_0"), val = tensor<int32, [4]>([0, 448, 0, 0])];
            tensor<int32, [4]> var_2571_end_0 = const()[name = tensor<string, []>("op_2571_end_0"), val = tensor<int32, [4]>([2, 512, 1, 256])];
            tensor<bool, [4]> var_2571_end_mask_0 = const()[name = tensor<string, []>("op_2571_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2571_cast = slice_by_index(begin = var_2571_begin_0, end = var_2571_end_0, end_mask = var_2571_end_mask_0, x = v_17_cast);
            tensor<int32, [4]> var_2575_begin_0 = const()[name = tensor<string, []>("op_2575_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_2575_end_0 = const()[name = tensor<string, []>("op_2575_end_0"), val = tensor<int32, [4]>([2, 576, 1, 256])];
            tensor<bool, [4]> var_2575_end_mask_0 = const()[name = tensor<string, []>("op_2575_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2575_cast = slice_by_index(begin = var_2575_begin_0, end = var_2575_end_0, end_mask = var_2575_end_mask_0, x = v_17_cast);
            tensor<int32, [4]> var_2579_begin_0 = const()[name = tensor<string, []>("op_2579_begin_0"), val = tensor<int32, [4]>([0, 576, 0, 0])];
            tensor<int32, [4]> var_2579_end_0 = const()[name = tensor<string, []>("op_2579_end_0"), val = tensor<int32, [4]>([2, 640, 1, 256])];
            tensor<bool, [4]> var_2579_end_mask_0 = const()[name = tensor<string, []>("op_2579_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2579_cast = slice_by_index(begin = var_2579_begin_0, end = var_2579_end_0, end_mask = var_2579_end_mask_0, x = v_17_cast);
            tensor<int32, [4]> var_2583_begin_0 = const()[name = tensor<string, []>("op_2583_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_2583_end_0 = const()[name = tensor<string, []>("op_2583_end_0"), val = tensor<int32, [4]>([2, 704, 1, 256])];
            tensor<bool, [4]> var_2583_end_mask_0 = const()[name = tensor<string, []>("op_2583_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2583_cast = slice_by_index(begin = var_2583_begin_0, end = var_2583_end_0, end_mask = var_2583_end_mask_0, x = v_17_cast);
            tensor<int32, [4]> var_2587_begin_0 = const()[name = tensor<string, []>("op_2587_begin_0"), val = tensor<int32, [4]>([0, 704, 0, 0])];
            tensor<int32, [4]> var_2587_end_0 = const()[name = tensor<string, []>("op_2587_end_0"), val = tensor<int32, [4]>([2, 768, 1, 256])];
            tensor<bool, [4]> var_2587_end_mask_0 = const()[name = tensor<string, []>("op_2587_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2587_cast = slice_by_index(begin = var_2587_begin_0, end = var_2587_end_0, end_mask = var_2587_end_mask_0, x = v_17_cast);
            tensor<int32, [4]> var_2591_begin_0 = const()[name = tensor<string, []>("op_2591_begin_0"), val = tensor<int32, [4]>([0, 768, 0, 0])];
            tensor<int32, [4]> var_2591_end_0 = const()[name = tensor<string, []>("op_2591_end_0"), val = tensor<int32, [4]>([2, 832, 1, 256])];
            tensor<bool, [4]> var_2591_end_mask_0 = const()[name = tensor<string, []>("op_2591_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2591_cast = slice_by_index(begin = var_2591_begin_0, end = var_2591_end_0, end_mask = var_2591_end_mask_0, x = v_17_cast);
            tensor<int32, [4]> var_2595_begin_0 = const()[name = tensor<string, []>("op_2595_begin_0"), val = tensor<int32, [4]>([0, 832, 0, 0])];
            tensor<int32, [4]> var_2595_end_0 = const()[name = tensor<string, []>("op_2595_end_0"), val = tensor<int32, [4]>([2, 896, 1, 256])];
            tensor<bool, [4]> var_2595_end_mask_0 = const()[name = tensor<string, []>("op_2595_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2595_cast = slice_by_index(begin = var_2595_begin_0, end = var_2595_end_0, end_mask = var_2595_end_mask_0, x = v_17_cast);
            tensor<int32, [4]> var_2599_begin_0 = const()[name = tensor<string, []>("op_2599_begin_0"), val = tensor<int32, [4]>([0, 896, 0, 0])];
            tensor<int32, [4]> var_2599_end_0 = const()[name = tensor<string, []>("op_2599_end_0"), val = tensor<int32, [4]>([2, 960, 1, 256])];
            tensor<bool, [4]> var_2599_end_mask_0 = const()[name = tensor<string, []>("op_2599_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2599_cast = slice_by_index(begin = var_2599_begin_0, end = var_2599_end_0, end_mask = var_2599_end_mask_0, x = v_17_cast);
            tensor<int32, [4]> var_2603_begin_0 = const()[name = tensor<string, []>("op_2603_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_2603_end_0 = const()[name = tensor<string, []>("op_2603_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 256])];
            tensor<bool, [4]> var_2603_end_mask_0 = const()[name = tensor<string, []>("op_2603_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2603_cast = slice_by_index(begin = var_2603_begin_0, end = var_2603_end_0, end_mask = var_2603_end_mask_0, x = v_17_cast);
            tensor<int32, [4]> var_2607_begin_0 = const()[name = tensor<string, []>("op_2607_begin_0"), val = tensor<int32, [4]>([0, 1024, 0, 0])];
            tensor<int32, [4]> var_2607_end_0 = const()[name = tensor<string, []>("op_2607_end_0"), val = tensor<int32, [4]>([2, 1088, 1, 256])];
            tensor<bool, [4]> var_2607_end_mask_0 = const()[name = tensor<string, []>("op_2607_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2607_cast = slice_by_index(begin = var_2607_begin_0, end = var_2607_end_0, end_mask = var_2607_end_mask_0, x = v_17_cast);
            tensor<int32, [4]> var_2611_begin_0 = const()[name = tensor<string, []>("op_2611_begin_0"), val = tensor<int32, [4]>([0, 1088, 0, 0])];
            tensor<int32, [4]> var_2611_end_0 = const()[name = tensor<string, []>("op_2611_end_0"), val = tensor<int32, [4]>([2, 1152, 1, 256])];
            tensor<bool, [4]> var_2611_end_mask_0 = const()[name = tensor<string, []>("op_2611_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2611_cast = slice_by_index(begin = var_2611_begin_0, end = var_2611_end_0, end_mask = var_2611_end_mask_0, x = v_17_cast);
            tensor<int32, [4]> var_2615_begin_0 = const()[name = tensor<string, []>("op_2615_begin_0"), val = tensor<int32, [4]>([0, 1152, 0, 0])];
            tensor<int32, [4]> var_2615_end_0 = const()[name = tensor<string, []>("op_2615_end_0"), val = tensor<int32, [4]>([2, 1216, 1, 256])];
            tensor<bool, [4]> var_2615_end_mask_0 = const()[name = tensor<string, []>("op_2615_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2615_cast = slice_by_index(begin = var_2615_begin_0, end = var_2615_end_0, end_mask = var_2615_end_mask_0, x = v_17_cast);
            tensor<int32, [4]> var_2619_begin_0 = const()[name = tensor<string, []>("op_2619_begin_0"), val = tensor<int32, [4]>([0, 1216, 0, 0])];
            tensor<int32, [4]> var_2619_end_0 = const()[name = tensor<string, []>("op_2619_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<bool, [4]> var_2619_end_mask_0 = const()[name = tensor<string, []>("op_2619_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2619_cast = slice_by_index(begin = var_2619_begin_0, end = var_2619_end_0, end_mask = var_2619_end_mask_0, x = v_17_cast);
            tensor<string, []> var_2623_equation_0 = const()[name = tensor<string, []>("op_2623_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_2623_cast = einsum(equation = var_2623_equation_0, values = (var_2465_cast, var_2382_cast));
            tensor<fp16, []> var_2624_to_fp16 = const()[name = tensor<string, []>("op_2624_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_121_cast = mul(x = var_2623_cast, y = var_2624_to_fp16);
            tensor<string, []> var_2627_equation_0 = const()[name = tensor<string, []>("op_2627_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_2627_cast = einsum(equation = var_2627_equation_0, values = (var_2469_cast, var_2386_cast));
            tensor<fp16, []> var_2628_to_fp16 = const()[name = tensor<string, []>("op_2628_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_123_cast = mul(x = var_2627_cast, y = var_2628_to_fp16);
            tensor<string, []> var_2631_equation_0 = const()[name = tensor<string, []>("op_2631_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_2631_cast = einsum(equation = var_2631_equation_0, values = (var_2473_cast, var_2390_cast));
            tensor<fp16, []> var_2632_to_fp16 = const()[name = tensor<string, []>("op_2632_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_125_cast = mul(x = var_2631_cast, y = var_2632_to_fp16);
            tensor<string, []> var_2635_equation_0 = const()[name = tensor<string, []>("op_2635_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_2635_cast = einsum(equation = var_2635_equation_0, values = (var_2477_cast, var_2394_cast));
            tensor<fp16, []> var_2636_to_fp16 = const()[name = tensor<string, []>("op_2636_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_127_cast = mul(x = var_2635_cast, y = var_2636_to_fp16);
            tensor<string, []> var_2639_equation_0 = const()[name = tensor<string, []>("op_2639_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_2639_cast = einsum(equation = var_2639_equation_0, values = (var_2481_cast, var_2398_cast));
            tensor<fp16, []> var_2640_to_fp16 = const()[name = tensor<string, []>("op_2640_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_129_cast = mul(x = var_2639_cast, y = var_2640_to_fp16);
            tensor<string, []> var_2643_equation_0 = const()[name = tensor<string, []>("op_2643_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_2643_cast = einsum(equation = var_2643_equation_0, values = (var_2485_cast, var_2402_cast));
            tensor<fp16, []> var_2644_to_fp16 = const()[name = tensor<string, []>("op_2644_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_131_cast = mul(x = var_2643_cast, y = var_2644_to_fp16);
            tensor<string, []> var_2647_equation_0 = const()[name = tensor<string, []>("op_2647_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_2647_cast = einsum(equation = var_2647_equation_0, values = (var_2489_cast, var_2406_cast));
            tensor<fp16, []> var_2648_to_fp16 = const()[name = tensor<string, []>("op_2648_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_133_cast = mul(x = var_2647_cast, y = var_2648_to_fp16);
            tensor<string, []> var_2651_equation_0 = const()[name = tensor<string, []>("op_2651_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_2651_cast = einsum(equation = var_2651_equation_0, values = (var_2493_cast, var_2410_cast));
            tensor<fp16, []> var_2652_to_fp16 = const()[name = tensor<string, []>("op_2652_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_135_cast = mul(x = var_2651_cast, y = var_2652_to_fp16);
            tensor<string, []> var_2655_equation_0 = const()[name = tensor<string, []>("op_2655_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_2655_cast = einsum(equation = var_2655_equation_0, values = (var_2497_cast, var_2414_cast));
            tensor<fp16, []> var_2656_to_fp16 = const()[name = tensor<string, []>("op_2656_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_137_cast = mul(x = var_2655_cast, y = var_2656_to_fp16);
            tensor<string, []> var_2659_equation_0 = const()[name = tensor<string, []>("op_2659_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_2659_cast = einsum(equation = var_2659_equation_0, values = (var_2501_cast, var_2418_cast));
            tensor<fp16, []> var_2660_to_fp16 = const()[name = tensor<string, []>("op_2660_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_139_cast = mul(x = var_2659_cast, y = var_2660_to_fp16);
            tensor<string, []> var_2663_equation_0 = const()[name = tensor<string, []>("op_2663_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_2663_cast = einsum(equation = var_2663_equation_0, values = (var_2505_cast, var_2422_cast));
            tensor<fp16, []> var_2664_to_fp16 = const()[name = tensor<string, []>("op_2664_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_141_cast = mul(x = var_2663_cast, y = var_2664_to_fp16);
            tensor<string, []> var_2667_equation_0 = const()[name = tensor<string, []>("op_2667_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_2667_cast = einsum(equation = var_2667_equation_0, values = (var_2509_cast, var_2426_cast));
            tensor<fp16, []> var_2668_to_fp16 = const()[name = tensor<string, []>("op_2668_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_143_cast = mul(x = var_2667_cast, y = var_2668_to_fp16);
            tensor<string, []> var_2671_equation_0 = const()[name = tensor<string, []>("op_2671_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_2671_cast = einsum(equation = var_2671_equation_0, values = (var_2513_cast, var_2430_cast));
            tensor<fp16, []> var_2672_to_fp16 = const()[name = tensor<string, []>("op_2672_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_145_cast = mul(x = var_2671_cast, y = var_2672_to_fp16);
            tensor<string, []> var_2675_equation_0 = const()[name = tensor<string, []>("op_2675_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_2675_cast = einsum(equation = var_2675_equation_0, values = (var_2517_cast, var_2434_cast));
            tensor<fp16, []> var_2676_to_fp16 = const()[name = tensor<string, []>("op_2676_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_147_cast = mul(x = var_2675_cast, y = var_2676_to_fp16);
            tensor<string, []> var_2679_equation_0 = const()[name = tensor<string, []>("op_2679_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_2679_cast = einsum(equation = var_2679_equation_0, values = (var_2521_cast, var_2438_cast));
            tensor<fp16, []> var_2680_to_fp16 = const()[name = tensor<string, []>("op_2680_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_149_cast = mul(x = var_2679_cast, y = var_2680_to_fp16);
            tensor<string, []> var_2683_equation_0 = const()[name = tensor<string, []>("op_2683_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_2683_cast = einsum(equation = var_2683_equation_0, values = (var_2525_cast, var_2442_cast));
            tensor<fp16, []> var_2684_to_fp16 = const()[name = tensor<string, []>("op_2684_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_151_cast = mul(x = var_2683_cast, y = var_2684_to_fp16);
            tensor<string, []> var_2687_equation_0 = const()[name = tensor<string, []>("op_2687_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_2687_cast = einsum(equation = var_2687_equation_0, values = (var_2529_cast, var_2446_cast));
            tensor<fp16, []> var_2688_to_fp16 = const()[name = tensor<string, []>("op_2688_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_153_cast = mul(x = var_2687_cast, y = var_2688_to_fp16);
            tensor<string, []> var_2691_equation_0 = const()[name = tensor<string, []>("op_2691_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_2691_cast = einsum(equation = var_2691_equation_0, values = (var_2533_cast, var_2450_cast));
            tensor<fp16, []> var_2692_to_fp16 = const()[name = tensor<string, []>("op_2692_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_155_cast = mul(x = var_2691_cast, y = var_2692_to_fp16);
            tensor<string, []> var_2695_equation_0 = const()[name = tensor<string, []>("op_2695_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_2695_cast = einsum(equation = var_2695_equation_0, values = (var_2537_cast, var_2454_cast));
            tensor<fp16, []> var_2696_to_fp16 = const()[name = tensor<string, []>("op_2696_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_157_cast = mul(x = var_2695_cast, y = var_2696_to_fp16);
            tensor<string, []> var_2699_equation_0 = const()[name = tensor<string, []>("op_2699_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_2699_cast = einsum(equation = var_2699_equation_0, values = (var_2541_cast, var_2458_cast));
            tensor<fp16, []> var_2700_to_fp16 = const()[name = tensor<string, []>("op_2700_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_159_cast = mul(x = var_2699_cast, y = var_2700_to_fp16);
            tensor<fp16, [2, 256, 1, 256]> var_2702_cast = softmax(axis = var_2254, x = aw_121_cast);
            tensor<fp16, [2, 256, 1, 256]> var_2703_cast = softmax(axis = var_2254, x = aw_123_cast);
            tensor<fp16, [2, 256, 1, 256]> var_2704_cast = softmax(axis = var_2254, x = aw_125_cast);
            tensor<fp16, [2, 256, 1, 256]> var_2705_cast = softmax(axis = var_2254, x = aw_127_cast);
            tensor<fp16, [2, 256, 1, 256]> var_2706_cast = softmax(axis = var_2254, x = aw_129_cast);
            tensor<fp16, [2, 256, 1, 256]> var_2707_cast = softmax(axis = var_2254, x = aw_131_cast);
            tensor<fp16, [2, 256, 1, 256]> var_2708_cast = softmax(axis = var_2254, x = aw_133_cast);
            tensor<fp16, [2, 256, 1, 256]> var_2709_cast = softmax(axis = var_2254, x = aw_135_cast);
            tensor<fp16, [2, 256, 1, 256]> var_2710_cast = softmax(axis = var_2254, x = aw_137_cast);
            tensor<fp16, [2, 256, 1, 256]> var_2711_cast = softmax(axis = var_2254, x = aw_139_cast);
            tensor<fp16, [2, 256, 1, 256]> var_2712_cast = softmax(axis = var_2254, x = aw_141_cast);
            tensor<fp16, [2, 256, 1, 256]> var_2713_cast = softmax(axis = var_2254, x = aw_143_cast);
            tensor<fp16, [2, 256, 1, 256]> var_2714_cast = softmax(axis = var_2254, x = aw_145_cast);
            tensor<fp16, [2, 256, 1, 256]> var_2715_cast = softmax(axis = var_2254, x = aw_147_cast);
            tensor<fp16, [2, 256, 1, 256]> var_2716_cast = softmax(axis = var_2254, x = aw_149_cast);
            tensor<fp16, [2, 256, 1, 256]> var_2717_cast = softmax(axis = var_2254, x = aw_151_cast);
            tensor<fp16, [2, 256, 1, 256]> var_2718_cast = softmax(axis = var_2254, x = aw_153_cast);
            tensor<fp16, [2, 256, 1, 256]> var_2719_cast = softmax(axis = var_2254, x = aw_155_cast);
            tensor<fp16, [2, 256, 1, 256]> var_2720_cast = softmax(axis = var_2254, x = aw_157_cast);
            tensor<fp16, [2, 256, 1, 256]> var_2721_cast = softmax(axis = var_2254, x = aw_159_cast);
            tensor<string, []> var_2723_equation_0 = const()[name = tensor<string, []>("op_2723_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_2723_cast = einsum(equation = var_2723_equation_0, values = (var_2543_cast, var_2702_cast));
            tensor<string, []> var_2725_equation_0 = const()[name = tensor<string, []>("op_2725_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_2725_cast = einsum(equation = var_2725_equation_0, values = (var_2547_cast, var_2703_cast));
            tensor<string, []> var_2727_equation_0 = const()[name = tensor<string, []>("op_2727_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_2727_cast = einsum(equation = var_2727_equation_0, values = (var_2551_cast, var_2704_cast));
            tensor<string, []> var_2729_equation_0 = const()[name = tensor<string, []>("op_2729_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_2729_cast = einsum(equation = var_2729_equation_0, values = (var_2555_cast, var_2705_cast));
            tensor<string, []> var_2731_equation_0 = const()[name = tensor<string, []>("op_2731_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_2731_cast = einsum(equation = var_2731_equation_0, values = (var_2559_cast, var_2706_cast));
            tensor<string, []> var_2733_equation_0 = const()[name = tensor<string, []>("op_2733_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_2733_cast = einsum(equation = var_2733_equation_0, values = (var_2563_cast, var_2707_cast));
            tensor<string, []> var_2735_equation_0 = const()[name = tensor<string, []>("op_2735_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_2735_cast = einsum(equation = var_2735_equation_0, values = (var_2567_cast, var_2708_cast));
            tensor<string, []> var_2737_equation_0 = const()[name = tensor<string, []>("op_2737_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_2737_cast = einsum(equation = var_2737_equation_0, values = (var_2571_cast, var_2709_cast));
            tensor<string, []> var_2739_equation_0 = const()[name = tensor<string, []>("op_2739_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_2739_cast = einsum(equation = var_2739_equation_0, values = (var_2575_cast, var_2710_cast));
            tensor<string, []> var_2741_equation_0 = const()[name = tensor<string, []>("op_2741_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_2741_cast = einsum(equation = var_2741_equation_0, values = (var_2579_cast, var_2711_cast));
            tensor<string, []> var_2743_equation_0 = const()[name = tensor<string, []>("op_2743_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_2743_cast = einsum(equation = var_2743_equation_0, values = (var_2583_cast, var_2712_cast));
            tensor<string, []> var_2745_equation_0 = const()[name = tensor<string, []>("op_2745_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_2745_cast = einsum(equation = var_2745_equation_0, values = (var_2587_cast, var_2713_cast));
            tensor<string, []> var_2747_equation_0 = const()[name = tensor<string, []>("op_2747_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_2747_cast = einsum(equation = var_2747_equation_0, values = (var_2591_cast, var_2714_cast));
            tensor<string, []> var_2749_equation_0 = const()[name = tensor<string, []>("op_2749_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_2749_cast = einsum(equation = var_2749_equation_0, values = (var_2595_cast, var_2715_cast));
            tensor<string, []> var_2751_equation_0 = const()[name = tensor<string, []>("op_2751_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_2751_cast = einsum(equation = var_2751_equation_0, values = (var_2599_cast, var_2716_cast));
            tensor<string, []> var_2753_equation_0 = const()[name = tensor<string, []>("op_2753_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_2753_cast = einsum(equation = var_2753_equation_0, values = (var_2603_cast, var_2717_cast));
            tensor<string, []> var_2755_equation_0 = const()[name = tensor<string, []>("op_2755_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_2755_cast = einsum(equation = var_2755_equation_0, values = (var_2607_cast, var_2718_cast));
            tensor<string, []> var_2757_equation_0 = const()[name = tensor<string, []>("op_2757_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_2757_cast = einsum(equation = var_2757_equation_0, values = (var_2611_cast, var_2719_cast));
            tensor<string, []> var_2759_equation_0 = const()[name = tensor<string, []>("op_2759_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_2759_cast = einsum(equation = var_2759_equation_0, values = (var_2615_cast, var_2720_cast));
            tensor<string, []> var_2761_equation_0 = const()[name = tensor<string, []>("op_2761_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_2761_cast = einsum(equation = var_2761_equation_0, values = (var_2619_cast, var_2721_cast));
            tensor<bool, []> input_133_interleave_0 = const()[name = tensor<string, []>("input_133_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 1280, 1, 256]> input_133_cast = concat(axis = var_2254, interleave = input_133_interleave_0, values = (var_2723_cast, var_2725_cast, var_2727_cast, var_2729_cast, var_2731_cast, var_2733_cast, var_2735_cast, var_2737_cast, var_2739_cast, var_2741_cast, var_2743_cast, var_2745_cast, var_2747_cast, var_2749_cast, var_2751_cast, var_2753_cast, var_2755_cast, var_2757_cast, var_2759_cast, var_2761_cast));
            tensor<int32, [2]> var_2767 = const()[name = tensor<string, []>("op_2767"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2769 = const()[name = tensor<string, []>("op_2769"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_2771_pad_type_0 = const()[name = tensor<string, []>("op_2771_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_2771_pad_0 = const()[name = tensor<string, []>("op_2771_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(163115136)))];
            tensor<fp16, [1280]> down_blocks_2_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(166392000)))];
            tensor<fp16, [2, 1280, 1, 256]> var_2771_cast = conv(bias = down_blocks_2_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16, dilations = var_2769, groups = var_2254, pad = var_2771_pad_0, pad_type = var_2771_pad_type_0, strides = var_2767, weight = down_blocks_2_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16, x = input_133_cast);
            tensor<fp16, [2, 1280, 1, 256]> inputs_27_cast = add(x = var_2771_cast, y = inputs_25_cast);
            tensor<int32, [1]> var_2775 = const()[name = tensor<string, []>("op_2775"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> channels_mean_27_cast = reduce_mean(axes = var_2775, keep_dims = var_2249, x = inputs_27_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_27_cast = sub(x = inputs_27_cast, y = channels_mean_27_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_sq_27_cast = mul(x = zero_mean_27_cast, y = zero_mean_27_cast);
            tensor<int32, [1]> var_2779 = const()[name = tensor<string, []>("op_2779"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> var_2780_cast = reduce_mean(axes = var_2779, keep_dims = var_2249, x = zero_mean_sq_27_cast);
            tensor<fp16, []> var_2781_to_fp16 = const()[name = tensor<string, []>("op_2781_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 256]> var_2782_cast = add(x = var_2780_cast, y = var_2781_to_fp16);
            tensor<fp16, []> denom_27_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_27_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 256]> denom_27_cast = rsqrt(epsilon = denom_27_epsilon_0_to_fp16, x = var_2782_cast);
            tensor<fp16, [2, 1280, 1, 256]> out_27_cast = mul(x = zero_mean_27_cast, y = denom_27_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_2786_to_fp16 = const()[name = tensor<string, []>("op_2786_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(166394624)))];
            tensor<fp16, [2, 1280, 1, 256]> var_2787_cast = add(x = out_27_cast, y = var_2786_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_2789_to_fp16 = const()[name = tensor<string, []>("op_2789_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(166397248)))];
            tensor<fp16, [2, 1280, 1, 256]> hidden_states_83_cast = mul(x = var_2787_cast, y = var_2789_to_fp16);
            tensor<int32, [2]> var_2796 = const()[name = tensor<string, []>("op_2796"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2798 = const()[name = tensor<string, []>("op_2798"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_19_pad_type_0 = const()[name = tensor<string, []>("q_19_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_19_pad_0 = const()[name = tensor<string, []>("q_19_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(166399872)))];
            tensor<fp16, [2, 1280, 1, 256]> q_19_cast = conv(dilations = var_2798, groups = var_2254, pad = q_19_pad_0, pad_type = q_19_pad_type_0, strides = var_2796, weight = down_blocks_2_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16, x = hidden_states_83_cast);
            tensor<int32, [2]> var_2802 = const()[name = tensor<string, []>("op_2802"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2804 = const()[name = tensor<string, []>("op_2804"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_37_pad_type_0 = const()[name = tensor<string, []>("k_37_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_37_pad_0 = const()[name = tensor<string, []>("k_37_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1024, 1, 1]> down_blocks_2_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16"), val = tensor<fp16, [1280, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(169676736)))];
            tensor<fp16, [2, 1280, 1, 77]> k_37_cast = conv(dilations = var_2804, groups = var_2254, pad = k_37_pad_0, pad_type = k_37_pad_type_0, strides = var_2802, weight = down_blocks_2_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [2]> var_2808 = const()[name = tensor<string, []>("op_2808"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2810 = const()[name = tensor<string, []>("op_2810"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_19_pad_type_0 = const()[name = tensor<string, []>("v_19_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_19_pad_0 = const()[name = tensor<string, []>("v_19_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1024, 1, 1]> down_blocks_2_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16"), val = tensor<fp16, [1280, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(172298240)))];
            tensor<fp16, [2, 1280, 1, 77]> v_19_cast = conv(dilations = var_2810, groups = var_2254, pad = v_19_pad_0, pad_type = v_19_pad_type_0, strides = var_2808, weight = down_blocks_2_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [4]> var_2814_begin_0 = const()[name = tensor<string, []>("op_2814_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2814_end_0 = const()[name = tensor<string, []>("op_2814_end_0"), val = tensor<int32, [4]>([2, 64, 1, 256])];
            tensor<bool, [4]> var_2814_end_mask_0 = const()[name = tensor<string, []>("op_2814_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2814_cast = slice_by_index(begin = var_2814_begin_0, end = var_2814_end_0, end_mask = var_2814_end_mask_0, x = q_19_cast);
            tensor<int32, [4]> var_2818_begin_0 = const()[name = tensor<string, []>("op_2818_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_2818_end_0 = const()[name = tensor<string, []>("op_2818_end_0"), val = tensor<int32, [4]>([2, 128, 1, 256])];
            tensor<bool, [4]> var_2818_end_mask_0 = const()[name = tensor<string, []>("op_2818_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2818_cast = slice_by_index(begin = var_2818_begin_0, end = var_2818_end_0, end_mask = var_2818_end_mask_0, x = q_19_cast);
            tensor<int32, [4]> var_2822_begin_0 = const()[name = tensor<string, []>("op_2822_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_2822_end_0 = const()[name = tensor<string, []>("op_2822_end_0"), val = tensor<int32, [4]>([2, 192, 1, 256])];
            tensor<bool, [4]> var_2822_end_mask_0 = const()[name = tensor<string, []>("op_2822_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2822_cast = slice_by_index(begin = var_2822_begin_0, end = var_2822_end_0, end_mask = var_2822_end_mask_0, x = q_19_cast);
            tensor<int32, [4]> var_2826_begin_0 = const()[name = tensor<string, []>("op_2826_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_2826_end_0 = const()[name = tensor<string, []>("op_2826_end_0"), val = tensor<int32, [4]>([2, 256, 1, 256])];
            tensor<bool, [4]> var_2826_end_mask_0 = const()[name = tensor<string, []>("op_2826_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2826_cast = slice_by_index(begin = var_2826_begin_0, end = var_2826_end_0, end_mask = var_2826_end_mask_0, x = q_19_cast);
            tensor<int32, [4]> var_2830_begin_0 = const()[name = tensor<string, []>("op_2830_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_2830_end_0 = const()[name = tensor<string, []>("op_2830_end_0"), val = tensor<int32, [4]>([2, 320, 1, 256])];
            tensor<bool, [4]> var_2830_end_mask_0 = const()[name = tensor<string, []>("op_2830_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2830_cast = slice_by_index(begin = var_2830_begin_0, end = var_2830_end_0, end_mask = var_2830_end_mask_0, x = q_19_cast);
            tensor<int32, [4]> var_2834_begin_0 = const()[name = tensor<string, []>("op_2834_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_2834_end_0 = const()[name = tensor<string, []>("op_2834_end_0"), val = tensor<int32, [4]>([2, 384, 1, 256])];
            tensor<bool, [4]> var_2834_end_mask_0 = const()[name = tensor<string, []>("op_2834_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2834_cast = slice_by_index(begin = var_2834_begin_0, end = var_2834_end_0, end_mask = var_2834_end_mask_0, x = q_19_cast);
            tensor<int32, [4]> var_2838_begin_0 = const()[name = tensor<string, []>("op_2838_begin_0"), val = tensor<int32, [4]>([0, 384, 0, 0])];
            tensor<int32, [4]> var_2838_end_0 = const()[name = tensor<string, []>("op_2838_end_0"), val = tensor<int32, [4]>([2, 448, 1, 256])];
            tensor<bool, [4]> var_2838_end_mask_0 = const()[name = tensor<string, []>("op_2838_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2838_cast = slice_by_index(begin = var_2838_begin_0, end = var_2838_end_0, end_mask = var_2838_end_mask_0, x = q_19_cast);
            tensor<int32, [4]> var_2842_begin_0 = const()[name = tensor<string, []>("op_2842_begin_0"), val = tensor<int32, [4]>([0, 448, 0, 0])];
            tensor<int32, [4]> var_2842_end_0 = const()[name = tensor<string, []>("op_2842_end_0"), val = tensor<int32, [4]>([2, 512, 1, 256])];
            tensor<bool, [4]> var_2842_end_mask_0 = const()[name = tensor<string, []>("op_2842_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2842_cast = slice_by_index(begin = var_2842_begin_0, end = var_2842_end_0, end_mask = var_2842_end_mask_0, x = q_19_cast);
            tensor<int32, [4]> var_2846_begin_0 = const()[name = tensor<string, []>("op_2846_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_2846_end_0 = const()[name = tensor<string, []>("op_2846_end_0"), val = tensor<int32, [4]>([2, 576, 1, 256])];
            tensor<bool, [4]> var_2846_end_mask_0 = const()[name = tensor<string, []>("op_2846_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2846_cast = slice_by_index(begin = var_2846_begin_0, end = var_2846_end_0, end_mask = var_2846_end_mask_0, x = q_19_cast);
            tensor<int32, [4]> var_2850_begin_0 = const()[name = tensor<string, []>("op_2850_begin_0"), val = tensor<int32, [4]>([0, 576, 0, 0])];
            tensor<int32, [4]> var_2850_end_0 = const()[name = tensor<string, []>("op_2850_end_0"), val = tensor<int32, [4]>([2, 640, 1, 256])];
            tensor<bool, [4]> var_2850_end_mask_0 = const()[name = tensor<string, []>("op_2850_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2850_cast = slice_by_index(begin = var_2850_begin_0, end = var_2850_end_0, end_mask = var_2850_end_mask_0, x = q_19_cast);
            tensor<int32, [4]> var_2854_begin_0 = const()[name = tensor<string, []>("op_2854_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_2854_end_0 = const()[name = tensor<string, []>("op_2854_end_0"), val = tensor<int32, [4]>([2, 704, 1, 256])];
            tensor<bool, [4]> var_2854_end_mask_0 = const()[name = tensor<string, []>("op_2854_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2854_cast = slice_by_index(begin = var_2854_begin_0, end = var_2854_end_0, end_mask = var_2854_end_mask_0, x = q_19_cast);
            tensor<int32, [4]> var_2858_begin_0 = const()[name = tensor<string, []>("op_2858_begin_0"), val = tensor<int32, [4]>([0, 704, 0, 0])];
            tensor<int32, [4]> var_2858_end_0 = const()[name = tensor<string, []>("op_2858_end_0"), val = tensor<int32, [4]>([2, 768, 1, 256])];
            tensor<bool, [4]> var_2858_end_mask_0 = const()[name = tensor<string, []>("op_2858_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2858_cast = slice_by_index(begin = var_2858_begin_0, end = var_2858_end_0, end_mask = var_2858_end_mask_0, x = q_19_cast);
            tensor<int32, [4]> var_2862_begin_0 = const()[name = tensor<string, []>("op_2862_begin_0"), val = tensor<int32, [4]>([0, 768, 0, 0])];
            tensor<int32, [4]> var_2862_end_0 = const()[name = tensor<string, []>("op_2862_end_0"), val = tensor<int32, [4]>([2, 832, 1, 256])];
            tensor<bool, [4]> var_2862_end_mask_0 = const()[name = tensor<string, []>("op_2862_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2862_cast = slice_by_index(begin = var_2862_begin_0, end = var_2862_end_0, end_mask = var_2862_end_mask_0, x = q_19_cast);
            tensor<int32, [4]> var_2866_begin_0 = const()[name = tensor<string, []>("op_2866_begin_0"), val = tensor<int32, [4]>([0, 832, 0, 0])];
            tensor<int32, [4]> var_2866_end_0 = const()[name = tensor<string, []>("op_2866_end_0"), val = tensor<int32, [4]>([2, 896, 1, 256])];
            tensor<bool, [4]> var_2866_end_mask_0 = const()[name = tensor<string, []>("op_2866_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2866_cast = slice_by_index(begin = var_2866_begin_0, end = var_2866_end_0, end_mask = var_2866_end_mask_0, x = q_19_cast);
            tensor<int32, [4]> var_2870_begin_0 = const()[name = tensor<string, []>("op_2870_begin_0"), val = tensor<int32, [4]>([0, 896, 0, 0])];
            tensor<int32, [4]> var_2870_end_0 = const()[name = tensor<string, []>("op_2870_end_0"), val = tensor<int32, [4]>([2, 960, 1, 256])];
            tensor<bool, [4]> var_2870_end_mask_0 = const()[name = tensor<string, []>("op_2870_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2870_cast = slice_by_index(begin = var_2870_begin_0, end = var_2870_end_0, end_mask = var_2870_end_mask_0, x = q_19_cast);
            tensor<int32, [4]> var_2874_begin_0 = const()[name = tensor<string, []>("op_2874_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_2874_end_0 = const()[name = tensor<string, []>("op_2874_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 256])];
            tensor<bool, [4]> var_2874_end_mask_0 = const()[name = tensor<string, []>("op_2874_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2874_cast = slice_by_index(begin = var_2874_begin_0, end = var_2874_end_0, end_mask = var_2874_end_mask_0, x = q_19_cast);
            tensor<int32, [4]> var_2878_begin_0 = const()[name = tensor<string, []>("op_2878_begin_0"), val = tensor<int32, [4]>([0, 1024, 0, 0])];
            tensor<int32, [4]> var_2878_end_0 = const()[name = tensor<string, []>("op_2878_end_0"), val = tensor<int32, [4]>([2, 1088, 1, 256])];
            tensor<bool, [4]> var_2878_end_mask_0 = const()[name = tensor<string, []>("op_2878_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2878_cast = slice_by_index(begin = var_2878_begin_0, end = var_2878_end_0, end_mask = var_2878_end_mask_0, x = q_19_cast);
            tensor<int32, [4]> var_2882_begin_0 = const()[name = tensor<string, []>("op_2882_begin_0"), val = tensor<int32, [4]>([0, 1088, 0, 0])];
            tensor<int32, [4]> var_2882_end_0 = const()[name = tensor<string, []>("op_2882_end_0"), val = tensor<int32, [4]>([2, 1152, 1, 256])];
            tensor<bool, [4]> var_2882_end_mask_0 = const()[name = tensor<string, []>("op_2882_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2882_cast = slice_by_index(begin = var_2882_begin_0, end = var_2882_end_0, end_mask = var_2882_end_mask_0, x = q_19_cast);
            tensor<int32, [4]> var_2886_begin_0 = const()[name = tensor<string, []>("op_2886_begin_0"), val = tensor<int32, [4]>([0, 1152, 0, 0])];
            tensor<int32, [4]> var_2886_end_0 = const()[name = tensor<string, []>("op_2886_end_0"), val = tensor<int32, [4]>([2, 1216, 1, 256])];
            tensor<bool, [4]> var_2886_end_mask_0 = const()[name = tensor<string, []>("op_2886_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2886_cast = slice_by_index(begin = var_2886_begin_0, end = var_2886_end_0, end_mask = var_2886_end_mask_0, x = q_19_cast);
            tensor<int32, [4]> var_2890_begin_0 = const()[name = tensor<string, []>("op_2890_begin_0"), val = tensor<int32, [4]>([0, 1216, 0, 0])];
            tensor<int32, [4]> var_2890_end_0 = const()[name = tensor<string, []>("op_2890_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<bool, [4]> var_2890_end_mask_0 = const()[name = tensor<string, []>("op_2890_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_2890_cast = slice_by_index(begin = var_2890_begin_0, end = var_2890_end_0, end_mask = var_2890_end_mask_0, x = q_19_cast);
            tensor<int32, [4]> k_39_perm_0 = const()[name = tensor<string, []>("k_39_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_2897_begin_0 = const()[name = tensor<string, []>("op_2897_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2897_end_0 = const()[name = tensor<string, []>("op_2897_end_0"), val = tensor<int32, [4]>([2, 77, 1, 64])];
            tensor<bool, [4]> var_2897_end_mask_0 = const()[name = tensor<string, []>("op_2897_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 1280]> transpose_68 = transpose(perm = k_39_perm_0, x = k_37_cast);
            tensor<fp16, [2, 77, 1, 64]> var_2897_cast = slice_by_index(begin = var_2897_begin_0, end = var_2897_end_0, end_mask = var_2897_end_mask_0, x = transpose_68);
            tensor<int32, [4]> var_2901_begin_0 = const()[name = tensor<string, []>("op_2901_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 64])];
            tensor<int32, [4]> var_2901_end_0 = const()[name = tensor<string, []>("op_2901_end_0"), val = tensor<int32, [4]>([2, 77, 1, 128])];
            tensor<bool, [4]> var_2901_end_mask_0 = const()[name = tensor<string, []>("op_2901_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_2901_cast = slice_by_index(begin = var_2901_begin_0, end = var_2901_end_0, end_mask = var_2901_end_mask_0, x = transpose_68);
            tensor<int32, [4]> var_2905_begin_0 = const()[name = tensor<string, []>("op_2905_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 128])];
            tensor<int32, [4]> var_2905_end_0 = const()[name = tensor<string, []>("op_2905_end_0"), val = tensor<int32, [4]>([2, 77, 1, 192])];
            tensor<bool, [4]> var_2905_end_mask_0 = const()[name = tensor<string, []>("op_2905_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_2905_cast = slice_by_index(begin = var_2905_begin_0, end = var_2905_end_0, end_mask = var_2905_end_mask_0, x = transpose_68);
            tensor<int32, [4]> var_2909_begin_0 = const()[name = tensor<string, []>("op_2909_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 192])];
            tensor<int32, [4]> var_2909_end_0 = const()[name = tensor<string, []>("op_2909_end_0"), val = tensor<int32, [4]>([2, 77, 1, 256])];
            tensor<bool, [4]> var_2909_end_mask_0 = const()[name = tensor<string, []>("op_2909_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_2909_cast = slice_by_index(begin = var_2909_begin_0, end = var_2909_end_0, end_mask = var_2909_end_mask_0, x = transpose_68);
            tensor<int32, [4]> var_2913_begin_0 = const()[name = tensor<string, []>("op_2913_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 256])];
            tensor<int32, [4]> var_2913_end_0 = const()[name = tensor<string, []>("op_2913_end_0"), val = tensor<int32, [4]>([2, 77, 1, 320])];
            tensor<bool, [4]> var_2913_end_mask_0 = const()[name = tensor<string, []>("op_2913_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_2913_cast = slice_by_index(begin = var_2913_begin_0, end = var_2913_end_0, end_mask = var_2913_end_mask_0, x = transpose_68);
            tensor<int32, [4]> var_2917_begin_0 = const()[name = tensor<string, []>("op_2917_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_2917_end_0 = const()[name = tensor<string, []>("op_2917_end_0"), val = tensor<int32, [4]>([2, 77, 1, 384])];
            tensor<bool, [4]> var_2917_end_mask_0 = const()[name = tensor<string, []>("op_2917_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_2917_cast = slice_by_index(begin = var_2917_begin_0, end = var_2917_end_0, end_mask = var_2917_end_mask_0, x = transpose_68);
            tensor<int32, [4]> var_2921_begin_0 = const()[name = tensor<string, []>("op_2921_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 384])];
            tensor<int32, [4]> var_2921_end_0 = const()[name = tensor<string, []>("op_2921_end_0"), val = tensor<int32, [4]>([2, 77, 1, 448])];
            tensor<bool, [4]> var_2921_end_mask_0 = const()[name = tensor<string, []>("op_2921_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_2921_cast = slice_by_index(begin = var_2921_begin_0, end = var_2921_end_0, end_mask = var_2921_end_mask_0, x = transpose_68);
            tensor<int32, [4]> var_2925_begin_0 = const()[name = tensor<string, []>("op_2925_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 448])];
            tensor<int32, [4]> var_2925_end_0 = const()[name = tensor<string, []>("op_2925_end_0"), val = tensor<int32, [4]>([2, 77, 1, 512])];
            tensor<bool, [4]> var_2925_end_mask_0 = const()[name = tensor<string, []>("op_2925_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_2925_cast = slice_by_index(begin = var_2925_begin_0, end = var_2925_end_0, end_mask = var_2925_end_mask_0, x = transpose_68);
            tensor<int32, [4]> var_2929_begin_0 = const()[name = tensor<string, []>("op_2929_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 512])];
            tensor<int32, [4]> var_2929_end_0 = const()[name = tensor<string, []>("op_2929_end_0"), val = tensor<int32, [4]>([2, 77, 1, 576])];
            tensor<bool, [4]> var_2929_end_mask_0 = const()[name = tensor<string, []>("op_2929_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_2929_cast = slice_by_index(begin = var_2929_begin_0, end = var_2929_end_0, end_mask = var_2929_end_mask_0, x = transpose_68);
            tensor<int32, [4]> var_2933_begin_0 = const()[name = tensor<string, []>("op_2933_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 576])];
            tensor<int32, [4]> var_2933_end_0 = const()[name = tensor<string, []>("op_2933_end_0"), val = tensor<int32, [4]>([2, 77, 1, 640])];
            tensor<bool, [4]> var_2933_end_mask_0 = const()[name = tensor<string, []>("op_2933_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_2933_cast = slice_by_index(begin = var_2933_begin_0, end = var_2933_end_0, end_mask = var_2933_end_mask_0, x = transpose_68);
            tensor<int32, [4]> var_2937_begin_0 = const()[name = tensor<string, []>("op_2937_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 640])];
            tensor<int32, [4]> var_2937_end_0 = const()[name = tensor<string, []>("op_2937_end_0"), val = tensor<int32, [4]>([2, 77, 1, 704])];
            tensor<bool, [4]> var_2937_end_mask_0 = const()[name = tensor<string, []>("op_2937_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_2937_cast = slice_by_index(begin = var_2937_begin_0, end = var_2937_end_0, end_mask = var_2937_end_mask_0, x = transpose_68);
            tensor<int32, [4]> var_2941_begin_0 = const()[name = tensor<string, []>("op_2941_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 704])];
            tensor<int32, [4]> var_2941_end_0 = const()[name = tensor<string, []>("op_2941_end_0"), val = tensor<int32, [4]>([2, 77, 1, 768])];
            tensor<bool, [4]> var_2941_end_mask_0 = const()[name = tensor<string, []>("op_2941_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_2941_cast = slice_by_index(begin = var_2941_begin_0, end = var_2941_end_0, end_mask = var_2941_end_mask_0, x = transpose_68);
            tensor<int32, [4]> var_2945_begin_0 = const()[name = tensor<string, []>("op_2945_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 768])];
            tensor<int32, [4]> var_2945_end_0 = const()[name = tensor<string, []>("op_2945_end_0"), val = tensor<int32, [4]>([2, 77, 1, 832])];
            tensor<bool, [4]> var_2945_end_mask_0 = const()[name = tensor<string, []>("op_2945_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_2945_cast = slice_by_index(begin = var_2945_begin_0, end = var_2945_end_0, end_mask = var_2945_end_mask_0, x = transpose_68);
            tensor<int32, [4]> var_2949_begin_0 = const()[name = tensor<string, []>("op_2949_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 832])];
            tensor<int32, [4]> var_2949_end_0 = const()[name = tensor<string, []>("op_2949_end_0"), val = tensor<int32, [4]>([2, 77, 1, 896])];
            tensor<bool, [4]> var_2949_end_mask_0 = const()[name = tensor<string, []>("op_2949_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_2949_cast = slice_by_index(begin = var_2949_begin_0, end = var_2949_end_0, end_mask = var_2949_end_mask_0, x = transpose_68);
            tensor<int32, [4]> var_2953_begin_0 = const()[name = tensor<string, []>("op_2953_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 896])];
            tensor<int32, [4]> var_2953_end_0 = const()[name = tensor<string, []>("op_2953_end_0"), val = tensor<int32, [4]>([2, 77, 1, 960])];
            tensor<bool, [4]> var_2953_end_mask_0 = const()[name = tensor<string, []>("op_2953_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_2953_cast = slice_by_index(begin = var_2953_begin_0, end = var_2953_end_0, end_mask = var_2953_end_mask_0, x = transpose_68);
            tensor<int32, [4]> var_2957_begin_0 = const()[name = tensor<string, []>("op_2957_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 960])];
            tensor<int32, [4]> var_2957_end_0 = const()[name = tensor<string, []>("op_2957_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1024])];
            tensor<bool, [4]> var_2957_end_mask_0 = const()[name = tensor<string, []>("op_2957_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_2957_cast = slice_by_index(begin = var_2957_begin_0, end = var_2957_end_0, end_mask = var_2957_end_mask_0, x = transpose_68);
            tensor<int32, [4]> var_2961_begin_0 = const()[name = tensor<string, []>("op_2961_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1024])];
            tensor<int32, [4]> var_2961_end_0 = const()[name = tensor<string, []>("op_2961_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1088])];
            tensor<bool, [4]> var_2961_end_mask_0 = const()[name = tensor<string, []>("op_2961_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_2961_cast = slice_by_index(begin = var_2961_begin_0, end = var_2961_end_0, end_mask = var_2961_end_mask_0, x = transpose_68);
            tensor<int32, [4]> var_2965_begin_0 = const()[name = tensor<string, []>("op_2965_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1088])];
            tensor<int32, [4]> var_2965_end_0 = const()[name = tensor<string, []>("op_2965_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1152])];
            tensor<bool, [4]> var_2965_end_mask_0 = const()[name = tensor<string, []>("op_2965_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_2965_cast = slice_by_index(begin = var_2965_begin_0, end = var_2965_end_0, end_mask = var_2965_end_mask_0, x = transpose_68);
            tensor<int32, [4]> var_2969_begin_0 = const()[name = tensor<string, []>("op_2969_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1152])];
            tensor<int32, [4]> var_2969_end_0 = const()[name = tensor<string, []>("op_2969_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1216])];
            tensor<bool, [4]> var_2969_end_mask_0 = const()[name = tensor<string, []>("op_2969_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_2969_cast = slice_by_index(begin = var_2969_begin_0, end = var_2969_end_0, end_mask = var_2969_end_mask_0, x = transpose_68);
            tensor<int32, [4]> var_2973_begin_0 = const()[name = tensor<string, []>("op_2973_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1216])];
            tensor<int32, [4]> var_2973_end_0 = const()[name = tensor<string, []>("op_2973_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1280])];
            tensor<bool, [4]> var_2973_end_mask_0 = const()[name = tensor<string, []>("op_2973_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_2973_cast = slice_by_index(begin = var_2973_begin_0, end = var_2973_end_0, end_mask = var_2973_end_mask_0, x = transpose_68);
            tensor<int32, [4]> var_2975_begin_0 = const()[name = tensor<string, []>("op_2975_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2975_end_0 = const()[name = tensor<string, []>("op_2975_end_0"), val = tensor<int32, [4]>([2, 64, 1, 77])];
            tensor<bool, [4]> var_2975_end_mask_0 = const()[name = tensor<string, []>("op_2975_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_2975_cast = slice_by_index(begin = var_2975_begin_0, end = var_2975_end_0, end_mask = var_2975_end_mask_0, x = v_19_cast);
            tensor<int32, [4]> var_2979_begin_0 = const()[name = tensor<string, []>("op_2979_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_2979_end_0 = const()[name = tensor<string, []>("op_2979_end_0"), val = tensor<int32, [4]>([2, 128, 1, 77])];
            tensor<bool, [4]> var_2979_end_mask_0 = const()[name = tensor<string, []>("op_2979_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_2979_cast = slice_by_index(begin = var_2979_begin_0, end = var_2979_end_0, end_mask = var_2979_end_mask_0, x = v_19_cast);
            tensor<int32, [4]> var_2983_begin_0 = const()[name = tensor<string, []>("op_2983_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_2983_end_0 = const()[name = tensor<string, []>("op_2983_end_0"), val = tensor<int32, [4]>([2, 192, 1, 77])];
            tensor<bool, [4]> var_2983_end_mask_0 = const()[name = tensor<string, []>("op_2983_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_2983_cast = slice_by_index(begin = var_2983_begin_0, end = var_2983_end_0, end_mask = var_2983_end_mask_0, x = v_19_cast);
            tensor<int32, [4]> var_2987_begin_0 = const()[name = tensor<string, []>("op_2987_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_2987_end_0 = const()[name = tensor<string, []>("op_2987_end_0"), val = tensor<int32, [4]>([2, 256, 1, 77])];
            tensor<bool, [4]> var_2987_end_mask_0 = const()[name = tensor<string, []>("op_2987_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_2987_cast = slice_by_index(begin = var_2987_begin_0, end = var_2987_end_0, end_mask = var_2987_end_mask_0, x = v_19_cast);
            tensor<int32, [4]> var_2991_begin_0 = const()[name = tensor<string, []>("op_2991_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_2991_end_0 = const()[name = tensor<string, []>("op_2991_end_0"), val = tensor<int32, [4]>([2, 320, 1, 77])];
            tensor<bool, [4]> var_2991_end_mask_0 = const()[name = tensor<string, []>("op_2991_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_2991_cast = slice_by_index(begin = var_2991_begin_0, end = var_2991_end_0, end_mask = var_2991_end_mask_0, x = v_19_cast);
            tensor<int32, [4]> var_2995_begin_0 = const()[name = tensor<string, []>("op_2995_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_2995_end_0 = const()[name = tensor<string, []>("op_2995_end_0"), val = tensor<int32, [4]>([2, 384, 1, 77])];
            tensor<bool, [4]> var_2995_end_mask_0 = const()[name = tensor<string, []>("op_2995_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_2995_cast = slice_by_index(begin = var_2995_begin_0, end = var_2995_end_0, end_mask = var_2995_end_mask_0, x = v_19_cast);
            tensor<int32, [4]> var_2999_begin_0 = const()[name = tensor<string, []>("op_2999_begin_0"), val = tensor<int32, [4]>([0, 384, 0, 0])];
            tensor<int32, [4]> var_2999_end_0 = const()[name = tensor<string, []>("op_2999_end_0"), val = tensor<int32, [4]>([2, 448, 1, 77])];
            tensor<bool, [4]> var_2999_end_mask_0 = const()[name = tensor<string, []>("op_2999_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_2999_cast = slice_by_index(begin = var_2999_begin_0, end = var_2999_end_0, end_mask = var_2999_end_mask_0, x = v_19_cast);
            tensor<int32, [4]> var_3003_begin_0 = const()[name = tensor<string, []>("op_3003_begin_0"), val = tensor<int32, [4]>([0, 448, 0, 0])];
            tensor<int32, [4]> var_3003_end_0 = const()[name = tensor<string, []>("op_3003_end_0"), val = tensor<int32, [4]>([2, 512, 1, 77])];
            tensor<bool, [4]> var_3003_end_mask_0 = const()[name = tensor<string, []>("op_3003_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_3003_cast = slice_by_index(begin = var_3003_begin_0, end = var_3003_end_0, end_mask = var_3003_end_mask_0, x = v_19_cast);
            tensor<int32, [4]> var_3007_begin_0 = const()[name = tensor<string, []>("op_3007_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_3007_end_0 = const()[name = tensor<string, []>("op_3007_end_0"), val = tensor<int32, [4]>([2, 576, 1, 77])];
            tensor<bool, [4]> var_3007_end_mask_0 = const()[name = tensor<string, []>("op_3007_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_3007_cast = slice_by_index(begin = var_3007_begin_0, end = var_3007_end_0, end_mask = var_3007_end_mask_0, x = v_19_cast);
            tensor<int32, [4]> var_3011_begin_0 = const()[name = tensor<string, []>("op_3011_begin_0"), val = tensor<int32, [4]>([0, 576, 0, 0])];
            tensor<int32, [4]> var_3011_end_0 = const()[name = tensor<string, []>("op_3011_end_0"), val = tensor<int32, [4]>([2, 640, 1, 77])];
            tensor<bool, [4]> var_3011_end_mask_0 = const()[name = tensor<string, []>("op_3011_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_3011_cast = slice_by_index(begin = var_3011_begin_0, end = var_3011_end_0, end_mask = var_3011_end_mask_0, x = v_19_cast);
            tensor<int32, [4]> var_3015_begin_0 = const()[name = tensor<string, []>("op_3015_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_3015_end_0 = const()[name = tensor<string, []>("op_3015_end_0"), val = tensor<int32, [4]>([2, 704, 1, 77])];
            tensor<bool, [4]> var_3015_end_mask_0 = const()[name = tensor<string, []>("op_3015_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_3015_cast = slice_by_index(begin = var_3015_begin_0, end = var_3015_end_0, end_mask = var_3015_end_mask_0, x = v_19_cast);
            tensor<int32, [4]> var_3019_begin_0 = const()[name = tensor<string, []>("op_3019_begin_0"), val = tensor<int32, [4]>([0, 704, 0, 0])];
            tensor<int32, [4]> var_3019_end_0 = const()[name = tensor<string, []>("op_3019_end_0"), val = tensor<int32, [4]>([2, 768, 1, 77])];
            tensor<bool, [4]> var_3019_end_mask_0 = const()[name = tensor<string, []>("op_3019_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_3019_cast = slice_by_index(begin = var_3019_begin_0, end = var_3019_end_0, end_mask = var_3019_end_mask_0, x = v_19_cast);
            tensor<int32, [4]> var_3023_begin_0 = const()[name = tensor<string, []>("op_3023_begin_0"), val = tensor<int32, [4]>([0, 768, 0, 0])];
            tensor<int32, [4]> var_3023_end_0 = const()[name = tensor<string, []>("op_3023_end_0"), val = tensor<int32, [4]>([2, 832, 1, 77])];
            tensor<bool, [4]> var_3023_end_mask_0 = const()[name = tensor<string, []>("op_3023_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_3023_cast = slice_by_index(begin = var_3023_begin_0, end = var_3023_end_0, end_mask = var_3023_end_mask_0, x = v_19_cast);
            tensor<int32, [4]> var_3027_begin_0 = const()[name = tensor<string, []>("op_3027_begin_0"), val = tensor<int32, [4]>([0, 832, 0, 0])];
            tensor<int32, [4]> var_3027_end_0 = const()[name = tensor<string, []>("op_3027_end_0"), val = tensor<int32, [4]>([2, 896, 1, 77])];
            tensor<bool, [4]> var_3027_end_mask_0 = const()[name = tensor<string, []>("op_3027_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_3027_cast = slice_by_index(begin = var_3027_begin_0, end = var_3027_end_0, end_mask = var_3027_end_mask_0, x = v_19_cast);
            tensor<int32, [4]> var_3031_begin_0 = const()[name = tensor<string, []>("op_3031_begin_0"), val = tensor<int32, [4]>([0, 896, 0, 0])];
            tensor<int32, [4]> var_3031_end_0 = const()[name = tensor<string, []>("op_3031_end_0"), val = tensor<int32, [4]>([2, 960, 1, 77])];
            tensor<bool, [4]> var_3031_end_mask_0 = const()[name = tensor<string, []>("op_3031_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_3031_cast = slice_by_index(begin = var_3031_begin_0, end = var_3031_end_0, end_mask = var_3031_end_mask_0, x = v_19_cast);
            tensor<int32, [4]> var_3035_begin_0 = const()[name = tensor<string, []>("op_3035_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_3035_end_0 = const()[name = tensor<string, []>("op_3035_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 77])];
            tensor<bool, [4]> var_3035_end_mask_0 = const()[name = tensor<string, []>("op_3035_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_3035_cast = slice_by_index(begin = var_3035_begin_0, end = var_3035_end_0, end_mask = var_3035_end_mask_0, x = v_19_cast);
            tensor<int32, [4]> var_3039_begin_0 = const()[name = tensor<string, []>("op_3039_begin_0"), val = tensor<int32, [4]>([0, 1024, 0, 0])];
            tensor<int32, [4]> var_3039_end_0 = const()[name = tensor<string, []>("op_3039_end_0"), val = tensor<int32, [4]>([2, 1088, 1, 77])];
            tensor<bool, [4]> var_3039_end_mask_0 = const()[name = tensor<string, []>("op_3039_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_3039_cast = slice_by_index(begin = var_3039_begin_0, end = var_3039_end_0, end_mask = var_3039_end_mask_0, x = v_19_cast);
            tensor<int32, [4]> var_3043_begin_0 = const()[name = tensor<string, []>("op_3043_begin_0"), val = tensor<int32, [4]>([0, 1088, 0, 0])];
            tensor<int32, [4]> var_3043_end_0 = const()[name = tensor<string, []>("op_3043_end_0"), val = tensor<int32, [4]>([2, 1152, 1, 77])];
            tensor<bool, [4]> var_3043_end_mask_0 = const()[name = tensor<string, []>("op_3043_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_3043_cast = slice_by_index(begin = var_3043_begin_0, end = var_3043_end_0, end_mask = var_3043_end_mask_0, x = v_19_cast);
            tensor<int32, [4]> var_3047_begin_0 = const()[name = tensor<string, []>("op_3047_begin_0"), val = tensor<int32, [4]>([0, 1152, 0, 0])];
            tensor<int32, [4]> var_3047_end_0 = const()[name = tensor<string, []>("op_3047_end_0"), val = tensor<int32, [4]>([2, 1216, 1, 77])];
            tensor<bool, [4]> var_3047_end_mask_0 = const()[name = tensor<string, []>("op_3047_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_3047_cast = slice_by_index(begin = var_3047_begin_0, end = var_3047_end_0, end_mask = var_3047_end_mask_0, x = v_19_cast);
            tensor<int32, [4]> var_3051_begin_0 = const()[name = tensor<string, []>("op_3051_begin_0"), val = tensor<int32, [4]>([0, 1216, 0, 0])];
            tensor<int32, [4]> var_3051_end_0 = const()[name = tensor<string, []>("op_3051_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 77])];
            tensor<bool, [4]> var_3051_end_mask_0 = const()[name = tensor<string, []>("op_3051_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_3051_cast = slice_by_index(begin = var_3051_begin_0, end = var_3051_end_0, end_mask = var_3051_end_mask_0, x = v_19_cast);
            tensor<string, []> var_3055_equation_0 = const()[name = tensor<string, []>("op_3055_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_3055_cast = einsum(equation = var_3055_equation_0, values = (var_2897_cast, var_2814_cast));
            tensor<fp16, []> var_3056_to_fp16 = const()[name = tensor<string, []>("op_3056_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_161_cast = mul(x = var_3055_cast, y = var_3056_to_fp16);
            tensor<string, []> var_3059_equation_0 = const()[name = tensor<string, []>("op_3059_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_3059_cast = einsum(equation = var_3059_equation_0, values = (var_2901_cast, var_2818_cast));
            tensor<fp16, []> var_3060_to_fp16 = const()[name = tensor<string, []>("op_3060_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_163_cast = mul(x = var_3059_cast, y = var_3060_to_fp16);
            tensor<string, []> var_3063_equation_0 = const()[name = tensor<string, []>("op_3063_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_3063_cast = einsum(equation = var_3063_equation_0, values = (var_2905_cast, var_2822_cast));
            tensor<fp16, []> var_3064_to_fp16 = const()[name = tensor<string, []>("op_3064_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_165_cast = mul(x = var_3063_cast, y = var_3064_to_fp16);
            tensor<string, []> var_3067_equation_0 = const()[name = tensor<string, []>("op_3067_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_3067_cast = einsum(equation = var_3067_equation_0, values = (var_2909_cast, var_2826_cast));
            tensor<fp16, []> var_3068_to_fp16 = const()[name = tensor<string, []>("op_3068_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_167_cast = mul(x = var_3067_cast, y = var_3068_to_fp16);
            tensor<string, []> var_3071_equation_0 = const()[name = tensor<string, []>("op_3071_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_3071_cast = einsum(equation = var_3071_equation_0, values = (var_2913_cast, var_2830_cast));
            tensor<fp16, []> var_3072_to_fp16 = const()[name = tensor<string, []>("op_3072_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_169_cast = mul(x = var_3071_cast, y = var_3072_to_fp16);
            tensor<string, []> var_3075_equation_0 = const()[name = tensor<string, []>("op_3075_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_3075_cast = einsum(equation = var_3075_equation_0, values = (var_2917_cast, var_2834_cast));
            tensor<fp16, []> var_3076_to_fp16 = const()[name = tensor<string, []>("op_3076_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_171_cast = mul(x = var_3075_cast, y = var_3076_to_fp16);
            tensor<string, []> var_3079_equation_0 = const()[name = tensor<string, []>("op_3079_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_3079_cast = einsum(equation = var_3079_equation_0, values = (var_2921_cast, var_2838_cast));
            tensor<fp16, []> var_3080_to_fp16 = const()[name = tensor<string, []>("op_3080_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_173_cast = mul(x = var_3079_cast, y = var_3080_to_fp16);
            tensor<string, []> var_3083_equation_0 = const()[name = tensor<string, []>("op_3083_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_3083_cast = einsum(equation = var_3083_equation_0, values = (var_2925_cast, var_2842_cast));
            tensor<fp16, []> var_3084_to_fp16 = const()[name = tensor<string, []>("op_3084_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_175_cast = mul(x = var_3083_cast, y = var_3084_to_fp16);
            tensor<string, []> var_3087_equation_0 = const()[name = tensor<string, []>("op_3087_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_3087_cast = einsum(equation = var_3087_equation_0, values = (var_2929_cast, var_2846_cast));
            tensor<fp16, []> var_3088_to_fp16 = const()[name = tensor<string, []>("op_3088_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_177_cast = mul(x = var_3087_cast, y = var_3088_to_fp16);
            tensor<string, []> var_3091_equation_0 = const()[name = tensor<string, []>("op_3091_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_3091_cast = einsum(equation = var_3091_equation_0, values = (var_2933_cast, var_2850_cast));
            tensor<fp16, []> var_3092_to_fp16 = const()[name = tensor<string, []>("op_3092_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_179_cast = mul(x = var_3091_cast, y = var_3092_to_fp16);
            tensor<string, []> var_3095_equation_0 = const()[name = tensor<string, []>("op_3095_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_3095_cast = einsum(equation = var_3095_equation_0, values = (var_2937_cast, var_2854_cast));
            tensor<fp16, []> var_3096_to_fp16 = const()[name = tensor<string, []>("op_3096_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_181_cast = mul(x = var_3095_cast, y = var_3096_to_fp16);
            tensor<string, []> var_3099_equation_0 = const()[name = tensor<string, []>("op_3099_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_3099_cast = einsum(equation = var_3099_equation_0, values = (var_2941_cast, var_2858_cast));
            tensor<fp16, []> var_3100_to_fp16 = const()[name = tensor<string, []>("op_3100_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_183_cast = mul(x = var_3099_cast, y = var_3100_to_fp16);
            tensor<string, []> var_3103_equation_0 = const()[name = tensor<string, []>("op_3103_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_3103_cast = einsum(equation = var_3103_equation_0, values = (var_2945_cast, var_2862_cast));
            tensor<fp16, []> var_3104_to_fp16 = const()[name = tensor<string, []>("op_3104_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_185_cast = mul(x = var_3103_cast, y = var_3104_to_fp16);
            tensor<string, []> var_3107_equation_0 = const()[name = tensor<string, []>("op_3107_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_3107_cast = einsum(equation = var_3107_equation_0, values = (var_2949_cast, var_2866_cast));
            tensor<fp16, []> var_3108_to_fp16 = const()[name = tensor<string, []>("op_3108_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_187_cast = mul(x = var_3107_cast, y = var_3108_to_fp16);
            tensor<string, []> var_3111_equation_0 = const()[name = tensor<string, []>("op_3111_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_3111_cast = einsum(equation = var_3111_equation_0, values = (var_2953_cast, var_2870_cast));
            tensor<fp16, []> var_3112_to_fp16 = const()[name = tensor<string, []>("op_3112_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_189_cast = mul(x = var_3111_cast, y = var_3112_to_fp16);
            tensor<string, []> var_3115_equation_0 = const()[name = tensor<string, []>("op_3115_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_3115_cast = einsum(equation = var_3115_equation_0, values = (var_2957_cast, var_2874_cast));
            tensor<fp16, []> var_3116_to_fp16 = const()[name = tensor<string, []>("op_3116_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_191_cast = mul(x = var_3115_cast, y = var_3116_to_fp16);
            tensor<string, []> var_3119_equation_0 = const()[name = tensor<string, []>("op_3119_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_3119_cast = einsum(equation = var_3119_equation_0, values = (var_2961_cast, var_2878_cast));
            tensor<fp16, []> var_3120_to_fp16 = const()[name = tensor<string, []>("op_3120_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_193_cast = mul(x = var_3119_cast, y = var_3120_to_fp16);
            tensor<string, []> var_3123_equation_0 = const()[name = tensor<string, []>("op_3123_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_3123_cast = einsum(equation = var_3123_equation_0, values = (var_2965_cast, var_2882_cast));
            tensor<fp16, []> var_3124_to_fp16 = const()[name = tensor<string, []>("op_3124_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_195_cast = mul(x = var_3123_cast, y = var_3124_to_fp16);
            tensor<string, []> var_3127_equation_0 = const()[name = tensor<string, []>("op_3127_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_3127_cast = einsum(equation = var_3127_equation_0, values = (var_2969_cast, var_2886_cast));
            tensor<fp16, []> var_3128_to_fp16 = const()[name = tensor<string, []>("op_3128_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_197_cast = mul(x = var_3127_cast, y = var_3128_to_fp16);
            tensor<string, []> var_3131_equation_0 = const()[name = tensor<string, []>("op_3131_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_3131_cast = einsum(equation = var_3131_equation_0, values = (var_2973_cast, var_2890_cast));
            tensor<fp16, []> var_3132_to_fp16 = const()[name = tensor<string, []>("op_3132_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_199_cast = mul(x = var_3131_cast, y = var_3132_to_fp16);
            tensor<fp16, [2, 77, 1, 256]> var_3134_cast = softmax(axis = var_2254, x = aw_161_cast);
            tensor<fp16, [2, 77, 1, 256]> var_3135_cast = softmax(axis = var_2254, x = aw_163_cast);
            tensor<fp16, [2, 77, 1, 256]> var_3136_cast = softmax(axis = var_2254, x = aw_165_cast);
            tensor<fp16, [2, 77, 1, 256]> var_3137_cast = softmax(axis = var_2254, x = aw_167_cast);
            tensor<fp16, [2, 77, 1, 256]> var_3138_cast = softmax(axis = var_2254, x = aw_169_cast);
            tensor<fp16, [2, 77, 1, 256]> var_3139_cast = softmax(axis = var_2254, x = aw_171_cast);
            tensor<fp16, [2, 77, 1, 256]> var_3140_cast = softmax(axis = var_2254, x = aw_173_cast);
            tensor<fp16, [2, 77, 1, 256]> var_3141_cast = softmax(axis = var_2254, x = aw_175_cast);
            tensor<fp16, [2, 77, 1, 256]> var_3142_cast = softmax(axis = var_2254, x = aw_177_cast);
            tensor<fp16, [2, 77, 1, 256]> var_3143_cast = softmax(axis = var_2254, x = aw_179_cast);
            tensor<fp16, [2, 77, 1, 256]> var_3144_cast = softmax(axis = var_2254, x = aw_181_cast);
            tensor<fp16, [2, 77, 1, 256]> var_3145_cast = softmax(axis = var_2254, x = aw_183_cast);
            tensor<fp16, [2, 77, 1, 256]> var_3146_cast = softmax(axis = var_2254, x = aw_185_cast);
            tensor<fp16, [2, 77, 1, 256]> var_3147_cast = softmax(axis = var_2254, x = aw_187_cast);
            tensor<fp16, [2, 77, 1, 256]> var_3148_cast = softmax(axis = var_2254, x = aw_189_cast);
            tensor<fp16, [2, 77, 1, 256]> var_3149_cast = softmax(axis = var_2254, x = aw_191_cast);
            tensor<fp16, [2, 77, 1, 256]> var_3150_cast = softmax(axis = var_2254, x = aw_193_cast);
            tensor<fp16, [2, 77, 1, 256]> var_3151_cast = softmax(axis = var_2254, x = aw_195_cast);
            tensor<fp16, [2, 77, 1, 256]> var_3152_cast = softmax(axis = var_2254, x = aw_197_cast);
            tensor<fp16, [2, 77, 1, 256]> var_3153_cast = softmax(axis = var_2254, x = aw_199_cast);
            tensor<string, []> var_3155_equation_0 = const()[name = tensor<string, []>("op_3155_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_3155_cast = einsum(equation = var_3155_equation_0, values = (var_2975_cast, var_3134_cast));
            tensor<string, []> var_3157_equation_0 = const()[name = tensor<string, []>("op_3157_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_3157_cast = einsum(equation = var_3157_equation_0, values = (var_2979_cast, var_3135_cast));
            tensor<string, []> var_3159_equation_0 = const()[name = tensor<string, []>("op_3159_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_3159_cast = einsum(equation = var_3159_equation_0, values = (var_2983_cast, var_3136_cast));
            tensor<string, []> var_3161_equation_0 = const()[name = tensor<string, []>("op_3161_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_3161_cast = einsum(equation = var_3161_equation_0, values = (var_2987_cast, var_3137_cast));
            tensor<string, []> var_3163_equation_0 = const()[name = tensor<string, []>("op_3163_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_3163_cast = einsum(equation = var_3163_equation_0, values = (var_2991_cast, var_3138_cast));
            tensor<string, []> var_3165_equation_0 = const()[name = tensor<string, []>("op_3165_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_3165_cast = einsum(equation = var_3165_equation_0, values = (var_2995_cast, var_3139_cast));
            tensor<string, []> var_3167_equation_0 = const()[name = tensor<string, []>("op_3167_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_3167_cast = einsum(equation = var_3167_equation_0, values = (var_2999_cast, var_3140_cast));
            tensor<string, []> var_3169_equation_0 = const()[name = tensor<string, []>("op_3169_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_3169_cast = einsum(equation = var_3169_equation_0, values = (var_3003_cast, var_3141_cast));
            tensor<string, []> var_3171_equation_0 = const()[name = tensor<string, []>("op_3171_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_3171_cast = einsum(equation = var_3171_equation_0, values = (var_3007_cast, var_3142_cast));
            tensor<string, []> var_3173_equation_0 = const()[name = tensor<string, []>("op_3173_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_3173_cast = einsum(equation = var_3173_equation_0, values = (var_3011_cast, var_3143_cast));
            tensor<string, []> var_3175_equation_0 = const()[name = tensor<string, []>("op_3175_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_3175_cast = einsum(equation = var_3175_equation_0, values = (var_3015_cast, var_3144_cast));
            tensor<string, []> var_3177_equation_0 = const()[name = tensor<string, []>("op_3177_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_3177_cast = einsum(equation = var_3177_equation_0, values = (var_3019_cast, var_3145_cast));
            tensor<string, []> var_3179_equation_0 = const()[name = tensor<string, []>("op_3179_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_3179_cast = einsum(equation = var_3179_equation_0, values = (var_3023_cast, var_3146_cast));
            tensor<string, []> var_3181_equation_0 = const()[name = tensor<string, []>("op_3181_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_3181_cast = einsum(equation = var_3181_equation_0, values = (var_3027_cast, var_3147_cast));
            tensor<string, []> var_3183_equation_0 = const()[name = tensor<string, []>("op_3183_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_3183_cast = einsum(equation = var_3183_equation_0, values = (var_3031_cast, var_3148_cast));
            tensor<string, []> var_3185_equation_0 = const()[name = tensor<string, []>("op_3185_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_3185_cast = einsum(equation = var_3185_equation_0, values = (var_3035_cast, var_3149_cast));
            tensor<string, []> var_3187_equation_0 = const()[name = tensor<string, []>("op_3187_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_3187_cast = einsum(equation = var_3187_equation_0, values = (var_3039_cast, var_3150_cast));
            tensor<string, []> var_3189_equation_0 = const()[name = tensor<string, []>("op_3189_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_3189_cast = einsum(equation = var_3189_equation_0, values = (var_3043_cast, var_3151_cast));
            tensor<string, []> var_3191_equation_0 = const()[name = tensor<string, []>("op_3191_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_3191_cast = einsum(equation = var_3191_equation_0, values = (var_3047_cast, var_3152_cast));
            tensor<string, []> var_3193_equation_0 = const()[name = tensor<string, []>("op_3193_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_3193_cast = einsum(equation = var_3193_equation_0, values = (var_3051_cast, var_3153_cast));
            tensor<bool, []> input_135_interleave_0 = const()[name = tensor<string, []>("input_135_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 1280, 1, 256]> input_135_cast = concat(axis = var_2254, interleave = input_135_interleave_0, values = (var_3155_cast, var_3157_cast, var_3159_cast, var_3161_cast, var_3163_cast, var_3165_cast, var_3167_cast, var_3169_cast, var_3171_cast, var_3173_cast, var_3175_cast, var_3177_cast, var_3179_cast, var_3181_cast, var_3183_cast, var_3185_cast, var_3187_cast, var_3189_cast, var_3191_cast, var_3193_cast));
            tensor<int32, [2]> var_3199 = const()[name = tensor<string, []>("op_3199"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3201 = const()[name = tensor<string, []>("op_3201"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_3203_pad_type_0 = const()[name = tensor<string, []>("op_3203_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_3203_pad_0 = const()[name = tensor<string, []>("op_3203_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(174919744)))];
            tensor<fp16, [1280]> down_blocks_2_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(178196608)))];
            tensor<fp16, [2, 1280, 1, 256]> var_3203_cast = conv(bias = down_blocks_2_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16, dilations = var_3201, groups = var_2254, pad = var_3203_pad_0, pad_type = var_3203_pad_type_0, strides = var_3199, weight = down_blocks_2_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16, x = input_135_cast);
            tensor<fp16, [2, 1280, 1, 256]> inputs_29_cast = add(x = var_3203_cast, y = inputs_27_cast);
            tensor<int32, [1]> var_3207 = const()[name = tensor<string, []>("op_3207"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> channels_mean_29_cast = reduce_mean(axes = var_3207, keep_dims = var_2249, x = inputs_29_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_29_cast = sub(x = inputs_29_cast, y = channels_mean_29_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_sq_29_cast = mul(x = zero_mean_29_cast, y = zero_mean_29_cast);
            tensor<int32, [1]> var_3211 = const()[name = tensor<string, []>("op_3211"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> var_3212_cast = reduce_mean(axes = var_3211, keep_dims = var_2249, x = zero_mean_sq_29_cast);
            tensor<fp16, []> var_3213_to_fp16 = const()[name = tensor<string, []>("op_3213_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 256]> var_3214_cast = add(x = var_3212_cast, y = var_3213_to_fp16);
            tensor<fp16, []> denom_29_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_29_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 256]> denom_29_cast = rsqrt(epsilon = denom_29_epsilon_0_to_fp16, x = var_3214_cast);
            tensor<fp16, [2, 1280, 1, 256]> out_29_cast = mul(x = zero_mean_29_cast, y = denom_29_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_3218_to_fp16 = const()[name = tensor<string, []>("op_3218_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(178199232)))];
            tensor<fp16, [2, 1280, 1, 256]> var_3219_cast = add(x = out_29_cast, y = var_3218_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_3221_to_fp16 = const()[name = tensor<string, []>("op_3221_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(178201856)))];
            tensor<fp16, [2, 1280, 1, 256]> input_137_cast = mul(x = var_3219_cast, y = var_3221_to_fp16);
            tensor<int32, [2]> var_3229 = const()[name = tensor<string, []>("op_3229"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3231 = const()[name = tensor<string, []>("op_3231"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_3233_pad_type_0 = const()[name = tensor<string, []>("op_3233_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_3233_pad_0 = const()[name = tensor<string, []>("op_3233_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [10240, 1280, 1, 1]> down_blocks_2_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16"), val = tensor<fp16, [10240, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(178204480)))];
            tensor<fp16, [10240]> down_blocks_2_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16"), val = tensor<fp16, [10240]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(204418944)))];
            tensor<fp16, [2, 10240, 1, 256]> var_3233_cast = conv(bias = down_blocks_2_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16, dilations = var_3231, groups = var_2254, pad = var_3233_pad_0, pad_type = var_3233_pad_type_0, strides = var_3229, weight = down_blocks_2_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16, x = input_137_cast);
            tensor<int32, [2]> var_3234_split_sizes_0 = const()[name = tensor<string, []>("op_3234_split_sizes_0"), val = tensor<int32, [2]>([5120, 5120])];
            tensor<int32, []> var_3234_axis_0 = const()[name = tensor<string, []>("op_3234_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [2, 5120, 1, 256]> var_3234_cast_0, tensor<fp16, [2, 5120, 1, 256]> var_3234_cast_1 = split(axis = var_3234_axis_0, split_sizes = var_3234_split_sizes_0, x = var_3233_cast);
            tensor<string, []> var_3236_mode_0 = const()[name = tensor<string, []>("op_3236_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [2, 5120, 1, 256]> var_3236_cast = gelu(mode = var_3236_mode_0, x = var_3234_cast_1);
            tensor<fp16, [2, 5120, 1, 256]> input_139_cast = mul(x = var_3234_cast_0, y = var_3236_cast);
            tensor<int32, [2]> var_3240 = const()[name = tensor<string, []>("op_3240"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3242 = const()[name = tensor<string, []>("op_3242"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_3244_pad_type_0 = const()[name = tensor<string, []>("op_3244_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_3244_pad_0 = const()[name = tensor<string, []>("op_3244_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 5120, 1, 1]> down_blocks_2_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(204439488)))];
            tensor<fp16, [1280]> down_blocks_2_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(217546752)))];
            tensor<fp16, [2, 1280, 1, 256]> var_3244_cast = conv(bias = down_blocks_2_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16, dilations = var_3242, groups = var_2254, pad = var_3244_pad_0, pad_type = var_3244_pad_type_0, strides = var_3240, weight = down_blocks_2_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16, x = input_139_cast);
            tensor<fp16, [2, 1280, 1, 256]> hidden_states_87_cast = add(x = var_3244_cast, y = inputs_29_cast);
            tensor<int32, [4]> var_3246 = const()[name = tensor<string, []>("op_3246"), val = tensor<int32, [4]>([2, 1280, 16, 16])];
            tensor<fp16, [2, 1280, 16, 16]> input_141_cast = reshape(shape = var_3246, x = hidden_states_87_cast);
            tensor<int32, [2]> var_3250 = const()[name = tensor<string, []>("op_3250"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3252 = const()[name = tensor<string, []>("op_3252"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_89_pad_type_0 = const()[name = tensor<string, []>("hidden_states_89_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_89_pad_0 = const()[name = tensor<string, []>("hidden_states_89_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_attentions_0_proj_out_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_proj_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(217549376)))];
            tensor<fp16, [1280]> down_blocks_2_attentions_0_proj_out_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_proj_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(220826240)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_89_cast = conv(bias = down_blocks_2_attentions_0_proj_out_bias_to_fp16, dilations = var_3252, groups = var_2254, pad = hidden_states_89_pad_0, pad_type = hidden_states_89_pad_type_0, strides = var_3250, weight = down_blocks_2_attentions_0_proj_out_weight_to_fp16, x = input_141_cast);
            tensor<fp16, [2, 1280, 16, 16]> input_143_cast_1 = add(x = hidden_states_89_cast, y = hidden_states_77_cast);
            tensor<int32, [5]> reshape_60_shape_0 = const()[name = tensor<string, []>("reshape_60_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 16, 16])];
            tensor<fp16, [2, 32, 40, 16, 16]> reshape_60_cast = reshape(shape = reshape_60_shape_0, x = input_143_cast_1);
            tensor<int32, [3]> reduce_mean_45_axes_0 = const()[name = tensor<string, []>("reduce_mean_45_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_45_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_45_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_45_cast = reduce_mean(axes = reduce_mean_45_axes_0, keep_dims = reduce_mean_45_keep_dims_0, x = reshape_60_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> sub_30_cast = sub(x = reshape_60_cast, y = reduce_mean_45_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> square_15_cast = square(x = sub_30_cast);
            tensor<int32, [3]> reduce_mean_47_axes_0 = const()[name = tensor<string, []>("reduce_mean_47_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_47_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_47_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_47_cast = reduce_mean(axes = reduce_mean_47_axes_0, keep_dims = reduce_mean_47_keep_dims_0, x = square_15_cast);
            tensor<fp16, []> add_30_y_0_to_fp16 = const()[name = tensor<string, []>("add_30_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_30_cast = add(x = reduce_mean_47_cast, y = add_30_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_15_cast = sqrt(x = add_30_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> real_div_15_cast = real_div(x = sub_30_cast, y = sqrt_15_cast);
            tensor<int32, [4]> reshape_61_shape_0 = const()[name = tensor<string, []>("reshape_61_shape_0"), val = tensor<int32, [4]>([2, 1280, 16, 16])];
            tensor<fp16, [2, 1280, 16, 16]> reshape_61_cast = reshape(shape = reshape_61_shape_0, x = real_div_15_cast);
            tensor<fp16, [1280]> add_31_mean_0_to_fp16 = const()[name = tensor<string, []>("add_31_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(220828864)))];
            tensor<fp16, [1280]> add_31_variance_0_to_fp16 = const()[name = tensor<string, []>("add_31_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(220831488)))];
            tensor<fp16, [1280]> add_31_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_31_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(220834112)))];
            tensor<fp16, [1280]> add_31_beta_0_to_fp16 = const()[name = tensor<string, []>("add_31_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(220836736)))];
            tensor<fp16, []> add_31_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_31_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 16, 16]> add_31_cast = batch_norm(beta = add_31_beta_0_to_fp16, epsilon = add_31_epsilon_0_to_fp16, gamma = add_31_gamma_0_to_fp16, mean = add_31_mean_0_to_fp16, variance = add_31_variance_0_to_fp16, x = reshape_61_cast);
            tensor<fp16, [2, 1280, 16, 16]> input_147_cast = silu(x = add_31_cast);
            tensor<int32, [2]> var_3267 = const()[name = tensor<string, []>("op_3267"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3269 = const()[name = tensor<string, []>("op_3269"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_91_pad_type_0 = const()[name = tensor<string, []>("hidden_states_91_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_91_pad_0 = const()[name = tensor<string, []>("hidden_states_91_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> down_blocks_2_resnets_1_conv1_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_resnets_1_conv1_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(220839360)))];
            tensor<fp16, [1280]> down_blocks_2_resnets_1_conv1_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_resnets_1_conv1_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(250330624)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_91_cast = conv(bias = down_blocks_2_resnets_1_conv1_bias_to_fp16, dilations = var_3269, groups = var_2254, pad = hidden_states_91_pad_0, pad_type = hidden_states_91_pad_type_0, strides = var_3267, weight = down_blocks_2_resnets_1_conv1_weight_to_fp16, x = input_147_cast);
            tensor<int32, [2]> var_3275 = const()[name = tensor<string, []>("op_3275"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3277 = const()[name = tensor<string, []>("op_3277"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_11_pad_type_0 = const()[name = tensor<string, []>("temb_11_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_11_pad_0 = const()[name = tensor<string, []>("temb_11_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_resnets_1_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_resnets_1_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(250333248)))];
            tensor<fp16, [1280]> down_blocks_2_resnets_1_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_resnets_1_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(253610112)))];
            tensor<fp16, [2, 1280, 1, 1]> temb_11_cast = conv(bias = down_blocks_2_resnets_1_time_emb_proj_bias_to_fp16, dilations = var_3277, groups = var_2254, pad = temb_11_pad_0, pad_type = temb_11_pad_type_0, strides = var_3275, weight = down_blocks_2_resnets_1_time_emb_proj_weight_to_fp16, x = input_15_cast_1);
            tensor<fp16, [2, 1280, 16, 16]> input_151_cast = add(x = hidden_states_91_cast, y = temb_11_cast);
            tensor<int32, [5]> reshape_64_shape_0 = const()[name = tensor<string, []>("reshape_64_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 16, 16])];
            tensor<fp16, [2, 32, 40, 16, 16]> reshape_64_cast = reshape(shape = reshape_64_shape_0, x = input_151_cast);
            tensor<int32, [3]> reduce_mean_48_axes_0 = const()[name = tensor<string, []>("reduce_mean_48_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_48_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_48_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_48_cast = reduce_mean(axes = reduce_mean_48_axes_0, keep_dims = reduce_mean_48_keep_dims_0, x = reshape_64_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> sub_32_cast = sub(x = reshape_64_cast, y = reduce_mean_48_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> square_16_cast = square(x = sub_32_cast);
            tensor<int32, [3]> reduce_mean_50_axes_0 = const()[name = tensor<string, []>("reduce_mean_50_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_50_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_50_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_50_cast = reduce_mean(axes = reduce_mean_50_axes_0, keep_dims = reduce_mean_50_keep_dims_0, x = square_16_cast);
            tensor<fp16, []> add_32_y_0_to_fp16 = const()[name = tensor<string, []>("add_32_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_32_cast = add(x = reduce_mean_50_cast, y = add_32_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_16_cast = sqrt(x = add_32_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> real_div_16_cast = real_div(x = sub_32_cast, y = sqrt_16_cast);
            tensor<int32, [4]> reshape_65_shape_0 = const()[name = tensor<string, []>("reshape_65_shape_0"), val = tensor<int32, [4]>([2, 1280, 16, 16])];
            tensor<fp16, [2, 1280, 16, 16]> reshape_65_cast = reshape(shape = reshape_65_shape_0, x = real_div_16_cast);
            tensor<fp16, [1280]> add_33_mean_0_to_fp16 = const()[name = tensor<string, []>("add_33_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(253612736)))];
            tensor<fp16, [1280]> add_33_variance_0_to_fp16 = const()[name = tensor<string, []>("add_33_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(253615360)))];
            tensor<fp16, [1280]> add_33_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_33_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(253617984)))];
            tensor<fp16, [1280]> add_33_beta_0_to_fp16 = const()[name = tensor<string, []>("add_33_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(253620608)))];
            tensor<fp16, []> add_33_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_33_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 16, 16]> add_33_cast = batch_norm(beta = add_33_beta_0_to_fp16, epsilon = add_33_epsilon_0_to_fp16, gamma = add_33_gamma_0_to_fp16, mean = add_33_mean_0_to_fp16, variance = add_33_variance_0_to_fp16, x = reshape_65_cast);
            tensor<fp16, [2, 1280, 16, 16]> input_155_cast = silu(x = add_33_cast);
            tensor<int32, [2]> var_3287 = const()[name = tensor<string, []>("op_3287"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3289 = const()[name = tensor<string, []>("op_3289"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_93_pad_type_0 = const()[name = tensor<string, []>("hidden_states_93_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_93_pad_0 = const()[name = tensor<string, []>("hidden_states_93_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> down_blocks_2_resnets_1_conv2_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_resnets_1_conv2_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(253623232)))];
            tensor<fp16, [1280]> down_blocks_2_resnets_1_conv2_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_resnets_1_conv2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(283114496)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_93_cast = conv(bias = down_blocks_2_resnets_1_conv2_bias_to_fp16, dilations = var_3289, groups = var_2254, pad = hidden_states_93_pad_0, pad_type = hidden_states_93_pad_type_0, strides = var_3287, weight = down_blocks_2_resnets_1_conv2_weight_to_fp16, x = input_155_cast);
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_95_cast = add(x = input_143_cast_1, y = hidden_states_93_cast);
            tensor<int32, [5]> reshape_68_shape_0 = const()[name = tensor<string, []>("reshape_68_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 16, 16])];
            tensor<fp16, [2, 32, 40, 16, 16]> reshape_68_cast = reshape(shape = reshape_68_shape_0, x = hidden_states_95_cast);
            tensor<int32, [3]> reduce_mean_51_axes_0 = const()[name = tensor<string, []>("reduce_mean_51_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_51_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_51_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_51_cast = reduce_mean(axes = reduce_mean_51_axes_0, keep_dims = reduce_mean_51_keep_dims_0, x = reshape_68_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> sub_34_cast = sub(x = reshape_68_cast, y = reduce_mean_51_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> square_17_cast = square(x = sub_34_cast);
            tensor<int32, [3]> reduce_mean_53_axes_0 = const()[name = tensor<string, []>("reduce_mean_53_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_53_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_53_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_53_cast = reduce_mean(axes = reduce_mean_53_axes_0, keep_dims = reduce_mean_53_keep_dims_0, x = square_17_cast);
            tensor<fp16, []> add_34_y_0_to_fp16 = const()[name = tensor<string, []>("add_34_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_34_cast = add(x = reduce_mean_53_cast, y = add_34_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_17_cast = sqrt(x = add_34_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> real_div_17_cast = real_div(x = sub_34_cast, y = sqrt_17_cast);
            tensor<int32, [4]> reshape_69_shape_0 = const()[name = tensor<string, []>("reshape_69_shape_0"), val = tensor<int32, [4]>([2, 1280, 16, 16])];
            tensor<fp16, [2, 1280, 16, 16]> reshape_69_cast = reshape(shape = reshape_69_shape_0, x = real_div_17_cast);
            tensor<fp16, [1280]> add_35_mean_0_to_fp16 = const()[name = tensor<string, []>("add_35_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(283117120)))];
            tensor<fp16, [1280]> add_35_variance_0_to_fp16 = const()[name = tensor<string, []>("add_35_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(283119744)))];
            tensor<fp16, [1280]> add_35_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_35_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(283122368)))];
            tensor<fp16, [1280]> add_35_beta_0_to_fp16 = const()[name = tensor<string, []>("add_35_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(283124992)))];
            tensor<fp16, []> add_35_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_35_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 16, 16]> add_35_cast = batch_norm(beta = add_35_beta_0_to_fp16, epsilon = add_35_epsilon_0_to_fp16, gamma = add_35_gamma_0_to_fp16, mean = add_35_mean_0_to_fp16, variance = add_35_variance_0_to_fp16, x = reshape_69_cast);
            tensor<int32, [2]> var_3309 = const()[name = tensor<string, []>("op_3309"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3311 = const()[name = tensor<string, []>("op_3311"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_97_pad_type_0 = const()[name = tensor<string, []>("hidden_states_97_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_97_pad_0 = const()[name = tensor<string, []>("hidden_states_97_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_attentions_1_proj_in_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_proj_in_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(283127616)))];
            tensor<fp16, [1280]> down_blocks_2_attentions_1_proj_in_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_proj_in_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(286404480)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_97_cast = conv(bias = down_blocks_2_attentions_1_proj_in_bias_to_fp16, dilations = var_3311, groups = var_2254, pad = hidden_states_97_pad_0, pad_type = hidden_states_97_pad_type_0, strides = var_3309, weight = down_blocks_2_attentions_1_proj_in_weight_to_fp16, x = add_35_cast);
            tensor<int32, [4]> var_3316 = const()[name = tensor<string, []>("op_3316"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<fp16, [2, 1280, 1, 256]> inputs_31_cast = reshape(shape = var_3316, x = hidden_states_97_cast);
            tensor<int32, [1]> var_3326 = const()[name = tensor<string, []>("op_3326"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> channels_mean_31_cast = reduce_mean(axes = var_3326, keep_dims = var_2249, x = inputs_31_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_31_cast = sub(x = inputs_31_cast, y = channels_mean_31_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_sq_31_cast = mul(x = zero_mean_31_cast, y = zero_mean_31_cast);
            tensor<int32, [1]> var_3330 = const()[name = tensor<string, []>("op_3330"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> var_3331_cast = reduce_mean(axes = var_3330, keep_dims = var_2249, x = zero_mean_sq_31_cast);
            tensor<fp16, []> var_3332_to_fp16 = const()[name = tensor<string, []>("op_3332_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 256]> var_3333_cast = add(x = var_3331_cast, y = var_3332_to_fp16);
            tensor<fp16, []> denom_31_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_31_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 256]> denom_31_cast = rsqrt(epsilon = denom_31_epsilon_0_to_fp16, x = var_3333_cast);
            tensor<fp16, [2, 1280, 1, 256]> out_31_cast = mul(x = zero_mean_31_cast, y = denom_31_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_3337_to_fp16 = const()[name = tensor<string, []>("op_3337_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(286407104)))];
            tensor<fp16, [2, 1280, 1, 256]> var_3338_cast = add(x = out_31_cast, y = var_3337_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_3340_to_fp16 = const()[name = tensor<string, []>("op_3340_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(286409728)))];
            tensor<fp16, [2, 1280, 1, 256]> hidden_states_99_cast = mul(x = var_3338_cast, y = var_3340_to_fp16);
            tensor<int32, [2]> var_3347 = const()[name = tensor<string, []>("op_3347"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3349 = const()[name = tensor<string, []>("op_3349"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_21_pad_type_0 = const()[name = tensor<string, []>("q_21_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_21_pad_0 = const()[name = tensor<string, []>("q_21_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(286412352)))];
            tensor<fp16, [2, 1280, 1, 256]> q_21_cast = conv(dilations = var_3349, groups = var_2254, pad = q_21_pad_0, pad_type = q_21_pad_type_0, strides = var_3347, weight = down_blocks_2_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16, x = hidden_states_99_cast);
            tensor<int32, [2]> var_3353 = const()[name = tensor<string, []>("op_3353"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3355 = const()[name = tensor<string, []>("op_3355"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_41_pad_type_0 = const()[name = tensor<string, []>("k_41_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_41_pad_0 = const()[name = tensor<string, []>("k_41_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(289689216)))];
            tensor<fp16, [2, 1280, 1, 256]> k_41_cast = conv(dilations = var_3355, groups = var_2254, pad = k_41_pad_0, pad_type = k_41_pad_type_0, strides = var_3353, weight = down_blocks_2_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16, x = hidden_states_99_cast);
            tensor<int32, [2]> var_3359 = const()[name = tensor<string, []>("op_3359"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3361 = const()[name = tensor<string, []>("op_3361"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_21_pad_type_0 = const()[name = tensor<string, []>("v_21_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_21_pad_0 = const()[name = tensor<string, []>("v_21_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(292966080)))];
            tensor<fp16, [2, 1280, 1, 256]> v_21_cast = conv(dilations = var_3361, groups = var_2254, pad = v_21_pad_0, pad_type = v_21_pad_type_0, strides = var_3359, weight = down_blocks_2_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16, x = hidden_states_99_cast);
            tensor<int32, [4]> var_3365_begin_0 = const()[name = tensor<string, []>("op_3365_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_3365_end_0 = const()[name = tensor<string, []>("op_3365_end_0"), val = tensor<int32, [4]>([2, 64, 1, 256])];
            tensor<bool, [4]> var_3365_end_mask_0 = const()[name = tensor<string, []>("op_3365_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3365_cast = slice_by_index(begin = var_3365_begin_0, end = var_3365_end_0, end_mask = var_3365_end_mask_0, x = q_21_cast);
            tensor<int32, [4]> var_3369_begin_0 = const()[name = tensor<string, []>("op_3369_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_3369_end_0 = const()[name = tensor<string, []>("op_3369_end_0"), val = tensor<int32, [4]>([2, 128, 1, 256])];
            tensor<bool, [4]> var_3369_end_mask_0 = const()[name = tensor<string, []>("op_3369_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3369_cast = slice_by_index(begin = var_3369_begin_0, end = var_3369_end_0, end_mask = var_3369_end_mask_0, x = q_21_cast);
            tensor<int32, [4]> var_3373_begin_0 = const()[name = tensor<string, []>("op_3373_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_3373_end_0 = const()[name = tensor<string, []>("op_3373_end_0"), val = tensor<int32, [4]>([2, 192, 1, 256])];
            tensor<bool, [4]> var_3373_end_mask_0 = const()[name = tensor<string, []>("op_3373_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3373_cast = slice_by_index(begin = var_3373_begin_0, end = var_3373_end_0, end_mask = var_3373_end_mask_0, x = q_21_cast);
            tensor<int32, [4]> var_3377_begin_0 = const()[name = tensor<string, []>("op_3377_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_3377_end_0 = const()[name = tensor<string, []>("op_3377_end_0"), val = tensor<int32, [4]>([2, 256, 1, 256])];
            tensor<bool, [4]> var_3377_end_mask_0 = const()[name = tensor<string, []>("op_3377_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3377_cast = slice_by_index(begin = var_3377_begin_0, end = var_3377_end_0, end_mask = var_3377_end_mask_0, x = q_21_cast);
            tensor<int32, [4]> var_3381_begin_0 = const()[name = tensor<string, []>("op_3381_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_3381_end_0 = const()[name = tensor<string, []>("op_3381_end_0"), val = tensor<int32, [4]>([2, 320, 1, 256])];
            tensor<bool, [4]> var_3381_end_mask_0 = const()[name = tensor<string, []>("op_3381_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3381_cast = slice_by_index(begin = var_3381_begin_0, end = var_3381_end_0, end_mask = var_3381_end_mask_0, x = q_21_cast);
            tensor<int32, [4]> var_3385_begin_0 = const()[name = tensor<string, []>("op_3385_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_3385_end_0 = const()[name = tensor<string, []>("op_3385_end_0"), val = tensor<int32, [4]>([2, 384, 1, 256])];
            tensor<bool, [4]> var_3385_end_mask_0 = const()[name = tensor<string, []>("op_3385_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3385_cast = slice_by_index(begin = var_3385_begin_0, end = var_3385_end_0, end_mask = var_3385_end_mask_0, x = q_21_cast);
            tensor<int32, [4]> var_3389_begin_0 = const()[name = tensor<string, []>("op_3389_begin_0"), val = tensor<int32, [4]>([0, 384, 0, 0])];
            tensor<int32, [4]> var_3389_end_0 = const()[name = tensor<string, []>("op_3389_end_0"), val = tensor<int32, [4]>([2, 448, 1, 256])];
            tensor<bool, [4]> var_3389_end_mask_0 = const()[name = tensor<string, []>("op_3389_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3389_cast = slice_by_index(begin = var_3389_begin_0, end = var_3389_end_0, end_mask = var_3389_end_mask_0, x = q_21_cast);
            tensor<int32, [4]> var_3393_begin_0 = const()[name = tensor<string, []>("op_3393_begin_0"), val = tensor<int32, [4]>([0, 448, 0, 0])];
            tensor<int32, [4]> var_3393_end_0 = const()[name = tensor<string, []>("op_3393_end_0"), val = tensor<int32, [4]>([2, 512, 1, 256])];
            tensor<bool, [4]> var_3393_end_mask_0 = const()[name = tensor<string, []>("op_3393_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3393_cast = slice_by_index(begin = var_3393_begin_0, end = var_3393_end_0, end_mask = var_3393_end_mask_0, x = q_21_cast);
            tensor<int32, [4]> var_3397_begin_0 = const()[name = tensor<string, []>("op_3397_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_3397_end_0 = const()[name = tensor<string, []>("op_3397_end_0"), val = tensor<int32, [4]>([2, 576, 1, 256])];
            tensor<bool, [4]> var_3397_end_mask_0 = const()[name = tensor<string, []>("op_3397_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3397_cast = slice_by_index(begin = var_3397_begin_0, end = var_3397_end_0, end_mask = var_3397_end_mask_0, x = q_21_cast);
            tensor<int32, [4]> var_3401_begin_0 = const()[name = tensor<string, []>("op_3401_begin_0"), val = tensor<int32, [4]>([0, 576, 0, 0])];
            tensor<int32, [4]> var_3401_end_0 = const()[name = tensor<string, []>("op_3401_end_0"), val = tensor<int32, [4]>([2, 640, 1, 256])];
            tensor<bool, [4]> var_3401_end_mask_0 = const()[name = tensor<string, []>("op_3401_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3401_cast = slice_by_index(begin = var_3401_begin_0, end = var_3401_end_0, end_mask = var_3401_end_mask_0, x = q_21_cast);
            tensor<int32, [4]> var_3405_begin_0 = const()[name = tensor<string, []>("op_3405_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_3405_end_0 = const()[name = tensor<string, []>("op_3405_end_0"), val = tensor<int32, [4]>([2, 704, 1, 256])];
            tensor<bool, [4]> var_3405_end_mask_0 = const()[name = tensor<string, []>("op_3405_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3405_cast = slice_by_index(begin = var_3405_begin_0, end = var_3405_end_0, end_mask = var_3405_end_mask_0, x = q_21_cast);
            tensor<int32, [4]> var_3409_begin_0 = const()[name = tensor<string, []>("op_3409_begin_0"), val = tensor<int32, [4]>([0, 704, 0, 0])];
            tensor<int32, [4]> var_3409_end_0 = const()[name = tensor<string, []>("op_3409_end_0"), val = tensor<int32, [4]>([2, 768, 1, 256])];
            tensor<bool, [4]> var_3409_end_mask_0 = const()[name = tensor<string, []>("op_3409_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3409_cast = slice_by_index(begin = var_3409_begin_0, end = var_3409_end_0, end_mask = var_3409_end_mask_0, x = q_21_cast);
            tensor<int32, [4]> var_3413_begin_0 = const()[name = tensor<string, []>("op_3413_begin_0"), val = tensor<int32, [4]>([0, 768, 0, 0])];
            tensor<int32, [4]> var_3413_end_0 = const()[name = tensor<string, []>("op_3413_end_0"), val = tensor<int32, [4]>([2, 832, 1, 256])];
            tensor<bool, [4]> var_3413_end_mask_0 = const()[name = tensor<string, []>("op_3413_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3413_cast = slice_by_index(begin = var_3413_begin_0, end = var_3413_end_0, end_mask = var_3413_end_mask_0, x = q_21_cast);
            tensor<int32, [4]> var_3417_begin_0 = const()[name = tensor<string, []>("op_3417_begin_0"), val = tensor<int32, [4]>([0, 832, 0, 0])];
            tensor<int32, [4]> var_3417_end_0 = const()[name = tensor<string, []>("op_3417_end_0"), val = tensor<int32, [4]>([2, 896, 1, 256])];
            tensor<bool, [4]> var_3417_end_mask_0 = const()[name = tensor<string, []>("op_3417_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3417_cast = slice_by_index(begin = var_3417_begin_0, end = var_3417_end_0, end_mask = var_3417_end_mask_0, x = q_21_cast);
            tensor<int32, [4]> var_3421_begin_0 = const()[name = tensor<string, []>("op_3421_begin_0"), val = tensor<int32, [4]>([0, 896, 0, 0])];
            tensor<int32, [4]> var_3421_end_0 = const()[name = tensor<string, []>("op_3421_end_0"), val = tensor<int32, [4]>([2, 960, 1, 256])];
            tensor<bool, [4]> var_3421_end_mask_0 = const()[name = tensor<string, []>("op_3421_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3421_cast = slice_by_index(begin = var_3421_begin_0, end = var_3421_end_0, end_mask = var_3421_end_mask_0, x = q_21_cast);
            tensor<int32, [4]> var_3425_begin_0 = const()[name = tensor<string, []>("op_3425_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_3425_end_0 = const()[name = tensor<string, []>("op_3425_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 256])];
            tensor<bool, [4]> var_3425_end_mask_0 = const()[name = tensor<string, []>("op_3425_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3425_cast = slice_by_index(begin = var_3425_begin_0, end = var_3425_end_0, end_mask = var_3425_end_mask_0, x = q_21_cast);
            tensor<int32, [4]> var_3429_begin_0 = const()[name = tensor<string, []>("op_3429_begin_0"), val = tensor<int32, [4]>([0, 1024, 0, 0])];
            tensor<int32, [4]> var_3429_end_0 = const()[name = tensor<string, []>("op_3429_end_0"), val = tensor<int32, [4]>([2, 1088, 1, 256])];
            tensor<bool, [4]> var_3429_end_mask_0 = const()[name = tensor<string, []>("op_3429_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3429_cast = slice_by_index(begin = var_3429_begin_0, end = var_3429_end_0, end_mask = var_3429_end_mask_0, x = q_21_cast);
            tensor<int32, [4]> var_3433_begin_0 = const()[name = tensor<string, []>("op_3433_begin_0"), val = tensor<int32, [4]>([0, 1088, 0, 0])];
            tensor<int32, [4]> var_3433_end_0 = const()[name = tensor<string, []>("op_3433_end_0"), val = tensor<int32, [4]>([2, 1152, 1, 256])];
            tensor<bool, [4]> var_3433_end_mask_0 = const()[name = tensor<string, []>("op_3433_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3433_cast = slice_by_index(begin = var_3433_begin_0, end = var_3433_end_0, end_mask = var_3433_end_mask_0, x = q_21_cast);
            tensor<int32, [4]> var_3437_begin_0 = const()[name = tensor<string, []>("op_3437_begin_0"), val = tensor<int32, [4]>([0, 1152, 0, 0])];
            tensor<int32, [4]> var_3437_end_0 = const()[name = tensor<string, []>("op_3437_end_0"), val = tensor<int32, [4]>([2, 1216, 1, 256])];
            tensor<bool, [4]> var_3437_end_mask_0 = const()[name = tensor<string, []>("op_3437_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3437_cast = slice_by_index(begin = var_3437_begin_0, end = var_3437_end_0, end_mask = var_3437_end_mask_0, x = q_21_cast);
            tensor<int32, [4]> var_3441_begin_0 = const()[name = tensor<string, []>("op_3441_begin_0"), val = tensor<int32, [4]>([0, 1216, 0, 0])];
            tensor<int32, [4]> var_3441_end_0 = const()[name = tensor<string, []>("op_3441_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<bool, [4]> var_3441_end_mask_0 = const()[name = tensor<string, []>("op_3441_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3441_cast = slice_by_index(begin = var_3441_begin_0, end = var_3441_end_0, end_mask = var_3441_end_mask_0, x = q_21_cast);
            tensor<int32, [4]> k_43_perm_0 = const()[name = tensor<string, []>("k_43_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_3448_begin_0 = const()[name = tensor<string, []>("op_3448_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_3448_end_0 = const()[name = tensor<string, []>("op_3448_end_0"), val = tensor<int32, [4]>([2, 256, 1, 64])];
            tensor<bool, [4]> var_3448_end_mask_0 = const()[name = tensor<string, []>("op_3448_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 1280]> transpose_67 = transpose(perm = k_43_perm_0, x = k_41_cast);
            tensor<fp16, [2, 256, 1, 64]> var_3448_cast = slice_by_index(begin = var_3448_begin_0, end = var_3448_end_0, end_mask = var_3448_end_mask_0, x = transpose_67);
            tensor<int32, [4]> var_3452_begin_0 = const()[name = tensor<string, []>("op_3452_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 64])];
            tensor<int32, [4]> var_3452_end_0 = const()[name = tensor<string, []>("op_3452_end_0"), val = tensor<int32, [4]>([2, 256, 1, 128])];
            tensor<bool, [4]> var_3452_end_mask_0 = const()[name = tensor<string, []>("op_3452_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_3452_cast = slice_by_index(begin = var_3452_begin_0, end = var_3452_end_0, end_mask = var_3452_end_mask_0, x = transpose_67);
            tensor<int32, [4]> var_3456_begin_0 = const()[name = tensor<string, []>("op_3456_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 128])];
            tensor<int32, [4]> var_3456_end_0 = const()[name = tensor<string, []>("op_3456_end_0"), val = tensor<int32, [4]>([2, 256, 1, 192])];
            tensor<bool, [4]> var_3456_end_mask_0 = const()[name = tensor<string, []>("op_3456_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_3456_cast = slice_by_index(begin = var_3456_begin_0, end = var_3456_end_0, end_mask = var_3456_end_mask_0, x = transpose_67);
            tensor<int32, [4]> var_3460_begin_0 = const()[name = tensor<string, []>("op_3460_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 192])];
            tensor<int32, [4]> var_3460_end_0 = const()[name = tensor<string, []>("op_3460_end_0"), val = tensor<int32, [4]>([2, 256, 1, 256])];
            tensor<bool, [4]> var_3460_end_mask_0 = const()[name = tensor<string, []>("op_3460_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_3460_cast = slice_by_index(begin = var_3460_begin_0, end = var_3460_end_0, end_mask = var_3460_end_mask_0, x = transpose_67);
            tensor<int32, [4]> var_3464_begin_0 = const()[name = tensor<string, []>("op_3464_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 256])];
            tensor<int32, [4]> var_3464_end_0 = const()[name = tensor<string, []>("op_3464_end_0"), val = tensor<int32, [4]>([2, 256, 1, 320])];
            tensor<bool, [4]> var_3464_end_mask_0 = const()[name = tensor<string, []>("op_3464_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_3464_cast = slice_by_index(begin = var_3464_begin_0, end = var_3464_end_0, end_mask = var_3464_end_mask_0, x = transpose_67);
            tensor<int32, [4]> var_3468_begin_0 = const()[name = tensor<string, []>("op_3468_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_3468_end_0 = const()[name = tensor<string, []>("op_3468_end_0"), val = tensor<int32, [4]>([2, 256, 1, 384])];
            tensor<bool, [4]> var_3468_end_mask_0 = const()[name = tensor<string, []>("op_3468_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_3468_cast = slice_by_index(begin = var_3468_begin_0, end = var_3468_end_0, end_mask = var_3468_end_mask_0, x = transpose_67);
            tensor<int32, [4]> var_3472_begin_0 = const()[name = tensor<string, []>("op_3472_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 384])];
            tensor<int32, [4]> var_3472_end_0 = const()[name = tensor<string, []>("op_3472_end_0"), val = tensor<int32, [4]>([2, 256, 1, 448])];
            tensor<bool, [4]> var_3472_end_mask_0 = const()[name = tensor<string, []>("op_3472_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_3472_cast = slice_by_index(begin = var_3472_begin_0, end = var_3472_end_0, end_mask = var_3472_end_mask_0, x = transpose_67);
            tensor<int32, [4]> var_3476_begin_0 = const()[name = tensor<string, []>("op_3476_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 448])];
            tensor<int32, [4]> var_3476_end_0 = const()[name = tensor<string, []>("op_3476_end_0"), val = tensor<int32, [4]>([2, 256, 1, 512])];
            tensor<bool, [4]> var_3476_end_mask_0 = const()[name = tensor<string, []>("op_3476_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_3476_cast = slice_by_index(begin = var_3476_begin_0, end = var_3476_end_0, end_mask = var_3476_end_mask_0, x = transpose_67);
            tensor<int32, [4]> var_3480_begin_0 = const()[name = tensor<string, []>("op_3480_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 512])];
            tensor<int32, [4]> var_3480_end_0 = const()[name = tensor<string, []>("op_3480_end_0"), val = tensor<int32, [4]>([2, 256, 1, 576])];
            tensor<bool, [4]> var_3480_end_mask_0 = const()[name = tensor<string, []>("op_3480_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_3480_cast = slice_by_index(begin = var_3480_begin_0, end = var_3480_end_0, end_mask = var_3480_end_mask_0, x = transpose_67);
            tensor<int32, [4]> var_3484_begin_0 = const()[name = tensor<string, []>("op_3484_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 576])];
            tensor<int32, [4]> var_3484_end_0 = const()[name = tensor<string, []>("op_3484_end_0"), val = tensor<int32, [4]>([2, 256, 1, 640])];
            tensor<bool, [4]> var_3484_end_mask_0 = const()[name = tensor<string, []>("op_3484_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_3484_cast = slice_by_index(begin = var_3484_begin_0, end = var_3484_end_0, end_mask = var_3484_end_mask_0, x = transpose_67);
            tensor<int32, [4]> var_3488_begin_0 = const()[name = tensor<string, []>("op_3488_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 640])];
            tensor<int32, [4]> var_3488_end_0 = const()[name = tensor<string, []>("op_3488_end_0"), val = tensor<int32, [4]>([2, 256, 1, 704])];
            tensor<bool, [4]> var_3488_end_mask_0 = const()[name = tensor<string, []>("op_3488_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_3488_cast = slice_by_index(begin = var_3488_begin_0, end = var_3488_end_0, end_mask = var_3488_end_mask_0, x = transpose_67);
            tensor<int32, [4]> var_3492_begin_0 = const()[name = tensor<string, []>("op_3492_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 704])];
            tensor<int32, [4]> var_3492_end_0 = const()[name = tensor<string, []>("op_3492_end_0"), val = tensor<int32, [4]>([2, 256, 1, 768])];
            tensor<bool, [4]> var_3492_end_mask_0 = const()[name = tensor<string, []>("op_3492_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_3492_cast = slice_by_index(begin = var_3492_begin_0, end = var_3492_end_0, end_mask = var_3492_end_mask_0, x = transpose_67);
            tensor<int32, [4]> var_3496_begin_0 = const()[name = tensor<string, []>("op_3496_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 768])];
            tensor<int32, [4]> var_3496_end_0 = const()[name = tensor<string, []>("op_3496_end_0"), val = tensor<int32, [4]>([2, 256, 1, 832])];
            tensor<bool, [4]> var_3496_end_mask_0 = const()[name = tensor<string, []>("op_3496_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_3496_cast = slice_by_index(begin = var_3496_begin_0, end = var_3496_end_0, end_mask = var_3496_end_mask_0, x = transpose_67);
            tensor<int32, [4]> var_3500_begin_0 = const()[name = tensor<string, []>("op_3500_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 832])];
            tensor<int32, [4]> var_3500_end_0 = const()[name = tensor<string, []>("op_3500_end_0"), val = tensor<int32, [4]>([2, 256, 1, 896])];
            tensor<bool, [4]> var_3500_end_mask_0 = const()[name = tensor<string, []>("op_3500_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_3500_cast = slice_by_index(begin = var_3500_begin_0, end = var_3500_end_0, end_mask = var_3500_end_mask_0, x = transpose_67);
            tensor<int32, [4]> var_3504_begin_0 = const()[name = tensor<string, []>("op_3504_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 896])];
            tensor<int32, [4]> var_3504_end_0 = const()[name = tensor<string, []>("op_3504_end_0"), val = tensor<int32, [4]>([2, 256, 1, 960])];
            tensor<bool, [4]> var_3504_end_mask_0 = const()[name = tensor<string, []>("op_3504_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_3504_cast = slice_by_index(begin = var_3504_begin_0, end = var_3504_end_0, end_mask = var_3504_end_mask_0, x = transpose_67);
            tensor<int32, [4]> var_3508_begin_0 = const()[name = tensor<string, []>("op_3508_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 960])];
            tensor<int32, [4]> var_3508_end_0 = const()[name = tensor<string, []>("op_3508_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1024])];
            tensor<bool, [4]> var_3508_end_mask_0 = const()[name = tensor<string, []>("op_3508_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_3508_cast = slice_by_index(begin = var_3508_begin_0, end = var_3508_end_0, end_mask = var_3508_end_mask_0, x = transpose_67);
            tensor<int32, [4]> var_3512_begin_0 = const()[name = tensor<string, []>("op_3512_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1024])];
            tensor<int32, [4]> var_3512_end_0 = const()[name = tensor<string, []>("op_3512_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1088])];
            tensor<bool, [4]> var_3512_end_mask_0 = const()[name = tensor<string, []>("op_3512_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_3512_cast = slice_by_index(begin = var_3512_begin_0, end = var_3512_end_0, end_mask = var_3512_end_mask_0, x = transpose_67);
            tensor<int32, [4]> var_3516_begin_0 = const()[name = tensor<string, []>("op_3516_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1088])];
            tensor<int32, [4]> var_3516_end_0 = const()[name = tensor<string, []>("op_3516_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1152])];
            tensor<bool, [4]> var_3516_end_mask_0 = const()[name = tensor<string, []>("op_3516_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_3516_cast = slice_by_index(begin = var_3516_begin_0, end = var_3516_end_0, end_mask = var_3516_end_mask_0, x = transpose_67);
            tensor<int32, [4]> var_3520_begin_0 = const()[name = tensor<string, []>("op_3520_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1152])];
            tensor<int32, [4]> var_3520_end_0 = const()[name = tensor<string, []>("op_3520_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1216])];
            tensor<bool, [4]> var_3520_end_mask_0 = const()[name = tensor<string, []>("op_3520_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_3520_cast = slice_by_index(begin = var_3520_begin_0, end = var_3520_end_0, end_mask = var_3520_end_mask_0, x = transpose_67);
            tensor<int32, [4]> var_3524_begin_0 = const()[name = tensor<string, []>("op_3524_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1216])];
            tensor<int32, [4]> var_3524_end_0 = const()[name = tensor<string, []>("op_3524_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1280])];
            tensor<bool, [4]> var_3524_end_mask_0 = const()[name = tensor<string, []>("op_3524_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_3524_cast = slice_by_index(begin = var_3524_begin_0, end = var_3524_end_0, end_mask = var_3524_end_mask_0, x = transpose_67);
            tensor<int32, [4]> var_3526_begin_0 = const()[name = tensor<string, []>("op_3526_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_3526_end_0 = const()[name = tensor<string, []>("op_3526_end_0"), val = tensor<int32, [4]>([2, 64, 1, 256])];
            tensor<bool, [4]> var_3526_end_mask_0 = const()[name = tensor<string, []>("op_3526_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3526_cast = slice_by_index(begin = var_3526_begin_0, end = var_3526_end_0, end_mask = var_3526_end_mask_0, x = v_21_cast);
            tensor<int32, [4]> var_3530_begin_0 = const()[name = tensor<string, []>("op_3530_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_3530_end_0 = const()[name = tensor<string, []>("op_3530_end_0"), val = tensor<int32, [4]>([2, 128, 1, 256])];
            tensor<bool, [4]> var_3530_end_mask_0 = const()[name = tensor<string, []>("op_3530_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3530_cast = slice_by_index(begin = var_3530_begin_0, end = var_3530_end_0, end_mask = var_3530_end_mask_0, x = v_21_cast);
            tensor<int32, [4]> var_3534_begin_0 = const()[name = tensor<string, []>("op_3534_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_3534_end_0 = const()[name = tensor<string, []>("op_3534_end_0"), val = tensor<int32, [4]>([2, 192, 1, 256])];
            tensor<bool, [4]> var_3534_end_mask_0 = const()[name = tensor<string, []>("op_3534_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3534_cast = slice_by_index(begin = var_3534_begin_0, end = var_3534_end_0, end_mask = var_3534_end_mask_0, x = v_21_cast);
            tensor<int32, [4]> var_3538_begin_0 = const()[name = tensor<string, []>("op_3538_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_3538_end_0 = const()[name = tensor<string, []>("op_3538_end_0"), val = tensor<int32, [4]>([2, 256, 1, 256])];
            tensor<bool, [4]> var_3538_end_mask_0 = const()[name = tensor<string, []>("op_3538_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3538_cast = slice_by_index(begin = var_3538_begin_0, end = var_3538_end_0, end_mask = var_3538_end_mask_0, x = v_21_cast);
            tensor<int32, [4]> var_3542_begin_0 = const()[name = tensor<string, []>("op_3542_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_3542_end_0 = const()[name = tensor<string, []>("op_3542_end_0"), val = tensor<int32, [4]>([2, 320, 1, 256])];
            tensor<bool, [4]> var_3542_end_mask_0 = const()[name = tensor<string, []>("op_3542_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3542_cast = slice_by_index(begin = var_3542_begin_0, end = var_3542_end_0, end_mask = var_3542_end_mask_0, x = v_21_cast);
            tensor<int32, [4]> var_3546_begin_0 = const()[name = tensor<string, []>("op_3546_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_3546_end_0 = const()[name = tensor<string, []>("op_3546_end_0"), val = tensor<int32, [4]>([2, 384, 1, 256])];
            tensor<bool, [4]> var_3546_end_mask_0 = const()[name = tensor<string, []>("op_3546_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3546_cast = slice_by_index(begin = var_3546_begin_0, end = var_3546_end_0, end_mask = var_3546_end_mask_0, x = v_21_cast);
            tensor<int32, [4]> var_3550_begin_0 = const()[name = tensor<string, []>("op_3550_begin_0"), val = tensor<int32, [4]>([0, 384, 0, 0])];
            tensor<int32, [4]> var_3550_end_0 = const()[name = tensor<string, []>("op_3550_end_0"), val = tensor<int32, [4]>([2, 448, 1, 256])];
            tensor<bool, [4]> var_3550_end_mask_0 = const()[name = tensor<string, []>("op_3550_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3550_cast = slice_by_index(begin = var_3550_begin_0, end = var_3550_end_0, end_mask = var_3550_end_mask_0, x = v_21_cast);
            tensor<int32, [4]> var_3554_begin_0 = const()[name = tensor<string, []>("op_3554_begin_0"), val = tensor<int32, [4]>([0, 448, 0, 0])];
            tensor<int32, [4]> var_3554_end_0 = const()[name = tensor<string, []>("op_3554_end_0"), val = tensor<int32, [4]>([2, 512, 1, 256])];
            tensor<bool, [4]> var_3554_end_mask_0 = const()[name = tensor<string, []>("op_3554_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3554_cast = slice_by_index(begin = var_3554_begin_0, end = var_3554_end_0, end_mask = var_3554_end_mask_0, x = v_21_cast);
            tensor<int32, [4]> var_3558_begin_0 = const()[name = tensor<string, []>("op_3558_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_3558_end_0 = const()[name = tensor<string, []>("op_3558_end_0"), val = tensor<int32, [4]>([2, 576, 1, 256])];
            tensor<bool, [4]> var_3558_end_mask_0 = const()[name = tensor<string, []>("op_3558_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3558_cast = slice_by_index(begin = var_3558_begin_0, end = var_3558_end_0, end_mask = var_3558_end_mask_0, x = v_21_cast);
            tensor<int32, [4]> var_3562_begin_0 = const()[name = tensor<string, []>("op_3562_begin_0"), val = tensor<int32, [4]>([0, 576, 0, 0])];
            tensor<int32, [4]> var_3562_end_0 = const()[name = tensor<string, []>("op_3562_end_0"), val = tensor<int32, [4]>([2, 640, 1, 256])];
            tensor<bool, [4]> var_3562_end_mask_0 = const()[name = tensor<string, []>("op_3562_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3562_cast = slice_by_index(begin = var_3562_begin_0, end = var_3562_end_0, end_mask = var_3562_end_mask_0, x = v_21_cast);
            tensor<int32, [4]> var_3566_begin_0 = const()[name = tensor<string, []>("op_3566_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_3566_end_0 = const()[name = tensor<string, []>("op_3566_end_0"), val = tensor<int32, [4]>([2, 704, 1, 256])];
            tensor<bool, [4]> var_3566_end_mask_0 = const()[name = tensor<string, []>("op_3566_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3566_cast = slice_by_index(begin = var_3566_begin_0, end = var_3566_end_0, end_mask = var_3566_end_mask_0, x = v_21_cast);
            tensor<int32, [4]> var_3570_begin_0 = const()[name = tensor<string, []>("op_3570_begin_0"), val = tensor<int32, [4]>([0, 704, 0, 0])];
            tensor<int32, [4]> var_3570_end_0 = const()[name = tensor<string, []>("op_3570_end_0"), val = tensor<int32, [4]>([2, 768, 1, 256])];
            tensor<bool, [4]> var_3570_end_mask_0 = const()[name = tensor<string, []>("op_3570_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3570_cast = slice_by_index(begin = var_3570_begin_0, end = var_3570_end_0, end_mask = var_3570_end_mask_0, x = v_21_cast);
            tensor<int32, [4]> var_3574_begin_0 = const()[name = tensor<string, []>("op_3574_begin_0"), val = tensor<int32, [4]>([0, 768, 0, 0])];
            tensor<int32, [4]> var_3574_end_0 = const()[name = tensor<string, []>("op_3574_end_0"), val = tensor<int32, [4]>([2, 832, 1, 256])];
            tensor<bool, [4]> var_3574_end_mask_0 = const()[name = tensor<string, []>("op_3574_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3574_cast = slice_by_index(begin = var_3574_begin_0, end = var_3574_end_0, end_mask = var_3574_end_mask_0, x = v_21_cast);
            tensor<int32, [4]> var_3578_begin_0 = const()[name = tensor<string, []>("op_3578_begin_0"), val = tensor<int32, [4]>([0, 832, 0, 0])];
            tensor<int32, [4]> var_3578_end_0 = const()[name = tensor<string, []>("op_3578_end_0"), val = tensor<int32, [4]>([2, 896, 1, 256])];
            tensor<bool, [4]> var_3578_end_mask_0 = const()[name = tensor<string, []>("op_3578_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3578_cast = slice_by_index(begin = var_3578_begin_0, end = var_3578_end_0, end_mask = var_3578_end_mask_0, x = v_21_cast);
            tensor<int32, [4]> var_3582_begin_0 = const()[name = tensor<string, []>("op_3582_begin_0"), val = tensor<int32, [4]>([0, 896, 0, 0])];
            tensor<int32, [4]> var_3582_end_0 = const()[name = tensor<string, []>("op_3582_end_0"), val = tensor<int32, [4]>([2, 960, 1, 256])];
            tensor<bool, [4]> var_3582_end_mask_0 = const()[name = tensor<string, []>("op_3582_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3582_cast = slice_by_index(begin = var_3582_begin_0, end = var_3582_end_0, end_mask = var_3582_end_mask_0, x = v_21_cast);
            tensor<int32, [4]> var_3586_begin_0 = const()[name = tensor<string, []>("op_3586_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_3586_end_0 = const()[name = tensor<string, []>("op_3586_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 256])];
            tensor<bool, [4]> var_3586_end_mask_0 = const()[name = tensor<string, []>("op_3586_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3586_cast = slice_by_index(begin = var_3586_begin_0, end = var_3586_end_0, end_mask = var_3586_end_mask_0, x = v_21_cast);
            tensor<int32, [4]> var_3590_begin_0 = const()[name = tensor<string, []>("op_3590_begin_0"), val = tensor<int32, [4]>([0, 1024, 0, 0])];
            tensor<int32, [4]> var_3590_end_0 = const()[name = tensor<string, []>("op_3590_end_0"), val = tensor<int32, [4]>([2, 1088, 1, 256])];
            tensor<bool, [4]> var_3590_end_mask_0 = const()[name = tensor<string, []>("op_3590_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3590_cast = slice_by_index(begin = var_3590_begin_0, end = var_3590_end_0, end_mask = var_3590_end_mask_0, x = v_21_cast);
            tensor<int32, [4]> var_3594_begin_0 = const()[name = tensor<string, []>("op_3594_begin_0"), val = tensor<int32, [4]>([0, 1088, 0, 0])];
            tensor<int32, [4]> var_3594_end_0 = const()[name = tensor<string, []>("op_3594_end_0"), val = tensor<int32, [4]>([2, 1152, 1, 256])];
            tensor<bool, [4]> var_3594_end_mask_0 = const()[name = tensor<string, []>("op_3594_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3594_cast = slice_by_index(begin = var_3594_begin_0, end = var_3594_end_0, end_mask = var_3594_end_mask_0, x = v_21_cast);
            tensor<int32, [4]> var_3598_begin_0 = const()[name = tensor<string, []>("op_3598_begin_0"), val = tensor<int32, [4]>([0, 1152, 0, 0])];
            tensor<int32, [4]> var_3598_end_0 = const()[name = tensor<string, []>("op_3598_end_0"), val = tensor<int32, [4]>([2, 1216, 1, 256])];
            tensor<bool, [4]> var_3598_end_mask_0 = const()[name = tensor<string, []>("op_3598_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3598_cast = slice_by_index(begin = var_3598_begin_0, end = var_3598_end_0, end_mask = var_3598_end_mask_0, x = v_21_cast);
            tensor<int32, [4]> var_3602_begin_0 = const()[name = tensor<string, []>("op_3602_begin_0"), val = tensor<int32, [4]>([0, 1216, 0, 0])];
            tensor<int32, [4]> var_3602_end_0 = const()[name = tensor<string, []>("op_3602_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<bool, [4]> var_3602_end_mask_0 = const()[name = tensor<string, []>("op_3602_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3602_cast = slice_by_index(begin = var_3602_begin_0, end = var_3602_end_0, end_mask = var_3602_end_mask_0, x = v_21_cast);
            tensor<string, []> var_3606_equation_0 = const()[name = tensor<string, []>("op_3606_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_3606_cast = einsum(equation = var_3606_equation_0, values = (var_3448_cast, var_3365_cast));
            tensor<fp16, []> var_3607_to_fp16 = const()[name = tensor<string, []>("op_3607_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_201_cast = mul(x = var_3606_cast, y = var_3607_to_fp16);
            tensor<string, []> var_3610_equation_0 = const()[name = tensor<string, []>("op_3610_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_3610_cast = einsum(equation = var_3610_equation_0, values = (var_3452_cast, var_3369_cast));
            tensor<fp16, []> var_3611_to_fp16 = const()[name = tensor<string, []>("op_3611_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_203_cast = mul(x = var_3610_cast, y = var_3611_to_fp16);
            tensor<string, []> var_3614_equation_0 = const()[name = tensor<string, []>("op_3614_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_3614_cast = einsum(equation = var_3614_equation_0, values = (var_3456_cast, var_3373_cast));
            tensor<fp16, []> var_3615_to_fp16 = const()[name = tensor<string, []>("op_3615_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_205_cast = mul(x = var_3614_cast, y = var_3615_to_fp16);
            tensor<string, []> var_3618_equation_0 = const()[name = tensor<string, []>("op_3618_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_3618_cast = einsum(equation = var_3618_equation_0, values = (var_3460_cast, var_3377_cast));
            tensor<fp16, []> var_3619_to_fp16 = const()[name = tensor<string, []>("op_3619_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_207_cast = mul(x = var_3618_cast, y = var_3619_to_fp16);
            tensor<string, []> var_3622_equation_0 = const()[name = tensor<string, []>("op_3622_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_3622_cast = einsum(equation = var_3622_equation_0, values = (var_3464_cast, var_3381_cast));
            tensor<fp16, []> var_3623_to_fp16 = const()[name = tensor<string, []>("op_3623_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_209_cast = mul(x = var_3622_cast, y = var_3623_to_fp16);
            tensor<string, []> var_3626_equation_0 = const()[name = tensor<string, []>("op_3626_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_3626_cast = einsum(equation = var_3626_equation_0, values = (var_3468_cast, var_3385_cast));
            tensor<fp16, []> var_3627_to_fp16 = const()[name = tensor<string, []>("op_3627_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_211_cast = mul(x = var_3626_cast, y = var_3627_to_fp16);
            tensor<string, []> var_3630_equation_0 = const()[name = tensor<string, []>("op_3630_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_3630_cast = einsum(equation = var_3630_equation_0, values = (var_3472_cast, var_3389_cast));
            tensor<fp16, []> var_3631_to_fp16 = const()[name = tensor<string, []>("op_3631_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_213_cast = mul(x = var_3630_cast, y = var_3631_to_fp16);
            tensor<string, []> var_3634_equation_0 = const()[name = tensor<string, []>("op_3634_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_3634_cast = einsum(equation = var_3634_equation_0, values = (var_3476_cast, var_3393_cast));
            tensor<fp16, []> var_3635_to_fp16 = const()[name = tensor<string, []>("op_3635_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_215_cast = mul(x = var_3634_cast, y = var_3635_to_fp16);
            tensor<string, []> var_3638_equation_0 = const()[name = tensor<string, []>("op_3638_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_3638_cast = einsum(equation = var_3638_equation_0, values = (var_3480_cast, var_3397_cast));
            tensor<fp16, []> var_3639_to_fp16 = const()[name = tensor<string, []>("op_3639_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_217_cast = mul(x = var_3638_cast, y = var_3639_to_fp16);
            tensor<string, []> var_3642_equation_0 = const()[name = tensor<string, []>("op_3642_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_3642_cast = einsum(equation = var_3642_equation_0, values = (var_3484_cast, var_3401_cast));
            tensor<fp16, []> var_3643_to_fp16 = const()[name = tensor<string, []>("op_3643_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_219_cast = mul(x = var_3642_cast, y = var_3643_to_fp16);
            tensor<string, []> var_3646_equation_0 = const()[name = tensor<string, []>("op_3646_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_3646_cast = einsum(equation = var_3646_equation_0, values = (var_3488_cast, var_3405_cast));
            tensor<fp16, []> var_3647_to_fp16 = const()[name = tensor<string, []>("op_3647_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_221_cast = mul(x = var_3646_cast, y = var_3647_to_fp16);
            tensor<string, []> var_3650_equation_0 = const()[name = tensor<string, []>("op_3650_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_3650_cast = einsum(equation = var_3650_equation_0, values = (var_3492_cast, var_3409_cast));
            tensor<fp16, []> var_3651_to_fp16 = const()[name = tensor<string, []>("op_3651_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_223_cast = mul(x = var_3650_cast, y = var_3651_to_fp16);
            tensor<string, []> var_3654_equation_0 = const()[name = tensor<string, []>("op_3654_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_3654_cast = einsum(equation = var_3654_equation_0, values = (var_3496_cast, var_3413_cast));
            tensor<fp16, []> var_3655_to_fp16 = const()[name = tensor<string, []>("op_3655_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_225_cast = mul(x = var_3654_cast, y = var_3655_to_fp16);
            tensor<string, []> var_3658_equation_0 = const()[name = tensor<string, []>("op_3658_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_3658_cast = einsum(equation = var_3658_equation_0, values = (var_3500_cast, var_3417_cast));
            tensor<fp16, []> var_3659_to_fp16 = const()[name = tensor<string, []>("op_3659_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_227_cast = mul(x = var_3658_cast, y = var_3659_to_fp16);
            tensor<string, []> var_3662_equation_0 = const()[name = tensor<string, []>("op_3662_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_3662_cast = einsum(equation = var_3662_equation_0, values = (var_3504_cast, var_3421_cast));
            tensor<fp16, []> var_3663_to_fp16 = const()[name = tensor<string, []>("op_3663_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_229_cast = mul(x = var_3662_cast, y = var_3663_to_fp16);
            tensor<string, []> var_3666_equation_0 = const()[name = tensor<string, []>("op_3666_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_3666_cast = einsum(equation = var_3666_equation_0, values = (var_3508_cast, var_3425_cast));
            tensor<fp16, []> var_3667_to_fp16 = const()[name = tensor<string, []>("op_3667_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_231_cast = mul(x = var_3666_cast, y = var_3667_to_fp16);
            tensor<string, []> var_3670_equation_0 = const()[name = tensor<string, []>("op_3670_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_3670_cast = einsum(equation = var_3670_equation_0, values = (var_3512_cast, var_3429_cast));
            tensor<fp16, []> var_3671_to_fp16 = const()[name = tensor<string, []>("op_3671_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_233_cast = mul(x = var_3670_cast, y = var_3671_to_fp16);
            tensor<string, []> var_3674_equation_0 = const()[name = tensor<string, []>("op_3674_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_3674_cast = einsum(equation = var_3674_equation_0, values = (var_3516_cast, var_3433_cast));
            tensor<fp16, []> var_3675_to_fp16 = const()[name = tensor<string, []>("op_3675_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_235_cast = mul(x = var_3674_cast, y = var_3675_to_fp16);
            tensor<string, []> var_3678_equation_0 = const()[name = tensor<string, []>("op_3678_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_3678_cast = einsum(equation = var_3678_equation_0, values = (var_3520_cast, var_3437_cast));
            tensor<fp16, []> var_3679_to_fp16 = const()[name = tensor<string, []>("op_3679_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_237_cast = mul(x = var_3678_cast, y = var_3679_to_fp16);
            tensor<string, []> var_3682_equation_0 = const()[name = tensor<string, []>("op_3682_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_3682_cast = einsum(equation = var_3682_equation_0, values = (var_3524_cast, var_3441_cast));
            tensor<fp16, []> var_3683_to_fp16 = const()[name = tensor<string, []>("op_3683_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_239_cast = mul(x = var_3682_cast, y = var_3683_to_fp16);
            tensor<fp16, [2, 256, 1, 256]> var_3685_cast = softmax(axis = var_2254, x = aw_201_cast);
            tensor<fp16, [2, 256, 1, 256]> var_3686_cast = softmax(axis = var_2254, x = aw_203_cast);
            tensor<fp16, [2, 256, 1, 256]> var_3687_cast = softmax(axis = var_2254, x = aw_205_cast);
            tensor<fp16, [2, 256, 1, 256]> var_3688_cast = softmax(axis = var_2254, x = aw_207_cast);
            tensor<fp16, [2, 256, 1, 256]> var_3689_cast = softmax(axis = var_2254, x = aw_209_cast);
            tensor<fp16, [2, 256, 1, 256]> var_3690_cast = softmax(axis = var_2254, x = aw_211_cast);
            tensor<fp16, [2, 256, 1, 256]> var_3691_cast = softmax(axis = var_2254, x = aw_213_cast);
            tensor<fp16, [2, 256, 1, 256]> var_3692_cast = softmax(axis = var_2254, x = aw_215_cast);
            tensor<fp16, [2, 256, 1, 256]> var_3693_cast = softmax(axis = var_2254, x = aw_217_cast);
            tensor<fp16, [2, 256, 1, 256]> var_3694_cast = softmax(axis = var_2254, x = aw_219_cast);
            tensor<fp16, [2, 256, 1, 256]> var_3695_cast = softmax(axis = var_2254, x = aw_221_cast);
            tensor<fp16, [2, 256, 1, 256]> var_3696_cast = softmax(axis = var_2254, x = aw_223_cast);
            tensor<fp16, [2, 256, 1, 256]> var_3697_cast = softmax(axis = var_2254, x = aw_225_cast);
            tensor<fp16, [2, 256, 1, 256]> var_3698_cast = softmax(axis = var_2254, x = aw_227_cast);
            tensor<fp16, [2, 256, 1, 256]> var_3699_cast = softmax(axis = var_2254, x = aw_229_cast);
            tensor<fp16, [2, 256, 1, 256]> var_3700_cast = softmax(axis = var_2254, x = aw_231_cast);
            tensor<fp16, [2, 256, 1, 256]> var_3701_cast = softmax(axis = var_2254, x = aw_233_cast);
            tensor<fp16, [2, 256, 1, 256]> var_3702_cast = softmax(axis = var_2254, x = aw_235_cast);
            tensor<fp16, [2, 256, 1, 256]> var_3703_cast = softmax(axis = var_2254, x = aw_237_cast);
            tensor<fp16, [2, 256, 1, 256]> var_3704_cast = softmax(axis = var_2254, x = aw_239_cast);
            tensor<string, []> var_3706_equation_0 = const()[name = tensor<string, []>("op_3706_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_3706_cast = einsum(equation = var_3706_equation_0, values = (var_3526_cast, var_3685_cast));
            tensor<string, []> var_3708_equation_0 = const()[name = tensor<string, []>("op_3708_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_3708_cast = einsum(equation = var_3708_equation_0, values = (var_3530_cast, var_3686_cast));
            tensor<string, []> var_3710_equation_0 = const()[name = tensor<string, []>("op_3710_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_3710_cast = einsum(equation = var_3710_equation_0, values = (var_3534_cast, var_3687_cast));
            tensor<string, []> var_3712_equation_0 = const()[name = tensor<string, []>("op_3712_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_3712_cast = einsum(equation = var_3712_equation_0, values = (var_3538_cast, var_3688_cast));
            tensor<string, []> var_3714_equation_0 = const()[name = tensor<string, []>("op_3714_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_3714_cast = einsum(equation = var_3714_equation_0, values = (var_3542_cast, var_3689_cast));
            tensor<string, []> var_3716_equation_0 = const()[name = tensor<string, []>("op_3716_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_3716_cast = einsum(equation = var_3716_equation_0, values = (var_3546_cast, var_3690_cast));
            tensor<string, []> var_3718_equation_0 = const()[name = tensor<string, []>("op_3718_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_3718_cast = einsum(equation = var_3718_equation_0, values = (var_3550_cast, var_3691_cast));
            tensor<string, []> var_3720_equation_0 = const()[name = tensor<string, []>("op_3720_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_3720_cast = einsum(equation = var_3720_equation_0, values = (var_3554_cast, var_3692_cast));
            tensor<string, []> var_3722_equation_0 = const()[name = tensor<string, []>("op_3722_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_3722_cast = einsum(equation = var_3722_equation_0, values = (var_3558_cast, var_3693_cast));
            tensor<string, []> var_3724_equation_0 = const()[name = tensor<string, []>("op_3724_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_3724_cast = einsum(equation = var_3724_equation_0, values = (var_3562_cast, var_3694_cast));
            tensor<string, []> var_3726_equation_0 = const()[name = tensor<string, []>("op_3726_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_3726_cast = einsum(equation = var_3726_equation_0, values = (var_3566_cast, var_3695_cast));
            tensor<string, []> var_3728_equation_0 = const()[name = tensor<string, []>("op_3728_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_3728_cast = einsum(equation = var_3728_equation_0, values = (var_3570_cast, var_3696_cast));
            tensor<string, []> var_3730_equation_0 = const()[name = tensor<string, []>("op_3730_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_3730_cast = einsum(equation = var_3730_equation_0, values = (var_3574_cast, var_3697_cast));
            tensor<string, []> var_3732_equation_0 = const()[name = tensor<string, []>("op_3732_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_3732_cast = einsum(equation = var_3732_equation_0, values = (var_3578_cast, var_3698_cast));
            tensor<string, []> var_3734_equation_0 = const()[name = tensor<string, []>("op_3734_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_3734_cast = einsum(equation = var_3734_equation_0, values = (var_3582_cast, var_3699_cast));
            tensor<string, []> var_3736_equation_0 = const()[name = tensor<string, []>("op_3736_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_3736_cast = einsum(equation = var_3736_equation_0, values = (var_3586_cast, var_3700_cast));
            tensor<string, []> var_3738_equation_0 = const()[name = tensor<string, []>("op_3738_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_3738_cast = einsum(equation = var_3738_equation_0, values = (var_3590_cast, var_3701_cast));
            tensor<string, []> var_3740_equation_0 = const()[name = tensor<string, []>("op_3740_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_3740_cast = einsum(equation = var_3740_equation_0, values = (var_3594_cast, var_3702_cast));
            tensor<string, []> var_3742_equation_0 = const()[name = tensor<string, []>("op_3742_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_3742_cast = einsum(equation = var_3742_equation_0, values = (var_3598_cast, var_3703_cast));
            tensor<string, []> var_3744_equation_0 = const()[name = tensor<string, []>("op_3744_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_3744_cast = einsum(equation = var_3744_equation_0, values = (var_3602_cast, var_3704_cast));
            tensor<bool, []> input_159_interleave_0 = const()[name = tensor<string, []>("input_159_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 1280, 1, 256]> input_159_cast = concat(axis = var_2254, interleave = input_159_interleave_0, values = (var_3706_cast, var_3708_cast, var_3710_cast, var_3712_cast, var_3714_cast, var_3716_cast, var_3718_cast, var_3720_cast, var_3722_cast, var_3724_cast, var_3726_cast, var_3728_cast, var_3730_cast, var_3732_cast, var_3734_cast, var_3736_cast, var_3738_cast, var_3740_cast, var_3742_cast, var_3744_cast));
            tensor<int32, [2]> var_3750 = const()[name = tensor<string, []>("op_3750"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3752 = const()[name = tensor<string, []>("op_3752"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_3754_pad_type_0 = const()[name = tensor<string, []>("op_3754_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_3754_pad_0 = const()[name = tensor<string, []>("op_3754_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(296242944)))];
            tensor<fp16, [1280]> down_blocks_2_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(299519808)))];
            tensor<fp16, [2, 1280, 1, 256]> var_3754_cast = conv(bias = down_blocks_2_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16, dilations = var_3752, groups = var_2254, pad = var_3754_pad_0, pad_type = var_3754_pad_type_0, strides = var_3750, weight = down_blocks_2_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16, x = input_159_cast);
            tensor<fp16, [2, 1280, 1, 256]> inputs_33_cast = add(x = var_3754_cast, y = inputs_31_cast);
            tensor<int32, [1]> var_3758 = const()[name = tensor<string, []>("op_3758"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> channels_mean_33_cast = reduce_mean(axes = var_3758, keep_dims = var_2249, x = inputs_33_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_33_cast = sub(x = inputs_33_cast, y = channels_mean_33_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_sq_33_cast = mul(x = zero_mean_33_cast, y = zero_mean_33_cast);
            tensor<int32, [1]> var_3762 = const()[name = tensor<string, []>("op_3762"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> var_3763_cast = reduce_mean(axes = var_3762, keep_dims = var_2249, x = zero_mean_sq_33_cast);
            tensor<fp16, []> var_3764_to_fp16 = const()[name = tensor<string, []>("op_3764_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 256]> var_3765_cast = add(x = var_3763_cast, y = var_3764_to_fp16);
            tensor<fp16, []> denom_33_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_33_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 256]> denom_33_cast = rsqrt(epsilon = denom_33_epsilon_0_to_fp16, x = var_3765_cast);
            tensor<fp16, [2, 1280, 1, 256]> out_33_cast = mul(x = zero_mean_33_cast, y = denom_33_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_3769_to_fp16 = const()[name = tensor<string, []>("op_3769_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(299522432)))];
            tensor<fp16, [2, 1280, 1, 256]> var_3770_cast = add(x = out_33_cast, y = var_3769_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_3772_to_fp16 = const()[name = tensor<string, []>("op_3772_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(299525056)))];
            tensor<fp16, [2, 1280, 1, 256]> hidden_states_101_cast = mul(x = var_3770_cast, y = var_3772_to_fp16);
            tensor<int32, [2]> var_3779 = const()[name = tensor<string, []>("op_3779"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3781 = const()[name = tensor<string, []>("op_3781"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_23_pad_type_0 = const()[name = tensor<string, []>("q_23_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_23_pad_0 = const()[name = tensor<string, []>("q_23_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(299527680)))];
            tensor<fp16, [2, 1280, 1, 256]> q_23_cast = conv(dilations = var_3781, groups = var_2254, pad = q_23_pad_0, pad_type = q_23_pad_type_0, strides = var_3779, weight = down_blocks_2_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16, x = hidden_states_101_cast);
            tensor<int32, [2]> var_3785 = const()[name = tensor<string, []>("op_3785"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3787 = const()[name = tensor<string, []>("op_3787"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_45_pad_type_0 = const()[name = tensor<string, []>("k_45_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_45_pad_0 = const()[name = tensor<string, []>("k_45_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1024, 1, 1]> down_blocks_2_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16"), val = tensor<fp16, [1280, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(302804544)))];
            tensor<fp16, [2, 1280, 1, 77]> k_45_cast = conv(dilations = var_3787, groups = var_2254, pad = k_45_pad_0, pad_type = k_45_pad_type_0, strides = var_3785, weight = down_blocks_2_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [2]> var_3791 = const()[name = tensor<string, []>("op_3791"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3793 = const()[name = tensor<string, []>("op_3793"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_23_pad_type_0 = const()[name = tensor<string, []>("v_23_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_23_pad_0 = const()[name = tensor<string, []>("v_23_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1024, 1, 1]> down_blocks_2_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16"), val = tensor<fp16, [1280, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(305426048)))];
            tensor<fp16, [2, 1280, 1, 77]> v_23_cast = conv(dilations = var_3793, groups = var_2254, pad = v_23_pad_0, pad_type = v_23_pad_type_0, strides = var_3791, weight = down_blocks_2_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [4]> var_3797_begin_0 = const()[name = tensor<string, []>("op_3797_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_3797_end_0 = const()[name = tensor<string, []>("op_3797_end_0"), val = tensor<int32, [4]>([2, 64, 1, 256])];
            tensor<bool, [4]> var_3797_end_mask_0 = const()[name = tensor<string, []>("op_3797_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3797_cast = slice_by_index(begin = var_3797_begin_0, end = var_3797_end_0, end_mask = var_3797_end_mask_0, x = q_23_cast);
            tensor<int32, [4]> var_3801_begin_0 = const()[name = tensor<string, []>("op_3801_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_3801_end_0 = const()[name = tensor<string, []>("op_3801_end_0"), val = tensor<int32, [4]>([2, 128, 1, 256])];
            tensor<bool, [4]> var_3801_end_mask_0 = const()[name = tensor<string, []>("op_3801_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3801_cast = slice_by_index(begin = var_3801_begin_0, end = var_3801_end_0, end_mask = var_3801_end_mask_0, x = q_23_cast);
            tensor<int32, [4]> var_3805_begin_0 = const()[name = tensor<string, []>("op_3805_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_3805_end_0 = const()[name = tensor<string, []>("op_3805_end_0"), val = tensor<int32, [4]>([2, 192, 1, 256])];
            tensor<bool, [4]> var_3805_end_mask_0 = const()[name = tensor<string, []>("op_3805_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3805_cast = slice_by_index(begin = var_3805_begin_0, end = var_3805_end_0, end_mask = var_3805_end_mask_0, x = q_23_cast);
            tensor<int32, [4]> var_3809_begin_0 = const()[name = tensor<string, []>("op_3809_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_3809_end_0 = const()[name = tensor<string, []>("op_3809_end_0"), val = tensor<int32, [4]>([2, 256, 1, 256])];
            tensor<bool, [4]> var_3809_end_mask_0 = const()[name = tensor<string, []>("op_3809_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3809_cast = slice_by_index(begin = var_3809_begin_0, end = var_3809_end_0, end_mask = var_3809_end_mask_0, x = q_23_cast);
            tensor<int32, [4]> var_3813_begin_0 = const()[name = tensor<string, []>("op_3813_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_3813_end_0 = const()[name = tensor<string, []>("op_3813_end_0"), val = tensor<int32, [4]>([2, 320, 1, 256])];
            tensor<bool, [4]> var_3813_end_mask_0 = const()[name = tensor<string, []>("op_3813_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3813_cast = slice_by_index(begin = var_3813_begin_0, end = var_3813_end_0, end_mask = var_3813_end_mask_0, x = q_23_cast);
            tensor<int32, [4]> var_3817_begin_0 = const()[name = tensor<string, []>("op_3817_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_3817_end_0 = const()[name = tensor<string, []>("op_3817_end_0"), val = tensor<int32, [4]>([2, 384, 1, 256])];
            tensor<bool, [4]> var_3817_end_mask_0 = const()[name = tensor<string, []>("op_3817_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3817_cast = slice_by_index(begin = var_3817_begin_0, end = var_3817_end_0, end_mask = var_3817_end_mask_0, x = q_23_cast);
            tensor<int32, [4]> var_3821_begin_0 = const()[name = tensor<string, []>("op_3821_begin_0"), val = tensor<int32, [4]>([0, 384, 0, 0])];
            tensor<int32, [4]> var_3821_end_0 = const()[name = tensor<string, []>("op_3821_end_0"), val = tensor<int32, [4]>([2, 448, 1, 256])];
            tensor<bool, [4]> var_3821_end_mask_0 = const()[name = tensor<string, []>("op_3821_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3821_cast = slice_by_index(begin = var_3821_begin_0, end = var_3821_end_0, end_mask = var_3821_end_mask_0, x = q_23_cast);
            tensor<int32, [4]> var_3825_begin_0 = const()[name = tensor<string, []>("op_3825_begin_0"), val = tensor<int32, [4]>([0, 448, 0, 0])];
            tensor<int32, [4]> var_3825_end_0 = const()[name = tensor<string, []>("op_3825_end_0"), val = tensor<int32, [4]>([2, 512, 1, 256])];
            tensor<bool, [4]> var_3825_end_mask_0 = const()[name = tensor<string, []>("op_3825_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3825_cast = slice_by_index(begin = var_3825_begin_0, end = var_3825_end_0, end_mask = var_3825_end_mask_0, x = q_23_cast);
            tensor<int32, [4]> var_3829_begin_0 = const()[name = tensor<string, []>("op_3829_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_3829_end_0 = const()[name = tensor<string, []>("op_3829_end_0"), val = tensor<int32, [4]>([2, 576, 1, 256])];
            tensor<bool, [4]> var_3829_end_mask_0 = const()[name = tensor<string, []>("op_3829_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3829_cast = slice_by_index(begin = var_3829_begin_0, end = var_3829_end_0, end_mask = var_3829_end_mask_0, x = q_23_cast);
            tensor<int32, [4]> var_3833_begin_0 = const()[name = tensor<string, []>("op_3833_begin_0"), val = tensor<int32, [4]>([0, 576, 0, 0])];
            tensor<int32, [4]> var_3833_end_0 = const()[name = tensor<string, []>("op_3833_end_0"), val = tensor<int32, [4]>([2, 640, 1, 256])];
            tensor<bool, [4]> var_3833_end_mask_0 = const()[name = tensor<string, []>("op_3833_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3833_cast = slice_by_index(begin = var_3833_begin_0, end = var_3833_end_0, end_mask = var_3833_end_mask_0, x = q_23_cast);
            tensor<int32, [4]> var_3837_begin_0 = const()[name = tensor<string, []>("op_3837_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_3837_end_0 = const()[name = tensor<string, []>("op_3837_end_0"), val = tensor<int32, [4]>([2, 704, 1, 256])];
            tensor<bool, [4]> var_3837_end_mask_0 = const()[name = tensor<string, []>("op_3837_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3837_cast = slice_by_index(begin = var_3837_begin_0, end = var_3837_end_0, end_mask = var_3837_end_mask_0, x = q_23_cast);
            tensor<int32, [4]> var_3841_begin_0 = const()[name = tensor<string, []>("op_3841_begin_0"), val = tensor<int32, [4]>([0, 704, 0, 0])];
            tensor<int32, [4]> var_3841_end_0 = const()[name = tensor<string, []>("op_3841_end_0"), val = tensor<int32, [4]>([2, 768, 1, 256])];
            tensor<bool, [4]> var_3841_end_mask_0 = const()[name = tensor<string, []>("op_3841_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3841_cast = slice_by_index(begin = var_3841_begin_0, end = var_3841_end_0, end_mask = var_3841_end_mask_0, x = q_23_cast);
            tensor<int32, [4]> var_3845_begin_0 = const()[name = tensor<string, []>("op_3845_begin_0"), val = tensor<int32, [4]>([0, 768, 0, 0])];
            tensor<int32, [4]> var_3845_end_0 = const()[name = tensor<string, []>("op_3845_end_0"), val = tensor<int32, [4]>([2, 832, 1, 256])];
            tensor<bool, [4]> var_3845_end_mask_0 = const()[name = tensor<string, []>("op_3845_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3845_cast = slice_by_index(begin = var_3845_begin_0, end = var_3845_end_0, end_mask = var_3845_end_mask_0, x = q_23_cast);
            tensor<int32, [4]> var_3849_begin_0 = const()[name = tensor<string, []>("op_3849_begin_0"), val = tensor<int32, [4]>([0, 832, 0, 0])];
            tensor<int32, [4]> var_3849_end_0 = const()[name = tensor<string, []>("op_3849_end_0"), val = tensor<int32, [4]>([2, 896, 1, 256])];
            tensor<bool, [4]> var_3849_end_mask_0 = const()[name = tensor<string, []>("op_3849_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3849_cast = slice_by_index(begin = var_3849_begin_0, end = var_3849_end_0, end_mask = var_3849_end_mask_0, x = q_23_cast);
            tensor<int32, [4]> var_3853_begin_0 = const()[name = tensor<string, []>("op_3853_begin_0"), val = tensor<int32, [4]>([0, 896, 0, 0])];
            tensor<int32, [4]> var_3853_end_0 = const()[name = tensor<string, []>("op_3853_end_0"), val = tensor<int32, [4]>([2, 960, 1, 256])];
            tensor<bool, [4]> var_3853_end_mask_0 = const()[name = tensor<string, []>("op_3853_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3853_cast = slice_by_index(begin = var_3853_begin_0, end = var_3853_end_0, end_mask = var_3853_end_mask_0, x = q_23_cast);
            tensor<int32, [4]> var_3857_begin_0 = const()[name = tensor<string, []>("op_3857_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_3857_end_0 = const()[name = tensor<string, []>("op_3857_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 256])];
            tensor<bool, [4]> var_3857_end_mask_0 = const()[name = tensor<string, []>("op_3857_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3857_cast = slice_by_index(begin = var_3857_begin_0, end = var_3857_end_0, end_mask = var_3857_end_mask_0, x = q_23_cast);
            tensor<int32, [4]> var_3861_begin_0 = const()[name = tensor<string, []>("op_3861_begin_0"), val = tensor<int32, [4]>([0, 1024, 0, 0])];
            tensor<int32, [4]> var_3861_end_0 = const()[name = tensor<string, []>("op_3861_end_0"), val = tensor<int32, [4]>([2, 1088, 1, 256])];
            tensor<bool, [4]> var_3861_end_mask_0 = const()[name = tensor<string, []>("op_3861_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3861_cast = slice_by_index(begin = var_3861_begin_0, end = var_3861_end_0, end_mask = var_3861_end_mask_0, x = q_23_cast);
            tensor<int32, [4]> var_3865_begin_0 = const()[name = tensor<string, []>("op_3865_begin_0"), val = tensor<int32, [4]>([0, 1088, 0, 0])];
            tensor<int32, [4]> var_3865_end_0 = const()[name = tensor<string, []>("op_3865_end_0"), val = tensor<int32, [4]>([2, 1152, 1, 256])];
            tensor<bool, [4]> var_3865_end_mask_0 = const()[name = tensor<string, []>("op_3865_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3865_cast = slice_by_index(begin = var_3865_begin_0, end = var_3865_end_0, end_mask = var_3865_end_mask_0, x = q_23_cast);
            tensor<int32, [4]> var_3869_begin_0 = const()[name = tensor<string, []>("op_3869_begin_0"), val = tensor<int32, [4]>([0, 1152, 0, 0])];
            tensor<int32, [4]> var_3869_end_0 = const()[name = tensor<string, []>("op_3869_end_0"), val = tensor<int32, [4]>([2, 1216, 1, 256])];
            tensor<bool, [4]> var_3869_end_mask_0 = const()[name = tensor<string, []>("op_3869_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3869_cast = slice_by_index(begin = var_3869_begin_0, end = var_3869_end_0, end_mask = var_3869_end_mask_0, x = q_23_cast);
            tensor<int32, [4]> var_3873_begin_0 = const()[name = tensor<string, []>("op_3873_begin_0"), val = tensor<int32, [4]>([0, 1216, 0, 0])];
            tensor<int32, [4]> var_3873_end_0 = const()[name = tensor<string, []>("op_3873_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<bool, [4]> var_3873_end_mask_0 = const()[name = tensor<string, []>("op_3873_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_3873_cast = slice_by_index(begin = var_3873_begin_0, end = var_3873_end_0, end_mask = var_3873_end_mask_0, x = q_23_cast);
            tensor<int32, [4]> k_47_perm_0 = const()[name = tensor<string, []>("k_47_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_3880_begin_0 = const()[name = tensor<string, []>("op_3880_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_3880_end_0 = const()[name = tensor<string, []>("op_3880_end_0"), val = tensor<int32, [4]>([2, 77, 1, 64])];
            tensor<bool, [4]> var_3880_end_mask_0 = const()[name = tensor<string, []>("op_3880_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 1280]> transpose_66 = transpose(perm = k_47_perm_0, x = k_45_cast);
            tensor<fp16, [2, 77, 1, 64]> var_3880_cast = slice_by_index(begin = var_3880_begin_0, end = var_3880_end_0, end_mask = var_3880_end_mask_0, x = transpose_66);
            tensor<int32, [4]> var_3884_begin_0 = const()[name = tensor<string, []>("op_3884_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 64])];
            tensor<int32, [4]> var_3884_end_0 = const()[name = tensor<string, []>("op_3884_end_0"), val = tensor<int32, [4]>([2, 77, 1, 128])];
            tensor<bool, [4]> var_3884_end_mask_0 = const()[name = tensor<string, []>("op_3884_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_3884_cast = slice_by_index(begin = var_3884_begin_0, end = var_3884_end_0, end_mask = var_3884_end_mask_0, x = transpose_66);
            tensor<int32, [4]> var_3888_begin_0 = const()[name = tensor<string, []>("op_3888_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 128])];
            tensor<int32, [4]> var_3888_end_0 = const()[name = tensor<string, []>("op_3888_end_0"), val = tensor<int32, [4]>([2, 77, 1, 192])];
            tensor<bool, [4]> var_3888_end_mask_0 = const()[name = tensor<string, []>("op_3888_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_3888_cast = slice_by_index(begin = var_3888_begin_0, end = var_3888_end_0, end_mask = var_3888_end_mask_0, x = transpose_66);
            tensor<int32, [4]> var_3892_begin_0 = const()[name = tensor<string, []>("op_3892_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 192])];
            tensor<int32, [4]> var_3892_end_0 = const()[name = tensor<string, []>("op_3892_end_0"), val = tensor<int32, [4]>([2, 77, 1, 256])];
            tensor<bool, [4]> var_3892_end_mask_0 = const()[name = tensor<string, []>("op_3892_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_3892_cast = slice_by_index(begin = var_3892_begin_0, end = var_3892_end_0, end_mask = var_3892_end_mask_0, x = transpose_66);
            tensor<int32, [4]> var_3896_begin_0 = const()[name = tensor<string, []>("op_3896_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 256])];
            tensor<int32, [4]> var_3896_end_0 = const()[name = tensor<string, []>("op_3896_end_0"), val = tensor<int32, [4]>([2, 77, 1, 320])];
            tensor<bool, [4]> var_3896_end_mask_0 = const()[name = tensor<string, []>("op_3896_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_3896_cast = slice_by_index(begin = var_3896_begin_0, end = var_3896_end_0, end_mask = var_3896_end_mask_0, x = transpose_66);
            tensor<int32, [4]> var_3900_begin_0 = const()[name = tensor<string, []>("op_3900_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_3900_end_0 = const()[name = tensor<string, []>("op_3900_end_0"), val = tensor<int32, [4]>([2, 77, 1, 384])];
            tensor<bool, [4]> var_3900_end_mask_0 = const()[name = tensor<string, []>("op_3900_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_3900_cast = slice_by_index(begin = var_3900_begin_0, end = var_3900_end_0, end_mask = var_3900_end_mask_0, x = transpose_66);
            tensor<int32, [4]> var_3904_begin_0 = const()[name = tensor<string, []>("op_3904_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 384])];
            tensor<int32, [4]> var_3904_end_0 = const()[name = tensor<string, []>("op_3904_end_0"), val = tensor<int32, [4]>([2, 77, 1, 448])];
            tensor<bool, [4]> var_3904_end_mask_0 = const()[name = tensor<string, []>("op_3904_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_3904_cast = slice_by_index(begin = var_3904_begin_0, end = var_3904_end_0, end_mask = var_3904_end_mask_0, x = transpose_66);
            tensor<int32, [4]> var_3908_begin_0 = const()[name = tensor<string, []>("op_3908_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 448])];
            tensor<int32, [4]> var_3908_end_0 = const()[name = tensor<string, []>("op_3908_end_0"), val = tensor<int32, [4]>([2, 77, 1, 512])];
            tensor<bool, [4]> var_3908_end_mask_0 = const()[name = tensor<string, []>("op_3908_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_3908_cast = slice_by_index(begin = var_3908_begin_0, end = var_3908_end_0, end_mask = var_3908_end_mask_0, x = transpose_66);
            tensor<int32, [4]> var_3912_begin_0 = const()[name = tensor<string, []>("op_3912_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 512])];
            tensor<int32, [4]> var_3912_end_0 = const()[name = tensor<string, []>("op_3912_end_0"), val = tensor<int32, [4]>([2, 77, 1, 576])];
            tensor<bool, [4]> var_3912_end_mask_0 = const()[name = tensor<string, []>("op_3912_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_3912_cast = slice_by_index(begin = var_3912_begin_0, end = var_3912_end_0, end_mask = var_3912_end_mask_0, x = transpose_66);
            tensor<int32, [4]> var_3916_begin_0 = const()[name = tensor<string, []>("op_3916_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 576])];
            tensor<int32, [4]> var_3916_end_0 = const()[name = tensor<string, []>("op_3916_end_0"), val = tensor<int32, [4]>([2, 77, 1, 640])];
            tensor<bool, [4]> var_3916_end_mask_0 = const()[name = tensor<string, []>("op_3916_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_3916_cast = slice_by_index(begin = var_3916_begin_0, end = var_3916_end_0, end_mask = var_3916_end_mask_0, x = transpose_66);
            tensor<int32, [4]> var_3920_begin_0 = const()[name = tensor<string, []>("op_3920_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 640])];
            tensor<int32, [4]> var_3920_end_0 = const()[name = tensor<string, []>("op_3920_end_0"), val = tensor<int32, [4]>([2, 77, 1, 704])];
            tensor<bool, [4]> var_3920_end_mask_0 = const()[name = tensor<string, []>("op_3920_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_3920_cast = slice_by_index(begin = var_3920_begin_0, end = var_3920_end_0, end_mask = var_3920_end_mask_0, x = transpose_66);
            tensor<int32, [4]> var_3924_begin_0 = const()[name = tensor<string, []>("op_3924_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 704])];
            tensor<int32, [4]> var_3924_end_0 = const()[name = tensor<string, []>("op_3924_end_0"), val = tensor<int32, [4]>([2, 77, 1, 768])];
            tensor<bool, [4]> var_3924_end_mask_0 = const()[name = tensor<string, []>("op_3924_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_3924_cast = slice_by_index(begin = var_3924_begin_0, end = var_3924_end_0, end_mask = var_3924_end_mask_0, x = transpose_66);
            tensor<int32, [4]> var_3928_begin_0 = const()[name = tensor<string, []>("op_3928_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 768])];
            tensor<int32, [4]> var_3928_end_0 = const()[name = tensor<string, []>("op_3928_end_0"), val = tensor<int32, [4]>([2, 77, 1, 832])];
            tensor<bool, [4]> var_3928_end_mask_0 = const()[name = tensor<string, []>("op_3928_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_3928_cast = slice_by_index(begin = var_3928_begin_0, end = var_3928_end_0, end_mask = var_3928_end_mask_0, x = transpose_66);
            tensor<int32, [4]> var_3932_begin_0 = const()[name = tensor<string, []>("op_3932_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 832])];
            tensor<int32, [4]> var_3932_end_0 = const()[name = tensor<string, []>("op_3932_end_0"), val = tensor<int32, [4]>([2, 77, 1, 896])];
            tensor<bool, [4]> var_3932_end_mask_0 = const()[name = tensor<string, []>("op_3932_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_3932_cast = slice_by_index(begin = var_3932_begin_0, end = var_3932_end_0, end_mask = var_3932_end_mask_0, x = transpose_66);
            tensor<int32, [4]> var_3936_begin_0 = const()[name = tensor<string, []>("op_3936_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 896])];
            tensor<int32, [4]> var_3936_end_0 = const()[name = tensor<string, []>("op_3936_end_0"), val = tensor<int32, [4]>([2, 77, 1, 960])];
            tensor<bool, [4]> var_3936_end_mask_0 = const()[name = tensor<string, []>("op_3936_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_3936_cast = slice_by_index(begin = var_3936_begin_0, end = var_3936_end_0, end_mask = var_3936_end_mask_0, x = transpose_66);
            tensor<int32, [4]> var_3940_begin_0 = const()[name = tensor<string, []>("op_3940_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 960])];
            tensor<int32, [4]> var_3940_end_0 = const()[name = tensor<string, []>("op_3940_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1024])];
            tensor<bool, [4]> var_3940_end_mask_0 = const()[name = tensor<string, []>("op_3940_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_3940_cast = slice_by_index(begin = var_3940_begin_0, end = var_3940_end_0, end_mask = var_3940_end_mask_0, x = transpose_66);
            tensor<int32, [4]> var_3944_begin_0 = const()[name = tensor<string, []>("op_3944_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1024])];
            tensor<int32, [4]> var_3944_end_0 = const()[name = tensor<string, []>("op_3944_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1088])];
            tensor<bool, [4]> var_3944_end_mask_0 = const()[name = tensor<string, []>("op_3944_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_3944_cast = slice_by_index(begin = var_3944_begin_0, end = var_3944_end_0, end_mask = var_3944_end_mask_0, x = transpose_66);
            tensor<int32, [4]> var_3948_begin_0 = const()[name = tensor<string, []>("op_3948_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1088])];
            tensor<int32, [4]> var_3948_end_0 = const()[name = tensor<string, []>("op_3948_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1152])];
            tensor<bool, [4]> var_3948_end_mask_0 = const()[name = tensor<string, []>("op_3948_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_3948_cast = slice_by_index(begin = var_3948_begin_0, end = var_3948_end_0, end_mask = var_3948_end_mask_0, x = transpose_66);
            tensor<int32, [4]> var_3952_begin_0 = const()[name = tensor<string, []>("op_3952_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1152])];
            tensor<int32, [4]> var_3952_end_0 = const()[name = tensor<string, []>("op_3952_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1216])];
            tensor<bool, [4]> var_3952_end_mask_0 = const()[name = tensor<string, []>("op_3952_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_3952_cast = slice_by_index(begin = var_3952_begin_0, end = var_3952_end_0, end_mask = var_3952_end_mask_0, x = transpose_66);
            tensor<int32, [4]> var_3956_begin_0 = const()[name = tensor<string, []>("op_3956_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1216])];
            tensor<int32, [4]> var_3956_end_0 = const()[name = tensor<string, []>("op_3956_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1280])];
            tensor<bool, [4]> var_3956_end_mask_0 = const()[name = tensor<string, []>("op_3956_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_3956_cast = slice_by_index(begin = var_3956_begin_0, end = var_3956_end_0, end_mask = var_3956_end_mask_0, x = transpose_66);
            tensor<int32, [4]> var_3958_begin_0 = const()[name = tensor<string, []>("op_3958_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_3958_end_0 = const()[name = tensor<string, []>("op_3958_end_0"), val = tensor<int32, [4]>([2, 64, 1, 77])];
            tensor<bool, [4]> var_3958_end_mask_0 = const()[name = tensor<string, []>("op_3958_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_3958_cast = slice_by_index(begin = var_3958_begin_0, end = var_3958_end_0, end_mask = var_3958_end_mask_0, x = v_23_cast);
            tensor<int32, [4]> var_3962_begin_0 = const()[name = tensor<string, []>("op_3962_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_3962_end_0 = const()[name = tensor<string, []>("op_3962_end_0"), val = tensor<int32, [4]>([2, 128, 1, 77])];
            tensor<bool, [4]> var_3962_end_mask_0 = const()[name = tensor<string, []>("op_3962_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_3962_cast = slice_by_index(begin = var_3962_begin_0, end = var_3962_end_0, end_mask = var_3962_end_mask_0, x = v_23_cast);
            tensor<int32, [4]> var_3966_begin_0 = const()[name = tensor<string, []>("op_3966_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_3966_end_0 = const()[name = tensor<string, []>("op_3966_end_0"), val = tensor<int32, [4]>([2, 192, 1, 77])];
            tensor<bool, [4]> var_3966_end_mask_0 = const()[name = tensor<string, []>("op_3966_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_3966_cast = slice_by_index(begin = var_3966_begin_0, end = var_3966_end_0, end_mask = var_3966_end_mask_0, x = v_23_cast);
            tensor<int32, [4]> var_3970_begin_0 = const()[name = tensor<string, []>("op_3970_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_3970_end_0 = const()[name = tensor<string, []>("op_3970_end_0"), val = tensor<int32, [4]>([2, 256, 1, 77])];
            tensor<bool, [4]> var_3970_end_mask_0 = const()[name = tensor<string, []>("op_3970_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_3970_cast = slice_by_index(begin = var_3970_begin_0, end = var_3970_end_0, end_mask = var_3970_end_mask_0, x = v_23_cast);
            tensor<int32, [4]> var_3974_begin_0 = const()[name = tensor<string, []>("op_3974_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_3974_end_0 = const()[name = tensor<string, []>("op_3974_end_0"), val = tensor<int32, [4]>([2, 320, 1, 77])];
            tensor<bool, [4]> var_3974_end_mask_0 = const()[name = tensor<string, []>("op_3974_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_3974_cast = slice_by_index(begin = var_3974_begin_0, end = var_3974_end_0, end_mask = var_3974_end_mask_0, x = v_23_cast);
            tensor<int32, [4]> var_3978_begin_0 = const()[name = tensor<string, []>("op_3978_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_3978_end_0 = const()[name = tensor<string, []>("op_3978_end_0"), val = tensor<int32, [4]>([2, 384, 1, 77])];
            tensor<bool, [4]> var_3978_end_mask_0 = const()[name = tensor<string, []>("op_3978_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_3978_cast = slice_by_index(begin = var_3978_begin_0, end = var_3978_end_0, end_mask = var_3978_end_mask_0, x = v_23_cast);
            tensor<int32, [4]> var_3982_begin_0 = const()[name = tensor<string, []>("op_3982_begin_0"), val = tensor<int32, [4]>([0, 384, 0, 0])];
            tensor<int32, [4]> var_3982_end_0 = const()[name = tensor<string, []>("op_3982_end_0"), val = tensor<int32, [4]>([2, 448, 1, 77])];
            tensor<bool, [4]> var_3982_end_mask_0 = const()[name = tensor<string, []>("op_3982_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_3982_cast = slice_by_index(begin = var_3982_begin_0, end = var_3982_end_0, end_mask = var_3982_end_mask_0, x = v_23_cast);
            tensor<int32, [4]> var_3986_begin_0 = const()[name = tensor<string, []>("op_3986_begin_0"), val = tensor<int32, [4]>([0, 448, 0, 0])];
            tensor<int32, [4]> var_3986_end_0 = const()[name = tensor<string, []>("op_3986_end_0"), val = tensor<int32, [4]>([2, 512, 1, 77])];
            tensor<bool, [4]> var_3986_end_mask_0 = const()[name = tensor<string, []>("op_3986_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_3986_cast = slice_by_index(begin = var_3986_begin_0, end = var_3986_end_0, end_mask = var_3986_end_mask_0, x = v_23_cast);
            tensor<int32, [4]> var_3990_begin_0 = const()[name = tensor<string, []>("op_3990_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_3990_end_0 = const()[name = tensor<string, []>("op_3990_end_0"), val = tensor<int32, [4]>([2, 576, 1, 77])];
            tensor<bool, [4]> var_3990_end_mask_0 = const()[name = tensor<string, []>("op_3990_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_3990_cast = slice_by_index(begin = var_3990_begin_0, end = var_3990_end_0, end_mask = var_3990_end_mask_0, x = v_23_cast);
            tensor<int32, [4]> var_3994_begin_0 = const()[name = tensor<string, []>("op_3994_begin_0"), val = tensor<int32, [4]>([0, 576, 0, 0])];
            tensor<int32, [4]> var_3994_end_0 = const()[name = tensor<string, []>("op_3994_end_0"), val = tensor<int32, [4]>([2, 640, 1, 77])];
            tensor<bool, [4]> var_3994_end_mask_0 = const()[name = tensor<string, []>("op_3994_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_3994_cast = slice_by_index(begin = var_3994_begin_0, end = var_3994_end_0, end_mask = var_3994_end_mask_0, x = v_23_cast);
            tensor<int32, [4]> var_3998_begin_0 = const()[name = tensor<string, []>("op_3998_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_3998_end_0 = const()[name = tensor<string, []>("op_3998_end_0"), val = tensor<int32, [4]>([2, 704, 1, 77])];
            tensor<bool, [4]> var_3998_end_mask_0 = const()[name = tensor<string, []>("op_3998_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_3998_cast = slice_by_index(begin = var_3998_begin_0, end = var_3998_end_0, end_mask = var_3998_end_mask_0, x = v_23_cast);
            tensor<int32, [4]> var_4002_begin_0 = const()[name = tensor<string, []>("op_4002_begin_0"), val = tensor<int32, [4]>([0, 704, 0, 0])];
            tensor<int32, [4]> var_4002_end_0 = const()[name = tensor<string, []>("op_4002_end_0"), val = tensor<int32, [4]>([2, 768, 1, 77])];
            tensor<bool, [4]> var_4002_end_mask_0 = const()[name = tensor<string, []>("op_4002_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_4002_cast = slice_by_index(begin = var_4002_begin_0, end = var_4002_end_0, end_mask = var_4002_end_mask_0, x = v_23_cast);
            tensor<int32, [4]> var_4006_begin_0 = const()[name = tensor<string, []>("op_4006_begin_0"), val = tensor<int32, [4]>([0, 768, 0, 0])];
            tensor<int32, [4]> var_4006_end_0 = const()[name = tensor<string, []>("op_4006_end_0"), val = tensor<int32, [4]>([2, 832, 1, 77])];
            tensor<bool, [4]> var_4006_end_mask_0 = const()[name = tensor<string, []>("op_4006_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_4006_cast = slice_by_index(begin = var_4006_begin_0, end = var_4006_end_0, end_mask = var_4006_end_mask_0, x = v_23_cast);
            tensor<int32, [4]> var_4010_begin_0 = const()[name = tensor<string, []>("op_4010_begin_0"), val = tensor<int32, [4]>([0, 832, 0, 0])];
            tensor<int32, [4]> var_4010_end_0 = const()[name = tensor<string, []>("op_4010_end_0"), val = tensor<int32, [4]>([2, 896, 1, 77])];
            tensor<bool, [4]> var_4010_end_mask_0 = const()[name = tensor<string, []>("op_4010_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_4010_cast = slice_by_index(begin = var_4010_begin_0, end = var_4010_end_0, end_mask = var_4010_end_mask_0, x = v_23_cast);
            tensor<int32, [4]> var_4014_begin_0 = const()[name = tensor<string, []>("op_4014_begin_0"), val = tensor<int32, [4]>([0, 896, 0, 0])];
            tensor<int32, [4]> var_4014_end_0 = const()[name = tensor<string, []>("op_4014_end_0"), val = tensor<int32, [4]>([2, 960, 1, 77])];
            tensor<bool, [4]> var_4014_end_mask_0 = const()[name = tensor<string, []>("op_4014_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_4014_cast = slice_by_index(begin = var_4014_begin_0, end = var_4014_end_0, end_mask = var_4014_end_mask_0, x = v_23_cast);
            tensor<int32, [4]> var_4018_begin_0 = const()[name = tensor<string, []>("op_4018_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_4018_end_0 = const()[name = tensor<string, []>("op_4018_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 77])];
            tensor<bool, [4]> var_4018_end_mask_0 = const()[name = tensor<string, []>("op_4018_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_4018_cast = slice_by_index(begin = var_4018_begin_0, end = var_4018_end_0, end_mask = var_4018_end_mask_0, x = v_23_cast);
            tensor<int32, [4]> var_4022_begin_0 = const()[name = tensor<string, []>("op_4022_begin_0"), val = tensor<int32, [4]>([0, 1024, 0, 0])];
            tensor<int32, [4]> var_4022_end_0 = const()[name = tensor<string, []>("op_4022_end_0"), val = tensor<int32, [4]>([2, 1088, 1, 77])];
            tensor<bool, [4]> var_4022_end_mask_0 = const()[name = tensor<string, []>("op_4022_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_4022_cast = slice_by_index(begin = var_4022_begin_0, end = var_4022_end_0, end_mask = var_4022_end_mask_0, x = v_23_cast);
            tensor<int32, [4]> var_4026_begin_0 = const()[name = tensor<string, []>("op_4026_begin_0"), val = tensor<int32, [4]>([0, 1088, 0, 0])];
            tensor<int32, [4]> var_4026_end_0 = const()[name = tensor<string, []>("op_4026_end_0"), val = tensor<int32, [4]>([2, 1152, 1, 77])];
            tensor<bool, [4]> var_4026_end_mask_0 = const()[name = tensor<string, []>("op_4026_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_4026_cast = slice_by_index(begin = var_4026_begin_0, end = var_4026_end_0, end_mask = var_4026_end_mask_0, x = v_23_cast);
            tensor<int32, [4]> var_4030_begin_0 = const()[name = tensor<string, []>("op_4030_begin_0"), val = tensor<int32, [4]>([0, 1152, 0, 0])];
            tensor<int32, [4]> var_4030_end_0 = const()[name = tensor<string, []>("op_4030_end_0"), val = tensor<int32, [4]>([2, 1216, 1, 77])];
            tensor<bool, [4]> var_4030_end_mask_0 = const()[name = tensor<string, []>("op_4030_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_4030_cast = slice_by_index(begin = var_4030_begin_0, end = var_4030_end_0, end_mask = var_4030_end_mask_0, x = v_23_cast);
            tensor<int32, [4]> var_4034_begin_0 = const()[name = tensor<string, []>("op_4034_begin_0"), val = tensor<int32, [4]>([0, 1216, 0, 0])];
            tensor<int32, [4]> var_4034_end_0 = const()[name = tensor<string, []>("op_4034_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 77])];
            tensor<bool, [4]> var_4034_end_mask_0 = const()[name = tensor<string, []>("op_4034_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_4034_cast = slice_by_index(begin = var_4034_begin_0, end = var_4034_end_0, end_mask = var_4034_end_mask_0, x = v_23_cast);
            tensor<string, []> var_4038_equation_0 = const()[name = tensor<string, []>("op_4038_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_4038_cast = einsum(equation = var_4038_equation_0, values = (var_3880_cast, var_3797_cast));
            tensor<fp16, []> var_4039_to_fp16 = const()[name = tensor<string, []>("op_4039_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_241_cast = mul(x = var_4038_cast, y = var_4039_to_fp16);
            tensor<string, []> var_4042_equation_0 = const()[name = tensor<string, []>("op_4042_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_4042_cast = einsum(equation = var_4042_equation_0, values = (var_3884_cast, var_3801_cast));
            tensor<fp16, []> var_4043_to_fp16 = const()[name = tensor<string, []>("op_4043_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_243_cast = mul(x = var_4042_cast, y = var_4043_to_fp16);
            tensor<string, []> var_4046_equation_0 = const()[name = tensor<string, []>("op_4046_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_4046_cast = einsum(equation = var_4046_equation_0, values = (var_3888_cast, var_3805_cast));
            tensor<fp16, []> var_4047_to_fp16 = const()[name = tensor<string, []>("op_4047_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_245_cast = mul(x = var_4046_cast, y = var_4047_to_fp16);
            tensor<string, []> var_4050_equation_0 = const()[name = tensor<string, []>("op_4050_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_4050_cast = einsum(equation = var_4050_equation_0, values = (var_3892_cast, var_3809_cast));
            tensor<fp16, []> var_4051_to_fp16 = const()[name = tensor<string, []>("op_4051_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_247_cast = mul(x = var_4050_cast, y = var_4051_to_fp16);
            tensor<string, []> var_4054_equation_0 = const()[name = tensor<string, []>("op_4054_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_4054_cast = einsum(equation = var_4054_equation_0, values = (var_3896_cast, var_3813_cast));
            tensor<fp16, []> var_4055_to_fp16 = const()[name = tensor<string, []>("op_4055_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_249_cast = mul(x = var_4054_cast, y = var_4055_to_fp16);
            tensor<string, []> var_4058_equation_0 = const()[name = tensor<string, []>("op_4058_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_4058_cast = einsum(equation = var_4058_equation_0, values = (var_3900_cast, var_3817_cast));
            tensor<fp16, []> var_4059_to_fp16 = const()[name = tensor<string, []>("op_4059_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_251_cast = mul(x = var_4058_cast, y = var_4059_to_fp16);
            tensor<string, []> var_4062_equation_0 = const()[name = tensor<string, []>("op_4062_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_4062_cast = einsum(equation = var_4062_equation_0, values = (var_3904_cast, var_3821_cast));
            tensor<fp16, []> var_4063_to_fp16 = const()[name = tensor<string, []>("op_4063_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_253_cast = mul(x = var_4062_cast, y = var_4063_to_fp16);
            tensor<string, []> var_4066_equation_0 = const()[name = tensor<string, []>("op_4066_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_4066_cast = einsum(equation = var_4066_equation_0, values = (var_3908_cast, var_3825_cast));
            tensor<fp16, []> var_4067_to_fp16 = const()[name = tensor<string, []>("op_4067_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_255_cast = mul(x = var_4066_cast, y = var_4067_to_fp16);
            tensor<string, []> var_4070_equation_0 = const()[name = tensor<string, []>("op_4070_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_4070_cast = einsum(equation = var_4070_equation_0, values = (var_3912_cast, var_3829_cast));
            tensor<fp16, []> var_4071_to_fp16 = const()[name = tensor<string, []>("op_4071_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_257_cast = mul(x = var_4070_cast, y = var_4071_to_fp16);
            tensor<string, []> var_4074_equation_0 = const()[name = tensor<string, []>("op_4074_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_4074_cast = einsum(equation = var_4074_equation_0, values = (var_3916_cast, var_3833_cast));
            tensor<fp16, []> var_4075_to_fp16 = const()[name = tensor<string, []>("op_4075_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_259_cast = mul(x = var_4074_cast, y = var_4075_to_fp16);
            tensor<string, []> var_4078_equation_0 = const()[name = tensor<string, []>("op_4078_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_4078_cast = einsum(equation = var_4078_equation_0, values = (var_3920_cast, var_3837_cast));
            tensor<fp16, []> var_4079_to_fp16 = const()[name = tensor<string, []>("op_4079_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_261_cast = mul(x = var_4078_cast, y = var_4079_to_fp16);
            tensor<string, []> var_4082_equation_0 = const()[name = tensor<string, []>("op_4082_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_4082_cast = einsum(equation = var_4082_equation_0, values = (var_3924_cast, var_3841_cast));
            tensor<fp16, []> var_4083_to_fp16 = const()[name = tensor<string, []>("op_4083_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_263_cast = mul(x = var_4082_cast, y = var_4083_to_fp16);
            tensor<string, []> var_4086_equation_0 = const()[name = tensor<string, []>("op_4086_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_4086_cast = einsum(equation = var_4086_equation_0, values = (var_3928_cast, var_3845_cast));
            tensor<fp16, []> var_4087_to_fp16 = const()[name = tensor<string, []>("op_4087_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_265_cast = mul(x = var_4086_cast, y = var_4087_to_fp16);
            tensor<string, []> var_4090_equation_0 = const()[name = tensor<string, []>("op_4090_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_4090_cast = einsum(equation = var_4090_equation_0, values = (var_3932_cast, var_3849_cast));
            tensor<fp16, []> var_4091_to_fp16 = const()[name = tensor<string, []>("op_4091_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_267_cast = mul(x = var_4090_cast, y = var_4091_to_fp16);
            tensor<string, []> var_4094_equation_0 = const()[name = tensor<string, []>("op_4094_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_4094_cast = einsum(equation = var_4094_equation_0, values = (var_3936_cast, var_3853_cast));
            tensor<fp16, []> var_4095_to_fp16 = const()[name = tensor<string, []>("op_4095_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_269_cast = mul(x = var_4094_cast, y = var_4095_to_fp16);
            tensor<string, []> var_4098_equation_0 = const()[name = tensor<string, []>("op_4098_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_4098_cast = einsum(equation = var_4098_equation_0, values = (var_3940_cast, var_3857_cast));
            tensor<fp16, []> var_4099_to_fp16 = const()[name = tensor<string, []>("op_4099_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_271_cast = mul(x = var_4098_cast, y = var_4099_to_fp16);
            tensor<string, []> var_4102_equation_0 = const()[name = tensor<string, []>("op_4102_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_4102_cast = einsum(equation = var_4102_equation_0, values = (var_3944_cast, var_3861_cast));
            tensor<fp16, []> var_4103_to_fp16 = const()[name = tensor<string, []>("op_4103_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_273_cast = mul(x = var_4102_cast, y = var_4103_to_fp16);
            tensor<string, []> var_4106_equation_0 = const()[name = tensor<string, []>("op_4106_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_4106_cast = einsum(equation = var_4106_equation_0, values = (var_3948_cast, var_3865_cast));
            tensor<fp16, []> var_4107_to_fp16 = const()[name = tensor<string, []>("op_4107_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_275_cast = mul(x = var_4106_cast, y = var_4107_to_fp16);
            tensor<string, []> var_4110_equation_0 = const()[name = tensor<string, []>("op_4110_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_4110_cast = einsum(equation = var_4110_equation_0, values = (var_3952_cast, var_3869_cast));
            tensor<fp16, []> var_4111_to_fp16 = const()[name = tensor<string, []>("op_4111_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_277_cast = mul(x = var_4110_cast, y = var_4111_to_fp16);
            tensor<string, []> var_4114_equation_0 = const()[name = tensor<string, []>("op_4114_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_4114_cast = einsum(equation = var_4114_equation_0, values = (var_3956_cast, var_3873_cast));
            tensor<fp16, []> var_4115_to_fp16 = const()[name = tensor<string, []>("op_4115_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_279_cast = mul(x = var_4114_cast, y = var_4115_to_fp16);
            tensor<fp16, [2, 77, 1, 256]> var_4117_cast = softmax(axis = var_2254, x = aw_241_cast);
            tensor<fp16, [2, 77, 1, 256]> var_4118_cast = softmax(axis = var_2254, x = aw_243_cast);
            tensor<fp16, [2, 77, 1, 256]> var_4119_cast = softmax(axis = var_2254, x = aw_245_cast);
            tensor<fp16, [2, 77, 1, 256]> var_4120_cast = softmax(axis = var_2254, x = aw_247_cast);
            tensor<fp16, [2, 77, 1, 256]> var_4121_cast = softmax(axis = var_2254, x = aw_249_cast);
            tensor<fp16, [2, 77, 1, 256]> var_4122_cast = softmax(axis = var_2254, x = aw_251_cast);
            tensor<fp16, [2, 77, 1, 256]> var_4123_cast = softmax(axis = var_2254, x = aw_253_cast);
            tensor<fp16, [2, 77, 1, 256]> var_4124_cast = softmax(axis = var_2254, x = aw_255_cast);
            tensor<fp16, [2, 77, 1, 256]> var_4125_cast = softmax(axis = var_2254, x = aw_257_cast);
            tensor<fp16, [2, 77, 1, 256]> var_4126_cast = softmax(axis = var_2254, x = aw_259_cast);
            tensor<fp16, [2, 77, 1, 256]> var_4127_cast = softmax(axis = var_2254, x = aw_261_cast);
            tensor<fp16, [2, 77, 1, 256]> var_4128_cast = softmax(axis = var_2254, x = aw_263_cast);
            tensor<fp16, [2, 77, 1, 256]> var_4129_cast = softmax(axis = var_2254, x = aw_265_cast);
            tensor<fp16, [2, 77, 1, 256]> var_4130_cast = softmax(axis = var_2254, x = aw_267_cast);
            tensor<fp16, [2, 77, 1, 256]> var_4131_cast = softmax(axis = var_2254, x = aw_269_cast);
            tensor<fp16, [2, 77, 1, 256]> var_4132_cast = softmax(axis = var_2254, x = aw_271_cast);
            tensor<fp16, [2, 77, 1, 256]> var_4133_cast = softmax(axis = var_2254, x = aw_273_cast);
            tensor<fp16, [2, 77, 1, 256]> var_4134_cast = softmax(axis = var_2254, x = aw_275_cast);
            tensor<fp16, [2, 77, 1, 256]> var_4135_cast = softmax(axis = var_2254, x = aw_277_cast);
            tensor<fp16, [2, 77, 1, 256]> var_4136_cast = softmax(axis = var_2254, x = aw_279_cast);
            tensor<string, []> var_4138_equation_0 = const()[name = tensor<string, []>("op_4138_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_4138_cast = einsum(equation = var_4138_equation_0, values = (var_3958_cast, var_4117_cast));
            tensor<string, []> var_4140_equation_0 = const()[name = tensor<string, []>("op_4140_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_4140_cast = einsum(equation = var_4140_equation_0, values = (var_3962_cast, var_4118_cast));
            tensor<string, []> var_4142_equation_0 = const()[name = tensor<string, []>("op_4142_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_4142_cast = einsum(equation = var_4142_equation_0, values = (var_3966_cast, var_4119_cast));
            tensor<string, []> var_4144_equation_0 = const()[name = tensor<string, []>("op_4144_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_4144_cast = einsum(equation = var_4144_equation_0, values = (var_3970_cast, var_4120_cast));
            tensor<string, []> var_4146_equation_0 = const()[name = tensor<string, []>("op_4146_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_4146_cast = einsum(equation = var_4146_equation_0, values = (var_3974_cast, var_4121_cast));
            tensor<string, []> var_4148_equation_0 = const()[name = tensor<string, []>("op_4148_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_4148_cast = einsum(equation = var_4148_equation_0, values = (var_3978_cast, var_4122_cast));
            tensor<string, []> var_4150_equation_0 = const()[name = tensor<string, []>("op_4150_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_4150_cast = einsum(equation = var_4150_equation_0, values = (var_3982_cast, var_4123_cast));
            tensor<string, []> var_4152_equation_0 = const()[name = tensor<string, []>("op_4152_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_4152_cast = einsum(equation = var_4152_equation_0, values = (var_3986_cast, var_4124_cast));
            tensor<string, []> var_4154_equation_0 = const()[name = tensor<string, []>("op_4154_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_4154_cast = einsum(equation = var_4154_equation_0, values = (var_3990_cast, var_4125_cast));
            tensor<string, []> var_4156_equation_0 = const()[name = tensor<string, []>("op_4156_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_4156_cast = einsum(equation = var_4156_equation_0, values = (var_3994_cast, var_4126_cast));
            tensor<string, []> var_4158_equation_0 = const()[name = tensor<string, []>("op_4158_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_4158_cast = einsum(equation = var_4158_equation_0, values = (var_3998_cast, var_4127_cast));
            tensor<string, []> var_4160_equation_0 = const()[name = tensor<string, []>("op_4160_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_4160_cast = einsum(equation = var_4160_equation_0, values = (var_4002_cast, var_4128_cast));
            tensor<string, []> var_4162_equation_0 = const()[name = tensor<string, []>("op_4162_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_4162_cast = einsum(equation = var_4162_equation_0, values = (var_4006_cast, var_4129_cast));
            tensor<string, []> var_4164_equation_0 = const()[name = tensor<string, []>("op_4164_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_4164_cast = einsum(equation = var_4164_equation_0, values = (var_4010_cast, var_4130_cast));
            tensor<string, []> var_4166_equation_0 = const()[name = tensor<string, []>("op_4166_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_4166_cast = einsum(equation = var_4166_equation_0, values = (var_4014_cast, var_4131_cast));
            tensor<string, []> var_4168_equation_0 = const()[name = tensor<string, []>("op_4168_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_4168_cast = einsum(equation = var_4168_equation_0, values = (var_4018_cast, var_4132_cast));
            tensor<string, []> var_4170_equation_0 = const()[name = tensor<string, []>("op_4170_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_4170_cast = einsum(equation = var_4170_equation_0, values = (var_4022_cast, var_4133_cast));
            tensor<string, []> var_4172_equation_0 = const()[name = tensor<string, []>("op_4172_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_4172_cast = einsum(equation = var_4172_equation_0, values = (var_4026_cast, var_4134_cast));
            tensor<string, []> var_4174_equation_0 = const()[name = tensor<string, []>("op_4174_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_4174_cast = einsum(equation = var_4174_equation_0, values = (var_4030_cast, var_4135_cast));
            tensor<string, []> var_4176_equation_0 = const()[name = tensor<string, []>("op_4176_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_4176_cast = einsum(equation = var_4176_equation_0, values = (var_4034_cast, var_4136_cast));
            tensor<bool, []> input_161_interleave_0 = const()[name = tensor<string, []>("input_161_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 1280, 1, 256]> input_161_cast = concat(axis = var_2254, interleave = input_161_interleave_0, values = (var_4138_cast, var_4140_cast, var_4142_cast, var_4144_cast, var_4146_cast, var_4148_cast, var_4150_cast, var_4152_cast, var_4154_cast, var_4156_cast, var_4158_cast, var_4160_cast, var_4162_cast, var_4164_cast, var_4166_cast, var_4168_cast, var_4170_cast, var_4172_cast, var_4174_cast, var_4176_cast));
            tensor<int32, [2]> var_4182 = const()[name = tensor<string, []>("op_4182"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4184 = const()[name = tensor<string, []>("op_4184"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_4186_pad_type_0 = const()[name = tensor<string, []>("op_4186_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_4186_pad_0 = const()[name = tensor<string, []>("op_4186_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(308047552)))];
            tensor<fp16, [1280]> down_blocks_2_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(311324416)))];
            tensor<fp16, [2, 1280, 1, 256]> var_4186_cast = conv(bias = down_blocks_2_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16, dilations = var_4184, groups = var_2254, pad = var_4186_pad_0, pad_type = var_4186_pad_type_0, strides = var_4182, weight = down_blocks_2_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16, x = input_161_cast);
            tensor<fp16, [2, 1280, 1, 256]> inputs_35_cast = add(x = var_4186_cast, y = inputs_33_cast);
            tensor<int32, [1]> var_4190 = const()[name = tensor<string, []>("op_4190"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> channels_mean_35_cast = reduce_mean(axes = var_4190, keep_dims = var_2249, x = inputs_35_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_35_cast = sub(x = inputs_35_cast, y = channels_mean_35_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_sq_35_cast = mul(x = zero_mean_35_cast, y = zero_mean_35_cast);
            tensor<int32, [1]> var_4194 = const()[name = tensor<string, []>("op_4194"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> var_4195_cast = reduce_mean(axes = var_4194, keep_dims = var_2249, x = zero_mean_sq_35_cast);
            tensor<fp16, []> var_4196_to_fp16 = const()[name = tensor<string, []>("op_4196_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 256]> var_4197_cast = add(x = var_4195_cast, y = var_4196_to_fp16);
            tensor<fp16, []> denom_35_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_35_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 256]> denom_35_cast = rsqrt(epsilon = denom_35_epsilon_0_to_fp16, x = var_4197_cast);
            tensor<fp16, [2, 1280, 1, 256]> out_35_cast = mul(x = zero_mean_35_cast, y = denom_35_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_4201_to_fp16 = const()[name = tensor<string, []>("op_4201_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(311327040)))];
            tensor<fp16, [2, 1280, 1, 256]> var_4202_cast = add(x = out_35_cast, y = var_4201_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_4204_to_fp16 = const()[name = tensor<string, []>("op_4204_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(311329664)))];
            tensor<fp16, [2, 1280, 1, 256]> input_163_cast = mul(x = var_4202_cast, y = var_4204_to_fp16);
            tensor<int32, [2]> var_4212 = const()[name = tensor<string, []>("op_4212"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4214 = const()[name = tensor<string, []>("op_4214"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_4216_pad_type_0 = const()[name = tensor<string, []>("op_4216_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_4216_pad_0 = const()[name = tensor<string, []>("op_4216_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [10240, 1280, 1, 1]> down_blocks_2_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16"), val = tensor<fp16, [10240, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(311332288)))];
            tensor<fp16, [10240]> down_blocks_2_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16"), val = tensor<fp16, [10240]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(337546752)))];
            tensor<fp16, [2, 10240, 1, 256]> var_4216_cast = conv(bias = down_blocks_2_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16, dilations = var_4214, groups = var_2254, pad = var_4216_pad_0, pad_type = var_4216_pad_type_0, strides = var_4212, weight = down_blocks_2_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16, x = input_163_cast);
            tensor<int32, [2]> var_4217_split_sizes_0 = const()[name = tensor<string, []>("op_4217_split_sizes_0"), val = tensor<int32, [2]>([5120, 5120])];
            tensor<int32, []> var_4217_axis_0 = const()[name = tensor<string, []>("op_4217_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [2, 5120, 1, 256]> var_4217_cast_0, tensor<fp16, [2, 5120, 1, 256]> var_4217_cast_1 = split(axis = var_4217_axis_0, split_sizes = var_4217_split_sizes_0, x = var_4216_cast);
            tensor<string, []> var_4219_mode_0 = const()[name = tensor<string, []>("op_4219_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [2, 5120, 1, 256]> var_4219_cast = gelu(mode = var_4219_mode_0, x = var_4217_cast_1);
            tensor<fp16, [2, 5120, 1, 256]> input_165_cast = mul(x = var_4217_cast_0, y = var_4219_cast);
            tensor<int32, [2]> var_4223 = const()[name = tensor<string, []>("op_4223"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4225 = const()[name = tensor<string, []>("op_4225"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_4227_pad_type_0 = const()[name = tensor<string, []>("op_4227_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_4227_pad_0 = const()[name = tensor<string, []>("op_4227_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 5120, 1, 1]> down_blocks_2_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(337567296)))];
            tensor<fp16, [1280]> down_blocks_2_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(350674560)))];
            tensor<fp16, [2, 1280, 1, 256]> var_4227_cast = conv(bias = down_blocks_2_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16, dilations = var_4225, groups = var_2254, pad = var_4227_pad_0, pad_type = var_4227_pad_type_0, strides = var_4223, weight = down_blocks_2_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16, x = input_165_cast);
            tensor<fp16, [2, 1280, 1, 256]> hidden_states_105_cast = add(x = var_4227_cast, y = inputs_35_cast);
            tensor<int32, [4]> var_4229 = const()[name = tensor<string, []>("op_4229"), val = tensor<int32, [4]>([2, 1280, 16, 16])];
            tensor<fp16, [2, 1280, 16, 16]> input_167_cast = reshape(shape = var_4229, x = hidden_states_105_cast);
            tensor<int32, [2]> var_4233 = const()[name = tensor<string, []>("op_4233"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4235 = const()[name = tensor<string, []>("op_4235"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_107_pad_type_0 = const()[name = tensor<string, []>("hidden_states_107_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_107_pad_0 = const()[name = tensor<string, []>("hidden_states_107_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_attentions_1_proj_out_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_proj_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(350677184)))];
            tensor<fp16, [1280]> down_blocks_2_attentions_1_proj_out_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_proj_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(353954048)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_107_cast = conv(bias = down_blocks_2_attentions_1_proj_out_bias_to_fp16, dilations = var_4235, groups = var_2254, pad = hidden_states_107_pad_0, pad_type = hidden_states_107_pad_type_0, strides = var_4233, weight = down_blocks_2_attentions_1_proj_out_weight_to_fp16, x = input_167_cast);
            tensor<fp16, [2, 1280, 16, 16]> input_169_cast_1 = add(x = hidden_states_107_cast, y = hidden_states_95_cast);
            tensor<int32, [2]> var_4242 = const()[name = tensor<string, []>("op_4242"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_4244 = const()[name = tensor<string, []>("op_4244"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_171_pad_type_0 = const()[name = tensor<string, []>("input_171_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_171_pad_0 = const()[name = tensor<string, []>("input_171_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> down_blocks_2_downsamplers_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_downsamplers_0_conv_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(353956672)))];
            tensor<fp16, [1280]> down_blocks_2_downsamplers_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_downsamplers_0_conv_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(383447936)))];
            tensor<fp16, [2, 1280, 8, 8]> input_171_cast_1 = conv(bias = down_blocks_2_downsamplers_0_conv_bias_to_fp16, dilations = var_4244, groups = var_2254, pad = input_171_pad_0, pad_type = input_171_pad_type_0, strides = var_4242, weight = down_blocks_2_downsamplers_0_conv_weight_to_fp16, x = input_169_cast_1);
            tensor<int32, []> var_4256 = const()[name = tensor<string, []>("op_4256"), val = tensor<int32, []>(1)];
            tensor<int32, [5]> reshape_72_shape_0 = const()[name = tensor<string, []>("reshape_72_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 8, 8])];
            tensor<fp16, [2, 32, 40, 8, 8]> reshape_72_cast = reshape(shape = reshape_72_shape_0, x = input_171_cast_1);
            tensor<int32, [3]> reduce_mean_54_axes_0 = const()[name = tensor<string, []>("reduce_mean_54_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_54_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_54_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_54_cast = reduce_mean(axes = reduce_mean_54_axes_0, keep_dims = reduce_mean_54_keep_dims_0, x = reshape_72_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> sub_36_cast = sub(x = reshape_72_cast, y = reduce_mean_54_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> square_18_cast = square(x = sub_36_cast);
            tensor<int32, [3]> reduce_mean_56_axes_0 = const()[name = tensor<string, []>("reduce_mean_56_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_56_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_56_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_56_cast = reduce_mean(axes = reduce_mean_56_axes_0, keep_dims = reduce_mean_56_keep_dims_0, x = square_18_cast);
            tensor<fp16, []> add_36_y_0_to_fp16 = const()[name = tensor<string, []>("add_36_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_36_cast = add(x = reduce_mean_56_cast, y = add_36_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_18_cast = sqrt(x = add_36_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> real_div_18_cast = real_div(x = sub_36_cast, y = sqrt_18_cast);
            tensor<int32, [4]> reshape_73_shape_0 = const()[name = tensor<string, []>("reshape_73_shape_0"), val = tensor<int32, [4]>([2, 1280, 8, 8])];
            tensor<fp16, [2, 1280, 8, 8]> reshape_73_cast = reshape(shape = reshape_73_shape_0, x = real_div_18_cast);
            tensor<fp16, [1280]> add_37_mean_0_to_fp16 = const()[name = tensor<string, []>("add_37_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(383450560)))];
            tensor<fp16, [1280]> add_37_variance_0_to_fp16 = const()[name = tensor<string, []>("add_37_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(383453184)))];
            tensor<fp16, [1280]> add_37_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_37_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(383455808)))];
            tensor<fp16, [1280]> add_37_beta_0_to_fp16 = const()[name = tensor<string, []>("add_37_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(383458432)))];
            tensor<fp16, []> add_37_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_37_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 8, 8]> add_37_cast = batch_norm(beta = add_37_beta_0_to_fp16, epsilon = add_37_epsilon_0_to_fp16, gamma = add_37_gamma_0_to_fp16, mean = add_37_mean_0_to_fp16, variance = add_37_variance_0_to_fp16, x = reshape_73_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_175_cast = silu(x = add_37_cast);
            tensor<int32, [2]> var_4272 = const()[name = tensor<string, []>("op_4272"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4274 = const()[name = tensor<string, []>("op_4274"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_109_pad_type_0 = const()[name = tensor<string, []>("hidden_states_109_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_109_pad_0 = const()[name = tensor<string, []>("hidden_states_109_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> down_blocks_3_resnets_0_conv1_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_3_resnets_0_conv1_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(383461056)))];
            tensor<fp16, [1280]> down_blocks_3_resnets_0_conv1_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_3_resnets_0_conv1_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(412952320)))];
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_109_cast = conv(bias = down_blocks_3_resnets_0_conv1_bias_to_fp16, dilations = var_4274, groups = var_4256, pad = hidden_states_109_pad_0, pad_type = hidden_states_109_pad_type_0, strides = var_4272, weight = down_blocks_3_resnets_0_conv1_weight_to_fp16, x = input_175_cast);
            tensor<int32, [2]> var_4280 = const()[name = tensor<string, []>("op_4280"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4282 = const()[name = tensor<string, []>("op_4282"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_13_pad_type_0 = const()[name = tensor<string, []>("temb_13_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_13_pad_0 = const()[name = tensor<string, []>("temb_13_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_3_resnets_0_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_3_resnets_0_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(412954944)))];
            tensor<fp16, [1280]> down_blocks_3_resnets_0_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_3_resnets_0_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(416231808)))];
            tensor<fp16, [2, 1280, 1, 1]> temb_13_cast = conv(bias = down_blocks_3_resnets_0_time_emb_proj_bias_to_fp16, dilations = var_4282, groups = var_4256, pad = temb_13_pad_0, pad_type = temb_13_pad_type_0, strides = var_4280, weight = down_blocks_3_resnets_0_time_emb_proj_weight_to_fp16, x = input_15_cast_1);
            tensor<fp16, [2, 1280, 8, 8]> input_179_cast = add(x = hidden_states_109_cast, y = temb_13_cast);
            tensor<int32, [5]> reshape_76_shape_0 = const()[name = tensor<string, []>("reshape_76_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 8, 8])];
            tensor<fp16, [2, 32, 40, 8, 8]> reshape_76_cast = reshape(shape = reshape_76_shape_0, x = input_179_cast);
            tensor<int32, [3]> reduce_mean_57_axes_0 = const()[name = tensor<string, []>("reduce_mean_57_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_57_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_57_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_57_cast = reduce_mean(axes = reduce_mean_57_axes_0, keep_dims = reduce_mean_57_keep_dims_0, x = reshape_76_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> sub_38_cast = sub(x = reshape_76_cast, y = reduce_mean_57_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> square_19_cast = square(x = sub_38_cast);
            tensor<int32, [3]> reduce_mean_59_axes_0 = const()[name = tensor<string, []>("reduce_mean_59_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_59_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_59_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_59_cast = reduce_mean(axes = reduce_mean_59_axes_0, keep_dims = reduce_mean_59_keep_dims_0, x = square_19_cast);
            tensor<fp16, []> add_38_y_0_to_fp16 = const()[name = tensor<string, []>("add_38_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_38_cast = add(x = reduce_mean_59_cast, y = add_38_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_19_cast = sqrt(x = add_38_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> real_div_19_cast = real_div(x = sub_38_cast, y = sqrt_19_cast);
            tensor<int32, [4]> reshape_77_shape_0 = const()[name = tensor<string, []>("reshape_77_shape_0"), val = tensor<int32, [4]>([2, 1280, 8, 8])];
            tensor<fp16, [2, 1280, 8, 8]> reshape_77_cast = reshape(shape = reshape_77_shape_0, x = real_div_19_cast);
            tensor<fp16, [1280]> add_39_mean_0_to_fp16 = const()[name = tensor<string, []>("add_39_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(416234432)))];
            tensor<fp16, [1280]> add_39_variance_0_to_fp16 = const()[name = tensor<string, []>("add_39_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(416237056)))];
            tensor<fp16, [1280]> add_39_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_39_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(416239680)))];
            tensor<fp16, [1280]> add_39_beta_0_to_fp16 = const()[name = tensor<string, []>("add_39_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(416242304)))];
            tensor<fp16, []> add_39_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_39_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 8, 8]> add_39_cast = batch_norm(beta = add_39_beta_0_to_fp16, epsilon = add_39_epsilon_0_to_fp16, gamma = add_39_gamma_0_to_fp16, mean = add_39_mean_0_to_fp16, variance = add_39_variance_0_to_fp16, x = reshape_77_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_183_cast = silu(x = add_39_cast);
            tensor<int32, [2]> var_4292 = const()[name = tensor<string, []>("op_4292"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4294 = const()[name = tensor<string, []>("op_4294"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_111_pad_type_0 = const()[name = tensor<string, []>("hidden_states_111_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_111_pad_0 = const()[name = tensor<string, []>("hidden_states_111_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> down_blocks_3_resnets_0_conv2_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_3_resnets_0_conv2_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(416244928)))];
            tensor<fp16, [1280]> down_blocks_3_resnets_0_conv2_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_3_resnets_0_conv2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(445736192)))];
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_111_cast = conv(bias = down_blocks_3_resnets_0_conv2_bias_to_fp16, dilations = var_4294, groups = var_4256, pad = hidden_states_111_pad_0, pad_type = hidden_states_111_pad_type_0, strides = var_4292, weight = down_blocks_3_resnets_0_conv2_weight_to_fp16, x = input_183_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_185_cast = add(x = input_171_cast_1, y = hidden_states_111_cast);
            tensor<int32, [5]> reshape_80_shape_0 = const()[name = tensor<string, []>("reshape_80_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 8, 8])];
            tensor<fp16, [2, 32, 40, 8, 8]> reshape_80_cast = reshape(shape = reshape_80_shape_0, x = input_185_cast);
            tensor<int32, [3]> reduce_mean_60_axes_0 = const()[name = tensor<string, []>("reduce_mean_60_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_60_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_60_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_60_cast = reduce_mean(axes = reduce_mean_60_axes_0, keep_dims = reduce_mean_60_keep_dims_0, x = reshape_80_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> sub_40_cast = sub(x = reshape_80_cast, y = reduce_mean_60_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> square_20_cast = square(x = sub_40_cast);
            tensor<int32, [3]> reduce_mean_62_axes_0 = const()[name = tensor<string, []>("reduce_mean_62_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_62_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_62_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_62_cast = reduce_mean(axes = reduce_mean_62_axes_0, keep_dims = reduce_mean_62_keep_dims_0, x = square_20_cast);
            tensor<fp16, []> add_40_y_0_to_fp16 = const()[name = tensor<string, []>("add_40_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_40_cast = add(x = reduce_mean_62_cast, y = add_40_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_20_cast = sqrt(x = add_40_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> real_div_20_cast = real_div(x = sub_40_cast, y = sqrt_20_cast);
            tensor<int32, [4]> reshape_81_shape_0 = const()[name = tensor<string, []>("reshape_81_shape_0"), val = tensor<int32, [4]>([2, 1280, 8, 8])];
            tensor<fp16, [2, 1280, 8, 8]> reshape_81_cast = reshape(shape = reshape_81_shape_0, x = real_div_20_cast);
            tensor<fp16, [1280]> add_41_mean_0_to_fp16 = const()[name = tensor<string, []>("add_41_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(445738816)))];
            tensor<fp16, [1280]> add_41_variance_0_to_fp16 = const()[name = tensor<string, []>("add_41_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(445741440)))];
            tensor<fp16, [1280]> add_41_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_41_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(445744064)))];
            tensor<fp16, [1280]> add_41_beta_0_to_fp16 = const()[name = tensor<string, []>("add_41_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(445746688)))];
            tensor<fp16, []> add_41_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_41_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 8, 8]> add_41_cast = batch_norm(beta = add_41_beta_0_to_fp16, epsilon = add_41_epsilon_0_to_fp16, gamma = add_41_gamma_0_to_fp16, mean = add_41_mean_0_to_fp16, variance = add_41_variance_0_to_fp16, x = reshape_81_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_189_cast = silu(x = add_41_cast);
            tensor<int32, [2]> var_4309 = const()[name = tensor<string, []>("op_4309"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4311 = const()[name = tensor<string, []>("op_4311"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_113_pad_type_0 = const()[name = tensor<string, []>("hidden_states_113_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_113_pad_0 = const()[name = tensor<string, []>("hidden_states_113_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> down_blocks_3_resnets_1_conv1_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_3_resnets_1_conv1_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(445749312)))];
            tensor<fp16, [1280]> down_blocks_3_resnets_1_conv1_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_3_resnets_1_conv1_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(475240576)))];
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_113_cast = conv(bias = down_blocks_3_resnets_1_conv1_bias_to_fp16, dilations = var_4311, groups = var_4256, pad = hidden_states_113_pad_0, pad_type = hidden_states_113_pad_type_0, strides = var_4309, weight = down_blocks_3_resnets_1_conv1_weight_to_fp16, x = input_189_cast);
            tensor<int32, [2]> var_4317 = const()[name = tensor<string, []>("op_4317"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4319 = const()[name = tensor<string, []>("op_4319"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_15_pad_type_0 = const()[name = tensor<string, []>("temb_15_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_15_pad_0 = const()[name = tensor<string, []>("temb_15_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_3_resnets_1_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_3_resnets_1_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(475243200)))];
            tensor<fp16, [1280]> down_blocks_3_resnets_1_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_3_resnets_1_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(478520064)))];
            tensor<fp16, [2, 1280, 1, 1]> temb_15_cast = conv(bias = down_blocks_3_resnets_1_time_emb_proj_bias_to_fp16, dilations = var_4319, groups = var_4256, pad = temb_15_pad_0, pad_type = temb_15_pad_type_0, strides = var_4317, weight = down_blocks_3_resnets_1_time_emb_proj_weight_to_fp16, x = input_15_cast_1);
            tensor<fp16, [2, 1280, 8, 8]> input_193_cast = add(x = hidden_states_113_cast, y = temb_15_cast);
            tensor<int32, [5]> reshape_84_shape_0 = const()[name = tensor<string, []>("reshape_84_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 8, 8])];
            tensor<fp16, [2, 32, 40, 8, 8]> reshape_84_cast = reshape(shape = reshape_84_shape_0, x = input_193_cast);
            tensor<int32, [3]> reduce_mean_63_axes_0 = const()[name = tensor<string, []>("reduce_mean_63_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_63_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_63_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_63_cast = reduce_mean(axes = reduce_mean_63_axes_0, keep_dims = reduce_mean_63_keep_dims_0, x = reshape_84_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> sub_42_cast = sub(x = reshape_84_cast, y = reduce_mean_63_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> square_21_cast = square(x = sub_42_cast);
            tensor<int32, [3]> reduce_mean_65_axes_0 = const()[name = tensor<string, []>("reduce_mean_65_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_65_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_65_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_65_cast = reduce_mean(axes = reduce_mean_65_axes_0, keep_dims = reduce_mean_65_keep_dims_0, x = square_21_cast);
            tensor<fp16, []> add_42_y_0_to_fp16 = const()[name = tensor<string, []>("add_42_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_42_cast = add(x = reduce_mean_65_cast, y = add_42_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_21_cast = sqrt(x = add_42_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> real_div_21_cast = real_div(x = sub_42_cast, y = sqrt_21_cast);
            tensor<int32, [4]> reshape_85_shape_0 = const()[name = tensor<string, []>("reshape_85_shape_0"), val = tensor<int32, [4]>([2, 1280, 8, 8])];
            tensor<fp16, [2, 1280, 8, 8]> reshape_85_cast = reshape(shape = reshape_85_shape_0, x = real_div_21_cast);
            tensor<fp16, [1280]> add_43_mean_0_to_fp16 = const()[name = tensor<string, []>("add_43_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(478522688)))];
            tensor<fp16, [1280]> add_43_variance_0_to_fp16 = const()[name = tensor<string, []>("add_43_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(478525312)))];
            tensor<fp16, [1280]> add_43_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_43_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(478527936)))];
            tensor<fp16, [1280]> add_43_beta_0_to_fp16 = const()[name = tensor<string, []>("add_43_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(478530560)))];
            tensor<fp16, []> add_43_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_43_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 8, 8]> add_43_cast = batch_norm(beta = add_43_beta_0_to_fp16, epsilon = add_43_epsilon_0_to_fp16, gamma = add_43_gamma_0_to_fp16, mean = add_43_mean_0_to_fp16, variance = add_43_variance_0_to_fp16, x = reshape_85_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_197_cast = silu(x = add_43_cast);
            tensor<int32, [2]> var_4329 = const()[name = tensor<string, []>("op_4329"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4331 = const()[name = tensor<string, []>("op_4331"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_115_pad_type_0 = const()[name = tensor<string, []>("hidden_states_115_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_115_pad_0 = const()[name = tensor<string, []>("hidden_states_115_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> down_blocks_3_resnets_1_conv2_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_3_resnets_1_conv2_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(478533184)))];
            tensor<fp16, [1280]> down_blocks_3_resnets_1_conv2_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_3_resnets_1_conv2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(508024448)))];
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_115_cast = conv(bias = down_blocks_3_resnets_1_conv2_bias_to_fp16, dilations = var_4331, groups = var_4256, pad = hidden_states_115_pad_0, pad_type = hidden_states_115_pad_type_0, strides = var_4329, weight = down_blocks_3_resnets_1_conv2_weight_to_fp16, x = input_197_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_199_cast = add(x = input_185_cast, y = hidden_states_115_cast);
            tensor<bool, []> var_4366 = const()[name = tensor<string, []>("op_4366"), val = tensor<bool, []>(true)];
            tensor<int32, []> var_4371 = const()[name = tensor<string, []>("op_4371"), val = tensor<int32, []>(1)];
            tensor<int32, [5]> reshape_88_shape_0 = const()[name = tensor<string, []>("reshape_88_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 8, 8])];
            tensor<fp16, [2, 32, 40, 8, 8]> reshape_88_cast = reshape(shape = reshape_88_shape_0, x = input_199_cast);
            tensor<int32, [3]> reduce_mean_66_axes_0 = const()[name = tensor<string, []>("reduce_mean_66_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_66_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_66_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_66_cast = reduce_mean(axes = reduce_mean_66_axes_0, keep_dims = reduce_mean_66_keep_dims_0, x = reshape_88_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> sub_44_cast = sub(x = reshape_88_cast, y = reduce_mean_66_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> square_22_cast = square(x = sub_44_cast);
            tensor<int32, [3]> reduce_mean_68_axes_0 = const()[name = tensor<string, []>("reduce_mean_68_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_68_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_68_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_68_cast = reduce_mean(axes = reduce_mean_68_axes_0, keep_dims = reduce_mean_68_keep_dims_0, x = square_22_cast);
            tensor<fp16, []> add_44_y_0_to_fp16 = const()[name = tensor<string, []>("add_44_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_44_cast = add(x = reduce_mean_68_cast, y = add_44_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_22_cast = sqrt(x = add_44_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> real_div_22_cast = real_div(x = sub_44_cast, y = sqrt_22_cast);
            tensor<int32, [4]> reshape_89_shape_0 = const()[name = tensor<string, []>("reshape_89_shape_0"), val = tensor<int32, [4]>([2, 1280, 8, 8])];
            tensor<fp16, [2, 1280, 8, 8]> reshape_89_cast = reshape(shape = reshape_89_shape_0, x = real_div_22_cast);
            tensor<fp16, [1280]> add_45_mean_0_to_fp16 = const()[name = tensor<string, []>("add_45_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(508027072)))];
            tensor<fp16, [1280]> add_45_variance_0_to_fp16 = const()[name = tensor<string, []>("add_45_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(508029696)))];
            tensor<fp16, [1280]> add_45_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_45_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(508032320)))];
            tensor<fp16, [1280]> add_45_beta_0_to_fp16 = const()[name = tensor<string, []>("add_45_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(508034944)))];
            tensor<fp16, []> add_45_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_45_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 8, 8]> add_45_cast = batch_norm(beta = add_45_beta_0_to_fp16, epsilon = add_45_epsilon_0_to_fp16, gamma = add_45_gamma_0_to_fp16, mean = add_45_mean_0_to_fp16, variance = add_45_variance_0_to_fp16, x = reshape_89_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_203_cast = silu(x = add_45_cast);
            tensor<int32, [2]> var_4389 = const()[name = tensor<string, []>("op_4389"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4391 = const()[name = tensor<string, []>("op_4391"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_117_pad_type_0 = const()[name = tensor<string, []>("hidden_states_117_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_117_pad_0 = const()[name = tensor<string, []>("hidden_states_117_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> mid_block_resnets_0_conv1_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_resnets_0_conv1_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(508037568)))];
            tensor<fp16, [1280]> mid_block_resnets_0_conv1_bias_to_fp16 = const()[name = tensor<string, []>("mid_block_resnets_0_conv1_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(537528832)))];
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_117_cast = conv(bias = mid_block_resnets_0_conv1_bias_to_fp16, dilations = var_4391, groups = var_4371, pad = hidden_states_117_pad_0, pad_type = hidden_states_117_pad_type_0, strides = var_4389, weight = mid_block_resnets_0_conv1_weight_to_fp16, x = input_203_cast);
            tensor<int32, [2]> var_4397 = const()[name = tensor<string, []>("op_4397"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4399 = const()[name = tensor<string, []>("op_4399"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_17_pad_type_0 = const()[name = tensor<string, []>("temb_17_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_17_pad_0 = const()[name = tensor<string, []>("temb_17_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> mid_block_resnets_0_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_resnets_0_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(537531456)))];
            tensor<fp16, [1280]> mid_block_resnets_0_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("mid_block_resnets_0_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(540808320)))];
            tensor<fp16, [2, 1280, 1, 1]> temb_17_cast = conv(bias = mid_block_resnets_0_time_emb_proj_bias_to_fp16, dilations = var_4399, groups = var_4371, pad = temb_17_pad_0, pad_type = temb_17_pad_type_0, strides = var_4397, weight = mid_block_resnets_0_time_emb_proj_weight_to_fp16, x = input_15_cast_1);
            tensor<fp16, [2, 1280, 8, 8]> input_207_cast = add(x = hidden_states_117_cast, y = temb_17_cast);
            tensor<int32, [5]> reshape_92_shape_0 = const()[name = tensor<string, []>("reshape_92_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 8, 8])];
            tensor<fp16, [2, 32, 40, 8, 8]> reshape_92_cast = reshape(shape = reshape_92_shape_0, x = input_207_cast);
            tensor<int32, [3]> reduce_mean_69_axes_0 = const()[name = tensor<string, []>("reduce_mean_69_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_69_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_69_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_69_cast = reduce_mean(axes = reduce_mean_69_axes_0, keep_dims = reduce_mean_69_keep_dims_0, x = reshape_92_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> sub_46_cast = sub(x = reshape_92_cast, y = reduce_mean_69_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> square_23_cast = square(x = sub_46_cast);
            tensor<int32, [3]> reduce_mean_71_axes_0 = const()[name = tensor<string, []>("reduce_mean_71_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_71_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_71_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_71_cast = reduce_mean(axes = reduce_mean_71_axes_0, keep_dims = reduce_mean_71_keep_dims_0, x = square_23_cast);
            tensor<fp16, []> add_46_y_0_to_fp16 = const()[name = tensor<string, []>("add_46_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_46_cast = add(x = reduce_mean_71_cast, y = add_46_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_23_cast = sqrt(x = add_46_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> real_div_23_cast = real_div(x = sub_46_cast, y = sqrt_23_cast);
            tensor<int32, [4]> reshape_93_shape_0 = const()[name = tensor<string, []>("reshape_93_shape_0"), val = tensor<int32, [4]>([2, 1280, 8, 8])];
            tensor<fp16, [2, 1280, 8, 8]> reshape_93_cast = reshape(shape = reshape_93_shape_0, x = real_div_23_cast);
            tensor<fp16, [1280]> add_47_mean_0_to_fp16 = const()[name = tensor<string, []>("add_47_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(540810944)))];
            tensor<fp16, [1280]> add_47_variance_0_to_fp16 = const()[name = tensor<string, []>("add_47_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(540813568)))];
            tensor<fp16, [1280]> add_47_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_47_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(540816192)))];
            tensor<fp16, [1280]> add_47_beta_0_to_fp16 = const()[name = tensor<string, []>("add_47_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(540818816)))];
            tensor<fp16, []> add_47_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_47_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 8, 8]> add_47_cast = batch_norm(beta = add_47_beta_0_to_fp16, epsilon = add_47_epsilon_0_to_fp16, gamma = add_47_gamma_0_to_fp16, mean = add_47_mean_0_to_fp16, variance = add_47_variance_0_to_fp16, x = reshape_93_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_211_cast = silu(x = add_47_cast);
            tensor<int32, [2]> var_4409 = const()[name = tensor<string, []>("op_4409"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4411 = const()[name = tensor<string, []>("op_4411"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_119_pad_type_0 = const()[name = tensor<string, []>("hidden_states_119_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_119_pad_0 = const()[name = tensor<string, []>("hidden_states_119_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> mid_block_resnets_0_conv2_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_resnets_0_conv2_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(540821440)))];
            tensor<fp16, [1280]> mid_block_resnets_0_conv2_bias_to_fp16 = const()[name = tensor<string, []>("mid_block_resnets_0_conv2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(570312704)))];
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_119_cast = conv(bias = mid_block_resnets_0_conv2_bias_to_fp16, dilations = var_4411, groups = var_4371, pad = hidden_states_119_pad_0, pad_type = hidden_states_119_pad_type_0, strides = var_4409, weight = mid_block_resnets_0_conv2_weight_to_fp16, x = input_211_cast);
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_121_cast = add(x = input_199_cast, y = hidden_states_119_cast);
            tensor<int32, [5]> reshape_96_shape_0 = const()[name = tensor<string, []>("reshape_96_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 8, 8])];
            tensor<fp16, [2, 32, 40, 8, 8]> reshape_96_cast = reshape(shape = reshape_96_shape_0, x = hidden_states_121_cast);
            tensor<int32, [3]> reduce_mean_72_axes_0 = const()[name = tensor<string, []>("reduce_mean_72_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_72_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_72_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_72_cast = reduce_mean(axes = reduce_mean_72_axes_0, keep_dims = reduce_mean_72_keep_dims_0, x = reshape_96_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> sub_48_cast = sub(x = reshape_96_cast, y = reduce_mean_72_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> square_24_cast = square(x = sub_48_cast);
            tensor<int32, [3]> reduce_mean_74_axes_0 = const()[name = tensor<string, []>("reduce_mean_74_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_74_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_74_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_74_cast = reduce_mean(axes = reduce_mean_74_axes_0, keep_dims = reduce_mean_74_keep_dims_0, x = square_24_cast);
            tensor<fp16, []> add_48_y_0_to_fp16 = const()[name = tensor<string, []>("add_48_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_48_cast = add(x = reduce_mean_74_cast, y = add_48_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_24_cast = sqrt(x = add_48_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> real_div_24_cast = real_div(x = sub_48_cast, y = sqrt_24_cast);
            tensor<int32, [4]> reshape_97_shape_0 = const()[name = tensor<string, []>("reshape_97_shape_0"), val = tensor<int32, [4]>([2, 1280, 8, 8])];
            tensor<fp16, [2, 1280, 8, 8]> reshape_97_cast = reshape(shape = reshape_97_shape_0, x = real_div_24_cast);
            tensor<fp16, [1280]> add_49_mean_0_to_fp16 = const()[name = tensor<string, []>("add_49_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(570315328)))];
            tensor<fp16, [1280]> add_49_variance_0_to_fp16 = const()[name = tensor<string, []>("add_49_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(570317952)))];
            tensor<fp16, [1280]> add_49_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_49_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(570320576)))];
            tensor<fp16, [1280]> add_49_beta_0_to_fp16 = const()[name = tensor<string, []>("add_49_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(570323200)))];
            tensor<fp16, []> add_49_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_49_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 8, 8]> add_49_cast = batch_norm(beta = add_49_beta_0_to_fp16, epsilon = add_49_epsilon_0_to_fp16, gamma = add_49_gamma_0_to_fp16, mean = add_49_mean_0_to_fp16, variance = add_49_variance_0_to_fp16, x = reshape_97_cast);
            tensor<int32, [2]> var_4431 = const()[name = tensor<string, []>("op_4431"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4433 = const()[name = tensor<string, []>("op_4433"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_123_pad_type_0 = const()[name = tensor<string, []>("hidden_states_123_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_123_pad_0 = const()[name = tensor<string, []>("hidden_states_123_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> mid_block_attentions_0_proj_in_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_proj_in_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(570325824)))];
            tensor<fp16, [1280]> mid_block_attentions_0_proj_in_bias_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_proj_in_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(573602688)))];
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_123_cast = conv(bias = mid_block_attentions_0_proj_in_bias_to_fp16, dilations = var_4433, groups = var_4371, pad = hidden_states_123_pad_0, pad_type = hidden_states_123_pad_type_0, strides = var_4431, weight = mid_block_attentions_0_proj_in_weight_to_fp16, x = add_49_cast);
            tensor<int32, [4]> var_4438 = const()[name = tensor<string, []>("op_4438"), val = tensor<int32, [4]>([2, 1280, 1, 64])];
            tensor<fp16, [2, 1280, 1, 64]> inputs_37_cast = reshape(shape = var_4438, x = hidden_states_123_cast);
            tensor<int32, [1]> var_4448 = const()[name = tensor<string, []>("op_4448"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 64]> channels_mean_37_cast = reduce_mean(axes = var_4448, keep_dims = var_4366, x = inputs_37_cast);
            tensor<fp16, [2, 1280, 1, 64]> zero_mean_37_cast = sub(x = inputs_37_cast, y = channels_mean_37_cast);
            tensor<fp16, [2, 1280, 1, 64]> zero_mean_sq_37_cast = mul(x = zero_mean_37_cast, y = zero_mean_37_cast);
            tensor<int32, [1]> var_4452 = const()[name = tensor<string, []>("op_4452"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 64]> var_4453_cast = reduce_mean(axes = var_4452, keep_dims = var_4366, x = zero_mean_sq_37_cast);
            tensor<fp16, []> var_4454_to_fp16 = const()[name = tensor<string, []>("op_4454_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 64]> var_4455_cast = add(x = var_4453_cast, y = var_4454_to_fp16);
            tensor<fp16, []> denom_37_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_37_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 64]> denom_37_cast = rsqrt(epsilon = denom_37_epsilon_0_to_fp16, x = var_4455_cast);
            tensor<fp16, [2, 1280, 1, 64]> out_37_cast = mul(x = zero_mean_37_cast, y = denom_37_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_4459_to_fp16 = const()[name = tensor<string, []>("op_4459_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(573605312)))];
            tensor<fp16, [2, 1280, 1, 64]> var_4460_cast = add(x = out_37_cast, y = var_4459_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_4462_to_fp16 = const()[name = tensor<string, []>("op_4462_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(573607936)))];
            tensor<fp16, [2, 1280, 1, 64]> hidden_states_125_cast = mul(x = var_4460_cast, y = var_4462_to_fp16);
            tensor<int32, [2]> var_4469 = const()[name = tensor<string, []>("op_4469"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4471 = const()[name = tensor<string, []>("op_4471"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_25_pad_type_0 = const()[name = tensor<string, []>("q_25_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_25_pad_0 = const()[name = tensor<string, []>("q_25_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> mid_block_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(573610560)))];
            tensor<fp16, [2, 1280, 1, 64]> q_25_cast = conv(dilations = var_4471, groups = var_4371, pad = q_25_pad_0, pad_type = q_25_pad_type_0, strides = var_4469, weight = mid_block_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16, x = hidden_states_125_cast);
            tensor<int32, [2]> var_4475 = const()[name = tensor<string, []>("op_4475"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4477 = const()[name = tensor<string, []>("op_4477"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_49_pad_type_0 = const()[name = tensor<string, []>("k_49_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_49_pad_0 = const()[name = tensor<string, []>("k_49_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> mid_block_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(576887424)))];
            tensor<fp16, [2, 1280, 1, 64]> k_49_cast = conv(dilations = var_4477, groups = var_4371, pad = k_49_pad_0, pad_type = k_49_pad_type_0, strides = var_4475, weight = mid_block_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16, x = hidden_states_125_cast);
            tensor<int32, [2]> var_4481 = const()[name = tensor<string, []>("op_4481"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4483 = const()[name = tensor<string, []>("op_4483"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_25_pad_type_0 = const()[name = tensor<string, []>("v_25_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_25_pad_0 = const()[name = tensor<string, []>("v_25_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> mid_block_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(580164288)))];
            tensor<fp16, [2, 1280, 1, 64]> v_25_cast = conv(dilations = var_4483, groups = var_4371, pad = v_25_pad_0, pad_type = v_25_pad_type_0, strides = var_4481, weight = mid_block_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16, x = hidden_states_125_cast);
            tensor<int32, [4]> var_4487_begin_0 = const()[name = tensor<string, []>("op_4487_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_4487_end_0 = const()[name = tensor<string, []>("op_4487_end_0"), val = tensor<int32, [4]>([2, 64, 1, 64])];
            tensor<bool, [4]> var_4487_end_mask_0 = const()[name = tensor<string, []>("op_4487_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4487_cast = slice_by_index(begin = var_4487_begin_0, end = var_4487_end_0, end_mask = var_4487_end_mask_0, x = q_25_cast);
            tensor<int32, [4]> var_4491_begin_0 = const()[name = tensor<string, []>("op_4491_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_4491_end_0 = const()[name = tensor<string, []>("op_4491_end_0"), val = tensor<int32, [4]>([2, 128, 1, 64])];
            tensor<bool, [4]> var_4491_end_mask_0 = const()[name = tensor<string, []>("op_4491_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4491_cast = slice_by_index(begin = var_4491_begin_0, end = var_4491_end_0, end_mask = var_4491_end_mask_0, x = q_25_cast);
            tensor<int32, [4]> var_4495_begin_0 = const()[name = tensor<string, []>("op_4495_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_4495_end_0 = const()[name = tensor<string, []>("op_4495_end_0"), val = tensor<int32, [4]>([2, 192, 1, 64])];
            tensor<bool, [4]> var_4495_end_mask_0 = const()[name = tensor<string, []>("op_4495_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4495_cast = slice_by_index(begin = var_4495_begin_0, end = var_4495_end_0, end_mask = var_4495_end_mask_0, x = q_25_cast);
            tensor<int32, [4]> var_4499_begin_0 = const()[name = tensor<string, []>("op_4499_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_4499_end_0 = const()[name = tensor<string, []>("op_4499_end_0"), val = tensor<int32, [4]>([2, 256, 1, 64])];
            tensor<bool, [4]> var_4499_end_mask_0 = const()[name = tensor<string, []>("op_4499_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4499_cast = slice_by_index(begin = var_4499_begin_0, end = var_4499_end_0, end_mask = var_4499_end_mask_0, x = q_25_cast);
            tensor<int32, [4]> var_4503_begin_0 = const()[name = tensor<string, []>("op_4503_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_4503_end_0 = const()[name = tensor<string, []>("op_4503_end_0"), val = tensor<int32, [4]>([2, 320, 1, 64])];
            tensor<bool, [4]> var_4503_end_mask_0 = const()[name = tensor<string, []>("op_4503_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4503_cast = slice_by_index(begin = var_4503_begin_0, end = var_4503_end_0, end_mask = var_4503_end_mask_0, x = q_25_cast);
            tensor<int32, [4]> var_4507_begin_0 = const()[name = tensor<string, []>("op_4507_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_4507_end_0 = const()[name = tensor<string, []>("op_4507_end_0"), val = tensor<int32, [4]>([2, 384, 1, 64])];
            tensor<bool, [4]> var_4507_end_mask_0 = const()[name = tensor<string, []>("op_4507_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4507_cast = slice_by_index(begin = var_4507_begin_0, end = var_4507_end_0, end_mask = var_4507_end_mask_0, x = q_25_cast);
            tensor<int32, [4]> var_4511_begin_0 = const()[name = tensor<string, []>("op_4511_begin_0"), val = tensor<int32, [4]>([0, 384, 0, 0])];
            tensor<int32, [4]> var_4511_end_0 = const()[name = tensor<string, []>("op_4511_end_0"), val = tensor<int32, [4]>([2, 448, 1, 64])];
            tensor<bool, [4]> var_4511_end_mask_0 = const()[name = tensor<string, []>("op_4511_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4511_cast = slice_by_index(begin = var_4511_begin_0, end = var_4511_end_0, end_mask = var_4511_end_mask_0, x = q_25_cast);
            tensor<int32, [4]> var_4515_begin_0 = const()[name = tensor<string, []>("op_4515_begin_0"), val = tensor<int32, [4]>([0, 448, 0, 0])];
            tensor<int32, [4]> var_4515_end_0 = const()[name = tensor<string, []>("op_4515_end_0"), val = tensor<int32, [4]>([2, 512, 1, 64])];
            tensor<bool, [4]> var_4515_end_mask_0 = const()[name = tensor<string, []>("op_4515_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4515_cast = slice_by_index(begin = var_4515_begin_0, end = var_4515_end_0, end_mask = var_4515_end_mask_0, x = q_25_cast);
            tensor<int32, [4]> var_4519_begin_0 = const()[name = tensor<string, []>("op_4519_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_4519_end_0 = const()[name = tensor<string, []>("op_4519_end_0"), val = tensor<int32, [4]>([2, 576, 1, 64])];
            tensor<bool, [4]> var_4519_end_mask_0 = const()[name = tensor<string, []>("op_4519_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4519_cast = slice_by_index(begin = var_4519_begin_0, end = var_4519_end_0, end_mask = var_4519_end_mask_0, x = q_25_cast);
            tensor<int32, [4]> var_4523_begin_0 = const()[name = tensor<string, []>("op_4523_begin_0"), val = tensor<int32, [4]>([0, 576, 0, 0])];
            tensor<int32, [4]> var_4523_end_0 = const()[name = tensor<string, []>("op_4523_end_0"), val = tensor<int32, [4]>([2, 640, 1, 64])];
            tensor<bool, [4]> var_4523_end_mask_0 = const()[name = tensor<string, []>("op_4523_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4523_cast = slice_by_index(begin = var_4523_begin_0, end = var_4523_end_0, end_mask = var_4523_end_mask_0, x = q_25_cast);
            tensor<int32, [4]> var_4527_begin_0 = const()[name = tensor<string, []>("op_4527_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_4527_end_0 = const()[name = tensor<string, []>("op_4527_end_0"), val = tensor<int32, [4]>([2, 704, 1, 64])];
            tensor<bool, [4]> var_4527_end_mask_0 = const()[name = tensor<string, []>("op_4527_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4527_cast = slice_by_index(begin = var_4527_begin_0, end = var_4527_end_0, end_mask = var_4527_end_mask_0, x = q_25_cast);
            tensor<int32, [4]> var_4531_begin_0 = const()[name = tensor<string, []>("op_4531_begin_0"), val = tensor<int32, [4]>([0, 704, 0, 0])];
            tensor<int32, [4]> var_4531_end_0 = const()[name = tensor<string, []>("op_4531_end_0"), val = tensor<int32, [4]>([2, 768, 1, 64])];
            tensor<bool, [4]> var_4531_end_mask_0 = const()[name = tensor<string, []>("op_4531_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4531_cast = slice_by_index(begin = var_4531_begin_0, end = var_4531_end_0, end_mask = var_4531_end_mask_0, x = q_25_cast);
            tensor<int32, [4]> var_4535_begin_0 = const()[name = tensor<string, []>("op_4535_begin_0"), val = tensor<int32, [4]>([0, 768, 0, 0])];
            tensor<int32, [4]> var_4535_end_0 = const()[name = tensor<string, []>("op_4535_end_0"), val = tensor<int32, [4]>([2, 832, 1, 64])];
            tensor<bool, [4]> var_4535_end_mask_0 = const()[name = tensor<string, []>("op_4535_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4535_cast = slice_by_index(begin = var_4535_begin_0, end = var_4535_end_0, end_mask = var_4535_end_mask_0, x = q_25_cast);
            tensor<int32, [4]> var_4539_begin_0 = const()[name = tensor<string, []>("op_4539_begin_0"), val = tensor<int32, [4]>([0, 832, 0, 0])];
            tensor<int32, [4]> var_4539_end_0 = const()[name = tensor<string, []>("op_4539_end_0"), val = tensor<int32, [4]>([2, 896, 1, 64])];
            tensor<bool, [4]> var_4539_end_mask_0 = const()[name = tensor<string, []>("op_4539_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4539_cast = slice_by_index(begin = var_4539_begin_0, end = var_4539_end_0, end_mask = var_4539_end_mask_0, x = q_25_cast);
            tensor<int32, [4]> var_4543_begin_0 = const()[name = tensor<string, []>("op_4543_begin_0"), val = tensor<int32, [4]>([0, 896, 0, 0])];
            tensor<int32, [4]> var_4543_end_0 = const()[name = tensor<string, []>("op_4543_end_0"), val = tensor<int32, [4]>([2, 960, 1, 64])];
            tensor<bool, [4]> var_4543_end_mask_0 = const()[name = tensor<string, []>("op_4543_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4543_cast = slice_by_index(begin = var_4543_begin_0, end = var_4543_end_0, end_mask = var_4543_end_mask_0, x = q_25_cast);
            tensor<int32, [4]> var_4547_begin_0 = const()[name = tensor<string, []>("op_4547_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_4547_end_0 = const()[name = tensor<string, []>("op_4547_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 64])];
            tensor<bool, [4]> var_4547_end_mask_0 = const()[name = tensor<string, []>("op_4547_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4547_cast = slice_by_index(begin = var_4547_begin_0, end = var_4547_end_0, end_mask = var_4547_end_mask_0, x = q_25_cast);
            tensor<int32, [4]> var_4551_begin_0 = const()[name = tensor<string, []>("op_4551_begin_0"), val = tensor<int32, [4]>([0, 1024, 0, 0])];
            tensor<int32, [4]> var_4551_end_0 = const()[name = tensor<string, []>("op_4551_end_0"), val = tensor<int32, [4]>([2, 1088, 1, 64])];
            tensor<bool, [4]> var_4551_end_mask_0 = const()[name = tensor<string, []>("op_4551_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4551_cast = slice_by_index(begin = var_4551_begin_0, end = var_4551_end_0, end_mask = var_4551_end_mask_0, x = q_25_cast);
            tensor<int32, [4]> var_4555_begin_0 = const()[name = tensor<string, []>("op_4555_begin_0"), val = tensor<int32, [4]>([0, 1088, 0, 0])];
            tensor<int32, [4]> var_4555_end_0 = const()[name = tensor<string, []>("op_4555_end_0"), val = tensor<int32, [4]>([2, 1152, 1, 64])];
            tensor<bool, [4]> var_4555_end_mask_0 = const()[name = tensor<string, []>("op_4555_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4555_cast = slice_by_index(begin = var_4555_begin_0, end = var_4555_end_0, end_mask = var_4555_end_mask_0, x = q_25_cast);
            tensor<int32, [4]> var_4559_begin_0 = const()[name = tensor<string, []>("op_4559_begin_0"), val = tensor<int32, [4]>([0, 1152, 0, 0])];
            tensor<int32, [4]> var_4559_end_0 = const()[name = tensor<string, []>("op_4559_end_0"), val = tensor<int32, [4]>([2, 1216, 1, 64])];
            tensor<bool, [4]> var_4559_end_mask_0 = const()[name = tensor<string, []>("op_4559_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4559_cast = slice_by_index(begin = var_4559_begin_0, end = var_4559_end_0, end_mask = var_4559_end_mask_0, x = q_25_cast);
            tensor<int32, [4]> var_4563_begin_0 = const()[name = tensor<string, []>("op_4563_begin_0"), val = tensor<int32, [4]>([0, 1216, 0, 0])];
            tensor<int32, [4]> var_4563_end_0 = const()[name = tensor<string, []>("op_4563_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 64])];
            tensor<bool, [4]> var_4563_end_mask_0 = const()[name = tensor<string, []>("op_4563_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4563_cast = slice_by_index(begin = var_4563_begin_0, end = var_4563_end_0, end_mask = var_4563_end_mask_0, x = q_25_cast);
            tensor<int32, [4]> k_51_perm_0 = const()[name = tensor<string, []>("k_51_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_4570_begin_0 = const()[name = tensor<string, []>("op_4570_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_4570_end_0 = const()[name = tensor<string, []>("op_4570_end_0"), val = tensor<int32, [4]>([2, 64, 1, 64])];
            tensor<bool, [4]> var_4570_end_mask_0 = const()[name = tensor<string, []>("op_4570_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 64, 1, 1280]> transpose_65 = transpose(perm = k_51_perm_0, x = k_49_cast);
            tensor<fp16, [2, 64, 1, 64]> var_4570_cast = slice_by_index(begin = var_4570_begin_0, end = var_4570_end_0, end_mask = var_4570_end_mask_0, x = transpose_65);
            tensor<int32, [4]> var_4574_begin_0 = const()[name = tensor<string, []>("op_4574_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 64])];
            tensor<int32, [4]> var_4574_end_0 = const()[name = tensor<string, []>("op_4574_end_0"), val = tensor<int32, [4]>([2, 64, 1, 128])];
            tensor<bool, [4]> var_4574_end_mask_0 = const()[name = tensor<string, []>("op_4574_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 64, 1, 64]> var_4574_cast = slice_by_index(begin = var_4574_begin_0, end = var_4574_end_0, end_mask = var_4574_end_mask_0, x = transpose_65);
            tensor<int32, [4]> var_4578_begin_0 = const()[name = tensor<string, []>("op_4578_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 128])];
            tensor<int32, [4]> var_4578_end_0 = const()[name = tensor<string, []>("op_4578_end_0"), val = tensor<int32, [4]>([2, 64, 1, 192])];
            tensor<bool, [4]> var_4578_end_mask_0 = const()[name = tensor<string, []>("op_4578_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 64, 1, 64]> var_4578_cast = slice_by_index(begin = var_4578_begin_0, end = var_4578_end_0, end_mask = var_4578_end_mask_0, x = transpose_65);
            tensor<int32, [4]> var_4582_begin_0 = const()[name = tensor<string, []>("op_4582_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 192])];
            tensor<int32, [4]> var_4582_end_0 = const()[name = tensor<string, []>("op_4582_end_0"), val = tensor<int32, [4]>([2, 64, 1, 256])];
            tensor<bool, [4]> var_4582_end_mask_0 = const()[name = tensor<string, []>("op_4582_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 64, 1, 64]> var_4582_cast = slice_by_index(begin = var_4582_begin_0, end = var_4582_end_0, end_mask = var_4582_end_mask_0, x = transpose_65);
            tensor<int32, [4]> var_4586_begin_0 = const()[name = tensor<string, []>("op_4586_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 256])];
            tensor<int32, [4]> var_4586_end_0 = const()[name = tensor<string, []>("op_4586_end_0"), val = tensor<int32, [4]>([2, 64, 1, 320])];
            tensor<bool, [4]> var_4586_end_mask_0 = const()[name = tensor<string, []>("op_4586_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 64, 1, 64]> var_4586_cast = slice_by_index(begin = var_4586_begin_0, end = var_4586_end_0, end_mask = var_4586_end_mask_0, x = transpose_65);
            tensor<int32, [4]> var_4590_begin_0 = const()[name = tensor<string, []>("op_4590_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_4590_end_0 = const()[name = tensor<string, []>("op_4590_end_0"), val = tensor<int32, [4]>([2, 64, 1, 384])];
            tensor<bool, [4]> var_4590_end_mask_0 = const()[name = tensor<string, []>("op_4590_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 64, 1, 64]> var_4590_cast = slice_by_index(begin = var_4590_begin_0, end = var_4590_end_0, end_mask = var_4590_end_mask_0, x = transpose_65);
            tensor<int32, [4]> var_4594_begin_0 = const()[name = tensor<string, []>("op_4594_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 384])];
            tensor<int32, [4]> var_4594_end_0 = const()[name = tensor<string, []>("op_4594_end_0"), val = tensor<int32, [4]>([2, 64, 1, 448])];
            tensor<bool, [4]> var_4594_end_mask_0 = const()[name = tensor<string, []>("op_4594_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 64, 1, 64]> var_4594_cast = slice_by_index(begin = var_4594_begin_0, end = var_4594_end_0, end_mask = var_4594_end_mask_0, x = transpose_65);
            tensor<int32, [4]> var_4598_begin_0 = const()[name = tensor<string, []>("op_4598_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 448])];
            tensor<int32, [4]> var_4598_end_0 = const()[name = tensor<string, []>("op_4598_end_0"), val = tensor<int32, [4]>([2, 64, 1, 512])];
            tensor<bool, [4]> var_4598_end_mask_0 = const()[name = tensor<string, []>("op_4598_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 64, 1, 64]> var_4598_cast = slice_by_index(begin = var_4598_begin_0, end = var_4598_end_0, end_mask = var_4598_end_mask_0, x = transpose_65);
            tensor<int32, [4]> var_4602_begin_0 = const()[name = tensor<string, []>("op_4602_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 512])];
            tensor<int32, [4]> var_4602_end_0 = const()[name = tensor<string, []>("op_4602_end_0"), val = tensor<int32, [4]>([2, 64, 1, 576])];
            tensor<bool, [4]> var_4602_end_mask_0 = const()[name = tensor<string, []>("op_4602_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 64, 1, 64]> var_4602_cast = slice_by_index(begin = var_4602_begin_0, end = var_4602_end_0, end_mask = var_4602_end_mask_0, x = transpose_65);
            tensor<int32, [4]> var_4606_begin_0 = const()[name = tensor<string, []>("op_4606_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 576])];
            tensor<int32, [4]> var_4606_end_0 = const()[name = tensor<string, []>("op_4606_end_0"), val = tensor<int32, [4]>([2, 64, 1, 640])];
            tensor<bool, [4]> var_4606_end_mask_0 = const()[name = tensor<string, []>("op_4606_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 64, 1, 64]> var_4606_cast = slice_by_index(begin = var_4606_begin_0, end = var_4606_end_0, end_mask = var_4606_end_mask_0, x = transpose_65);
            tensor<int32, [4]> var_4610_begin_0 = const()[name = tensor<string, []>("op_4610_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 640])];
            tensor<int32, [4]> var_4610_end_0 = const()[name = tensor<string, []>("op_4610_end_0"), val = tensor<int32, [4]>([2, 64, 1, 704])];
            tensor<bool, [4]> var_4610_end_mask_0 = const()[name = tensor<string, []>("op_4610_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 64, 1, 64]> var_4610_cast = slice_by_index(begin = var_4610_begin_0, end = var_4610_end_0, end_mask = var_4610_end_mask_0, x = transpose_65);
            tensor<int32, [4]> var_4614_begin_0 = const()[name = tensor<string, []>("op_4614_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 704])];
            tensor<int32, [4]> var_4614_end_0 = const()[name = tensor<string, []>("op_4614_end_0"), val = tensor<int32, [4]>([2, 64, 1, 768])];
            tensor<bool, [4]> var_4614_end_mask_0 = const()[name = tensor<string, []>("op_4614_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 64, 1, 64]> var_4614_cast = slice_by_index(begin = var_4614_begin_0, end = var_4614_end_0, end_mask = var_4614_end_mask_0, x = transpose_65);
            tensor<int32, [4]> var_4618_begin_0 = const()[name = tensor<string, []>("op_4618_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 768])];
            tensor<int32, [4]> var_4618_end_0 = const()[name = tensor<string, []>("op_4618_end_0"), val = tensor<int32, [4]>([2, 64, 1, 832])];
            tensor<bool, [4]> var_4618_end_mask_0 = const()[name = tensor<string, []>("op_4618_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 64, 1, 64]> var_4618_cast = slice_by_index(begin = var_4618_begin_0, end = var_4618_end_0, end_mask = var_4618_end_mask_0, x = transpose_65);
            tensor<int32, [4]> var_4622_begin_0 = const()[name = tensor<string, []>("op_4622_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 832])];
            tensor<int32, [4]> var_4622_end_0 = const()[name = tensor<string, []>("op_4622_end_0"), val = tensor<int32, [4]>([2, 64, 1, 896])];
            tensor<bool, [4]> var_4622_end_mask_0 = const()[name = tensor<string, []>("op_4622_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 64, 1, 64]> var_4622_cast = slice_by_index(begin = var_4622_begin_0, end = var_4622_end_0, end_mask = var_4622_end_mask_0, x = transpose_65);
            tensor<int32, [4]> var_4626_begin_0 = const()[name = tensor<string, []>("op_4626_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 896])];
            tensor<int32, [4]> var_4626_end_0 = const()[name = tensor<string, []>("op_4626_end_0"), val = tensor<int32, [4]>([2, 64, 1, 960])];
            tensor<bool, [4]> var_4626_end_mask_0 = const()[name = tensor<string, []>("op_4626_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 64, 1, 64]> var_4626_cast = slice_by_index(begin = var_4626_begin_0, end = var_4626_end_0, end_mask = var_4626_end_mask_0, x = transpose_65);
            tensor<int32, [4]> var_4630_begin_0 = const()[name = tensor<string, []>("op_4630_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 960])];
            tensor<int32, [4]> var_4630_end_0 = const()[name = tensor<string, []>("op_4630_end_0"), val = tensor<int32, [4]>([2, 64, 1, 1024])];
            tensor<bool, [4]> var_4630_end_mask_0 = const()[name = tensor<string, []>("op_4630_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 64, 1, 64]> var_4630_cast = slice_by_index(begin = var_4630_begin_0, end = var_4630_end_0, end_mask = var_4630_end_mask_0, x = transpose_65);
            tensor<int32, [4]> var_4634_begin_0 = const()[name = tensor<string, []>("op_4634_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1024])];
            tensor<int32, [4]> var_4634_end_0 = const()[name = tensor<string, []>("op_4634_end_0"), val = tensor<int32, [4]>([2, 64, 1, 1088])];
            tensor<bool, [4]> var_4634_end_mask_0 = const()[name = tensor<string, []>("op_4634_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 64, 1, 64]> var_4634_cast = slice_by_index(begin = var_4634_begin_0, end = var_4634_end_0, end_mask = var_4634_end_mask_0, x = transpose_65);
            tensor<int32, [4]> var_4638_begin_0 = const()[name = tensor<string, []>("op_4638_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1088])];
            tensor<int32, [4]> var_4638_end_0 = const()[name = tensor<string, []>("op_4638_end_0"), val = tensor<int32, [4]>([2, 64, 1, 1152])];
            tensor<bool, [4]> var_4638_end_mask_0 = const()[name = tensor<string, []>("op_4638_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 64, 1, 64]> var_4638_cast = slice_by_index(begin = var_4638_begin_0, end = var_4638_end_0, end_mask = var_4638_end_mask_0, x = transpose_65);
            tensor<int32, [4]> var_4642_begin_0 = const()[name = tensor<string, []>("op_4642_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1152])];
            tensor<int32, [4]> var_4642_end_0 = const()[name = tensor<string, []>("op_4642_end_0"), val = tensor<int32, [4]>([2, 64, 1, 1216])];
            tensor<bool, [4]> var_4642_end_mask_0 = const()[name = tensor<string, []>("op_4642_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 64, 1, 64]> var_4642_cast = slice_by_index(begin = var_4642_begin_0, end = var_4642_end_0, end_mask = var_4642_end_mask_0, x = transpose_65);
            tensor<int32, [4]> var_4646_begin_0 = const()[name = tensor<string, []>("op_4646_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1216])];
            tensor<int32, [4]> var_4646_end_0 = const()[name = tensor<string, []>("op_4646_end_0"), val = tensor<int32, [4]>([2, 64, 1, 1280])];
            tensor<bool, [4]> var_4646_end_mask_0 = const()[name = tensor<string, []>("op_4646_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 64, 1, 64]> var_4646_cast = slice_by_index(begin = var_4646_begin_0, end = var_4646_end_0, end_mask = var_4646_end_mask_0, x = transpose_65);
            tensor<int32, [4]> var_4648_begin_0 = const()[name = tensor<string, []>("op_4648_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_4648_end_0 = const()[name = tensor<string, []>("op_4648_end_0"), val = tensor<int32, [4]>([2, 64, 1, 64])];
            tensor<bool, [4]> var_4648_end_mask_0 = const()[name = tensor<string, []>("op_4648_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4648_cast = slice_by_index(begin = var_4648_begin_0, end = var_4648_end_0, end_mask = var_4648_end_mask_0, x = v_25_cast);
            tensor<int32, [4]> var_4652_begin_0 = const()[name = tensor<string, []>("op_4652_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_4652_end_0 = const()[name = tensor<string, []>("op_4652_end_0"), val = tensor<int32, [4]>([2, 128, 1, 64])];
            tensor<bool, [4]> var_4652_end_mask_0 = const()[name = tensor<string, []>("op_4652_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4652_cast = slice_by_index(begin = var_4652_begin_0, end = var_4652_end_0, end_mask = var_4652_end_mask_0, x = v_25_cast);
            tensor<int32, [4]> var_4656_begin_0 = const()[name = tensor<string, []>("op_4656_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_4656_end_0 = const()[name = tensor<string, []>("op_4656_end_0"), val = tensor<int32, [4]>([2, 192, 1, 64])];
            tensor<bool, [4]> var_4656_end_mask_0 = const()[name = tensor<string, []>("op_4656_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4656_cast = slice_by_index(begin = var_4656_begin_0, end = var_4656_end_0, end_mask = var_4656_end_mask_0, x = v_25_cast);
            tensor<int32, [4]> var_4660_begin_0 = const()[name = tensor<string, []>("op_4660_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_4660_end_0 = const()[name = tensor<string, []>("op_4660_end_0"), val = tensor<int32, [4]>([2, 256, 1, 64])];
            tensor<bool, [4]> var_4660_end_mask_0 = const()[name = tensor<string, []>("op_4660_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4660_cast = slice_by_index(begin = var_4660_begin_0, end = var_4660_end_0, end_mask = var_4660_end_mask_0, x = v_25_cast);
            tensor<int32, [4]> var_4664_begin_0 = const()[name = tensor<string, []>("op_4664_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_4664_end_0 = const()[name = tensor<string, []>("op_4664_end_0"), val = tensor<int32, [4]>([2, 320, 1, 64])];
            tensor<bool, [4]> var_4664_end_mask_0 = const()[name = tensor<string, []>("op_4664_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4664_cast = slice_by_index(begin = var_4664_begin_0, end = var_4664_end_0, end_mask = var_4664_end_mask_0, x = v_25_cast);
            tensor<int32, [4]> var_4668_begin_0 = const()[name = tensor<string, []>("op_4668_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_4668_end_0 = const()[name = tensor<string, []>("op_4668_end_0"), val = tensor<int32, [4]>([2, 384, 1, 64])];
            tensor<bool, [4]> var_4668_end_mask_0 = const()[name = tensor<string, []>("op_4668_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4668_cast = slice_by_index(begin = var_4668_begin_0, end = var_4668_end_0, end_mask = var_4668_end_mask_0, x = v_25_cast);
            tensor<int32, [4]> var_4672_begin_0 = const()[name = tensor<string, []>("op_4672_begin_0"), val = tensor<int32, [4]>([0, 384, 0, 0])];
            tensor<int32, [4]> var_4672_end_0 = const()[name = tensor<string, []>("op_4672_end_0"), val = tensor<int32, [4]>([2, 448, 1, 64])];
            tensor<bool, [4]> var_4672_end_mask_0 = const()[name = tensor<string, []>("op_4672_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4672_cast = slice_by_index(begin = var_4672_begin_0, end = var_4672_end_0, end_mask = var_4672_end_mask_0, x = v_25_cast);
            tensor<int32, [4]> var_4676_begin_0 = const()[name = tensor<string, []>("op_4676_begin_0"), val = tensor<int32, [4]>([0, 448, 0, 0])];
            tensor<int32, [4]> var_4676_end_0 = const()[name = tensor<string, []>("op_4676_end_0"), val = tensor<int32, [4]>([2, 512, 1, 64])];
            tensor<bool, [4]> var_4676_end_mask_0 = const()[name = tensor<string, []>("op_4676_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4676_cast = slice_by_index(begin = var_4676_begin_0, end = var_4676_end_0, end_mask = var_4676_end_mask_0, x = v_25_cast);
            tensor<int32, [4]> var_4680_begin_0 = const()[name = tensor<string, []>("op_4680_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_4680_end_0 = const()[name = tensor<string, []>("op_4680_end_0"), val = tensor<int32, [4]>([2, 576, 1, 64])];
            tensor<bool, [4]> var_4680_end_mask_0 = const()[name = tensor<string, []>("op_4680_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4680_cast = slice_by_index(begin = var_4680_begin_0, end = var_4680_end_0, end_mask = var_4680_end_mask_0, x = v_25_cast);
            tensor<int32, [4]> var_4684_begin_0 = const()[name = tensor<string, []>("op_4684_begin_0"), val = tensor<int32, [4]>([0, 576, 0, 0])];
            tensor<int32, [4]> var_4684_end_0 = const()[name = tensor<string, []>("op_4684_end_0"), val = tensor<int32, [4]>([2, 640, 1, 64])];
            tensor<bool, [4]> var_4684_end_mask_0 = const()[name = tensor<string, []>("op_4684_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4684_cast = slice_by_index(begin = var_4684_begin_0, end = var_4684_end_0, end_mask = var_4684_end_mask_0, x = v_25_cast);
            tensor<int32, [4]> var_4688_begin_0 = const()[name = tensor<string, []>("op_4688_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_4688_end_0 = const()[name = tensor<string, []>("op_4688_end_0"), val = tensor<int32, [4]>([2, 704, 1, 64])];
            tensor<bool, [4]> var_4688_end_mask_0 = const()[name = tensor<string, []>("op_4688_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4688_cast = slice_by_index(begin = var_4688_begin_0, end = var_4688_end_0, end_mask = var_4688_end_mask_0, x = v_25_cast);
            tensor<int32, [4]> var_4692_begin_0 = const()[name = tensor<string, []>("op_4692_begin_0"), val = tensor<int32, [4]>([0, 704, 0, 0])];
            tensor<int32, [4]> var_4692_end_0 = const()[name = tensor<string, []>("op_4692_end_0"), val = tensor<int32, [4]>([2, 768, 1, 64])];
            tensor<bool, [4]> var_4692_end_mask_0 = const()[name = tensor<string, []>("op_4692_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4692_cast = slice_by_index(begin = var_4692_begin_0, end = var_4692_end_0, end_mask = var_4692_end_mask_0, x = v_25_cast);
            tensor<int32, [4]> var_4696_begin_0 = const()[name = tensor<string, []>("op_4696_begin_0"), val = tensor<int32, [4]>([0, 768, 0, 0])];
            tensor<int32, [4]> var_4696_end_0 = const()[name = tensor<string, []>("op_4696_end_0"), val = tensor<int32, [4]>([2, 832, 1, 64])];
            tensor<bool, [4]> var_4696_end_mask_0 = const()[name = tensor<string, []>("op_4696_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4696_cast = slice_by_index(begin = var_4696_begin_0, end = var_4696_end_0, end_mask = var_4696_end_mask_0, x = v_25_cast);
            tensor<int32, [4]> var_4700_begin_0 = const()[name = tensor<string, []>("op_4700_begin_0"), val = tensor<int32, [4]>([0, 832, 0, 0])];
            tensor<int32, [4]> var_4700_end_0 = const()[name = tensor<string, []>("op_4700_end_0"), val = tensor<int32, [4]>([2, 896, 1, 64])];
            tensor<bool, [4]> var_4700_end_mask_0 = const()[name = tensor<string, []>("op_4700_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4700_cast = slice_by_index(begin = var_4700_begin_0, end = var_4700_end_0, end_mask = var_4700_end_mask_0, x = v_25_cast);
            tensor<int32, [4]> var_4704_begin_0 = const()[name = tensor<string, []>("op_4704_begin_0"), val = tensor<int32, [4]>([0, 896, 0, 0])];
            tensor<int32, [4]> var_4704_end_0 = const()[name = tensor<string, []>("op_4704_end_0"), val = tensor<int32, [4]>([2, 960, 1, 64])];
            tensor<bool, [4]> var_4704_end_mask_0 = const()[name = tensor<string, []>("op_4704_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4704_cast = slice_by_index(begin = var_4704_begin_0, end = var_4704_end_0, end_mask = var_4704_end_mask_0, x = v_25_cast);
            tensor<int32, [4]> var_4708_begin_0 = const()[name = tensor<string, []>("op_4708_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_4708_end_0 = const()[name = tensor<string, []>("op_4708_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 64])];
            tensor<bool, [4]> var_4708_end_mask_0 = const()[name = tensor<string, []>("op_4708_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4708_cast = slice_by_index(begin = var_4708_begin_0, end = var_4708_end_0, end_mask = var_4708_end_mask_0, x = v_25_cast);
            tensor<int32, [4]> var_4712_begin_0 = const()[name = tensor<string, []>("op_4712_begin_0"), val = tensor<int32, [4]>([0, 1024, 0, 0])];
            tensor<int32, [4]> var_4712_end_0 = const()[name = tensor<string, []>("op_4712_end_0"), val = tensor<int32, [4]>([2, 1088, 1, 64])];
            tensor<bool, [4]> var_4712_end_mask_0 = const()[name = tensor<string, []>("op_4712_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4712_cast = slice_by_index(begin = var_4712_begin_0, end = var_4712_end_0, end_mask = var_4712_end_mask_0, x = v_25_cast);
            tensor<int32, [4]> var_4716_begin_0 = const()[name = tensor<string, []>("op_4716_begin_0"), val = tensor<int32, [4]>([0, 1088, 0, 0])];
            tensor<int32, [4]> var_4716_end_0 = const()[name = tensor<string, []>("op_4716_end_0"), val = tensor<int32, [4]>([2, 1152, 1, 64])];
            tensor<bool, [4]> var_4716_end_mask_0 = const()[name = tensor<string, []>("op_4716_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4716_cast = slice_by_index(begin = var_4716_begin_0, end = var_4716_end_0, end_mask = var_4716_end_mask_0, x = v_25_cast);
            tensor<int32, [4]> var_4720_begin_0 = const()[name = tensor<string, []>("op_4720_begin_0"), val = tensor<int32, [4]>([0, 1152, 0, 0])];
            tensor<int32, [4]> var_4720_end_0 = const()[name = tensor<string, []>("op_4720_end_0"), val = tensor<int32, [4]>([2, 1216, 1, 64])];
            tensor<bool, [4]> var_4720_end_mask_0 = const()[name = tensor<string, []>("op_4720_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4720_cast = slice_by_index(begin = var_4720_begin_0, end = var_4720_end_0, end_mask = var_4720_end_mask_0, x = v_25_cast);
            tensor<int32, [4]> var_4724_begin_0 = const()[name = tensor<string, []>("op_4724_begin_0"), val = tensor<int32, [4]>([0, 1216, 0, 0])];
            tensor<int32, [4]> var_4724_end_0 = const()[name = tensor<string, []>("op_4724_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 64])];
            tensor<bool, [4]> var_4724_end_mask_0 = const()[name = tensor<string, []>("op_4724_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4724_cast = slice_by_index(begin = var_4724_begin_0, end = var_4724_end_0, end_mask = var_4724_end_mask_0, x = v_25_cast);
            tensor<string, []> var_4728_equation_0 = const()[name = tensor<string, []>("op_4728_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 64, 1, 64]> var_4728_cast = einsum(equation = var_4728_equation_0, values = (var_4570_cast, var_4487_cast));
            tensor<fp16, []> var_4729_to_fp16 = const()[name = tensor<string, []>("op_4729_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 64, 1, 64]> aw_281_cast = mul(x = var_4728_cast, y = var_4729_to_fp16);
            tensor<string, []> var_4732_equation_0 = const()[name = tensor<string, []>("op_4732_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 64, 1, 64]> var_4732_cast = einsum(equation = var_4732_equation_0, values = (var_4574_cast, var_4491_cast));
            tensor<fp16, []> var_4733_to_fp16 = const()[name = tensor<string, []>("op_4733_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 64, 1, 64]> aw_283_cast = mul(x = var_4732_cast, y = var_4733_to_fp16);
            tensor<string, []> var_4736_equation_0 = const()[name = tensor<string, []>("op_4736_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 64, 1, 64]> var_4736_cast = einsum(equation = var_4736_equation_0, values = (var_4578_cast, var_4495_cast));
            tensor<fp16, []> var_4737_to_fp16 = const()[name = tensor<string, []>("op_4737_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 64, 1, 64]> aw_285_cast = mul(x = var_4736_cast, y = var_4737_to_fp16);
            tensor<string, []> var_4740_equation_0 = const()[name = tensor<string, []>("op_4740_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 64, 1, 64]> var_4740_cast = einsum(equation = var_4740_equation_0, values = (var_4582_cast, var_4499_cast));
            tensor<fp16, []> var_4741_to_fp16 = const()[name = tensor<string, []>("op_4741_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 64, 1, 64]> aw_287_cast = mul(x = var_4740_cast, y = var_4741_to_fp16);
            tensor<string, []> var_4744_equation_0 = const()[name = tensor<string, []>("op_4744_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 64, 1, 64]> var_4744_cast = einsum(equation = var_4744_equation_0, values = (var_4586_cast, var_4503_cast));
            tensor<fp16, []> var_4745_to_fp16 = const()[name = tensor<string, []>("op_4745_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 64, 1, 64]> aw_289_cast = mul(x = var_4744_cast, y = var_4745_to_fp16);
            tensor<string, []> var_4748_equation_0 = const()[name = tensor<string, []>("op_4748_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 64, 1, 64]> var_4748_cast = einsum(equation = var_4748_equation_0, values = (var_4590_cast, var_4507_cast));
            tensor<fp16, []> var_4749_to_fp16 = const()[name = tensor<string, []>("op_4749_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 64, 1, 64]> aw_291_cast = mul(x = var_4748_cast, y = var_4749_to_fp16);
            tensor<string, []> var_4752_equation_0 = const()[name = tensor<string, []>("op_4752_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 64, 1, 64]> var_4752_cast = einsum(equation = var_4752_equation_0, values = (var_4594_cast, var_4511_cast));
            tensor<fp16, []> var_4753_to_fp16 = const()[name = tensor<string, []>("op_4753_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 64, 1, 64]> aw_293_cast = mul(x = var_4752_cast, y = var_4753_to_fp16);
            tensor<string, []> var_4756_equation_0 = const()[name = tensor<string, []>("op_4756_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 64, 1, 64]> var_4756_cast = einsum(equation = var_4756_equation_0, values = (var_4598_cast, var_4515_cast));
            tensor<fp16, []> var_4757_to_fp16 = const()[name = tensor<string, []>("op_4757_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 64, 1, 64]> aw_295_cast = mul(x = var_4756_cast, y = var_4757_to_fp16);
            tensor<string, []> var_4760_equation_0 = const()[name = tensor<string, []>("op_4760_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 64, 1, 64]> var_4760_cast = einsum(equation = var_4760_equation_0, values = (var_4602_cast, var_4519_cast));
            tensor<fp16, []> var_4761_to_fp16 = const()[name = tensor<string, []>("op_4761_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 64, 1, 64]> aw_297_cast = mul(x = var_4760_cast, y = var_4761_to_fp16);
            tensor<string, []> var_4764_equation_0 = const()[name = tensor<string, []>("op_4764_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 64, 1, 64]> var_4764_cast = einsum(equation = var_4764_equation_0, values = (var_4606_cast, var_4523_cast));
            tensor<fp16, []> var_4765_to_fp16 = const()[name = tensor<string, []>("op_4765_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 64, 1, 64]> aw_299_cast = mul(x = var_4764_cast, y = var_4765_to_fp16);
            tensor<string, []> var_4768_equation_0 = const()[name = tensor<string, []>("op_4768_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 64, 1, 64]> var_4768_cast = einsum(equation = var_4768_equation_0, values = (var_4610_cast, var_4527_cast));
            tensor<fp16, []> var_4769_to_fp16 = const()[name = tensor<string, []>("op_4769_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 64, 1, 64]> aw_301_cast = mul(x = var_4768_cast, y = var_4769_to_fp16);
            tensor<string, []> var_4772_equation_0 = const()[name = tensor<string, []>("op_4772_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 64, 1, 64]> var_4772_cast = einsum(equation = var_4772_equation_0, values = (var_4614_cast, var_4531_cast));
            tensor<fp16, []> var_4773_to_fp16 = const()[name = tensor<string, []>("op_4773_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 64, 1, 64]> aw_303_cast = mul(x = var_4772_cast, y = var_4773_to_fp16);
            tensor<string, []> var_4776_equation_0 = const()[name = tensor<string, []>("op_4776_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 64, 1, 64]> var_4776_cast = einsum(equation = var_4776_equation_0, values = (var_4618_cast, var_4535_cast));
            tensor<fp16, []> var_4777_to_fp16 = const()[name = tensor<string, []>("op_4777_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 64, 1, 64]> aw_305_cast = mul(x = var_4776_cast, y = var_4777_to_fp16);
            tensor<string, []> var_4780_equation_0 = const()[name = tensor<string, []>("op_4780_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 64, 1, 64]> var_4780_cast = einsum(equation = var_4780_equation_0, values = (var_4622_cast, var_4539_cast));
            tensor<fp16, []> var_4781_to_fp16 = const()[name = tensor<string, []>("op_4781_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 64, 1, 64]> aw_307_cast = mul(x = var_4780_cast, y = var_4781_to_fp16);
            tensor<string, []> var_4784_equation_0 = const()[name = tensor<string, []>("op_4784_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 64, 1, 64]> var_4784_cast = einsum(equation = var_4784_equation_0, values = (var_4626_cast, var_4543_cast));
            tensor<fp16, []> var_4785_to_fp16 = const()[name = tensor<string, []>("op_4785_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 64, 1, 64]> aw_309_cast = mul(x = var_4784_cast, y = var_4785_to_fp16);
            tensor<string, []> var_4788_equation_0 = const()[name = tensor<string, []>("op_4788_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 64, 1, 64]> var_4788_cast = einsum(equation = var_4788_equation_0, values = (var_4630_cast, var_4547_cast));
            tensor<fp16, []> var_4789_to_fp16 = const()[name = tensor<string, []>("op_4789_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 64, 1, 64]> aw_311_cast = mul(x = var_4788_cast, y = var_4789_to_fp16);
            tensor<string, []> var_4792_equation_0 = const()[name = tensor<string, []>("op_4792_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 64, 1, 64]> var_4792_cast = einsum(equation = var_4792_equation_0, values = (var_4634_cast, var_4551_cast));
            tensor<fp16, []> var_4793_to_fp16 = const()[name = tensor<string, []>("op_4793_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 64, 1, 64]> aw_313_cast = mul(x = var_4792_cast, y = var_4793_to_fp16);
            tensor<string, []> var_4796_equation_0 = const()[name = tensor<string, []>("op_4796_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 64, 1, 64]> var_4796_cast = einsum(equation = var_4796_equation_0, values = (var_4638_cast, var_4555_cast));
            tensor<fp16, []> var_4797_to_fp16 = const()[name = tensor<string, []>("op_4797_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 64, 1, 64]> aw_315_cast = mul(x = var_4796_cast, y = var_4797_to_fp16);
            tensor<string, []> var_4800_equation_0 = const()[name = tensor<string, []>("op_4800_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 64, 1, 64]> var_4800_cast = einsum(equation = var_4800_equation_0, values = (var_4642_cast, var_4559_cast));
            tensor<fp16, []> var_4801_to_fp16 = const()[name = tensor<string, []>("op_4801_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 64, 1, 64]> aw_317_cast = mul(x = var_4800_cast, y = var_4801_to_fp16);
            tensor<string, []> var_4804_equation_0 = const()[name = tensor<string, []>("op_4804_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 64, 1, 64]> var_4804_cast = einsum(equation = var_4804_equation_0, values = (var_4646_cast, var_4563_cast));
            tensor<fp16, []> var_4805_to_fp16 = const()[name = tensor<string, []>("op_4805_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 64, 1, 64]> aw_319_cast = mul(x = var_4804_cast, y = var_4805_to_fp16);
            tensor<fp16, [2, 64, 1, 64]> var_4807_cast = softmax(axis = var_4371, x = aw_281_cast);
            tensor<fp16, [2, 64, 1, 64]> var_4808_cast = softmax(axis = var_4371, x = aw_283_cast);
            tensor<fp16, [2, 64, 1, 64]> var_4809_cast = softmax(axis = var_4371, x = aw_285_cast);
            tensor<fp16, [2, 64, 1, 64]> var_4810_cast = softmax(axis = var_4371, x = aw_287_cast);
            tensor<fp16, [2, 64, 1, 64]> var_4811_cast = softmax(axis = var_4371, x = aw_289_cast);
            tensor<fp16, [2, 64, 1, 64]> var_4812_cast = softmax(axis = var_4371, x = aw_291_cast);
            tensor<fp16, [2, 64, 1, 64]> var_4813_cast = softmax(axis = var_4371, x = aw_293_cast);
            tensor<fp16, [2, 64, 1, 64]> var_4814_cast = softmax(axis = var_4371, x = aw_295_cast);
            tensor<fp16, [2, 64, 1, 64]> var_4815_cast = softmax(axis = var_4371, x = aw_297_cast);
            tensor<fp16, [2, 64, 1, 64]> var_4816_cast = softmax(axis = var_4371, x = aw_299_cast);
            tensor<fp16, [2, 64, 1, 64]> var_4817_cast = softmax(axis = var_4371, x = aw_301_cast);
            tensor<fp16, [2, 64, 1, 64]> var_4818_cast = softmax(axis = var_4371, x = aw_303_cast);
            tensor<fp16, [2, 64, 1, 64]> var_4819_cast = softmax(axis = var_4371, x = aw_305_cast);
            tensor<fp16, [2, 64, 1, 64]> var_4820_cast = softmax(axis = var_4371, x = aw_307_cast);
            tensor<fp16, [2, 64, 1, 64]> var_4821_cast = softmax(axis = var_4371, x = aw_309_cast);
            tensor<fp16, [2, 64, 1, 64]> var_4822_cast = softmax(axis = var_4371, x = aw_311_cast);
            tensor<fp16, [2, 64, 1, 64]> var_4823_cast = softmax(axis = var_4371, x = aw_313_cast);
            tensor<fp16, [2, 64, 1, 64]> var_4824_cast = softmax(axis = var_4371, x = aw_315_cast);
            tensor<fp16, [2, 64, 1, 64]> var_4825_cast = softmax(axis = var_4371, x = aw_317_cast);
            tensor<fp16, [2, 64, 1, 64]> var_4826_cast = softmax(axis = var_4371, x = aw_319_cast);
            tensor<string, []> var_4828_equation_0 = const()[name = tensor<string, []>("op_4828_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 64]> var_4828_cast = einsum(equation = var_4828_equation_0, values = (var_4648_cast, var_4807_cast));
            tensor<string, []> var_4830_equation_0 = const()[name = tensor<string, []>("op_4830_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 64]> var_4830_cast = einsum(equation = var_4830_equation_0, values = (var_4652_cast, var_4808_cast));
            tensor<string, []> var_4832_equation_0 = const()[name = tensor<string, []>("op_4832_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 64]> var_4832_cast = einsum(equation = var_4832_equation_0, values = (var_4656_cast, var_4809_cast));
            tensor<string, []> var_4834_equation_0 = const()[name = tensor<string, []>("op_4834_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 64]> var_4834_cast = einsum(equation = var_4834_equation_0, values = (var_4660_cast, var_4810_cast));
            tensor<string, []> var_4836_equation_0 = const()[name = tensor<string, []>("op_4836_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 64]> var_4836_cast = einsum(equation = var_4836_equation_0, values = (var_4664_cast, var_4811_cast));
            tensor<string, []> var_4838_equation_0 = const()[name = tensor<string, []>("op_4838_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 64]> var_4838_cast = einsum(equation = var_4838_equation_0, values = (var_4668_cast, var_4812_cast));
            tensor<string, []> var_4840_equation_0 = const()[name = tensor<string, []>("op_4840_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 64]> var_4840_cast = einsum(equation = var_4840_equation_0, values = (var_4672_cast, var_4813_cast));
            tensor<string, []> var_4842_equation_0 = const()[name = tensor<string, []>("op_4842_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 64]> var_4842_cast = einsum(equation = var_4842_equation_0, values = (var_4676_cast, var_4814_cast));
            tensor<string, []> var_4844_equation_0 = const()[name = tensor<string, []>("op_4844_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 64]> var_4844_cast = einsum(equation = var_4844_equation_0, values = (var_4680_cast, var_4815_cast));
            tensor<string, []> var_4846_equation_0 = const()[name = tensor<string, []>("op_4846_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 64]> var_4846_cast = einsum(equation = var_4846_equation_0, values = (var_4684_cast, var_4816_cast));
            tensor<string, []> var_4848_equation_0 = const()[name = tensor<string, []>("op_4848_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 64]> var_4848_cast = einsum(equation = var_4848_equation_0, values = (var_4688_cast, var_4817_cast));
            tensor<string, []> var_4850_equation_0 = const()[name = tensor<string, []>("op_4850_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 64]> var_4850_cast = einsum(equation = var_4850_equation_0, values = (var_4692_cast, var_4818_cast));
            tensor<string, []> var_4852_equation_0 = const()[name = tensor<string, []>("op_4852_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 64]> var_4852_cast = einsum(equation = var_4852_equation_0, values = (var_4696_cast, var_4819_cast));
            tensor<string, []> var_4854_equation_0 = const()[name = tensor<string, []>("op_4854_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 64]> var_4854_cast = einsum(equation = var_4854_equation_0, values = (var_4700_cast, var_4820_cast));
            tensor<string, []> var_4856_equation_0 = const()[name = tensor<string, []>("op_4856_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 64]> var_4856_cast = einsum(equation = var_4856_equation_0, values = (var_4704_cast, var_4821_cast));
            tensor<string, []> var_4858_equation_0 = const()[name = tensor<string, []>("op_4858_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 64]> var_4858_cast = einsum(equation = var_4858_equation_0, values = (var_4708_cast, var_4822_cast));
            tensor<string, []> var_4860_equation_0 = const()[name = tensor<string, []>("op_4860_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 64]> var_4860_cast = einsum(equation = var_4860_equation_0, values = (var_4712_cast, var_4823_cast));
            tensor<string, []> var_4862_equation_0 = const()[name = tensor<string, []>("op_4862_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 64]> var_4862_cast = einsum(equation = var_4862_equation_0, values = (var_4716_cast, var_4824_cast));
            tensor<string, []> var_4864_equation_0 = const()[name = tensor<string, []>("op_4864_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 64]> var_4864_cast = einsum(equation = var_4864_equation_0, values = (var_4720_cast, var_4825_cast));
            tensor<string, []> var_4866_equation_0 = const()[name = tensor<string, []>("op_4866_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 64]> var_4866_cast = einsum(equation = var_4866_equation_0, values = (var_4724_cast, var_4826_cast));
            tensor<bool, []> input_215_interleave_0 = const()[name = tensor<string, []>("input_215_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 1280, 1, 64]> input_215_cast = concat(axis = var_4371, interleave = input_215_interleave_0, values = (var_4828_cast, var_4830_cast, var_4832_cast, var_4834_cast, var_4836_cast, var_4838_cast, var_4840_cast, var_4842_cast, var_4844_cast, var_4846_cast, var_4848_cast, var_4850_cast, var_4852_cast, var_4854_cast, var_4856_cast, var_4858_cast, var_4860_cast, var_4862_cast, var_4864_cast, var_4866_cast));
            tensor<int32, [2]> var_4872 = const()[name = tensor<string, []>("op_4872"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4874 = const()[name = tensor<string, []>("op_4874"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_4876_pad_type_0 = const()[name = tensor<string, []>("op_4876_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_4876_pad_0 = const()[name = tensor<string, []>("op_4876_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> mid_block_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(583441152)))];
            tensor<fp16, [1280]> mid_block_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(586718016)))];
            tensor<fp16, [2, 1280, 1, 64]> var_4876_cast = conv(bias = mid_block_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16, dilations = var_4874, groups = var_4371, pad = var_4876_pad_0, pad_type = var_4876_pad_type_0, strides = var_4872, weight = mid_block_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16, x = input_215_cast);
            tensor<fp16, [2, 1280, 1, 64]> inputs_39_cast = add(x = var_4876_cast, y = inputs_37_cast);
            tensor<int32, [1]> var_4880 = const()[name = tensor<string, []>("op_4880"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 64]> channels_mean_39_cast = reduce_mean(axes = var_4880, keep_dims = var_4366, x = inputs_39_cast);
            tensor<fp16, [2, 1280, 1, 64]> zero_mean_39_cast = sub(x = inputs_39_cast, y = channels_mean_39_cast);
            tensor<fp16, [2, 1280, 1, 64]> zero_mean_sq_39_cast = mul(x = zero_mean_39_cast, y = zero_mean_39_cast);
            tensor<int32, [1]> var_4884 = const()[name = tensor<string, []>("op_4884"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 64]> var_4885_cast = reduce_mean(axes = var_4884, keep_dims = var_4366, x = zero_mean_sq_39_cast);
            tensor<fp16, []> var_4886_to_fp16 = const()[name = tensor<string, []>("op_4886_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 64]> var_4887_cast = add(x = var_4885_cast, y = var_4886_to_fp16);
            tensor<fp16, []> denom_39_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_39_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 64]> denom_39_cast = rsqrt(epsilon = denom_39_epsilon_0_to_fp16, x = var_4887_cast);
            tensor<fp16, [2, 1280, 1, 64]> out_39_cast = mul(x = zero_mean_39_cast, y = denom_39_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_4891_to_fp16 = const()[name = tensor<string, []>("op_4891_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(586720640)))];
            tensor<fp16, [2, 1280, 1, 64]> var_4892_cast = add(x = out_39_cast, y = var_4891_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_4894_to_fp16 = const()[name = tensor<string, []>("op_4894_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(586723264)))];
            tensor<fp16, [2, 1280, 1, 64]> hidden_states_127_cast = mul(x = var_4892_cast, y = var_4894_to_fp16);
            tensor<int32, [2]> var_4901 = const()[name = tensor<string, []>("op_4901"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4903 = const()[name = tensor<string, []>("op_4903"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_27_pad_type_0 = const()[name = tensor<string, []>("q_27_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_27_pad_0 = const()[name = tensor<string, []>("q_27_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> mid_block_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(586725888)))];
            tensor<fp16, [2, 1280, 1, 64]> q_27_cast = conv(dilations = var_4903, groups = var_4371, pad = q_27_pad_0, pad_type = q_27_pad_type_0, strides = var_4901, weight = mid_block_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16, x = hidden_states_127_cast);
            tensor<int32, [2]> var_4907 = const()[name = tensor<string, []>("op_4907"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4909 = const()[name = tensor<string, []>("op_4909"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_53_pad_type_0 = const()[name = tensor<string, []>("k_53_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_53_pad_0 = const()[name = tensor<string, []>("k_53_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1024, 1, 1]> mid_block_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16"), val = tensor<fp16, [1280, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(590002752)))];
            tensor<fp16, [2, 1280, 1, 77]> k_53_cast = conv(dilations = var_4909, groups = var_4371, pad = k_53_pad_0, pad_type = k_53_pad_type_0, strides = var_4907, weight = mid_block_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [2]> var_4913 = const()[name = tensor<string, []>("op_4913"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4915 = const()[name = tensor<string, []>("op_4915"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_27_pad_type_0 = const()[name = tensor<string, []>("v_27_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_27_pad_0 = const()[name = tensor<string, []>("v_27_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1024, 1, 1]> mid_block_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16"), val = tensor<fp16, [1280, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(592624256)))];
            tensor<fp16, [2, 1280, 1, 77]> v_27_cast = conv(dilations = var_4915, groups = var_4371, pad = v_27_pad_0, pad_type = v_27_pad_type_0, strides = var_4913, weight = mid_block_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [4]> var_4919_begin_0 = const()[name = tensor<string, []>("op_4919_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_4919_end_0 = const()[name = tensor<string, []>("op_4919_end_0"), val = tensor<int32, [4]>([2, 64, 1, 64])];
            tensor<bool, [4]> var_4919_end_mask_0 = const()[name = tensor<string, []>("op_4919_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4919_cast = slice_by_index(begin = var_4919_begin_0, end = var_4919_end_0, end_mask = var_4919_end_mask_0, x = q_27_cast);
            tensor<int32, [4]> var_4923_begin_0 = const()[name = tensor<string, []>("op_4923_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_4923_end_0 = const()[name = tensor<string, []>("op_4923_end_0"), val = tensor<int32, [4]>([2, 128, 1, 64])];
            tensor<bool, [4]> var_4923_end_mask_0 = const()[name = tensor<string, []>("op_4923_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4923_cast = slice_by_index(begin = var_4923_begin_0, end = var_4923_end_0, end_mask = var_4923_end_mask_0, x = q_27_cast);
            tensor<int32, [4]> var_4927_begin_0 = const()[name = tensor<string, []>("op_4927_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_4927_end_0 = const()[name = tensor<string, []>("op_4927_end_0"), val = tensor<int32, [4]>([2, 192, 1, 64])];
            tensor<bool, [4]> var_4927_end_mask_0 = const()[name = tensor<string, []>("op_4927_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4927_cast = slice_by_index(begin = var_4927_begin_0, end = var_4927_end_0, end_mask = var_4927_end_mask_0, x = q_27_cast);
            tensor<int32, [4]> var_4931_begin_0 = const()[name = tensor<string, []>("op_4931_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_4931_end_0 = const()[name = tensor<string, []>("op_4931_end_0"), val = tensor<int32, [4]>([2, 256, 1, 64])];
            tensor<bool, [4]> var_4931_end_mask_0 = const()[name = tensor<string, []>("op_4931_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4931_cast = slice_by_index(begin = var_4931_begin_0, end = var_4931_end_0, end_mask = var_4931_end_mask_0, x = q_27_cast);
            tensor<int32, [4]> var_4935_begin_0 = const()[name = tensor<string, []>("op_4935_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_4935_end_0 = const()[name = tensor<string, []>("op_4935_end_0"), val = tensor<int32, [4]>([2, 320, 1, 64])];
            tensor<bool, [4]> var_4935_end_mask_0 = const()[name = tensor<string, []>("op_4935_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4935_cast = slice_by_index(begin = var_4935_begin_0, end = var_4935_end_0, end_mask = var_4935_end_mask_0, x = q_27_cast);
            tensor<int32, [4]> var_4939_begin_0 = const()[name = tensor<string, []>("op_4939_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_4939_end_0 = const()[name = tensor<string, []>("op_4939_end_0"), val = tensor<int32, [4]>([2, 384, 1, 64])];
            tensor<bool, [4]> var_4939_end_mask_0 = const()[name = tensor<string, []>("op_4939_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4939_cast = slice_by_index(begin = var_4939_begin_0, end = var_4939_end_0, end_mask = var_4939_end_mask_0, x = q_27_cast);
            tensor<int32, [4]> var_4943_begin_0 = const()[name = tensor<string, []>("op_4943_begin_0"), val = tensor<int32, [4]>([0, 384, 0, 0])];
            tensor<int32, [4]> var_4943_end_0 = const()[name = tensor<string, []>("op_4943_end_0"), val = tensor<int32, [4]>([2, 448, 1, 64])];
            tensor<bool, [4]> var_4943_end_mask_0 = const()[name = tensor<string, []>("op_4943_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4943_cast = slice_by_index(begin = var_4943_begin_0, end = var_4943_end_0, end_mask = var_4943_end_mask_0, x = q_27_cast);
            tensor<int32, [4]> var_4947_begin_0 = const()[name = tensor<string, []>("op_4947_begin_0"), val = tensor<int32, [4]>([0, 448, 0, 0])];
            tensor<int32, [4]> var_4947_end_0 = const()[name = tensor<string, []>("op_4947_end_0"), val = tensor<int32, [4]>([2, 512, 1, 64])];
            tensor<bool, [4]> var_4947_end_mask_0 = const()[name = tensor<string, []>("op_4947_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4947_cast = slice_by_index(begin = var_4947_begin_0, end = var_4947_end_0, end_mask = var_4947_end_mask_0, x = q_27_cast);
            tensor<int32, [4]> var_4951_begin_0 = const()[name = tensor<string, []>("op_4951_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_4951_end_0 = const()[name = tensor<string, []>("op_4951_end_0"), val = tensor<int32, [4]>([2, 576, 1, 64])];
            tensor<bool, [4]> var_4951_end_mask_0 = const()[name = tensor<string, []>("op_4951_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4951_cast = slice_by_index(begin = var_4951_begin_0, end = var_4951_end_0, end_mask = var_4951_end_mask_0, x = q_27_cast);
            tensor<int32, [4]> var_4955_begin_0 = const()[name = tensor<string, []>("op_4955_begin_0"), val = tensor<int32, [4]>([0, 576, 0, 0])];
            tensor<int32, [4]> var_4955_end_0 = const()[name = tensor<string, []>("op_4955_end_0"), val = tensor<int32, [4]>([2, 640, 1, 64])];
            tensor<bool, [4]> var_4955_end_mask_0 = const()[name = tensor<string, []>("op_4955_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4955_cast = slice_by_index(begin = var_4955_begin_0, end = var_4955_end_0, end_mask = var_4955_end_mask_0, x = q_27_cast);
            tensor<int32, [4]> var_4959_begin_0 = const()[name = tensor<string, []>("op_4959_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_4959_end_0 = const()[name = tensor<string, []>("op_4959_end_0"), val = tensor<int32, [4]>([2, 704, 1, 64])];
            tensor<bool, [4]> var_4959_end_mask_0 = const()[name = tensor<string, []>("op_4959_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4959_cast = slice_by_index(begin = var_4959_begin_0, end = var_4959_end_0, end_mask = var_4959_end_mask_0, x = q_27_cast);
            tensor<int32, [4]> var_4963_begin_0 = const()[name = tensor<string, []>("op_4963_begin_0"), val = tensor<int32, [4]>([0, 704, 0, 0])];
            tensor<int32, [4]> var_4963_end_0 = const()[name = tensor<string, []>("op_4963_end_0"), val = tensor<int32, [4]>([2, 768, 1, 64])];
            tensor<bool, [4]> var_4963_end_mask_0 = const()[name = tensor<string, []>("op_4963_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4963_cast = slice_by_index(begin = var_4963_begin_0, end = var_4963_end_0, end_mask = var_4963_end_mask_0, x = q_27_cast);
            tensor<int32, [4]> var_4967_begin_0 = const()[name = tensor<string, []>("op_4967_begin_0"), val = tensor<int32, [4]>([0, 768, 0, 0])];
            tensor<int32, [4]> var_4967_end_0 = const()[name = tensor<string, []>("op_4967_end_0"), val = tensor<int32, [4]>([2, 832, 1, 64])];
            tensor<bool, [4]> var_4967_end_mask_0 = const()[name = tensor<string, []>("op_4967_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4967_cast = slice_by_index(begin = var_4967_begin_0, end = var_4967_end_0, end_mask = var_4967_end_mask_0, x = q_27_cast);
            tensor<int32, [4]> var_4971_begin_0 = const()[name = tensor<string, []>("op_4971_begin_0"), val = tensor<int32, [4]>([0, 832, 0, 0])];
            tensor<int32, [4]> var_4971_end_0 = const()[name = tensor<string, []>("op_4971_end_0"), val = tensor<int32, [4]>([2, 896, 1, 64])];
            tensor<bool, [4]> var_4971_end_mask_0 = const()[name = tensor<string, []>("op_4971_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4971_cast = slice_by_index(begin = var_4971_begin_0, end = var_4971_end_0, end_mask = var_4971_end_mask_0, x = q_27_cast);
            tensor<int32, [4]> var_4975_begin_0 = const()[name = tensor<string, []>("op_4975_begin_0"), val = tensor<int32, [4]>([0, 896, 0, 0])];
            tensor<int32, [4]> var_4975_end_0 = const()[name = tensor<string, []>("op_4975_end_0"), val = tensor<int32, [4]>([2, 960, 1, 64])];
            tensor<bool, [4]> var_4975_end_mask_0 = const()[name = tensor<string, []>("op_4975_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4975_cast = slice_by_index(begin = var_4975_begin_0, end = var_4975_end_0, end_mask = var_4975_end_mask_0, x = q_27_cast);
            tensor<int32, [4]> var_4979_begin_0 = const()[name = tensor<string, []>("op_4979_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_4979_end_0 = const()[name = tensor<string, []>("op_4979_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 64])];
            tensor<bool, [4]> var_4979_end_mask_0 = const()[name = tensor<string, []>("op_4979_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4979_cast = slice_by_index(begin = var_4979_begin_0, end = var_4979_end_0, end_mask = var_4979_end_mask_0, x = q_27_cast);
            tensor<int32, [4]> var_4983_begin_0 = const()[name = tensor<string, []>("op_4983_begin_0"), val = tensor<int32, [4]>([0, 1024, 0, 0])];
            tensor<int32, [4]> var_4983_end_0 = const()[name = tensor<string, []>("op_4983_end_0"), val = tensor<int32, [4]>([2, 1088, 1, 64])];
            tensor<bool, [4]> var_4983_end_mask_0 = const()[name = tensor<string, []>("op_4983_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4983_cast = slice_by_index(begin = var_4983_begin_0, end = var_4983_end_0, end_mask = var_4983_end_mask_0, x = q_27_cast);
            tensor<int32, [4]> var_4987_begin_0 = const()[name = tensor<string, []>("op_4987_begin_0"), val = tensor<int32, [4]>([0, 1088, 0, 0])];
            tensor<int32, [4]> var_4987_end_0 = const()[name = tensor<string, []>("op_4987_end_0"), val = tensor<int32, [4]>([2, 1152, 1, 64])];
            tensor<bool, [4]> var_4987_end_mask_0 = const()[name = tensor<string, []>("op_4987_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4987_cast = slice_by_index(begin = var_4987_begin_0, end = var_4987_end_0, end_mask = var_4987_end_mask_0, x = q_27_cast);
            tensor<int32, [4]> var_4991_begin_0 = const()[name = tensor<string, []>("op_4991_begin_0"), val = tensor<int32, [4]>([0, 1152, 0, 0])];
            tensor<int32, [4]> var_4991_end_0 = const()[name = tensor<string, []>("op_4991_end_0"), val = tensor<int32, [4]>([2, 1216, 1, 64])];
            tensor<bool, [4]> var_4991_end_mask_0 = const()[name = tensor<string, []>("op_4991_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4991_cast = slice_by_index(begin = var_4991_begin_0, end = var_4991_end_0, end_mask = var_4991_end_mask_0, x = q_27_cast);
            tensor<int32, [4]> var_4995_begin_0 = const()[name = tensor<string, []>("op_4995_begin_0"), val = tensor<int32, [4]>([0, 1216, 0, 0])];
            tensor<int32, [4]> var_4995_end_0 = const()[name = tensor<string, []>("op_4995_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 64])];
            tensor<bool, [4]> var_4995_end_mask_0 = const()[name = tensor<string, []>("op_4995_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 64]> var_4995_cast = slice_by_index(begin = var_4995_begin_0, end = var_4995_end_0, end_mask = var_4995_end_mask_0, x = q_27_cast);
            tensor<int32, [4]> k_55_perm_0 = const()[name = tensor<string, []>("k_55_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_5002_begin_0 = const()[name = tensor<string, []>("op_5002_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_5002_end_0 = const()[name = tensor<string, []>("op_5002_end_0"), val = tensor<int32, [4]>([2, 77, 1, 64])];
            tensor<bool, [4]> var_5002_end_mask_0 = const()[name = tensor<string, []>("op_5002_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 1280]> transpose_64 = transpose(perm = k_55_perm_0, x = k_53_cast);
            tensor<fp16, [2, 77, 1, 64]> var_5002_cast = slice_by_index(begin = var_5002_begin_0, end = var_5002_end_0, end_mask = var_5002_end_mask_0, x = transpose_64);
            tensor<int32, [4]> var_5006_begin_0 = const()[name = tensor<string, []>("op_5006_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 64])];
            tensor<int32, [4]> var_5006_end_0 = const()[name = tensor<string, []>("op_5006_end_0"), val = tensor<int32, [4]>([2, 77, 1, 128])];
            tensor<bool, [4]> var_5006_end_mask_0 = const()[name = tensor<string, []>("op_5006_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_5006_cast = slice_by_index(begin = var_5006_begin_0, end = var_5006_end_0, end_mask = var_5006_end_mask_0, x = transpose_64);
            tensor<int32, [4]> var_5010_begin_0 = const()[name = tensor<string, []>("op_5010_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 128])];
            tensor<int32, [4]> var_5010_end_0 = const()[name = tensor<string, []>("op_5010_end_0"), val = tensor<int32, [4]>([2, 77, 1, 192])];
            tensor<bool, [4]> var_5010_end_mask_0 = const()[name = tensor<string, []>("op_5010_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_5010_cast = slice_by_index(begin = var_5010_begin_0, end = var_5010_end_0, end_mask = var_5010_end_mask_0, x = transpose_64);
            tensor<int32, [4]> var_5014_begin_0 = const()[name = tensor<string, []>("op_5014_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 192])];
            tensor<int32, [4]> var_5014_end_0 = const()[name = tensor<string, []>("op_5014_end_0"), val = tensor<int32, [4]>([2, 77, 1, 256])];
            tensor<bool, [4]> var_5014_end_mask_0 = const()[name = tensor<string, []>("op_5014_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_5014_cast = slice_by_index(begin = var_5014_begin_0, end = var_5014_end_0, end_mask = var_5014_end_mask_0, x = transpose_64);
            tensor<int32, [4]> var_5018_begin_0 = const()[name = tensor<string, []>("op_5018_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 256])];
            tensor<int32, [4]> var_5018_end_0 = const()[name = tensor<string, []>("op_5018_end_0"), val = tensor<int32, [4]>([2, 77, 1, 320])];
            tensor<bool, [4]> var_5018_end_mask_0 = const()[name = tensor<string, []>("op_5018_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_5018_cast = slice_by_index(begin = var_5018_begin_0, end = var_5018_end_0, end_mask = var_5018_end_mask_0, x = transpose_64);
            tensor<int32, [4]> var_5022_begin_0 = const()[name = tensor<string, []>("op_5022_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_5022_end_0 = const()[name = tensor<string, []>("op_5022_end_0"), val = tensor<int32, [4]>([2, 77, 1, 384])];
            tensor<bool, [4]> var_5022_end_mask_0 = const()[name = tensor<string, []>("op_5022_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_5022_cast = slice_by_index(begin = var_5022_begin_0, end = var_5022_end_0, end_mask = var_5022_end_mask_0, x = transpose_64);
            tensor<int32, [4]> var_5026_begin_0 = const()[name = tensor<string, []>("op_5026_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 384])];
            tensor<int32, [4]> var_5026_end_0 = const()[name = tensor<string, []>("op_5026_end_0"), val = tensor<int32, [4]>([2, 77, 1, 448])];
            tensor<bool, [4]> var_5026_end_mask_0 = const()[name = tensor<string, []>("op_5026_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_5026_cast = slice_by_index(begin = var_5026_begin_0, end = var_5026_end_0, end_mask = var_5026_end_mask_0, x = transpose_64);
            tensor<int32, [4]> var_5030_begin_0 = const()[name = tensor<string, []>("op_5030_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 448])];
            tensor<int32, [4]> var_5030_end_0 = const()[name = tensor<string, []>("op_5030_end_0"), val = tensor<int32, [4]>([2, 77, 1, 512])];
            tensor<bool, [4]> var_5030_end_mask_0 = const()[name = tensor<string, []>("op_5030_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_5030_cast = slice_by_index(begin = var_5030_begin_0, end = var_5030_end_0, end_mask = var_5030_end_mask_0, x = transpose_64);
            tensor<int32, [4]> var_5034_begin_0 = const()[name = tensor<string, []>("op_5034_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 512])];
            tensor<int32, [4]> var_5034_end_0 = const()[name = tensor<string, []>("op_5034_end_0"), val = tensor<int32, [4]>([2, 77, 1, 576])];
            tensor<bool, [4]> var_5034_end_mask_0 = const()[name = tensor<string, []>("op_5034_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_5034_cast = slice_by_index(begin = var_5034_begin_0, end = var_5034_end_0, end_mask = var_5034_end_mask_0, x = transpose_64);
            tensor<int32, [4]> var_5038_begin_0 = const()[name = tensor<string, []>("op_5038_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 576])];
            tensor<int32, [4]> var_5038_end_0 = const()[name = tensor<string, []>("op_5038_end_0"), val = tensor<int32, [4]>([2, 77, 1, 640])];
            tensor<bool, [4]> var_5038_end_mask_0 = const()[name = tensor<string, []>("op_5038_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_5038_cast = slice_by_index(begin = var_5038_begin_0, end = var_5038_end_0, end_mask = var_5038_end_mask_0, x = transpose_64);
            tensor<int32, [4]> var_5042_begin_0 = const()[name = tensor<string, []>("op_5042_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 640])];
            tensor<int32, [4]> var_5042_end_0 = const()[name = tensor<string, []>("op_5042_end_0"), val = tensor<int32, [4]>([2, 77, 1, 704])];
            tensor<bool, [4]> var_5042_end_mask_0 = const()[name = tensor<string, []>("op_5042_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_5042_cast = slice_by_index(begin = var_5042_begin_0, end = var_5042_end_0, end_mask = var_5042_end_mask_0, x = transpose_64);
            tensor<int32, [4]> var_5046_begin_0 = const()[name = tensor<string, []>("op_5046_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 704])];
            tensor<int32, [4]> var_5046_end_0 = const()[name = tensor<string, []>("op_5046_end_0"), val = tensor<int32, [4]>([2, 77, 1, 768])];
            tensor<bool, [4]> var_5046_end_mask_0 = const()[name = tensor<string, []>("op_5046_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_5046_cast = slice_by_index(begin = var_5046_begin_0, end = var_5046_end_0, end_mask = var_5046_end_mask_0, x = transpose_64);
            tensor<int32, [4]> var_5050_begin_0 = const()[name = tensor<string, []>("op_5050_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 768])];
            tensor<int32, [4]> var_5050_end_0 = const()[name = tensor<string, []>("op_5050_end_0"), val = tensor<int32, [4]>([2, 77, 1, 832])];
            tensor<bool, [4]> var_5050_end_mask_0 = const()[name = tensor<string, []>("op_5050_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_5050_cast = slice_by_index(begin = var_5050_begin_0, end = var_5050_end_0, end_mask = var_5050_end_mask_0, x = transpose_64);
            tensor<int32, [4]> var_5054_begin_0 = const()[name = tensor<string, []>("op_5054_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 832])];
            tensor<int32, [4]> var_5054_end_0 = const()[name = tensor<string, []>("op_5054_end_0"), val = tensor<int32, [4]>([2, 77, 1, 896])];
            tensor<bool, [4]> var_5054_end_mask_0 = const()[name = tensor<string, []>("op_5054_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_5054_cast = slice_by_index(begin = var_5054_begin_0, end = var_5054_end_0, end_mask = var_5054_end_mask_0, x = transpose_64);
            tensor<int32, [4]> var_5058_begin_0 = const()[name = tensor<string, []>("op_5058_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 896])];
            tensor<int32, [4]> var_5058_end_0 = const()[name = tensor<string, []>("op_5058_end_0"), val = tensor<int32, [4]>([2, 77, 1, 960])];
            tensor<bool, [4]> var_5058_end_mask_0 = const()[name = tensor<string, []>("op_5058_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_5058_cast = slice_by_index(begin = var_5058_begin_0, end = var_5058_end_0, end_mask = var_5058_end_mask_0, x = transpose_64);
            tensor<int32, [4]> var_5062_begin_0 = const()[name = tensor<string, []>("op_5062_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 960])];
            tensor<int32, [4]> var_5062_end_0 = const()[name = tensor<string, []>("op_5062_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1024])];
            tensor<bool, [4]> var_5062_end_mask_0 = const()[name = tensor<string, []>("op_5062_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_5062_cast = slice_by_index(begin = var_5062_begin_0, end = var_5062_end_0, end_mask = var_5062_end_mask_0, x = transpose_64);
            tensor<int32, [4]> var_5066_begin_0 = const()[name = tensor<string, []>("op_5066_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1024])];
            tensor<int32, [4]> var_5066_end_0 = const()[name = tensor<string, []>("op_5066_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1088])];
            tensor<bool, [4]> var_5066_end_mask_0 = const()[name = tensor<string, []>("op_5066_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_5066_cast = slice_by_index(begin = var_5066_begin_0, end = var_5066_end_0, end_mask = var_5066_end_mask_0, x = transpose_64);
            tensor<int32, [4]> var_5070_begin_0 = const()[name = tensor<string, []>("op_5070_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1088])];
            tensor<int32, [4]> var_5070_end_0 = const()[name = tensor<string, []>("op_5070_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1152])];
            tensor<bool, [4]> var_5070_end_mask_0 = const()[name = tensor<string, []>("op_5070_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_5070_cast = slice_by_index(begin = var_5070_begin_0, end = var_5070_end_0, end_mask = var_5070_end_mask_0, x = transpose_64);
            tensor<int32, [4]> var_5074_begin_0 = const()[name = tensor<string, []>("op_5074_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1152])];
            tensor<int32, [4]> var_5074_end_0 = const()[name = tensor<string, []>("op_5074_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1216])];
            tensor<bool, [4]> var_5074_end_mask_0 = const()[name = tensor<string, []>("op_5074_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_5074_cast = slice_by_index(begin = var_5074_begin_0, end = var_5074_end_0, end_mask = var_5074_end_mask_0, x = transpose_64);
            tensor<int32, [4]> var_5078_begin_0 = const()[name = tensor<string, []>("op_5078_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1216])];
            tensor<int32, [4]> var_5078_end_0 = const()[name = tensor<string, []>("op_5078_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1280])];
            tensor<bool, [4]> var_5078_end_mask_0 = const()[name = tensor<string, []>("op_5078_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_5078_cast = slice_by_index(begin = var_5078_begin_0, end = var_5078_end_0, end_mask = var_5078_end_mask_0, x = transpose_64);
            tensor<int32, [4]> var_5080_begin_0 = const()[name = tensor<string, []>("op_5080_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_5080_end_0 = const()[name = tensor<string, []>("op_5080_end_0"), val = tensor<int32, [4]>([2, 64, 1, 77])];
            tensor<bool, [4]> var_5080_end_mask_0 = const()[name = tensor<string, []>("op_5080_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_5080_cast = slice_by_index(begin = var_5080_begin_0, end = var_5080_end_0, end_mask = var_5080_end_mask_0, x = v_27_cast);
            tensor<int32, [4]> var_5084_begin_0 = const()[name = tensor<string, []>("op_5084_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_5084_end_0 = const()[name = tensor<string, []>("op_5084_end_0"), val = tensor<int32, [4]>([2, 128, 1, 77])];
            tensor<bool, [4]> var_5084_end_mask_0 = const()[name = tensor<string, []>("op_5084_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_5084_cast = slice_by_index(begin = var_5084_begin_0, end = var_5084_end_0, end_mask = var_5084_end_mask_0, x = v_27_cast);
            tensor<int32, [4]> var_5088_begin_0 = const()[name = tensor<string, []>("op_5088_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_5088_end_0 = const()[name = tensor<string, []>("op_5088_end_0"), val = tensor<int32, [4]>([2, 192, 1, 77])];
            tensor<bool, [4]> var_5088_end_mask_0 = const()[name = tensor<string, []>("op_5088_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_5088_cast = slice_by_index(begin = var_5088_begin_0, end = var_5088_end_0, end_mask = var_5088_end_mask_0, x = v_27_cast);
            tensor<int32, [4]> var_5092_begin_0 = const()[name = tensor<string, []>("op_5092_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_5092_end_0 = const()[name = tensor<string, []>("op_5092_end_0"), val = tensor<int32, [4]>([2, 256, 1, 77])];
            tensor<bool, [4]> var_5092_end_mask_0 = const()[name = tensor<string, []>("op_5092_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_5092_cast = slice_by_index(begin = var_5092_begin_0, end = var_5092_end_0, end_mask = var_5092_end_mask_0, x = v_27_cast);
            tensor<int32, [4]> var_5096_begin_0 = const()[name = tensor<string, []>("op_5096_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_5096_end_0 = const()[name = tensor<string, []>("op_5096_end_0"), val = tensor<int32, [4]>([2, 320, 1, 77])];
            tensor<bool, [4]> var_5096_end_mask_0 = const()[name = tensor<string, []>("op_5096_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_5096_cast = slice_by_index(begin = var_5096_begin_0, end = var_5096_end_0, end_mask = var_5096_end_mask_0, x = v_27_cast);
            tensor<int32, [4]> var_5100_begin_0 = const()[name = tensor<string, []>("op_5100_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_5100_end_0 = const()[name = tensor<string, []>("op_5100_end_0"), val = tensor<int32, [4]>([2, 384, 1, 77])];
            tensor<bool, [4]> var_5100_end_mask_0 = const()[name = tensor<string, []>("op_5100_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_5100_cast = slice_by_index(begin = var_5100_begin_0, end = var_5100_end_0, end_mask = var_5100_end_mask_0, x = v_27_cast);
            tensor<int32, [4]> var_5104_begin_0 = const()[name = tensor<string, []>("op_5104_begin_0"), val = tensor<int32, [4]>([0, 384, 0, 0])];
            tensor<int32, [4]> var_5104_end_0 = const()[name = tensor<string, []>("op_5104_end_0"), val = tensor<int32, [4]>([2, 448, 1, 77])];
            tensor<bool, [4]> var_5104_end_mask_0 = const()[name = tensor<string, []>("op_5104_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_5104_cast = slice_by_index(begin = var_5104_begin_0, end = var_5104_end_0, end_mask = var_5104_end_mask_0, x = v_27_cast);
            tensor<int32, [4]> var_5108_begin_0 = const()[name = tensor<string, []>("op_5108_begin_0"), val = tensor<int32, [4]>([0, 448, 0, 0])];
            tensor<int32, [4]> var_5108_end_0 = const()[name = tensor<string, []>("op_5108_end_0"), val = tensor<int32, [4]>([2, 512, 1, 77])];
            tensor<bool, [4]> var_5108_end_mask_0 = const()[name = tensor<string, []>("op_5108_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_5108_cast = slice_by_index(begin = var_5108_begin_0, end = var_5108_end_0, end_mask = var_5108_end_mask_0, x = v_27_cast);
            tensor<int32, [4]> var_5112_begin_0 = const()[name = tensor<string, []>("op_5112_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_5112_end_0 = const()[name = tensor<string, []>("op_5112_end_0"), val = tensor<int32, [4]>([2, 576, 1, 77])];
            tensor<bool, [4]> var_5112_end_mask_0 = const()[name = tensor<string, []>("op_5112_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_5112_cast = slice_by_index(begin = var_5112_begin_0, end = var_5112_end_0, end_mask = var_5112_end_mask_0, x = v_27_cast);
            tensor<int32, [4]> var_5116_begin_0 = const()[name = tensor<string, []>("op_5116_begin_0"), val = tensor<int32, [4]>([0, 576, 0, 0])];
            tensor<int32, [4]> var_5116_end_0 = const()[name = tensor<string, []>("op_5116_end_0"), val = tensor<int32, [4]>([2, 640, 1, 77])];
            tensor<bool, [4]> var_5116_end_mask_0 = const()[name = tensor<string, []>("op_5116_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_5116_cast = slice_by_index(begin = var_5116_begin_0, end = var_5116_end_0, end_mask = var_5116_end_mask_0, x = v_27_cast);
            tensor<int32, [4]> var_5120_begin_0 = const()[name = tensor<string, []>("op_5120_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_5120_end_0 = const()[name = tensor<string, []>("op_5120_end_0"), val = tensor<int32, [4]>([2, 704, 1, 77])];
            tensor<bool, [4]> var_5120_end_mask_0 = const()[name = tensor<string, []>("op_5120_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_5120_cast = slice_by_index(begin = var_5120_begin_0, end = var_5120_end_0, end_mask = var_5120_end_mask_0, x = v_27_cast);
            tensor<int32, [4]> var_5124_begin_0 = const()[name = tensor<string, []>("op_5124_begin_0"), val = tensor<int32, [4]>([0, 704, 0, 0])];
            tensor<int32, [4]> var_5124_end_0 = const()[name = tensor<string, []>("op_5124_end_0"), val = tensor<int32, [4]>([2, 768, 1, 77])];
            tensor<bool, [4]> var_5124_end_mask_0 = const()[name = tensor<string, []>("op_5124_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_5124_cast = slice_by_index(begin = var_5124_begin_0, end = var_5124_end_0, end_mask = var_5124_end_mask_0, x = v_27_cast);
            tensor<int32, [4]> var_5128_begin_0 = const()[name = tensor<string, []>("op_5128_begin_0"), val = tensor<int32, [4]>([0, 768, 0, 0])];
            tensor<int32, [4]> var_5128_end_0 = const()[name = tensor<string, []>("op_5128_end_0"), val = tensor<int32, [4]>([2, 832, 1, 77])];
            tensor<bool, [4]> var_5128_end_mask_0 = const()[name = tensor<string, []>("op_5128_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_5128_cast = slice_by_index(begin = var_5128_begin_0, end = var_5128_end_0, end_mask = var_5128_end_mask_0, x = v_27_cast);
            tensor<int32, [4]> var_5132_begin_0 = const()[name = tensor<string, []>("op_5132_begin_0"), val = tensor<int32, [4]>([0, 832, 0, 0])];
            tensor<int32, [4]> var_5132_end_0 = const()[name = tensor<string, []>("op_5132_end_0"), val = tensor<int32, [4]>([2, 896, 1, 77])];
            tensor<bool, [4]> var_5132_end_mask_0 = const()[name = tensor<string, []>("op_5132_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_5132_cast = slice_by_index(begin = var_5132_begin_0, end = var_5132_end_0, end_mask = var_5132_end_mask_0, x = v_27_cast);
            tensor<int32, [4]> var_5136_begin_0 = const()[name = tensor<string, []>("op_5136_begin_0"), val = tensor<int32, [4]>([0, 896, 0, 0])];
            tensor<int32, [4]> var_5136_end_0 = const()[name = tensor<string, []>("op_5136_end_0"), val = tensor<int32, [4]>([2, 960, 1, 77])];
            tensor<bool, [4]> var_5136_end_mask_0 = const()[name = tensor<string, []>("op_5136_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_5136_cast = slice_by_index(begin = var_5136_begin_0, end = var_5136_end_0, end_mask = var_5136_end_mask_0, x = v_27_cast);
            tensor<int32, [4]> var_5140_begin_0 = const()[name = tensor<string, []>("op_5140_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_5140_end_0 = const()[name = tensor<string, []>("op_5140_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 77])];
            tensor<bool, [4]> var_5140_end_mask_0 = const()[name = tensor<string, []>("op_5140_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_5140_cast = slice_by_index(begin = var_5140_begin_0, end = var_5140_end_0, end_mask = var_5140_end_mask_0, x = v_27_cast);
            tensor<int32, [4]> var_5144_begin_0 = const()[name = tensor<string, []>("op_5144_begin_0"), val = tensor<int32, [4]>([0, 1024, 0, 0])];
            tensor<int32, [4]> var_5144_end_0 = const()[name = tensor<string, []>("op_5144_end_0"), val = tensor<int32, [4]>([2, 1088, 1, 77])];
            tensor<bool, [4]> var_5144_end_mask_0 = const()[name = tensor<string, []>("op_5144_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_5144_cast = slice_by_index(begin = var_5144_begin_0, end = var_5144_end_0, end_mask = var_5144_end_mask_0, x = v_27_cast);
            tensor<int32, [4]> var_5148_begin_0 = const()[name = tensor<string, []>("op_5148_begin_0"), val = tensor<int32, [4]>([0, 1088, 0, 0])];
            tensor<int32, [4]> var_5148_end_0 = const()[name = tensor<string, []>("op_5148_end_0"), val = tensor<int32, [4]>([2, 1152, 1, 77])];
            tensor<bool, [4]> var_5148_end_mask_0 = const()[name = tensor<string, []>("op_5148_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_5148_cast = slice_by_index(begin = var_5148_begin_0, end = var_5148_end_0, end_mask = var_5148_end_mask_0, x = v_27_cast);
            tensor<int32, [4]> var_5152_begin_0 = const()[name = tensor<string, []>("op_5152_begin_0"), val = tensor<int32, [4]>([0, 1152, 0, 0])];
            tensor<int32, [4]> var_5152_end_0 = const()[name = tensor<string, []>("op_5152_end_0"), val = tensor<int32, [4]>([2, 1216, 1, 77])];
            tensor<bool, [4]> var_5152_end_mask_0 = const()[name = tensor<string, []>("op_5152_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_5152_cast = slice_by_index(begin = var_5152_begin_0, end = var_5152_end_0, end_mask = var_5152_end_mask_0, x = v_27_cast);
            tensor<int32, [4]> var_5156_begin_0 = const()[name = tensor<string, []>("op_5156_begin_0"), val = tensor<int32, [4]>([0, 1216, 0, 0])];
            tensor<int32, [4]> var_5156_end_0 = const()[name = tensor<string, []>("op_5156_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 77])];
            tensor<bool, [4]> var_5156_end_mask_0 = const()[name = tensor<string, []>("op_5156_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_5156_cast = slice_by_index(begin = var_5156_begin_0, end = var_5156_end_0, end_mask = var_5156_end_mask_0, x = v_27_cast);
            tensor<string, []> var_5160_equation_0 = const()[name = tensor<string, []>("op_5160_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 64]> var_5160_cast = einsum(equation = var_5160_equation_0, values = (var_5002_cast, var_4919_cast));
            tensor<fp16, []> var_5161_to_fp16 = const()[name = tensor<string, []>("op_5161_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 64]> aw_321_cast = mul(x = var_5160_cast, y = var_5161_to_fp16);
            tensor<string, []> var_5164_equation_0 = const()[name = tensor<string, []>("op_5164_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 64]> var_5164_cast = einsum(equation = var_5164_equation_0, values = (var_5006_cast, var_4923_cast));
            tensor<fp16, []> var_5165_to_fp16 = const()[name = tensor<string, []>("op_5165_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 64]> aw_323_cast = mul(x = var_5164_cast, y = var_5165_to_fp16);
            tensor<string, []> var_5168_equation_0 = const()[name = tensor<string, []>("op_5168_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 64]> var_5168_cast = einsum(equation = var_5168_equation_0, values = (var_5010_cast, var_4927_cast));
            tensor<fp16, []> var_5169_to_fp16 = const()[name = tensor<string, []>("op_5169_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 64]> aw_325_cast = mul(x = var_5168_cast, y = var_5169_to_fp16);
            tensor<string, []> var_5172_equation_0 = const()[name = tensor<string, []>("op_5172_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 64]> var_5172_cast = einsum(equation = var_5172_equation_0, values = (var_5014_cast, var_4931_cast));
            tensor<fp16, []> var_5173_to_fp16 = const()[name = tensor<string, []>("op_5173_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 64]> aw_327_cast = mul(x = var_5172_cast, y = var_5173_to_fp16);
            tensor<string, []> var_5176_equation_0 = const()[name = tensor<string, []>("op_5176_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 64]> var_5176_cast = einsum(equation = var_5176_equation_0, values = (var_5018_cast, var_4935_cast));
            tensor<fp16, []> var_5177_to_fp16 = const()[name = tensor<string, []>("op_5177_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 64]> aw_329_cast = mul(x = var_5176_cast, y = var_5177_to_fp16);
            tensor<string, []> var_5180_equation_0 = const()[name = tensor<string, []>("op_5180_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 64]> var_5180_cast = einsum(equation = var_5180_equation_0, values = (var_5022_cast, var_4939_cast));
            tensor<fp16, []> var_5181_to_fp16 = const()[name = tensor<string, []>("op_5181_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 64]> aw_331_cast = mul(x = var_5180_cast, y = var_5181_to_fp16);
            tensor<string, []> var_5184_equation_0 = const()[name = tensor<string, []>("op_5184_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 64]> var_5184_cast = einsum(equation = var_5184_equation_0, values = (var_5026_cast, var_4943_cast));
            tensor<fp16, []> var_5185_to_fp16 = const()[name = tensor<string, []>("op_5185_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 64]> aw_333_cast = mul(x = var_5184_cast, y = var_5185_to_fp16);
            tensor<string, []> var_5188_equation_0 = const()[name = tensor<string, []>("op_5188_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 64]> var_5188_cast = einsum(equation = var_5188_equation_0, values = (var_5030_cast, var_4947_cast));
            tensor<fp16, []> var_5189_to_fp16 = const()[name = tensor<string, []>("op_5189_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 64]> aw_335_cast = mul(x = var_5188_cast, y = var_5189_to_fp16);
            tensor<string, []> var_5192_equation_0 = const()[name = tensor<string, []>("op_5192_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 64]> var_5192_cast = einsum(equation = var_5192_equation_0, values = (var_5034_cast, var_4951_cast));
            tensor<fp16, []> var_5193_to_fp16 = const()[name = tensor<string, []>("op_5193_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 64]> aw_337_cast = mul(x = var_5192_cast, y = var_5193_to_fp16);
            tensor<string, []> var_5196_equation_0 = const()[name = tensor<string, []>("op_5196_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 64]> var_5196_cast = einsum(equation = var_5196_equation_0, values = (var_5038_cast, var_4955_cast));
            tensor<fp16, []> var_5197_to_fp16 = const()[name = tensor<string, []>("op_5197_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 64]> aw_339_cast = mul(x = var_5196_cast, y = var_5197_to_fp16);
            tensor<string, []> var_5200_equation_0 = const()[name = tensor<string, []>("op_5200_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 64]> var_5200_cast = einsum(equation = var_5200_equation_0, values = (var_5042_cast, var_4959_cast));
            tensor<fp16, []> var_5201_to_fp16 = const()[name = tensor<string, []>("op_5201_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 64]> aw_341_cast = mul(x = var_5200_cast, y = var_5201_to_fp16);
            tensor<string, []> var_5204_equation_0 = const()[name = tensor<string, []>("op_5204_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 64]> var_5204_cast = einsum(equation = var_5204_equation_0, values = (var_5046_cast, var_4963_cast));
            tensor<fp16, []> var_5205_to_fp16 = const()[name = tensor<string, []>("op_5205_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 64]> aw_343_cast = mul(x = var_5204_cast, y = var_5205_to_fp16);
            tensor<string, []> var_5208_equation_0 = const()[name = tensor<string, []>("op_5208_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 64]> var_5208_cast = einsum(equation = var_5208_equation_0, values = (var_5050_cast, var_4967_cast));
            tensor<fp16, []> var_5209_to_fp16 = const()[name = tensor<string, []>("op_5209_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 64]> aw_345_cast = mul(x = var_5208_cast, y = var_5209_to_fp16);
            tensor<string, []> var_5212_equation_0 = const()[name = tensor<string, []>("op_5212_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 64]> var_5212_cast = einsum(equation = var_5212_equation_0, values = (var_5054_cast, var_4971_cast));
            tensor<fp16, []> var_5213_to_fp16 = const()[name = tensor<string, []>("op_5213_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 64]> aw_347_cast = mul(x = var_5212_cast, y = var_5213_to_fp16);
            tensor<string, []> var_5216_equation_0 = const()[name = tensor<string, []>("op_5216_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 64]> var_5216_cast = einsum(equation = var_5216_equation_0, values = (var_5058_cast, var_4975_cast));
            tensor<fp16, []> var_5217_to_fp16 = const()[name = tensor<string, []>("op_5217_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 64]> aw_349_cast = mul(x = var_5216_cast, y = var_5217_to_fp16);
            tensor<string, []> var_5220_equation_0 = const()[name = tensor<string, []>("op_5220_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 64]> var_5220_cast = einsum(equation = var_5220_equation_0, values = (var_5062_cast, var_4979_cast));
            tensor<fp16, []> var_5221_to_fp16 = const()[name = tensor<string, []>("op_5221_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 64]> aw_351_cast = mul(x = var_5220_cast, y = var_5221_to_fp16);
            tensor<string, []> var_5224_equation_0 = const()[name = tensor<string, []>("op_5224_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 64]> var_5224_cast = einsum(equation = var_5224_equation_0, values = (var_5066_cast, var_4983_cast));
            tensor<fp16, []> var_5225_to_fp16 = const()[name = tensor<string, []>("op_5225_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 64]> aw_353_cast = mul(x = var_5224_cast, y = var_5225_to_fp16);
            tensor<string, []> var_5228_equation_0 = const()[name = tensor<string, []>("op_5228_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 64]> var_5228_cast = einsum(equation = var_5228_equation_0, values = (var_5070_cast, var_4987_cast));
            tensor<fp16, []> var_5229_to_fp16 = const()[name = tensor<string, []>("op_5229_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 64]> aw_355_cast = mul(x = var_5228_cast, y = var_5229_to_fp16);
            tensor<string, []> var_5232_equation_0 = const()[name = tensor<string, []>("op_5232_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 64]> var_5232_cast = einsum(equation = var_5232_equation_0, values = (var_5074_cast, var_4991_cast));
            tensor<fp16, []> var_5233_to_fp16 = const()[name = tensor<string, []>("op_5233_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 64]> aw_357_cast = mul(x = var_5232_cast, y = var_5233_to_fp16);
            tensor<string, []> var_5236_equation_0 = const()[name = tensor<string, []>("op_5236_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 64]> var_5236_cast = einsum(equation = var_5236_equation_0, values = (var_5078_cast, var_4995_cast));
            tensor<fp16, []> var_5237_to_fp16 = const()[name = tensor<string, []>("op_5237_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 64]> aw_359_cast = mul(x = var_5236_cast, y = var_5237_to_fp16);
            tensor<fp16, [2, 77, 1, 64]> var_5239_cast = softmax(axis = var_4371, x = aw_321_cast);
            tensor<fp16, [2, 77, 1, 64]> var_5240_cast = softmax(axis = var_4371, x = aw_323_cast);
            tensor<fp16, [2, 77, 1, 64]> var_5241_cast = softmax(axis = var_4371, x = aw_325_cast);
            tensor<fp16, [2, 77, 1, 64]> var_5242_cast = softmax(axis = var_4371, x = aw_327_cast);
            tensor<fp16, [2, 77, 1, 64]> var_5243_cast = softmax(axis = var_4371, x = aw_329_cast);
            tensor<fp16, [2, 77, 1, 64]> var_5244_cast = softmax(axis = var_4371, x = aw_331_cast);
            tensor<fp16, [2, 77, 1, 64]> var_5245_cast = softmax(axis = var_4371, x = aw_333_cast);
            tensor<fp16, [2, 77, 1, 64]> var_5246_cast = softmax(axis = var_4371, x = aw_335_cast);
            tensor<fp16, [2, 77, 1, 64]> var_5247_cast = softmax(axis = var_4371, x = aw_337_cast);
            tensor<fp16, [2, 77, 1, 64]> var_5248_cast = softmax(axis = var_4371, x = aw_339_cast);
            tensor<fp16, [2, 77, 1, 64]> var_5249_cast = softmax(axis = var_4371, x = aw_341_cast);
            tensor<fp16, [2, 77, 1, 64]> var_5250_cast = softmax(axis = var_4371, x = aw_343_cast);
            tensor<fp16, [2, 77, 1, 64]> var_5251_cast = softmax(axis = var_4371, x = aw_345_cast);
            tensor<fp16, [2, 77, 1, 64]> var_5252_cast = softmax(axis = var_4371, x = aw_347_cast);
            tensor<fp16, [2, 77, 1, 64]> var_5253_cast = softmax(axis = var_4371, x = aw_349_cast);
            tensor<fp16, [2, 77, 1, 64]> var_5254_cast = softmax(axis = var_4371, x = aw_351_cast);
            tensor<fp16, [2, 77, 1, 64]> var_5255_cast = softmax(axis = var_4371, x = aw_353_cast);
            tensor<fp16, [2, 77, 1, 64]> var_5256_cast = softmax(axis = var_4371, x = aw_355_cast);
            tensor<fp16, [2, 77, 1, 64]> var_5257_cast = softmax(axis = var_4371, x = aw_357_cast);
            tensor<fp16, [2, 77, 1, 64]> var_5258_cast = softmax(axis = var_4371, x = aw_359_cast);
            tensor<string, []> var_5260_equation_0 = const()[name = tensor<string, []>("op_5260_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 64]> var_5260_cast = einsum(equation = var_5260_equation_0, values = (var_5080_cast, var_5239_cast));
            tensor<string, []> var_5262_equation_0 = const()[name = tensor<string, []>("op_5262_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 64]> var_5262_cast = einsum(equation = var_5262_equation_0, values = (var_5084_cast, var_5240_cast));
            tensor<string, []> var_5264_equation_0 = const()[name = tensor<string, []>("op_5264_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 64]> var_5264_cast = einsum(equation = var_5264_equation_0, values = (var_5088_cast, var_5241_cast));
            tensor<string, []> var_5266_equation_0 = const()[name = tensor<string, []>("op_5266_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 64]> var_5266_cast = einsum(equation = var_5266_equation_0, values = (var_5092_cast, var_5242_cast));
            tensor<string, []> var_5268_equation_0 = const()[name = tensor<string, []>("op_5268_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 64]> var_5268_cast = einsum(equation = var_5268_equation_0, values = (var_5096_cast, var_5243_cast));
            tensor<string, []> var_5270_equation_0 = const()[name = tensor<string, []>("op_5270_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 64]> var_5270_cast = einsum(equation = var_5270_equation_0, values = (var_5100_cast, var_5244_cast));
            tensor<string, []> var_5272_equation_0 = const()[name = tensor<string, []>("op_5272_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 64]> var_5272_cast = einsum(equation = var_5272_equation_0, values = (var_5104_cast, var_5245_cast));
            tensor<string, []> var_5274_equation_0 = const()[name = tensor<string, []>("op_5274_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 64]> var_5274_cast = einsum(equation = var_5274_equation_0, values = (var_5108_cast, var_5246_cast));
            tensor<string, []> var_5276_equation_0 = const()[name = tensor<string, []>("op_5276_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 64]> var_5276_cast = einsum(equation = var_5276_equation_0, values = (var_5112_cast, var_5247_cast));
            tensor<string, []> var_5278_equation_0 = const()[name = tensor<string, []>("op_5278_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 64]> var_5278_cast = einsum(equation = var_5278_equation_0, values = (var_5116_cast, var_5248_cast));
            tensor<string, []> var_5280_equation_0 = const()[name = tensor<string, []>("op_5280_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 64]> var_5280_cast = einsum(equation = var_5280_equation_0, values = (var_5120_cast, var_5249_cast));
            tensor<string, []> var_5282_equation_0 = const()[name = tensor<string, []>("op_5282_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 64]> var_5282_cast = einsum(equation = var_5282_equation_0, values = (var_5124_cast, var_5250_cast));
            tensor<string, []> var_5284_equation_0 = const()[name = tensor<string, []>("op_5284_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 64]> var_5284_cast = einsum(equation = var_5284_equation_0, values = (var_5128_cast, var_5251_cast));
            tensor<string, []> var_5286_equation_0 = const()[name = tensor<string, []>("op_5286_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 64]> var_5286_cast = einsum(equation = var_5286_equation_0, values = (var_5132_cast, var_5252_cast));
            tensor<string, []> var_5288_equation_0 = const()[name = tensor<string, []>("op_5288_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 64]> var_5288_cast = einsum(equation = var_5288_equation_0, values = (var_5136_cast, var_5253_cast));
            tensor<string, []> var_5290_equation_0 = const()[name = tensor<string, []>("op_5290_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 64]> var_5290_cast = einsum(equation = var_5290_equation_0, values = (var_5140_cast, var_5254_cast));
            tensor<string, []> var_5292_equation_0 = const()[name = tensor<string, []>("op_5292_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 64]> var_5292_cast = einsum(equation = var_5292_equation_0, values = (var_5144_cast, var_5255_cast));
            tensor<string, []> var_5294_equation_0 = const()[name = tensor<string, []>("op_5294_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 64]> var_5294_cast = einsum(equation = var_5294_equation_0, values = (var_5148_cast, var_5256_cast));
            tensor<string, []> var_5296_equation_0 = const()[name = tensor<string, []>("op_5296_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 64]> var_5296_cast = einsum(equation = var_5296_equation_0, values = (var_5152_cast, var_5257_cast));
            tensor<string, []> var_5298_equation_0 = const()[name = tensor<string, []>("op_5298_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 64]> var_5298_cast = einsum(equation = var_5298_equation_0, values = (var_5156_cast, var_5258_cast));
            tensor<bool, []> input_217_interleave_0 = const()[name = tensor<string, []>("input_217_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 1280, 1, 64]> input_217_cast = concat(axis = var_4371, interleave = input_217_interleave_0, values = (var_5260_cast, var_5262_cast, var_5264_cast, var_5266_cast, var_5268_cast, var_5270_cast, var_5272_cast, var_5274_cast, var_5276_cast, var_5278_cast, var_5280_cast, var_5282_cast, var_5284_cast, var_5286_cast, var_5288_cast, var_5290_cast, var_5292_cast, var_5294_cast, var_5296_cast, var_5298_cast));
            tensor<int32, [2]> var_5304 = const()[name = tensor<string, []>("op_5304"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5306 = const()[name = tensor<string, []>("op_5306"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_5308_pad_type_0 = const()[name = tensor<string, []>("op_5308_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_5308_pad_0 = const()[name = tensor<string, []>("op_5308_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> mid_block_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(595245760)))];
            tensor<fp16, [1280]> mid_block_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(598522624)))];
            tensor<fp16, [2, 1280, 1, 64]> var_5308_cast = conv(bias = mid_block_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16, dilations = var_5306, groups = var_4371, pad = var_5308_pad_0, pad_type = var_5308_pad_type_0, strides = var_5304, weight = mid_block_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16, x = input_217_cast);
            tensor<fp16, [2, 1280, 1, 64]> inputs_41_cast = add(x = var_5308_cast, y = inputs_39_cast);
            tensor<int32, [1]> var_5312 = const()[name = tensor<string, []>("op_5312"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 64]> channels_mean_41_cast = reduce_mean(axes = var_5312, keep_dims = var_4366, x = inputs_41_cast);
            tensor<fp16, [2, 1280, 1, 64]> zero_mean_41_cast = sub(x = inputs_41_cast, y = channels_mean_41_cast);
            tensor<fp16, [2, 1280, 1, 64]> zero_mean_sq_41_cast = mul(x = zero_mean_41_cast, y = zero_mean_41_cast);
            tensor<int32, [1]> var_5316 = const()[name = tensor<string, []>("op_5316"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 64]> var_5317_cast = reduce_mean(axes = var_5316, keep_dims = var_4366, x = zero_mean_sq_41_cast);
            tensor<fp16, []> var_5318_to_fp16 = const()[name = tensor<string, []>("op_5318_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 64]> var_5319_cast = add(x = var_5317_cast, y = var_5318_to_fp16);
            tensor<fp16, []> denom_41_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_41_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 64]> denom_41_cast = rsqrt(epsilon = denom_41_epsilon_0_to_fp16, x = var_5319_cast);
            tensor<fp16, [2, 1280, 1, 64]> out_41_cast = mul(x = zero_mean_41_cast, y = denom_41_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_5323_to_fp16 = const()[name = tensor<string, []>("op_5323_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(598525248)))];
            tensor<fp16, [2, 1280, 1, 64]> var_5324_cast = add(x = out_41_cast, y = var_5323_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_5326_to_fp16 = const()[name = tensor<string, []>("op_5326_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(598527872)))];
            tensor<fp16, [2, 1280, 1, 64]> input_219_cast = mul(x = var_5324_cast, y = var_5326_to_fp16);
            tensor<int32, [2]> var_5334 = const()[name = tensor<string, []>("op_5334"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5336 = const()[name = tensor<string, []>("op_5336"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_5338_pad_type_0 = const()[name = tensor<string, []>("op_5338_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_5338_pad_0 = const()[name = tensor<string, []>("op_5338_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [10240, 1280, 1, 1]> mid_block_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16"), val = tensor<fp16, [10240, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(598530496)))];
            tensor<fp16, [10240]> mid_block_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16"), val = tensor<fp16, [10240]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(624744960)))];
            tensor<fp16, [2, 10240, 1, 64]> var_5338_cast = conv(bias = mid_block_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16, dilations = var_5336, groups = var_4371, pad = var_5338_pad_0, pad_type = var_5338_pad_type_0, strides = var_5334, weight = mid_block_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16, x = input_219_cast);
            tensor<int32, [2]> var_5339_split_sizes_0 = const()[name = tensor<string, []>("op_5339_split_sizes_0"), val = tensor<int32, [2]>([5120, 5120])];
            tensor<int32, []> var_5339_axis_0 = const()[name = tensor<string, []>("op_5339_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [2, 5120, 1, 64]> var_5339_cast_0, tensor<fp16, [2, 5120, 1, 64]> var_5339_cast_1 = split(axis = var_5339_axis_0, split_sizes = var_5339_split_sizes_0, x = var_5338_cast);
            tensor<string, []> var_5341_mode_0 = const()[name = tensor<string, []>("op_5341_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [2, 5120, 1, 64]> var_5341_cast = gelu(mode = var_5341_mode_0, x = var_5339_cast_1);
            tensor<fp16, [2, 5120, 1, 64]> input_221_cast = mul(x = var_5339_cast_0, y = var_5341_cast);
            tensor<int32, [2]> var_5345 = const()[name = tensor<string, []>("op_5345"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5347 = const()[name = tensor<string, []>("op_5347"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_5349_pad_type_0 = const()[name = tensor<string, []>("op_5349_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_5349_pad_0 = const()[name = tensor<string, []>("op_5349_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 5120, 1, 1]> mid_block_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(624765504)))];
            tensor<fp16, [1280]> mid_block_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(637872768)))];
            tensor<fp16, [2, 1280, 1, 64]> var_5349_cast = conv(bias = mid_block_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16, dilations = var_5347, groups = var_4371, pad = var_5349_pad_0, pad_type = var_5349_pad_type_0, strides = var_5345, weight = mid_block_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16, x = input_221_cast);
            tensor<fp16, [2, 1280, 1, 64]> hidden_states_131_cast = add(x = var_5349_cast, y = inputs_41_cast);
            tensor<int32, [4]> var_5351 = const()[name = tensor<string, []>("op_5351"), val = tensor<int32, [4]>([2, 1280, 8, 8])];
            tensor<fp16, [2, 1280, 8, 8]> input_223_cast = reshape(shape = var_5351, x = hidden_states_131_cast);
            tensor<int32, [2]> var_5355 = const()[name = tensor<string, []>("op_5355"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5357 = const()[name = tensor<string, []>("op_5357"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_133_pad_type_0 = const()[name = tensor<string, []>("hidden_states_133_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_133_pad_0 = const()[name = tensor<string, []>("hidden_states_133_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> mid_block_attentions_0_proj_out_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_proj_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(637875392)))];
            tensor<fp16, [1280]> mid_block_attentions_0_proj_out_bias_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_proj_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(641152256)))];
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_133_cast = conv(bias = mid_block_attentions_0_proj_out_bias_to_fp16, dilations = var_5357, groups = var_4371, pad = hidden_states_133_pad_0, pad_type = hidden_states_133_pad_type_0, strides = var_5355, weight = mid_block_attentions_0_proj_out_weight_to_fp16, x = input_223_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_225_cast = add(x = hidden_states_133_cast, y = hidden_states_121_cast);
            tensor<int32, [5]> reshape_100_shape_0 = const()[name = tensor<string, []>("reshape_100_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 8, 8])];
            tensor<fp16, [2, 32, 40, 8, 8]> reshape_100_cast = reshape(shape = reshape_100_shape_0, x = input_225_cast);
            tensor<int32, [3]> reduce_mean_75_axes_0 = const()[name = tensor<string, []>("reduce_mean_75_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_75_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_75_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_75_cast = reduce_mean(axes = reduce_mean_75_axes_0, keep_dims = reduce_mean_75_keep_dims_0, x = reshape_100_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> sub_50_cast = sub(x = reshape_100_cast, y = reduce_mean_75_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> square_25_cast = square(x = sub_50_cast);
            tensor<int32, [3]> reduce_mean_77_axes_0 = const()[name = tensor<string, []>("reduce_mean_77_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_77_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_77_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_77_cast = reduce_mean(axes = reduce_mean_77_axes_0, keep_dims = reduce_mean_77_keep_dims_0, x = square_25_cast);
            tensor<fp16, []> add_50_y_0_to_fp16 = const()[name = tensor<string, []>("add_50_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_50_cast = add(x = reduce_mean_77_cast, y = add_50_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_25_cast = sqrt(x = add_50_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> real_div_25_cast = real_div(x = sub_50_cast, y = sqrt_25_cast);
            tensor<int32, [4]> reshape_101_shape_0 = const()[name = tensor<string, []>("reshape_101_shape_0"), val = tensor<int32, [4]>([2, 1280, 8, 8])];
            tensor<fp16, [2, 1280, 8, 8]> reshape_101_cast = reshape(shape = reshape_101_shape_0, x = real_div_25_cast);
            tensor<fp16, [1280]> add_51_mean_0_to_fp16 = const()[name = tensor<string, []>("add_51_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(641154880)))];
            tensor<fp16, [1280]> add_51_variance_0_to_fp16 = const()[name = tensor<string, []>("add_51_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(641157504)))];
            tensor<fp16, [1280]> add_51_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_51_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(641160128)))];
            tensor<fp16, [1280]> add_51_beta_0_to_fp16 = const()[name = tensor<string, []>("add_51_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(641162752)))];
            tensor<fp16, []> add_51_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_51_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 8, 8]> add_51_cast = batch_norm(beta = add_51_beta_0_to_fp16, epsilon = add_51_epsilon_0_to_fp16, gamma = add_51_gamma_0_to_fp16, mean = add_51_mean_0_to_fp16, variance = add_51_variance_0_to_fp16, x = reshape_101_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_229_cast = silu(x = add_51_cast);
            tensor<int32, [2]> var_5372 = const()[name = tensor<string, []>("op_5372"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5374 = const()[name = tensor<string, []>("op_5374"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_135_pad_type_0 = const()[name = tensor<string, []>("hidden_states_135_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_135_pad_0 = const()[name = tensor<string, []>("hidden_states_135_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> mid_block_resnets_1_conv1_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_resnets_1_conv1_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(641165376)))];
            tensor<fp16, [1280]> mid_block_resnets_1_conv1_bias_to_fp16 = const()[name = tensor<string, []>("mid_block_resnets_1_conv1_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(670656640)))];
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_135_cast = conv(bias = mid_block_resnets_1_conv1_bias_to_fp16, dilations = var_5374, groups = var_4371, pad = hidden_states_135_pad_0, pad_type = hidden_states_135_pad_type_0, strides = var_5372, weight = mid_block_resnets_1_conv1_weight_to_fp16, x = input_229_cast);
            tensor<int32, [2]> var_5380 = const()[name = tensor<string, []>("op_5380"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5382 = const()[name = tensor<string, []>("op_5382"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_19_pad_type_0 = const()[name = tensor<string, []>("temb_19_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_19_pad_0 = const()[name = tensor<string, []>("temb_19_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> mid_block_resnets_1_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_resnets_1_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(670659264)))];
            tensor<fp16, [1280]> mid_block_resnets_1_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("mid_block_resnets_1_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(673936128)))];
            tensor<fp16, [2, 1280, 1, 1]> temb_19_cast = conv(bias = mid_block_resnets_1_time_emb_proj_bias_to_fp16, dilations = var_5382, groups = var_4371, pad = temb_19_pad_0, pad_type = temb_19_pad_type_0, strides = var_5380, weight = mid_block_resnets_1_time_emb_proj_weight_to_fp16, x = input_15_cast_1);
            tensor<fp16, [2, 1280, 8, 8]> input_233_cast = add(x = hidden_states_135_cast, y = temb_19_cast);
            tensor<int32, [5]> reshape_104_shape_0 = const()[name = tensor<string, []>("reshape_104_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 8, 8])];
            tensor<fp16, [2, 32, 40, 8, 8]> reshape_104_cast = reshape(shape = reshape_104_shape_0, x = input_233_cast);
            tensor<int32, [3]> reduce_mean_78_axes_0 = const()[name = tensor<string, []>("reduce_mean_78_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_78_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_78_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_78_cast = reduce_mean(axes = reduce_mean_78_axes_0, keep_dims = reduce_mean_78_keep_dims_0, x = reshape_104_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> sub_52_cast = sub(x = reshape_104_cast, y = reduce_mean_78_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> square_26_cast = square(x = sub_52_cast);
            tensor<int32, [3]> reduce_mean_80_axes_0 = const()[name = tensor<string, []>("reduce_mean_80_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_80_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_80_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_80_cast = reduce_mean(axes = reduce_mean_80_axes_0, keep_dims = reduce_mean_80_keep_dims_0, x = square_26_cast);
            tensor<fp16, []> add_52_y_0_to_fp16 = const()[name = tensor<string, []>("add_52_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_52_cast = add(x = reduce_mean_80_cast, y = add_52_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_26_cast = sqrt(x = add_52_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> real_div_26_cast = real_div(x = sub_52_cast, y = sqrt_26_cast);
            tensor<int32, [4]> reshape_105_shape_0 = const()[name = tensor<string, []>("reshape_105_shape_0"), val = tensor<int32, [4]>([2, 1280, 8, 8])];
            tensor<fp16, [2, 1280, 8, 8]> reshape_105_cast = reshape(shape = reshape_105_shape_0, x = real_div_26_cast);
            tensor<fp16, [1280]> add_53_mean_0_to_fp16 = const()[name = tensor<string, []>("add_53_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(673938752)))];
            tensor<fp16, [1280]> add_53_variance_0_to_fp16 = const()[name = tensor<string, []>("add_53_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(673941376)))];
            tensor<fp16, [1280]> add_53_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_53_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(673944000)))];
            tensor<fp16, [1280]> add_53_beta_0_to_fp16 = const()[name = tensor<string, []>("add_53_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(673946624)))];
            tensor<fp16, []> add_53_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_53_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 8, 8]> add_53_cast = batch_norm(beta = add_53_beta_0_to_fp16, epsilon = add_53_epsilon_0_to_fp16, gamma = add_53_gamma_0_to_fp16, mean = add_53_mean_0_to_fp16, variance = add_53_variance_0_to_fp16, x = reshape_105_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_237_cast = silu(x = add_53_cast);
            tensor<int32, [2]> var_5392 = const()[name = tensor<string, []>("op_5392"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5394 = const()[name = tensor<string, []>("op_5394"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_137_pad_type_0 = const()[name = tensor<string, []>("hidden_states_137_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_137_pad_0 = const()[name = tensor<string, []>("hidden_states_137_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> mid_block_resnets_1_conv2_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_resnets_1_conv2_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(673949248)))];
            tensor<fp16, [1280]> mid_block_resnets_1_conv2_bias_to_fp16 = const()[name = tensor<string, []>("mid_block_resnets_1_conv2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(703440512)))];
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_137_cast = conv(bias = mid_block_resnets_1_conv2_bias_to_fp16, dilations = var_5394, groups = var_4371, pad = hidden_states_137_pad_0, pad_type = hidden_states_137_pad_type_0, strides = var_5392, weight = mid_block_resnets_1_conv2_weight_to_fp16, x = input_237_cast);
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_139_cast = add(x = input_225_cast, y = hidden_states_137_cast);
            tensor<int32, []> var_5405 = const()[name = tensor<string, []>("op_5405"), val = tensor<int32, []>(1)];
            tensor<bool, []> input_239_interleave_0 = const()[name = tensor<string, []>("input_239_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 2560, 8, 8]> input_239_cast = concat(axis = var_5405, interleave = input_239_interleave_0, values = (hidden_states_139_cast, input_199_cast));
            tensor<int32, [5]> reshape_108_shape_0 = const()[name = tensor<string, []>("reshape_108_shape_0"), val = tensor<int32, [5]>([2, 32, 80, 8, 8])];
            tensor<fp16, [2, 32, 80, 8, 8]> reshape_108_cast = reshape(shape = reshape_108_shape_0, x = input_239_cast);
            tensor<int32, [3]> reduce_mean_81_axes_0 = const()[name = tensor<string, []>("reduce_mean_81_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_81_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_81_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_81_cast = reduce_mean(axes = reduce_mean_81_axes_0, keep_dims = reduce_mean_81_keep_dims_0, x = reshape_108_cast);
            tensor<fp16, [2, 32, 80, 8, 8]> sub_54_cast = sub(x = reshape_108_cast, y = reduce_mean_81_cast);
            tensor<fp16, [2, 32, 80, 8, 8]> square_27_cast = square(x = sub_54_cast);
            tensor<int32, [3]> reduce_mean_83_axes_0 = const()[name = tensor<string, []>("reduce_mean_83_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_83_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_83_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_83_cast = reduce_mean(axes = reduce_mean_83_axes_0, keep_dims = reduce_mean_83_keep_dims_0, x = square_27_cast);
            tensor<fp16, []> add_54_y_0_to_fp16 = const()[name = tensor<string, []>("add_54_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_54_cast = add(x = reduce_mean_83_cast, y = add_54_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_27_cast = sqrt(x = add_54_cast);
            tensor<fp16, [2, 32, 80, 8, 8]> real_div_27_cast = real_div(x = sub_54_cast, y = sqrt_27_cast);
            tensor<int32, [4]> reshape_109_shape_0 = const()[name = tensor<string, []>("reshape_109_shape_0"), val = tensor<int32, [4]>([2, 2560, 8, 8])];
            tensor<fp16, [2, 2560, 8, 8]> reshape_109_cast = reshape(shape = reshape_109_shape_0, x = real_div_27_cast);
            tensor<fp16, [2560]> add_55_mean_0_to_fp16 = const()[name = tensor<string, []>("add_55_mean_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(703443136)))];
            tensor<fp16, [2560]> add_55_variance_0_to_fp16 = const()[name = tensor<string, []>("add_55_variance_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(703448320)))];
            tensor<fp16, [2560]> add_55_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_55_gamma_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(703453504)))];
            tensor<fp16, [2560]> add_55_beta_0_to_fp16 = const()[name = tensor<string, []>("add_55_beta_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(703458688)))];
            tensor<fp16, []> add_55_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_55_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 2560, 8, 8]> add_55_cast = batch_norm(beta = add_55_beta_0_to_fp16, epsilon = add_55_epsilon_0_to_fp16, gamma = add_55_gamma_0_to_fp16, mean = add_55_mean_0_to_fp16, variance = add_55_variance_0_to_fp16, x = reshape_109_cast);
            tensor<fp16, [2, 2560, 8, 8]> input_243_cast = silu(x = add_55_cast);
            tensor<int32, [2]> var_5428 = const()[name = tensor<string, []>("op_5428"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5430 = const()[name = tensor<string, []>("op_5430"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_141_pad_type_0 = const()[name = tensor<string, []>("hidden_states_141_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_141_pad_0 = const()[name = tensor<string, []>("hidden_states_141_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 2560, 3, 3]> up_blocks_0_resnets_0_conv1_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_0_conv1_weight_to_fp16"), val = tensor<fp16, [1280, 2560, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(703463872)))];
            tensor<fp16, [1280]> up_blocks_0_resnets_0_conv1_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_0_conv1_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(762446336)))];
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_141_cast = conv(bias = up_blocks_0_resnets_0_conv1_bias_to_fp16, dilations = var_5430, groups = var_5405, pad = hidden_states_141_pad_0, pad_type = hidden_states_141_pad_type_0, strides = var_5428, weight = up_blocks_0_resnets_0_conv1_weight_to_fp16, x = input_243_cast);
            tensor<int32, [2]> var_5436 = const()[name = tensor<string, []>("op_5436"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5438 = const()[name = tensor<string, []>("op_5438"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_21_pad_type_0 = const()[name = tensor<string, []>("temb_21_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_21_pad_0 = const()[name = tensor<string, []>("temb_21_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_0_resnets_0_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_0_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(762448960)))];
            tensor<fp16, [1280]> up_blocks_0_resnets_0_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_0_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(765725824)))];
            tensor<fp16, [2, 1280, 1, 1]> temb_21_cast = conv(bias = up_blocks_0_resnets_0_time_emb_proj_bias_to_fp16, dilations = var_5438, groups = var_5405, pad = temb_21_pad_0, pad_type = temb_21_pad_type_0, strides = var_5436, weight = up_blocks_0_resnets_0_time_emb_proj_weight_to_fp16, x = input_15_cast_1);
            tensor<fp16, [2, 1280, 8, 8]> input_247_cast = add(x = hidden_states_141_cast, y = temb_21_cast);
            tensor<int32, [5]> reshape_112_shape_0 = const()[name = tensor<string, []>("reshape_112_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 8, 8])];
            tensor<fp16, [2, 32, 40, 8, 8]> reshape_112_cast = reshape(shape = reshape_112_shape_0, x = input_247_cast);
            tensor<int32, [3]> reduce_mean_84_axes_0 = const()[name = tensor<string, []>("reduce_mean_84_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_84_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_84_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_84_cast = reduce_mean(axes = reduce_mean_84_axes_0, keep_dims = reduce_mean_84_keep_dims_0, x = reshape_112_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> sub_56_cast = sub(x = reshape_112_cast, y = reduce_mean_84_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> square_28_cast = square(x = sub_56_cast);
            tensor<int32, [3]> reduce_mean_86_axes_0 = const()[name = tensor<string, []>("reduce_mean_86_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_86_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_86_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_86_cast = reduce_mean(axes = reduce_mean_86_axes_0, keep_dims = reduce_mean_86_keep_dims_0, x = square_28_cast);
            tensor<fp16, []> add_56_y_0_to_fp16 = const()[name = tensor<string, []>("add_56_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_56_cast = add(x = reduce_mean_86_cast, y = add_56_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_28_cast = sqrt(x = add_56_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> real_div_28_cast = real_div(x = sub_56_cast, y = sqrt_28_cast);
            tensor<int32, [4]> reshape_113_shape_0 = const()[name = tensor<string, []>("reshape_113_shape_0"), val = tensor<int32, [4]>([2, 1280, 8, 8])];
            tensor<fp16, [2, 1280, 8, 8]> reshape_113_cast = reshape(shape = reshape_113_shape_0, x = real_div_28_cast);
            tensor<fp16, [1280]> add_57_mean_0_to_fp16 = const()[name = tensor<string, []>("add_57_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(765728448)))];
            tensor<fp16, [1280]> add_57_variance_0_to_fp16 = const()[name = tensor<string, []>("add_57_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(765731072)))];
            tensor<fp16, [1280]> add_57_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_57_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(765733696)))];
            tensor<fp16, [1280]> add_57_beta_0_to_fp16 = const()[name = tensor<string, []>("add_57_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(765736320)))];
            tensor<fp16, []> add_57_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_57_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 8, 8]> add_57_cast = batch_norm(beta = add_57_beta_0_to_fp16, epsilon = add_57_epsilon_0_to_fp16, gamma = add_57_gamma_0_to_fp16, mean = add_57_mean_0_to_fp16, variance = add_57_variance_0_to_fp16, x = reshape_113_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_251_cast = silu(x = add_57_cast);
            tensor<int32, [2]> var_5448 = const()[name = tensor<string, []>("op_5448"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5450 = const()[name = tensor<string, []>("op_5450"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_143_pad_type_0 = const()[name = tensor<string, []>("hidden_states_143_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_143_pad_0 = const()[name = tensor<string, []>("hidden_states_143_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> up_blocks_0_resnets_0_conv2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_0_conv2_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(765738944)))];
            tensor<fp16, [1280]> up_blocks_0_resnets_0_conv2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_0_conv2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(795230208)))];
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_143_cast = conv(bias = up_blocks_0_resnets_0_conv2_bias_to_fp16, dilations = var_5450, groups = var_5405, pad = hidden_states_143_pad_0, pad_type = hidden_states_143_pad_type_0, strides = var_5448, weight = up_blocks_0_resnets_0_conv2_weight_to_fp16, x = input_251_cast);
            tensor<int32, [2]> var_5455 = const()[name = tensor<string, []>("op_5455"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5457 = const()[name = tensor<string, []>("op_5457"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_5_pad_type_0 = const()[name = tensor<string, []>("x_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_5_pad_0 = const()[name = tensor<string, []>("x_5_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 2560, 1, 1]> up_blocks_0_resnets_0_conv_shortcut_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_0_conv_shortcut_weight_to_fp16"), val = tensor<fp16, [1280, 2560, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(795232832)))];
            tensor<fp16, [1280]> up_blocks_0_resnets_0_conv_shortcut_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_0_conv_shortcut_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(801786496)))];
            tensor<fp16, [2, 1280, 8, 8]> x_5_cast = conv(bias = up_blocks_0_resnets_0_conv_shortcut_bias_to_fp16, dilations = var_5457, groups = var_5405, pad = x_5_pad_0, pad_type = x_5_pad_type_0, strides = var_5455, weight = up_blocks_0_resnets_0_conv_shortcut_weight_to_fp16, x = input_239_cast);
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_145_cast = add(x = x_5_cast, y = hidden_states_143_cast);
            tensor<bool, []> input_253_interleave_0 = const()[name = tensor<string, []>("input_253_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 2560, 8, 8]> input_253_cast_1 = concat(axis = var_5405, interleave = input_253_interleave_0, values = (hidden_states_145_cast, input_185_cast));
            tensor<int32, [5]> reshape_116_shape_0 = const()[name = tensor<string, []>("reshape_116_shape_0"), val = tensor<int32, [5]>([2, 32, 80, 8, 8])];
            tensor<fp16, [2, 32, 80, 8, 8]> reshape_116_cast = reshape(shape = reshape_116_shape_0, x = input_253_cast_1);
            tensor<int32, [3]> reduce_mean_87_axes_0 = const()[name = tensor<string, []>("reduce_mean_87_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_87_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_87_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_87_cast = reduce_mean(axes = reduce_mean_87_axes_0, keep_dims = reduce_mean_87_keep_dims_0, x = reshape_116_cast);
            tensor<fp16, [2, 32, 80, 8, 8]> sub_58_cast = sub(x = reshape_116_cast, y = reduce_mean_87_cast);
            tensor<fp16, [2, 32, 80, 8, 8]> square_29_cast = square(x = sub_58_cast);
            tensor<int32, [3]> reduce_mean_89_axes_0 = const()[name = tensor<string, []>("reduce_mean_89_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_89_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_89_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_89_cast = reduce_mean(axes = reduce_mean_89_axes_0, keep_dims = reduce_mean_89_keep_dims_0, x = square_29_cast);
            tensor<fp16, []> add_58_y_0_to_fp16 = const()[name = tensor<string, []>("add_58_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_58_cast = add(x = reduce_mean_89_cast, y = add_58_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_29_cast = sqrt(x = add_58_cast);
            tensor<fp16, [2, 32, 80, 8, 8]> real_div_29_cast = real_div(x = sub_58_cast, y = sqrt_29_cast);
            tensor<int32, [4]> reshape_117_shape_0 = const()[name = tensor<string, []>("reshape_117_shape_0"), val = tensor<int32, [4]>([2, 2560, 8, 8])];
            tensor<fp16, [2, 2560, 8, 8]> reshape_117_cast = reshape(shape = reshape_117_shape_0, x = real_div_29_cast);
            tensor<fp16, [2560]> add_59_mean_0_to_fp16 = const()[name = tensor<string, []>("add_59_mean_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(801789120)))];
            tensor<fp16, [2560]> add_59_variance_0_to_fp16 = const()[name = tensor<string, []>("add_59_variance_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(801794304)))];
            tensor<fp16, [2560]> add_59_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_59_gamma_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(801799488)))];
            tensor<fp16, [2560]> add_59_beta_0_to_fp16 = const()[name = tensor<string, []>("add_59_beta_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(801804672)))];
            tensor<fp16, []> add_59_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_59_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 2560, 8, 8]> add_59_cast = batch_norm(beta = add_59_beta_0_to_fp16, epsilon = add_59_epsilon_0_to_fp16, gamma = add_59_gamma_0_to_fp16, mean = add_59_mean_0_to_fp16, variance = add_59_variance_0_to_fp16, x = reshape_117_cast);
            tensor<fp16, [2, 2560, 8, 8]> input_257_cast = silu(x = add_59_cast);
            tensor<int32, [2]> var_5475 = const()[name = tensor<string, []>("op_5475"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5477 = const()[name = tensor<string, []>("op_5477"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_147_pad_type_0 = const()[name = tensor<string, []>("hidden_states_147_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_147_pad_0 = const()[name = tensor<string, []>("hidden_states_147_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 2560, 3, 3]> up_blocks_0_resnets_1_conv1_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_1_conv1_weight_to_fp16"), val = tensor<fp16, [1280, 2560, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(801809856)))];
            tensor<fp16, [1280]> up_blocks_0_resnets_1_conv1_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_1_conv1_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(860792320)))];
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_147_cast = conv(bias = up_blocks_0_resnets_1_conv1_bias_to_fp16, dilations = var_5477, groups = var_5405, pad = hidden_states_147_pad_0, pad_type = hidden_states_147_pad_type_0, strides = var_5475, weight = up_blocks_0_resnets_1_conv1_weight_to_fp16, x = input_257_cast);
            tensor<int32, [2]> var_5483 = const()[name = tensor<string, []>("op_5483"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5485 = const()[name = tensor<string, []>("op_5485"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_23_pad_type_0 = const()[name = tensor<string, []>("temb_23_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_23_pad_0 = const()[name = tensor<string, []>("temb_23_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_0_resnets_1_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_1_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(860794944)))];
            tensor<fp16, [1280]> up_blocks_0_resnets_1_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_1_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(864071808)))];
            tensor<fp16, [2, 1280, 1, 1]> temb_23_cast = conv(bias = up_blocks_0_resnets_1_time_emb_proj_bias_to_fp16, dilations = var_5485, groups = var_5405, pad = temb_23_pad_0, pad_type = temb_23_pad_type_0, strides = var_5483, weight = up_blocks_0_resnets_1_time_emb_proj_weight_to_fp16, x = input_15_cast_1);
            tensor<fp16, [2, 1280, 8, 8]> input_261_cast = add(x = hidden_states_147_cast, y = temb_23_cast);
            tensor<int32, [5]> reshape_120_shape_0 = const()[name = tensor<string, []>("reshape_120_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 8, 8])];
            tensor<fp16, [2, 32, 40, 8, 8]> reshape_120_cast = reshape(shape = reshape_120_shape_0, x = input_261_cast);
            tensor<int32, [3]> reduce_mean_90_axes_0 = const()[name = tensor<string, []>("reduce_mean_90_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_90_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_90_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_90_cast = reduce_mean(axes = reduce_mean_90_axes_0, keep_dims = reduce_mean_90_keep_dims_0, x = reshape_120_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> sub_60_cast = sub(x = reshape_120_cast, y = reduce_mean_90_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> square_30_cast = square(x = sub_60_cast);
            tensor<int32, [3]> reduce_mean_92_axes_0 = const()[name = tensor<string, []>("reduce_mean_92_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_92_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_92_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_92_cast = reduce_mean(axes = reduce_mean_92_axes_0, keep_dims = reduce_mean_92_keep_dims_0, x = square_30_cast);
            tensor<fp16, []> add_60_y_0_to_fp16 = const()[name = tensor<string, []>("add_60_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_60_cast = add(x = reduce_mean_92_cast, y = add_60_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_30_cast = sqrt(x = add_60_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> real_div_30_cast = real_div(x = sub_60_cast, y = sqrt_30_cast);
            tensor<int32, [4]> reshape_121_shape_0 = const()[name = tensor<string, []>("reshape_121_shape_0"), val = tensor<int32, [4]>([2, 1280, 8, 8])];
            tensor<fp16, [2, 1280, 8, 8]> reshape_121_cast = reshape(shape = reshape_121_shape_0, x = real_div_30_cast);
            tensor<fp16, [1280]> add_61_mean_0_to_fp16 = const()[name = tensor<string, []>("add_61_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(864074432)))];
            tensor<fp16, [1280]> add_61_variance_0_to_fp16 = const()[name = tensor<string, []>("add_61_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(864077056)))];
            tensor<fp16, [1280]> add_61_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_61_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(864079680)))];
            tensor<fp16, [1280]> add_61_beta_0_to_fp16 = const()[name = tensor<string, []>("add_61_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(864082304)))];
            tensor<fp16, []> add_61_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_61_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 8, 8]> add_61_cast = batch_norm(beta = add_61_beta_0_to_fp16, epsilon = add_61_epsilon_0_to_fp16, gamma = add_61_gamma_0_to_fp16, mean = add_61_mean_0_to_fp16, variance = add_61_variance_0_to_fp16, x = reshape_121_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_265_cast = silu(x = add_61_cast);
            tensor<int32, [2]> var_5495 = const()[name = tensor<string, []>("op_5495"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5497 = const()[name = tensor<string, []>("op_5497"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_149_pad_type_0 = const()[name = tensor<string, []>("hidden_states_149_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_149_pad_0 = const()[name = tensor<string, []>("hidden_states_149_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> up_blocks_0_resnets_1_conv2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_1_conv2_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(864084928)))];
            tensor<fp16, [1280]> up_blocks_0_resnets_1_conv2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_1_conv2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(893576192)))];
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_149_cast_1 = conv(bias = up_blocks_0_resnets_1_conv2_bias_to_fp16, dilations = var_5497, groups = var_5405, pad = hidden_states_149_pad_0, pad_type = hidden_states_149_pad_type_0, strides = var_5495, weight = up_blocks_0_resnets_1_conv2_weight_to_fp16, x = input_265_cast);
            tensor<string, []> input_117_cast_dtype_0 = const()[name = tensor<string, []>("input_117_cast_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<string, []> input_7_cast_dtype_0 = const()[name = tensor<string, []>("input_7_cast_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<string, []> input_15_cast_dtype_0 = const()[name = tensor<string, []>("input_15_cast_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<string, []> input_35_cast_dtype_0 = const()[name = tensor<string, []>("input_35_cast_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<string, []> input_143_cast_dtype_0 = const()[name = tensor<string, []>("input_143_cast_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<string, []> input_169_cast_dtype_0 = const()[name = tensor<string, []>("input_169_cast_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<string, []> input_61_cast_dtype_0 = const()[name = tensor<string, []>("input_61_cast_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<string, []> hidden_states_149_cast_dtype_0 = const()[name = tensor<string, []>("hidden_states_149_cast_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<string, []> input_171_cast_dtype_0 = const()[name = tensor<string, []>("input_171_cast_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<string, []> input_115_cast_dtype_0 = const()[name = tensor<string, []>("input_115_cast_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<string, []> input_63_cast_dtype_0 = const()[name = tensor<string, []>("input_63_cast_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<string, []> input_253_cast_dtype_0 = const()[name = tensor<string, []>("input_253_cast_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<string, []> input_89_cast_dtype_0 = const()[name = tensor<string, []>("input_89_cast_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<fp32, [2, 640, 32, 32]> input_89_cast = cast(dtype = input_89_cast_dtype_0, x = input_89_cast_1);
            tensor<fp32, [2, 2560, 8, 8]> input_253_cast = cast(dtype = input_253_cast_dtype_0, x = input_253_cast_1);
            tensor<fp32, [2, 320, 32, 32]> input_63_cast = cast(dtype = input_63_cast_dtype_0, x = input_63_cast_1);
            tensor<fp32, [2, 640, 32, 32]> input_115_cast = cast(dtype = input_115_cast_dtype_0, x = input_115_cast_1);
            tensor<fp32, [2, 1280, 8, 8]> input_171_cast = cast(dtype = input_171_cast_dtype_0, x = input_171_cast_1);
            tensor<fp32, [2, 1280, 8, 8]> hidden_states_149_cast = cast(dtype = hidden_states_149_cast_dtype_0, x = hidden_states_149_cast_1);
            tensor<fp32, [2, 320, 64, 64]> input_61_cast = cast(dtype = input_61_cast_dtype_0, x = input_61_cast_1);
            tensor<fp32, [2, 1280, 16, 16]> input_169_cast = cast(dtype = input_169_cast_dtype_0, x = input_169_cast_1);
            tensor<fp32, [2, 1280, 16, 16]> input_143_cast = cast(dtype = input_143_cast_dtype_0, x = input_143_cast_1);
            tensor<fp32, [2, 320, 64, 64]> input_35_cast = cast(dtype = input_35_cast_dtype_0, x = input_35_cast_1);
            tensor<fp32, [2, 1280, 1, 1]> input_15_cast = cast(dtype = input_15_cast_dtype_0, x = input_15_cast_1);
            tensor<fp32, [2, 320, 64, 64]> input_7_cast = cast(dtype = input_7_cast_dtype_0, x = input_7_cast_1);
            tensor<fp32, [2, 640, 16, 16]> input_117_cast = cast(dtype = input_117_cast_dtype_0, x = input_117_cast_1);
        } -> (input_117_cast, input_7_cast, input_15_cast, input_35_cast, input_143_cast, input_169_cast, input_61_cast, hidden_states_149_cast, input_171_cast, input_115_cast, input_63_cast, input_253_cast, input_89_cast);
}