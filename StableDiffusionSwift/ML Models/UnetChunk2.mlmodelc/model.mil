program(1.0)
[buildInfo = dict<tensor<string, []>, tensor<string, []>>({{"coremlc-component-MIL", "4.28.4"}, {"coremlc-version", "1429.0.0"}})]
{
    func main<ios16>(tensor<fp16, [2, 1024, 1, 77]> encoder_hidden_states, tensor<fp32, [2, 1280, 8, 8]> hidden_states_149_cast, tensor<fp32, [2, 640, 32, 32]> input_115_cast, tensor<fp32, [2, 640, 16, 16]> input_117_cast, tensor<fp32, [2, 1280, 16, 16]> input_143_cast, tensor<fp32, [2, 1280, 1, 1]> input_15_cast, tensor<fp32, [2, 1280, 16, 16]> input_169_cast, tensor<fp32, [2, 1280, 8, 8]> input_171_cast, tensor<fp32, [2, 2560, 8, 8]> input_253_cast, tensor<fp32, [2, 320, 64, 64]> input_35_cast, tensor<fp32, [2, 320, 64, 64]> input_61_cast, tensor<fp32, [2, 320, 32, 32]> input_63_cast, tensor<fp32, [2, 320, 64, 64]> input_7_cast, tensor<fp32, [2, 640, 32, 32]> input_89_cast) {
            tensor<string, []> cast_10_dtype_0 = const()[name = tensor<string, []>("cast_10_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<string, []> cast_8_dtype_0 = const()[name = tensor<string, []>("cast_8_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<string, []> cast_5_dtype_0 = const()[name = tensor<string, []>("cast_5_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<string, []> cast_14_dtype_0 = const()[name = tensor<string, []>("cast_14_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<string, []> cast_7_dtype_0 = const()[name = tensor<string, []>("cast_7_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<string, []> cast_9_dtype_0 = const()[name = tensor<string, []>("cast_9_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<string, []> cast_2_dtype_0 = const()[name = tensor<string, []>("cast_2_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<string, []> cast_6_dtype_0 = const()[name = tensor<string, []>("cast_6_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<string, []> cast_11_dtype_0 = const()[name = tensor<string, []>("cast_11_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<string, []> cast_12_dtype_0 = const()[name = tensor<string, []>("cast_12_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<string, []> cast_3_dtype_0 = const()[name = tensor<string, []>("cast_3_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<int32, []> var_5405 = const()[name = tensor<string, []>("op_5405"), val = tensor<int32, []>(1)];
            tensor<string, []> cast_4_dtype_0 = const()[name = tensor<string, []>("cast_4_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<string, []> cast_13_dtype_0 = const()[name = tensor<string, []>("cast_13_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<int32, [2]> var_5502 = const()[name = tensor<string, []>("op_5502"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5504 = const()[name = tensor<string, []>("op_5504"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_7_pad_type_0 = const()[name = tensor<string, []>("x_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_7_pad_0 = const()[name = tensor<string, []>("x_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 2560, 1, 1]> up_blocks_0_resnets_1_conv_shortcut_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_1_conv_shortcut_weight_to_fp16"), val = tensor<fp16, [1280, 2560, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(64)))];
            tensor<fp16, [1280]> up_blocks_0_resnets_1_conv_shortcut_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_1_conv_shortcut_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6553728)))];
            tensor<fp16, [2, 2560, 8, 8]> cast_2 = cast(dtype = cast_4_dtype_0, x = input_253_cast);
            tensor<fp16, [2, 1280, 8, 8]> x_7_cast = conv(bias = up_blocks_0_resnets_1_conv_shortcut_bias_to_fp16, dilations = var_5504, groups = var_5405, pad = x_7_pad_0, pad_type = x_7_pad_type_0, strides = var_5502, weight = up_blocks_0_resnets_1_conv_shortcut_weight_to_fp16, x = cast_2);
            tensor<fp16, [2, 1280, 8, 8]> cast_1 = cast(dtype = cast_13_dtype_0, x = hidden_states_149_cast);
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_151_cast = add(x = x_7_cast, y = cast_1);
            tensor<bool, []> input_267_interleave_0 = const()[name = tensor<string, []>("input_267_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 1280, 8, 8]> cast_3 = cast(dtype = cast_3_dtype_0, x = input_171_cast);
            tensor<fp16, [2, 2560, 8, 8]> input_267_cast = concat(axis = var_5405, interleave = input_267_interleave_0, values = (hidden_states_151_cast, cast_3));
            tensor<int32, [5]> reshape_124_shape_0 = const()[name = tensor<string, []>("reshape_124_shape_0"), val = tensor<int32, [5]>([2, 32, 80, 8, 8])];
            tensor<fp16, [2, 32, 80, 8, 8]> reshape_124_cast = reshape(shape = reshape_124_shape_0, x = input_267_cast);
            tensor<int32, [3]> reduce_mean_93_axes_0 = const()[name = tensor<string, []>("reduce_mean_93_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_93_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_93_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_93_cast = reduce_mean(axes = reduce_mean_93_axes_0, keep_dims = reduce_mean_93_keep_dims_0, x = reshape_124_cast);
            tensor<fp16, [2, 32, 80, 8, 8]> sub_62_cast = sub(x = reshape_124_cast, y = reduce_mean_93_cast);
            tensor<fp16, [2, 32, 80, 8, 8]> square_31_cast = square(x = sub_62_cast);
            tensor<int32, [3]> reduce_mean_95_axes_0 = const()[name = tensor<string, []>("reduce_mean_95_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_95_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_95_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_95_cast = reduce_mean(axes = reduce_mean_95_axes_0, keep_dims = reduce_mean_95_keep_dims_0, x = square_31_cast);
            tensor<fp16, []> add_62_y_0_to_fp16 = const()[name = tensor<string, []>("add_62_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_62_cast = add(x = reduce_mean_95_cast, y = add_62_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_31_cast = sqrt(x = add_62_cast);
            tensor<fp16, [2, 32, 80, 8, 8]> real_div_31_cast = real_div(x = sub_62_cast, y = sqrt_31_cast);
            tensor<int32, [4]> reshape_125_shape_0 = const()[name = tensor<string, []>("reshape_125_shape_0"), val = tensor<int32, [4]>([2, 2560, 8, 8])];
            tensor<fp16, [2, 2560, 8, 8]> reshape_125_cast = reshape(shape = reshape_125_shape_0, x = real_div_31_cast);
            tensor<fp16, [2560]> add_63_mean_0_to_fp16 = const()[name = tensor<string, []>("add_63_mean_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6556352)))];
            tensor<fp16, [2560]> add_63_variance_0_to_fp16 = const()[name = tensor<string, []>("add_63_variance_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6561536)))];
            tensor<fp16, [2560]> add_63_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_63_gamma_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6566720)))];
            tensor<fp16, [2560]> add_63_beta_0_to_fp16 = const()[name = tensor<string, []>("add_63_beta_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6571904)))];
            tensor<fp16, []> add_63_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_63_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 2560, 8, 8]> add_63_cast = batch_norm(beta = add_63_beta_0_to_fp16, epsilon = add_63_epsilon_0_to_fp16, gamma = add_63_gamma_0_to_fp16, mean = add_63_mean_0_to_fp16, variance = add_63_variance_0_to_fp16, x = reshape_125_cast);
            tensor<fp16, [2, 2560, 8, 8]> input_271_cast = silu(x = add_63_cast);
            tensor<int32, [2]> var_5522 = const()[name = tensor<string, []>("op_5522"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5524 = const()[name = tensor<string, []>("op_5524"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_153_pad_type_0 = const()[name = tensor<string, []>("hidden_states_153_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_153_pad_0 = const()[name = tensor<string, []>("hidden_states_153_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 2560, 3, 3]> up_blocks_0_resnets_2_conv1_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_2_conv1_weight_to_fp16"), val = tensor<fp16, [1280, 2560, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6577088)))];
            tensor<fp16, [1280]> up_blocks_0_resnets_2_conv1_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_2_conv1_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(65559552)))];
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_153_cast = conv(bias = up_blocks_0_resnets_2_conv1_bias_to_fp16, dilations = var_5524, groups = var_5405, pad = hidden_states_153_pad_0, pad_type = hidden_states_153_pad_type_0, strides = var_5522, weight = up_blocks_0_resnets_2_conv1_weight_to_fp16, x = input_271_cast);
            tensor<int32, [2]> var_5530 = const()[name = tensor<string, []>("op_5530"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5532 = const()[name = tensor<string, []>("op_5532"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_25_pad_type_0 = const()[name = tensor<string, []>("temb_25_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_25_pad_0 = const()[name = tensor<string, []>("temb_25_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_0_resnets_2_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_2_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(65562176)))];
            tensor<fp16, [1280]> up_blocks_0_resnets_2_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_2_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68839040)))];
            tensor<fp16, [2, 1280, 1, 1]> cast_12 = cast(dtype = cast_8_dtype_0, x = input_15_cast);
            tensor<fp16, [2, 1280, 1, 1]> temb_25_cast = conv(bias = up_blocks_0_resnets_2_time_emb_proj_bias_to_fp16, dilations = var_5532, groups = var_5405, pad = temb_25_pad_0, pad_type = temb_25_pad_type_0, strides = var_5530, weight = up_blocks_0_resnets_2_time_emb_proj_weight_to_fp16, x = cast_12);
            tensor<fp16, [2, 1280, 8, 8]> input_275_cast = add(x = hidden_states_153_cast, y = temb_25_cast);
            tensor<int32, [5]> reshape_128_shape_0 = const()[name = tensor<string, []>("reshape_128_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 8, 8])];
            tensor<fp16, [2, 32, 40, 8, 8]> reshape_128_cast = reshape(shape = reshape_128_shape_0, x = input_275_cast);
            tensor<int32, [3]> reduce_mean_96_axes_0 = const()[name = tensor<string, []>("reduce_mean_96_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_96_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_96_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_96_cast = reduce_mean(axes = reduce_mean_96_axes_0, keep_dims = reduce_mean_96_keep_dims_0, x = reshape_128_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> sub_64_cast = sub(x = reshape_128_cast, y = reduce_mean_96_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> square_32_cast = square(x = sub_64_cast);
            tensor<int32, [3]> reduce_mean_98_axes_0 = const()[name = tensor<string, []>("reduce_mean_98_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_98_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_98_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_98_cast = reduce_mean(axes = reduce_mean_98_axes_0, keep_dims = reduce_mean_98_keep_dims_0, x = square_32_cast);
            tensor<fp16, []> add_64_y_0_to_fp16 = const()[name = tensor<string, []>("add_64_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_64_cast = add(x = reduce_mean_98_cast, y = add_64_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_32_cast = sqrt(x = add_64_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> real_div_32_cast = real_div(x = sub_64_cast, y = sqrt_32_cast);
            tensor<int32, [4]> reshape_129_shape_0 = const()[name = tensor<string, []>("reshape_129_shape_0"), val = tensor<int32, [4]>([2, 1280, 8, 8])];
            tensor<fp16, [2, 1280, 8, 8]> reshape_129_cast = reshape(shape = reshape_129_shape_0, x = real_div_32_cast);
            tensor<fp16, [1280]> add_65_mean_0_to_fp16 = const()[name = tensor<string, []>("add_65_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68841664)))];
            tensor<fp16, [1280]> add_65_variance_0_to_fp16 = const()[name = tensor<string, []>("add_65_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68844288)))];
            tensor<fp16, [1280]> add_65_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_65_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68846912)))];
            tensor<fp16, [1280]> add_65_beta_0_to_fp16 = const()[name = tensor<string, []>("add_65_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68849536)))];
            tensor<fp16, []> add_65_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_65_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 8, 8]> add_65_cast = batch_norm(beta = add_65_beta_0_to_fp16, epsilon = add_65_epsilon_0_to_fp16, gamma = add_65_gamma_0_to_fp16, mean = add_65_mean_0_to_fp16, variance = add_65_variance_0_to_fp16, x = reshape_129_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_279_cast = silu(x = add_65_cast);
            tensor<int32, [2]> var_5542 = const()[name = tensor<string, []>("op_5542"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5544 = const()[name = tensor<string, []>("op_5544"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_155_pad_type_0 = const()[name = tensor<string, []>("hidden_states_155_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_155_pad_0 = const()[name = tensor<string, []>("hidden_states_155_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> up_blocks_0_resnets_2_conv2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_2_conv2_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68852160)))];
            tensor<fp16, [1280]> up_blocks_0_resnets_2_conv2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_2_conv2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(98343424)))];
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_155_cast = conv(bias = up_blocks_0_resnets_2_conv2_bias_to_fp16, dilations = var_5544, groups = var_5405, pad = hidden_states_155_pad_0, pad_type = hidden_states_155_pad_type_0, strides = var_5542, weight = up_blocks_0_resnets_2_conv2_weight_to_fp16, x = input_279_cast);
            tensor<int32, [2]> var_5549 = const()[name = tensor<string, []>("op_5549"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5551 = const()[name = tensor<string, []>("op_5551"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_9_pad_type_0 = const()[name = tensor<string, []>("x_9_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_9_pad_0 = const()[name = tensor<string, []>("x_9_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 2560, 1, 1]> up_blocks_0_resnets_2_conv_shortcut_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_2_conv_shortcut_weight_to_fp16"), val = tensor<fp16, [1280, 2560, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(98346048)))];
            tensor<fp16, [1280]> up_blocks_0_resnets_2_conv_shortcut_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_2_conv_shortcut_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(104899712)))];
            tensor<fp16, [2, 1280, 8, 8]> x_9_cast = conv(bias = up_blocks_0_resnets_2_conv_shortcut_bias_to_fp16, dilations = var_5551, groups = var_5405, pad = x_9_pad_0, pad_type = x_9_pad_type_0, strides = var_5549, weight = up_blocks_0_resnets_2_conv_shortcut_weight_to_fp16, x = input_267_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_281_cast = add(x = x_9_cast, y = hidden_states_155_cast);
            tensor<fp32, []> input_283_scale_factor_height_0 = const()[name = tensor<string, []>("input_283_scale_factor_height_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp32, []> input_283_scale_factor_width_0 = const()[name = tensor<string, []>("input_283_scale_factor_width_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp16, [2, 1280, 16, 16]> input_283_cast = upsample_nearest_neighbor(scale_factor_height = input_283_scale_factor_height_0, scale_factor_width = input_283_scale_factor_width_0, x = input_281_cast);
            tensor<int32, [2]> var_5560 = const()[name = tensor<string, []>("op_5560"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5562 = const()[name = tensor<string, []>("op_5562"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_157_pad_type_0 = const()[name = tensor<string, []>("hidden_states_157_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_157_pad_0 = const()[name = tensor<string, []>("hidden_states_157_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> up_blocks_0_upsamplers_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_upsamplers_0_conv_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(104902336)))];
            tensor<fp16, [1280]> up_blocks_0_upsamplers_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_upsamplers_0_conv_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(134393600)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_157_cast = conv(bias = up_blocks_0_upsamplers_0_conv_bias_to_fp16, dilations = var_5562, groups = var_5405, pad = hidden_states_157_pad_0, pad_type = hidden_states_157_pad_type_0, strides = var_5560, weight = up_blocks_0_upsamplers_0_conv_weight_to_fp16, x = input_283_cast);
            tensor<bool, []> var_5594 = const()[name = tensor<string, []>("op_5594"), val = tensor<bool, []>(true)];
            tensor<int32, []> var_5599 = const()[name = tensor<string, []>("op_5599"), val = tensor<int32, []>(1)];
            tensor<bool, []> input_285_interleave_0 = const()[name = tensor<string, []>("input_285_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 1280, 16, 16]> cast_4 = cast(dtype = cast_12_dtype_0, x = input_169_cast);
            tensor<fp16, [2, 2560, 16, 16]> input_285_cast = concat(axis = var_5599, interleave = input_285_interleave_0, values = (hidden_states_157_cast, cast_4));
            tensor<int32, [5]> reshape_132_shape_0 = const()[name = tensor<string, []>("reshape_132_shape_0"), val = tensor<int32, [5]>([2, 32, 80, 16, 16])];
            tensor<fp16, [2, 32, 80, 16, 16]> reshape_132_cast = reshape(shape = reshape_132_shape_0, x = input_285_cast);
            tensor<int32, [3]> reduce_mean_99_axes_0 = const()[name = tensor<string, []>("reduce_mean_99_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_99_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_99_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_99_cast = reduce_mean(axes = reduce_mean_99_axes_0, keep_dims = reduce_mean_99_keep_dims_0, x = reshape_132_cast);
            tensor<fp16, [2, 32, 80, 16, 16]> sub_66_cast = sub(x = reshape_132_cast, y = reduce_mean_99_cast);
            tensor<fp16, [2, 32, 80, 16, 16]> square_33_cast = square(x = sub_66_cast);
            tensor<int32, [3]> reduce_mean_101_axes_0 = const()[name = tensor<string, []>("reduce_mean_101_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_101_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_101_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_101_cast = reduce_mean(axes = reduce_mean_101_axes_0, keep_dims = reduce_mean_101_keep_dims_0, x = square_33_cast);
            tensor<fp16, []> add_66_y_0_to_fp16 = const()[name = tensor<string, []>("add_66_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_66_cast = add(x = reduce_mean_101_cast, y = add_66_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_33_cast = sqrt(x = add_66_cast);
            tensor<fp16, [2, 32, 80, 16, 16]> real_div_33_cast = real_div(x = sub_66_cast, y = sqrt_33_cast);
            tensor<int32, [4]> reshape_133_shape_0 = const()[name = tensor<string, []>("reshape_133_shape_0"), val = tensor<int32, [4]>([2, 2560, 16, 16])];
            tensor<fp16, [2, 2560, 16, 16]> reshape_133_cast = reshape(shape = reshape_133_shape_0, x = real_div_33_cast);
            tensor<fp16, [2560]> add_67_mean_0_to_fp16 = const()[name = tensor<string, []>("add_67_mean_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(134396224)))];
            tensor<fp16, [2560]> add_67_variance_0_to_fp16 = const()[name = tensor<string, []>("add_67_variance_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(134401408)))];
            tensor<fp16, [2560]> add_67_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_67_gamma_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(134406592)))];
            tensor<fp16, [2560]> add_67_beta_0_to_fp16 = const()[name = tensor<string, []>("add_67_beta_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(134411776)))];
            tensor<fp16, []> add_67_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_67_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 2560, 16, 16]> add_67_cast = batch_norm(beta = add_67_beta_0_to_fp16, epsilon = add_67_epsilon_0_to_fp16, gamma = add_67_gamma_0_to_fp16, mean = add_67_mean_0_to_fp16, variance = add_67_variance_0_to_fp16, x = reshape_133_cast);
            tensor<fp16, [2, 2560, 16, 16]> input_289_cast = silu(x = add_67_cast);
            tensor<int32, [2]> var_5628 = const()[name = tensor<string, []>("op_5628"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5630 = const()[name = tensor<string, []>("op_5630"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_159_pad_type_0 = const()[name = tensor<string, []>("hidden_states_159_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_159_pad_0 = const()[name = tensor<string, []>("hidden_states_159_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 2560, 3, 3]> up_blocks_1_resnets_0_conv1_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_0_conv1_weight_to_fp16"), val = tensor<fp16, [1280, 2560, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(134416960)))];
            tensor<fp16, [1280]> up_blocks_1_resnets_0_conv1_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_0_conv1_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(193399424)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_159_cast = conv(bias = up_blocks_1_resnets_0_conv1_bias_to_fp16, dilations = var_5630, groups = var_5599, pad = hidden_states_159_pad_0, pad_type = hidden_states_159_pad_type_0, strides = var_5628, weight = up_blocks_1_resnets_0_conv1_weight_to_fp16, x = input_289_cast);
            tensor<int32, [2]> var_5636 = const()[name = tensor<string, []>("op_5636"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5638 = const()[name = tensor<string, []>("op_5638"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_27_pad_type_0 = const()[name = tensor<string, []>("temb_27_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_27_pad_0 = const()[name = tensor<string, []>("temb_27_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_resnets_0_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_0_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(193402048)))];
            tensor<fp16, [1280]> up_blocks_1_resnets_0_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_0_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(196678912)))];
            tensor<fp16, [2, 1280, 1, 1]> temb_27_cast = conv(bias = up_blocks_1_resnets_0_time_emb_proj_bias_to_fp16, dilations = var_5638, groups = var_5599, pad = temb_27_pad_0, pad_type = temb_27_pad_type_0, strides = var_5636, weight = up_blocks_1_resnets_0_time_emb_proj_weight_to_fp16, x = cast_12);
            tensor<fp16, [2, 1280, 16, 16]> input_293_cast = add(x = hidden_states_159_cast, y = temb_27_cast);
            tensor<int32, [5]> reshape_136_shape_0 = const()[name = tensor<string, []>("reshape_136_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 16, 16])];
            tensor<fp16, [2, 32, 40, 16, 16]> reshape_136_cast = reshape(shape = reshape_136_shape_0, x = input_293_cast);
            tensor<int32, [3]> reduce_mean_102_axes_0 = const()[name = tensor<string, []>("reduce_mean_102_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_102_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_102_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_102_cast = reduce_mean(axes = reduce_mean_102_axes_0, keep_dims = reduce_mean_102_keep_dims_0, x = reshape_136_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> sub_68_cast = sub(x = reshape_136_cast, y = reduce_mean_102_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> square_34_cast = square(x = sub_68_cast);
            tensor<int32, [3]> reduce_mean_104_axes_0 = const()[name = tensor<string, []>("reduce_mean_104_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_104_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_104_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_104_cast = reduce_mean(axes = reduce_mean_104_axes_0, keep_dims = reduce_mean_104_keep_dims_0, x = square_34_cast);
            tensor<fp16, []> add_68_y_0_to_fp16 = const()[name = tensor<string, []>("add_68_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_68_cast = add(x = reduce_mean_104_cast, y = add_68_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_34_cast = sqrt(x = add_68_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> real_div_34_cast = real_div(x = sub_68_cast, y = sqrt_34_cast);
            tensor<int32, [4]> reshape_137_shape_0 = const()[name = tensor<string, []>("reshape_137_shape_0"), val = tensor<int32, [4]>([2, 1280, 16, 16])];
            tensor<fp16, [2, 1280, 16, 16]> reshape_137_cast = reshape(shape = reshape_137_shape_0, x = real_div_34_cast);
            tensor<fp16, [1280]> add_69_mean_0_to_fp16 = const()[name = tensor<string, []>("add_69_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(196681536)))];
            tensor<fp16, [1280]> add_69_variance_0_to_fp16 = const()[name = tensor<string, []>("add_69_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(196684160)))];
            tensor<fp16, [1280]> add_69_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_69_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(196686784)))];
            tensor<fp16, [1280]> add_69_beta_0_to_fp16 = const()[name = tensor<string, []>("add_69_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(196689408)))];
            tensor<fp16, []> add_69_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_69_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 16, 16]> add_69_cast = batch_norm(beta = add_69_beta_0_to_fp16, epsilon = add_69_epsilon_0_to_fp16, gamma = add_69_gamma_0_to_fp16, mean = add_69_mean_0_to_fp16, variance = add_69_variance_0_to_fp16, x = reshape_137_cast);
            tensor<fp16, [2, 1280, 16, 16]> input_297_cast = silu(x = add_69_cast);
            tensor<int32, [2]> var_5648 = const()[name = tensor<string, []>("op_5648"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5650 = const()[name = tensor<string, []>("op_5650"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_161_pad_type_0 = const()[name = tensor<string, []>("hidden_states_161_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_161_pad_0 = const()[name = tensor<string, []>("hidden_states_161_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> up_blocks_1_resnets_0_conv2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_0_conv2_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(196692032)))];
            tensor<fp16, [1280]> up_blocks_1_resnets_0_conv2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_0_conv2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(226183296)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_161_cast = conv(bias = up_blocks_1_resnets_0_conv2_bias_to_fp16, dilations = var_5650, groups = var_5599, pad = hidden_states_161_pad_0, pad_type = hidden_states_161_pad_type_0, strides = var_5648, weight = up_blocks_1_resnets_0_conv2_weight_to_fp16, x = input_297_cast);
            tensor<int32, [2]> var_5655 = const()[name = tensor<string, []>("op_5655"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5657 = const()[name = tensor<string, []>("op_5657"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_11_pad_type_0 = const()[name = tensor<string, []>("x_11_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_11_pad_0 = const()[name = tensor<string, []>("x_11_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 2560, 1, 1]> up_blocks_1_resnets_0_conv_shortcut_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_0_conv_shortcut_weight_to_fp16"), val = tensor<fp16, [1280, 2560, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(226185920)))];
            tensor<fp16, [1280]> up_blocks_1_resnets_0_conv_shortcut_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_0_conv_shortcut_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(232739584)))];
            tensor<fp16, [2, 1280, 16, 16]> x_11_cast = conv(bias = up_blocks_1_resnets_0_conv_shortcut_bias_to_fp16, dilations = var_5657, groups = var_5599, pad = x_11_pad_0, pad_type = x_11_pad_type_0, strides = var_5655, weight = up_blocks_1_resnets_0_conv_shortcut_weight_to_fp16, x = input_285_cast);
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_163_cast = add(x = x_11_cast, y = hidden_states_161_cast);
            tensor<int32, [5]> reshape_140_shape_0 = const()[name = tensor<string, []>("reshape_140_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 16, 16])];
            tensor<fp16, [2, 32, 40, 16, 16]> reshape_140_cast = reshape(shape = reshape_140_shape_0, x = hidden_states_163_cast);
            tensor<int32, [3]> reduce_mean_105_axes_0 = const()[name = tensor<string, []>("reduce_mean_105_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_105_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_105_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_105_cast = reduce_mean(axes = reduce_mean_105_axes_0, keep_dims = reduce_mean_105_keep_dims_0, x = reshape_140_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> sub_70_cast = sub(x = reshape_140_cast, y = reduce_mean_105_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> square_35_cast = square(x = sub_70_cast);
            tensor<int32, [3]> reduce_mean_107_axes_0 = const()[name = tensor<string, []>("reduce_mean_107_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_107_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_107_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_107_cast = reduce_mean(axes = reduce_mean_107_axes_0, keep_dims = reduce_mean_107_keep_dims_0, x = square_35_cast);
            tensor<fp16, []> add_70_y_0_to_fp16 = const()[name = tensor<string, []>("add_70_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_70_cast = add(x = reduce_mean_107_cast, y = add_70_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_35_cast = sqrt(x = add_70_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> real_div_35_cast = real_div(x = sub_70_cast, y = sqrt_35_cast);
            tensor<int32, [4]> reshape_141_shape_0 = const()[name = tensor<string, []>("reshape_141_shape_0"), val = tensor<int32, [4]>([2, 1280, 16, 16])];
            tensor<fp16, [2, 1280, 16, 16]> reshape_141_cast = reshape(shape = reshape_141_shape_0, x = real_div_35_cast);
            tensor<fp16, [1280]> add_71_mean_0_to_fp16 = const()[name = tensor<string, []>("add_71_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(232742208)))];
            tensor<fp16, [1280]> add_71_variance_0_to_fp16 = const()[name = tensor<string, []>("add_71_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(232744832)))];
            tensor<fp16, [1280]> add_71_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_71_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(232747456)))];
            tensor<fp16, [1280]> add_71_beta_0_to_fp16 = const()[name = tensor<string, []>("add_71_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(232750080)))];
            tensor<fp16, []> add_71_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_71_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 16, 16]> add_71_cast = batch_norm(beta = add_71_beta_0_to_fp16, epsilon = add_71_epsilon_0_to_fp16, gamma = add_71_gamma_0_to_fp16, mean = add_71_mean_0_to_fp16, variance = add_71_variance_0_to_fp16, x = reshape_141_cast);
            tensor<int32, [2]> var_5677 = const()[name = tensor<string, []>("op_5677"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5679 = const()[name = tensor<string, []>("op_5679"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_165_pad_type_0 = const()[name = tensor<string, []>("hidden_states_165_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_165_pad_0 = const()[name = tensor<string, []>("hidden_states_165_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_0_proj_in_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_proj_in_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(232752704)))];
            tensor<fp16, [1280]> up_blocks_1_attentions_0_proj_in_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_proj_in_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(236029568)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_165_cast = conv(bias = up_blocks_1_attentions_0_proj_in_bias_to_fp16, dilations = var_5679, groups = var_5599, pad = hidden_states_165_pad_0, pad_type = hidden_states_165_pad_type_0, strides = var_5677, weight = up_blocks_1_attentions_0_proj_in_weight_to_fp16, x = add_71_cast);
            tensor<int32, [4]> var_5684 = const()[name = tensor<string, []>("op_5684"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<fp16, [2, 1280, 1, 256]> inputs_43_cast = reshape(shape = var_5684, x = hidden_states_165_cast);
            tensor<int32, [1]> var_5694 = const()[name = tensor<string, []>("op_5694"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> channels_mean_43_cast = reduce_mean(axes = var_5694, keep_dims = var_5594, x = inputs_43_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_43_cast = sub(x = inputs_43_cast, y = channels_mean_43_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_sq_43_cast = mul(x = zero_mean_43_cast, y = zero_mean_43_cast);
            tensor<int32, [1]> var_5698 = const()[name = tensor<string, []>("op_5698"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> var_5699_cast = reduce_mean(axes = var_5698, keep_dims = var_5594, x = zero_mean_sq_43_cast);
            tensor<fp16, []> var_5700_to_fp16 = const()[name = tensor<string, []>("op_5700_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 256]> var_5701_cast = add(x = var_5699_cast, y = var_5700_to_fp16);
            tensor<fp16, []> denom_43_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_43_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 256]> denom_43_cast = rsqrt(epsilon = denom_43_epsilon_0_to_fp16, x = var_5701_cast);
            tensor<fp16, [2, 1280, 1, 256]> out_43_cast = mul(x = zero_mean_43_cast, y = denom_43_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_5705_to_fp16 = const()[name = tensor<string, []>("op_5705_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(236032192)))];
            tensor<fp16, [2, 1280, 1, 256]> var_5706_cast = add(x = out_43_cast, y = var_5705_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_5708_to_fp16 = const()[name = tensor<string, []>("op_5708_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(236034816)))];
            tensor<fp16, [2, 1280, 1, 256]> hidden_states_167_cast = mul(x = var_5706_cast, y = var_5708_to_fp16);
            tensor<int32, [2]> var_5715 = const()[name = tensor<string, []>("op_5715"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5717 = const()[name = tensor<string, []>("op_5717"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_29_pad_type_0 = const()[name = tensor<string, []>("q_29_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_29_pad_0 = const()[name = tensor<string, []>("q_29_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(236037440)))];
            tensor<fp16, [2, 1280, 1, 256]> q_29_cast = conv(dilations = var_5717, groups = var_5599, pad = q_29_pad_0, pad_type = q_29_pad_type_0, strides = var_5715, weight = up_blocks_1_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16, x = hidden_states_167_cast);
            tensor<int32, [2]> var_5721 = const()[name = tensor<string, []>("op_5721"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5723 = const()[name = tensor<string, []>("op_5723"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_57_pad_type_0 = const()[name = tensor<string, []>("k_57_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_57_pad_0 = const()[name = tensor<string, []>("k_57_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(239314304)))];
            tensor<fp16, [2, 1280, 1, 256]> k_57_cast = conv(dilations = var_5723, groups = var_5599, pad = k_57_pad_0, pad_type = k_57_pad_type_0, strides = var_5721, weight = up_blocks_1_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16, x = hidden_states_167_cast);
            tensor<int32, [2]> var_5727 = const()[name = tensor<string, []>("op_5727"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5729 = const()[name = tensor<string, []>("op_5729"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_29_pad_type_0 = const()[name = tensor<string, []>("v_29_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_29_pad_0 = const()[name = tensor<string, []>("v_29_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(242591168)))];
            tensor<fp16, [2, 1280, 1, 256]> v_29_cast = conv(dilations = var_5729, groups = var_5599, pad = v_29_pad_0, pad_type = v_29_pad_type_0, strides = var_5727, weight = up_blocks_1_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16, x = hidden_states_167_cast);
            tensor<int32, [4]> var_5733_begin_0 = const()[name = tensor<string, []>("op_5733_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_5733_end_0 = const()[name = tensor<string, []>("op_5733_end_0"), val = tensor<int32, [4]>([2, 64, 1, 256])];
            tensor<bool, [4]> var_5733_end_mask_0 = const()[name = tensor<string, []>("op_5733_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_5733_cast = slice_by_index(begin = var_5733_begin_0, end = var_5733_end_0, end_mask = var_5733_end_mask_0, x = q_29_cast);
            tensor<int32, [4]> var_5737_begin_0 = const()[name = tensor<string, []>("op_5737_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_5737_end_0 = const()[name = tensor<string, []>("op_5737_end_0"), val = tensor<int32, [4]>([2, 128, 1, 256])];
            tensor<bool, [4]> var_5737_end_mask_0 = const()[name = tensor<string, []>("op_5737_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_5737_cast = slice_by_index(begin = var_5737_begin_0, end = var_5737_end_0, end_mask = var_5737_end_mask_0, x = q_29_cast);
            tensor<int32, [4]> var_5741_begin_0 = const()[name = tensor<string, []>("op_5741_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_5741_end_0 = const()[name = tensor<string, []>("op_5741_end_0"), val = tensor<int32, [4]>([2, 192, 1, 256])];
            tensor<bool, [4]> var_5741_end_mask_0 = const()[name = tensor<string, []>("op_5741_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_5741_cast = slice_by_index(begin = var_5741_begin_0, end = var_5741_end_0, end_mask = var_5741_end_mask_0, x = q_29_cast);
            tensor<int32, [4]> var_5745_begin_0 = const()[name = tensor<string, []>("op_5745_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_5745_end_0 = const()[name = tensor<string, []>("op_5745_end_0"), val = tensor<int32, [4]>([2, 256, 1, 256])];
            tensor<bool, [4]> var_5745_end_mask_0 = const()[name = tensor<string, []>("op_5745_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_5745_cast = slice_by_index(begin = var_5745_begin_0, end = var_5745_end_0, end_mask = var_5745_end_mask_0, x = q_29_cast);
            tensor<int32, [4]> var_5749_begin_0 = const()[name = tensor<string, []>("op_5749_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_5749_end_0 = const()[name = tensor<string, []>("op_5749_end_0"), val = tensor<int32, [4]>([2, 320, 1, 256])];
            tensor<bool, [4]> var_5749_end_mask_0 = const()[name = tensor<string, []>("op_5749_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_5749_cast = slice_by_index(begin = var_5749_begin_0, end = var_5749_end_0, end_mask = var_5749_end_mask_0, x = q_29_cast);
            tensor<int32, [4]> var_5753_begin_0 = const()[name = tensor<string, []>("op_5753_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_5753_end_0 = const()[name = tensor<string, []>("op_5753_end_0"), val = tensor<int32, [4]>([2, 384, 1, 256])];
            tensor<bool, [4]> var_5753_end_mask_0 = const()[name = tensor<string, []>("op_5753_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_5753_cast = slice_by_index(begin = var_5753_begin_0, end = var_5753_end_0, end_mask = var_5753_end_mask_0, x = q_29_cast);
            tensor<int32, [4]> var_5757_begin_0 = const()[name = tensor<string, []>("op_5757_begin_0"), val = tensor<int32, [4]>([0, 384, 0, 0])];
            tensor<int32, [4]> var_5757_end_0 = const()[name = tensor<string, []>("op_5757_end_0"), val = tensor<int32, [4]>([2, 448, 1, 256])];
            tensor<bool, [4]> var_5757_end_mask_0 = const()[name = tensor<string, []>("op_5757_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_5757_cast = slice_by_index(begin = var_5757_begin_0, end = var_5757_end_0, end_mask = var_5757_end_mask_0, x = q_29_cast);
            tensor<int32, [4]> var_5761_begin_0 = const()[name = tensor<string, []>("op_5761_begin_0"), val = tensor<int32, [4]>([0, 448, 0, 0])];
            tensor<int32, [4]> var_5761_end_0 = const()[name = tensor<string, []>("op_5761_end_0"), val = tensor<int32, [4]>([2, 512, 1, 256])];
            tensor<bool, [4]> var_5761_end_mask_0 = const()[name = tensor<string, []>("op_5761_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_5761_cast = slice_by_index(begin = var_5761_begin_0, end = var_5761_end_0, end_mask = var_5761_end_mask_0, x = q_29_cast);
            tensor<int32, [4]> var_5765_begin_0 = const()[name = tensor<string, []>("op_5765_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_5765_end_0 = const()[name = tensor<string, []>("op_5765_end_0"), val = tensor<int32, [4]>([2, 576, 1, 256])];
            tensor<bool, [4]> var_5765_end_mask_0 = const()[name = tensor<string, []>("op_5765_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_5765_cast = slice_by_index(begin = var_5765_begin_0, end = var_5765_end_0, end_mask = var_5765_end_mask_0, x = q_29_cast);
            tensor<int32, [4]> var_5769_begin_0 = const()[name = tensor<string, []>("op_5769_begin_0"), val = tensor<int32, [4]>([0, 576, 0, 0])];
            tensor<int32, [4]> var_5769_end_0 = const()[name = tensor<string, []>("op_5769_end_0"), val = tensor<int32, [4]>([2, 640, 1, 256])];
            tensor<bool, [4]> var_5769_end_mask_0 = const()[name = tensor<string, []>("op_5769_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_5769_cast = slice_by_index(begin = var_5769_begin_0, end = var_5769_end_0, end_mask = var_5769_end_mask_0, x = q_29_cast);
            tensor<int32, [4]> var_5773_begin_0 = const()[name = tensor<string, []>("op_5773_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_5773_end_0 = const()[name = tensor<string, []>("op_5773_end_0"), val = tensor<int32, [4]>([2, 704, 1, 256])];
            tensor<bool, [4]> var_5773_end_mask_0 = const()[name = tensor<string, []>("op_5773_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_5773_cast = slice_by_index(begin = var_5773_begin_0, end = var_5773_end_0, end_mask = var_5773_end_mask_0, x = q_29_cast);
            tensor<int32, [4]> var_5777_begin_0 = const()[name = tensor<string, []>("op_5777_begin_0"), val = tensor<int32, [4]>([0, 704, 0, 0])];
            tensor<int32, [4]> var_5777_end_0 = const()[name = tensor<string, []>("op_5777_end_0"), val = tensor<int32, [4]>([2, 768, 1, 256])];
            tensor<bool, [4]> var_5777_end_mask_0 = const()[name = tensor<string, []>("op_5777_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_5777_cast = slice_by_index(begin = var_5777_begin_0, end = var_5777_end_0, end_mask = var_5777_end_mask_0, x = q_29_cast);
            tensor<int32, [4]> var_5781_begin_0 = const()[name = tensor<string, []>("op_5781_begin_0"), val = tensor<int32, [4]>([0, 768, 0, 0])];
            tensor<int32, [4]> var_5781_end_0 = const()[name = tensor<string, []>("op_5781_end_0"), val = tensor<int32, [4]>([2, 832, 1, 256])];
            tensor<bool, [4]> var_5781_end_mask_0 = const()[name = tensor<string, []>("op_5781_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_5781_cast = slice_by_index(begin = var_5781_begin_0, end = var_5781_end_0, end_mask = var_5781_end_mask_0, x = q_29_cast);
            tensor<int32, [4]> var_5785_begin_0 = const()[name = tensor<string, []>("op_5785_begin_0"), val = tensor<int32, [4]>([0, 832, 0, 0])];
            tensor<int32, [4]> var_5785_end_0 = const()[name = tensor<string, []>("op_5785_end_0"), val = tensor<int32, [4]>([2, 896, 1, 256])];
            tensor<bool, [4]> var_5785_end_mask_0 = const()[name = tensor<string, []>("op_5785_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_5785_cast = slice_by_index(begin = var_5785_begin_0, end = var_5785_end_0, end_mask = var_5785_end_mask_0, x = q_29_cast);
            tensor<int32, [4]> var_5789_begin_0 = const()[name = tensor<string, []>("op_5789_begin_0"), val = tensor<int32, [4]>([0, 896, 0, 0])];
            tensor<int32, [4]> var_5789_end_0 = const()[name = tensor<string, []>("op_5789_end_0"), val = tensor<int32, [4]>([2, 960, 1, 256])];
            tensor<bool, [4]> var_5789_end_mask_0 = const()[name = tensor<string, []>("op_5789_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_5789_cast = slice_by_index(begin = var_5789_begin_0, end = var_5789_end_0, end_mask = var_5789_end_mask_0, x = q_29_cast);
            tensor<int32, [4]> var_5793_begin_0 = const()[name = tensor<string, []>("op_5793_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_5793_end_0 = const()[name = tensor<string, []>("op_5793_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 256])];
            tensor<bool, [4]> var_5793_end_mask_0 = const()[name = tensor<string, []>("op_5793_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_5793_cast = slice_by_index(begin = var_5793_begin_0, end = var_5793_end_0, end_mask = var_5793_end_mask_0, x = q_29_cast);
            tensor<int32, [4]> var_5797_begin_0 = const()[name = tensor<string, []>("op_5797_begin_0"), val = tensor<int32, [4]>([0, 1024, 0, 0])];
            tensor<int32, [4]> var_5797_end_0 = const()[name = tensor<string, []>("op_5797_end_0"), val = tensor<int32, [4]>([2, 1088, 1, 256])];
            tensor<bool, [4]> var_5797_end_mask_0 = const()[name = tensor<string, []>("op_5797_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_5797_cast = slice_by_index(begin = var_5797_begin_0, end = var_5797_end_0, end_mask = var_5797_end_mask_0, x = q_29_cast);
            tensor<int32, [4]> var_5801_begin_0 = const()[name = tensor<string, []>("op_5801_begin_0"), val = tensor<int32, [4]>([0, 1088, 0, 0])];
            tensor<int32, [4]> var_5801_end_0 = const()[name = tensor<string, []>("op_5801_end_0"), val = tensor<int32, [4]>([2, 1152, 1, 256])];
            tensor<bool, [4]> var_5801_end_mask_0 = const()[name = tensor<string, []>("op_5801_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_5801_cast = slice_by_index(begin = var_5801_begin_0, end = var_5801_end_0, end_mask = var_5801_end_mask_0, x = q_29_cast);
            tensor<int32, [4]> var_5805_begin_0 = const()[name = tensor<string, []>("op_5805_begin_0"), val = tensor<int32, [4]>([0, 1152, 0, 0])];
            tensor<int32, [4]> var_5805_end_0 = const()[name = tensor<string, []>("op_5805_end_0"), val = tensor<int32, [4]>([2, 1216, 1, 256])];
            tensor<bool, [4]> var_5805_end_mask_0 = const()[name = tensor<string, []>("op_5805_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_5805_cast = slice_by_index(begin = var_5805_begin_0, end = var_5805_end_0, end_mask = var_5805_end_mask_0, x = q_29_cast);
            tensor<int32, [4]> var_5809_begin_0 = const()[name = tensor<string, []>("op_5809_begin_0"), val = tensor<int32, [4]>([0, 1216, 0, 0])];
            tensor<int32, [4]> var_5809_end_0 = const()[name = tensor<string, []>("op_5809_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<bool, [4]> var_5809_end_mask_0 = const()[name = tensor<string, []>("op_5809_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_5809_cast = slice_by_index(begin = var_5809_begin_0, end = var_5809_end_0, end_mask = var_5809_end_mask_0, x = q_29_cast);
            tensor<int32, [4]> k_59_perm_0 = const()[name = tensor<string, []>("k_59_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_5816_begin_0 = const()[name = tensor<string, []>("op_5816_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_5816_end_0 = const()[name = tensor<string, []>("op_5816_end_0"), val = tensor<int32, [4]>([2, 256, 1, 64])];
            tensor<bool, [4]> var_5816_end_mask_0 = const()[name = tensor<string, []>("op_5816_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 1280]> transpose_17 = transpose(perm = k_59_perm_0, x = k_57_cast);
            tensor<fp16, [2, 256, 1, 64]> var_5816_cast = slice_by_index(begin = var_5816_begin_0, end = var_5816_end_0, end_mask = var_5816_end_mask_0, x = transpose_17);
            tensor<int32, [4]> var_5820_begin_0 = const()[name = tensor<string, []>("op_5820_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 64])];
            tensor<int32, [4]> var_5820_end_0 = const()[name = tensor<string, []>("op_5820_end_0"), val = tensor<int32, [4]>([2, 256, 1, 128])];
            tensor<bool, [4]> var_5820_end_mask_0 = const()[name = tensor<string, []>("op_5820_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_5820_cast = slice_by_index(begin = var_5820_begin_0, end = var_5820_end_0, end_mask = var_5820_end_mask_0, x = transpose_17);
            tensor<int32, [4]> var_5824_begin_0 = const()[name = tensor<string, []>("op_5824_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 128])];
            tensor<int32, [4]> var_5824_end_0 = const()[name = tensor<string, []>("op_5824_end_0"), val = tensor<int32, [4]>([2, 256, 1, 192])];
            tensor<bool, [4]> var_5824_end_mask_0 = const()[name = tensor<string, []>("op_5824_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_5824_cast = slice_by_index(begin = var_5824_begin_0, end = var_5824_end_0, end_mask = var_5824_end_mask_0, x = transpose_17);
            tensor<int32, [4]> var_5828_begin_0 = const()[name = tensor<string, []>("op_5828_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 192])];
            tensor<int32, [4]> var_5828_end_0 = const()[name = tensor<string, []>("op_5828_end_0"), val = tensor<int32, [4]>([2, 256, 1, 256])];
            tensor<bool, [4]> var_5828_end_mask_0 = const()[name = tensor<string, []>("op_5828_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_5828_cast = slice_by_index(begin = var_5828_begin_0, end = var_5828_end_0, end_mask = var_5828_end_mask_0, x = transpose_17);
            tensor<int32, [4]> var_5832_begin_0 = const()[name = tensor<string, []>("op_5832_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 256])];
            tensor<int32, [4]> var_5832_end_0 = const()[name = tensor<string, []>("op_5832_end_0"), val = tensor<int32, [4]>([2, 256, 1, 320])];
            tensor<bool, [4]> var_5832_end_mask_0 = const()[name = tensor<string, []>("op_5832_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_5832_cast = slice_by_index(begin = var_5832_begin_0, end = var_5832_end_0, end_mask = var_5832_end_mask_0, x = transpose_17);
            tensor<int32, [4]> var_5836_begin_0 = const()[name = tensor<string, []>("op_5836_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_5836_end_0 = const()[name = tensor<string, []>("op_5836_end_0"), val = tensor<int32, [4]>([2, 256, 1, 384])];
            tensor<bool, [4]> var_5836_end_mask_0 = const()[name = tensor<string, []>("op_5836_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_5836_cast = slice_by_index(begin = var_5836_begin_0, end = var_5836_end_0, end_mask = var_5836_end_mask_0, x = transpose_17);
            tensor<int32, [4]> var_5840_begin_0 = const()[name = tensor<string, []>("op_5840_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 384])];
            tensor<int32, [4]> var_5840_end_0 = const()[name = tensor<string, []>("op_5840_end_0"), val = tensor<int32, [4]>([2, 256, 1, 448])];
            tensor<bool, [4]> var_5840_end_mask_0 = const()[name = tensor<string, []>("op_5840_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_5840_cast = slice_by_index(begin = var_5840_begin_0, end = var_5840_end_0, end_mask = var_5840_end_mask_0, x = transpose_17);
            tensor<int32, [4]> var_5844_begin_0 = const()[name = tensor<string, []>("op_5844_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 448])];
            tensor<int32, [4]> var_5844_end_0 = const()[name = tensor<string, []>("op_5844_end_0"), val = tensor<int32, [4]>([2, 256, 1, 512])];
            tensor<bool, [4]> var_5844_end_mask_0 = const()[name = tensor<string, []>("op_5844_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_5844_cast = slice_by_index(begin = var_5844_begin_0, end = var_5844_end_0, end_mask = var_5844_end_mask_0, x = transpose_17);
            tensor<int32, [4]> var_5848_begin_0 = const()[name = tensor<string, []>("op_5848_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 512])];
            tensor<int32, [4]> var_5848_end_0 = const()[name = tensor<string, []>("op_5848_end_0"), val = tensor<int32, [4]>([2, 256, 1, 576])];
            tensor<bool, [4]> var_5848_end_mask_0 = const()[name = tensor<string, []>("op_5848_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_5848_cast = slice_by_index(begin = var_5848_begin_0, end = var_5848_end_0, end_mask = var_5848_end_mask_0, x = transpose_17);
            tensor<int32, [4]> var_5852_begin_0 = const()[name = tensor<string, []>("op_5852_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 576])];
            tensor<int32, [4]> var_5852_end_0 = const()[name = tensor<string, []>("op_5852_end_0"), val = tensor<int32, [4]>([2, 256, 1, 640])];
            tensor<bool, [4]> var_5852_end_mask_0 = const()[name = tensor<string, []>("op_5852_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_5852_cast = slice_by_index(begin = var_5852_begin_0, end = var_5852_end_0, end_mask = var_5852_end_mask_0, x = transpose_17);
            tensor<int32, [4]> var_5856_begin_0 = const()[name = tensor<string, []>("op_5856_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 640])];
            tensor<int32, [4]> var_5856_end_0 = const()[name = tensor<string, []>("op_5856_end_0"), val = tensor<int32, [4]>([2, 256, 1, 704])];
            tensor<bool, [4]> var_5856_end_mask_0 = const()[name = tensor<string, []>("op_5856_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_5856_cast = slice_by_index(begin = var_5856_begin_0, end = var_5856_end_0, end_mask = var_5856_end_mask_0, x = transpose_17);
            tensor<int32, [4]> var_5860_begin_0 = const()[name = tensor<string, []>("op_5860_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 704])];
            tensor<int32, [4]> var_5860_end_0 = const()[name = tensor<string, []>("op_5860_end_0"), val = tensor<int32, [4]>([2, 256, 1, 768])];
            tensor<bool, [4]> var_5860_end_mask_0 = const()[name = tensor<string, []>("op_5860_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_5860_cast = slice_by_index(begin = var_5860_begin_0, end = var_5860_end_0, end_mask = var_5860_end_mask_0, x = transpose_17);
            tensor<int32, [4]> var_5864_begin_0 = const()[name = tensor<string, []>("op_5864_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 768])];
            tensor<int32, [4]> var_5864_end_0 = const()[name = tensor<string, []>("op_5864_end_0"), val = tensor<int32, [4]>([2, 256, 1, 832])];
            tensor<bool, [4]> var_5864_end_mask_0 = const()[name = tensor<string, []>("op_5864_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_5864_cast = slice_by_index(begin = var_5864_begin_0, end = var_5864_end_0, end_mask = var_5864_end_mask_0, x = transpose_17);
            tensor<int32, [4]> var_5868_begin_0 = const()[name = tensor<string, []>("op_5868_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 832])];
            tensor<int32, [4]> var_5868_end_0 = const()[name = tensor<string, []>("op_5868_end_0"), val = tensor<int32, [4]>([2, 256, 1, 896])];
            tensor<bool, [4]> var_5868_end_mask_0 = const()[name = tensor<string, []>("op_5868_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_5868_cast = slice_by_index(begin = var_5868_begin_0, end = var_5868_end_0, end_mask = var_5868_end_mask_0, x = transpose_17);
            tensor<int32, [4]> var_5872_begin_0 = const()[name = tensor<string, []>("op_5872_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 896])];
            tensor<int32, [4]> var_5872_end_0 = const()[name = tensor<string, []>("op_5872_end_0"), val = tensor<int32, [4]>([2, 256, 1, 960])];
            tensor<bool, [4]> var_5872_end_mask_0 = const()[name = tensor<string, []>("op_5872_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_5872_cast = slice_by_index(begin = var_5872_begin_0, end = var_5872_end_0, end_mask = var_5872_end_mask_0, x = transpose_17);
            tensor<int32, [4]> var_5876_begin_0 = const()[name = tensor<string, []>("op_5876_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 960])];
            tensor<int32, [4]> var_5876_end_0 = const()[name = tensor<string, []>("op_5876_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1024])];
            tensor<bool, [4]> var_5876_end_mask_0 = const()[name = tensor<string, []>("op_5876_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_5876_cast = slice_by_index(begin = var_5876_begin_0, end = var_5876_end_0, end_mask = var_5876_end_mask_0, x = transpose_17);
            tensor<int32, [4]> var_5880_begin_0 = const()[name = tensor<string, []>("op_5880_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1024])];
            tensor<int32, [4]> var_5880_end_0 = const()[name = tensor<string, []>("op_5880_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1088])];
            tensor<bool, [4]> var_5880_end_mask_0 = const()[name = tensor<string, []>("op_5880_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_5880_cast = slice_by_index(begin = var_5880_begin_0, end = var_5880_end_0, end_mask = var_5880_end_mask_0, x = transpose_17);
            tensor<int32, [4]> var_5884_begin_0 = const()[name = tensor<string, []>("op_5884_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1088])];
            tensor<int32, [4]> var_5884_end_0 = const()[name = tensor<string, []>("op_5884_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1152])];
            tensor<bool, [4]> var_5884_end_mask_0 = const()[name = tensor<string, []>("op_5884_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_5884_cast = slice_by_index(begin = var_5884_begin_0, end = var_5884_end_0, end_mask = var_5884_end_mask_0, x = transpose_17);
            tensor<int32, [4]> var_5888_begin_0 = const()[name = tensor<string, []>("op_5888_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1152])];
            tensor<int32, [4]> var_5888_end_0 = const()[name = tensor<string, []>("op_5888_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1216])];
            tensor<bool, [4]> var_5888_end_mask_0 = const()[name = tensor<string, []>("op_5888_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_5888_cast = slice_by_index(begin = var_5888_begin_0, end = var_5888_end_0, end_mask = var_5888_end_mask_0, x = transpose_17);
            tensor<int32, [4]> var_5892_begin_0 = const()[name = tensor<string, []>("op_5892_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1216])];
            tensor<int32, [4]> var_5892_end_0 = const()[name = tensor<string, []>("op_5892_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1280])];
            tensor<bool, [4]> var_5892_end_mask_0 = const()[name = tensor<string, []>("op_5892_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_5892_cast = slice_by_index(begin = var_5892_begin_0, end = var_5892_end_0, end_mask = var_5892_end_mask_0, x = transpose_17);
            tensor<int32, [4]> var_5894_begin_0 = const()[name = tensor<string, []>("op_5894_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_5894_end_0 = const()[name = tensor<string, []>("op_5894_end_0"), val = tensor<int32, [4]>([2, 64, 1, 256])];
            tensor<bool, [4]> var_5894_end_mask_0 = const()[name = tensor<string, []>("op_5894_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_5894_cast = slice_by_index(begin = var_5894_begin_0, end = var_5894_end_0, end_mask = var_5894_end_mask_0, x = v_29_cast);
            tensor<int32, [4]> var_5898_begin_0 = const()[name = tensor<string, []>("op_5898_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_5898_end_0 = const()[name = tensor<string, []>("op_5898_end_0"), val = tensor<int32, [4]>([2, 128, 1, 256])];
            tensor<bool, [4]> var_5898_end_mask_0 = const()[name = tensor<string, []>("op_5898_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_5898_cast = slice_by_index(begin = var_5898_begin_0, end = var_5898_end_0, end_mask = var_5898_end_mask_0, x = v_29_cast);
            tensor<int32, [4]> var_5902_begin_0 = const()[name = tensor<string, []>("op_5902_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_5902_end_0 = const()[name = tensor<string, []>("op_5902_end_0"), val = tensor<int32, [4]>([2, 192, 1, 256])];
            tensor<bool, [4]> var_5902_end_mask_0 = const()[name = tensor<string, []>("op_5902_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_5902_cast = slice_by_index(begin = var_5902_begin_0, end = var_5902_end_0, end_mask = var_5902_end_mask_0, x = v_29_cast);
            tensor<int32, [4]> var_5906_begin_0 = const()[name = tensor<string, []>("op_5906_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_5906_end_0 = const()[name = tensor<string, []>("op_5906_end_0"), val = tensor<int32, [4]>([2, 256, 1, 256])];
            tensor<bool, [4]> var_5906_end_mask_0 = const()[name = tensor<string, []>("op_5906_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_5906_cast = slice_by_index(begin = var_5906_begin_0, end = var_5906_end_0, end_mask = var_5906_end_mask_0, x = v_29_cast);
            tensor<int32, [4]> var_5910_begin_0 = const()[name = tensor<string, []>("op_5910_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_5910_end_0 = const()[name = tensor<string, []>("op_5910_end_0"), val = tensor<int32, [4]>([2, 320, 1, 256])];
            tensor<bool, [4]> var_5910_end_mask_0 = const()[name = tensor<string, []>("op_5910_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_5910_cast = slice_by_index(begin = var_5910_begin_0, end = var_5910_end_0, end_mask = var_5910_end_mask_0, x = v_29_cast);
            tensor<int32, [4]> var_5914_begin_0 = const()[name = tensor<string, []>("op_5914_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_5914_end_0 = const()[name = tensor<string, []>("op_5914_end_0"), val = tensor<int32, [4]>([2, 384, 1, 256])];
            tensor<bool, [4]> var_5914_end_mask_0 = const()[name = tensor<string, []>("op_5914_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_5914_cast = slice_by_index(begin = var_5914_begin_0, end = var_5914_end_0, end_mask = var_5914_end_mask_0, x = v_29_cast);
            tensor<int32, [4]> var_5918_begin_0 = const()[name = tensor<string, []>("op_5918_begin_0"), val = tensor<int32, [4]>([0, 384, 0, 0])];
            tensor<int32, [4]> var_5918_end_0 = const()[name = tensor<string, []>("op_5918_end_0"), val = tensor<int32, [4]>([2, 448, 1, 256])];
            tensor<bool, [4]> var_5918_end_mask_0 = const()[name = tensor<string, []>("op_5918_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_5918_cast = slice_by_index(begin = var_5918_begin_0, end = var_5918_end_0, end_mask = var_5918_end_mask_0, x = v_29_cast);
            tensor<int32, [4]> var_5922_begin_0 = const()[name = tensor<string, []>("op_5922_begin_0"), val = tensor<int32, [4]>([0, 448, 0, 0])];
            tensor<int32, [4]> var_5922_end_0 = const()[name = tensor<string, []>("op_5922_end_0"), val = tensor<int32, [4]>([2, 512, 1, 256])];
            tensor<bool, [4]> var_5922_end_mask_0 = const()[name = tensor<string, []>("op_5922_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_5922_cast = slice_by_index(begin = var_5922_begin_0, end = var_5922_end_0, end_mask = var_5922_end_mask_0, x = v_29_cast);
            tensor<int32, [4]> var_5926_begin_0 = const()[name = tensor<string, []>("op_5926_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_5926_end_0 = const()[name = tensor<string, []>("op_5926_end_0"), val = tensor<int32, [4]>([2, 576, 1, 256])];
            tensor<bool, [4]> var_5926_end_mask_0 = const()[name = tensor<string, []>("op_5926_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_5926_cast = slice_by_index(begin = var_5926_begin_0, end = var_5926_end_0, end_mask = var_5926_end_mask_0, x = v_29_cast);
            tensor<int32, [4]> var_5930_begin_0 = const()[name = tensor<string, []>("op_5930_begin_0"), val = tensor<int32, [4]>([0, 576, 0, 0])];
            tensor<int32, [4]> var_5930_end_0 = const()[name = tensor<string, []>("op_5930_end_0"), val = tensor<int32, [4]>([2, 640, 1, 256])];
            tensor<bool, [4]> var_5930_end_mask_0 = const()[name = tensor<string, []>("op_5930_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_5930_cast = slice_by_index(begin = var_5930_begin_0, end = var_5930_end_0, end_mask = var_5930_end_mask_0, x = v_29_cast);
            tensor<int32, [4]> var_5934_begin_0 = const()[name = tensor<string, []>("op_5934_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_5934_end_0 = const()[name = tensor<string, []>("op_5934_end_0"), val = tensor<int32, [4]>([2, 704, 1, 256])];
            tensor<bool, [4]> var_5934_end_mask_0 = const()[name = tensor<string, []>("op_5934_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_5934_cast = slice_by_index(begin = var_5934_begin_0, end = var_5934_end_0, end_mask = var_5934_end_mask_0, x = v_29_cast);
            tensor<int32, [4]> var_5938_begin_0 = const()[name = tensor<string, []>("op_5938_begin_0"), val = tensor<int32, [4]>([0, 704, 0, 0])];
            tensor<int32, [4]> var_5938_end_0 = const()[name = tensor<string, []>("op_5938_end_0"), val = tensor<int32, [4]>([2, 768, 1, 256])];
            tensor<bool, [4]> var_5938_end_mask_0 = const()[name = tensor<string, []>("op_5938_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_5938_cast = slice_by_index(begin = var_5938_begin_0, end = var_5938_end_0, end_mask = var_5938_end_mask_0, x = v_29_cast);
            tensor<int32, [4]> var_5942_begin_0 = const()[name = tensor<string, []>("op_5942_begin_0"), val = tensor<int32, [4]>([0, 768, 0, 0])];
            tensor<int32, [4]> var_5942_end_0 = const()[name = tensor<string, []>("op_5942_end_0"), val = tensor<int32, [4]>([2, 832, 1, 256])];
            tensor<bool, [4]> var_5942_end_mask_0 = const()[name = tensor<string, []>("op_5942_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_5942_cast = slice_by_index(begin = var_5942_begin_0, end = var_5942_end_0, end_mask = var_5942_end_mask_0, x = v_29_cast);
            tensor<int32, [4]> var_5946_begin_0 = const()[name = tensor<string, []>("op_5946_begin_0"), val = tensor<int32, [4]>([0, 832, 0, 0])];
            tensor<int32, [4]> var_5946_end_0 = const()[name = tensor<string, []>("op_5946_end_0"), val = tensor<int32, [4]>([2, 896, 1, 256])];
            tensor<bool, [4]> var_5946_end_mask_0 = const()[name = tensor<string, []>("op_5946_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_5946_cast = slice_by_index(begin = var_5946_begin_0, end = var_5946_end_0, end_mask = var_5946_end_mask_0, x = v_29_cast);
            tensor<int32, [4]> var_5950_begin_0 = const()[name = tensor<string, []>("op_5950_begin_0"), val = tensor<int32, [4]>([0, 896, 0, 0])];
            tensor<int32, [4]> var_5950_end_0 = const()[name = tensor<string, []>("op_5950_end_0"), val = tensor<int32, [4]>([2, 960, 1, 256])];
            tensor<bool, [4]> var_5950_end_mask_0 = const()[name = tensor<string, []>("op_5950_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_5950_cast = slice_by_index(begin = var_5950_begin_0, end = var_5950_end_0, end_mask = var_5950_end_mask_0, x = v_29_cast);
            tensor<int32, [4]> var_5954_begin_0 = const()[name = tensor<string, []>("op_5954_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_5954_end_0 = const()[name = tensor<string, []>("op_5954_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 256])];
            tensor<bool, [4]> var_5954_end_mask_0 = const()[name = tensor<string, []>("op_5954_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_5954_cast = slice_by_index(begin = var_5954_begin_0, end = var_5954_end_0, end_mask = var_5954_end_mask_0, x = v_29_cast);
            tensor<int32, [4]> var_5958_begin_0 = const()[name = tensor<string, []>("op_5958_begin_0"), val = tensor<int32, [4]>([0, 1024, 0, 0])];
            tensor<int32, [4]> var_5958_end_0 = const()[name = tensor<string, []>("op_5958_end_0"), val = tensor<int32, [4]>([2, 1088, 1, 256])];
            tensor<bool, [4]> var_5958_end_mask_0 = const()[name = tensor<string, []>("op_5958_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_5958_cast = slice_by_index(begin = var_5958_begin_0, end = var_5958_end_0, end_mask = var_5958_end_mask_0, x = v_29_cast);
            tensor<int32, [4]> var_5962_begin_0 = const()[name = tensor<string, []>("op_5962_begin_0"), val = tensor<int32, [4]>([0, 1088, 0, 0])];
            tensor<int32, [4]> var_5962_end_0 = const()[name = tensor<string, []>("op_5962_end_0"), val = tensor<int32, [4]>([2, 1152, 1, 256])];
            tensor<bool, [4]> var_5962_end_mask_0 = const()[name = tensor<string, []>("op_5962_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_5962_cast = slice_by_index(begin = var_5962_begin_0, end = var_5962_end_0, end_mask = var_5962_end_mask_0, x = v_29_cast);
            tensor<int32, [4]> var_5966_begin_0 = const()[name = tensor<string, []>("op_5966_begin_0"), val = tensor<int32, [4]>([0, 1152, 0, 0])];
            tensor<int32, [4]> var_5966_end_0 = const()[name = tensor<string, []>("op_5966_end_0"), val = tensor<int32, [4]>([2, 1216, 1, 256])];
            tensor<bool, [4]> var_5966_end_mask_0 = const()[name = tensor<string, []>("op_5966_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_5966_cast = slice_by_index(begin = var_5966_begin_0, end = var_5966_end_0, end_mask = var_5966_end_mask_0, x = v_29_cast);
            tensor<int32, [4]> var_5970_begin_0 = const()[name = tensor<string, []>("op_5970_begin_0"), val = tensor<int32, [4]>([0, 1216, 0, 0])];
            tensor<int32, [4]> var_5970_end_0 = const()[name = tensor<string, []>("op_5970_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<bool, [4]> var_5970_end_mask_0 = const()[name = tensor<string, []>("op_5970_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_5970_cast = slice_by_index(begin = var_5970_begin_0, end = var_5970_end_0, end_mask = var_5970_end_mask_0, x = v_29_cast);
            tensor<string, []> var_5974_equation_0 = const()[name = tensor<string, []>("op_5974_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_5974_cast = einsum(equation = var_5974_equation_0, values = (var_5816_cast, var_5733_cast));
            tensor<fp16, []> var_5975_to_fp16 = const()[name = tensor<string, []>("op_5975_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_361_cast = mul(x = var_5974_cast, y = var_5975_to_fp16);
            tensor<string, []> var_5978_equation_0 = const()[name = tensor<string, []>("op_5978_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_5978_cast = einsum(equation = var_5978_equation_0, values = (var_5820_cast, var_5737_cast));
            tensor<fp16, []> var_5979_to_fp16 = const()[name = tensor<string, []>("op_5979_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_363_cast = mul(x = var_5978_cast, y = var_5979_to_fp16);
            tensor<string, []> var_5982_equation_0 = const()[name = tensor<string, []>("op_5982_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_5982_cast = einsum(equation = var_5982_equation_0, values = (var_5824_cast, var_5741_cast));
            tensor<fp16, []> var_5983_to_fp16 = const()[name = tensor<string, []>("op_5983_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_365_cast = mul(x = var_5982_cast, y = var_5983_to_fp16);
            tensor<string, []> var_5986_equation_0 = const()[name = tensor<string, []>("op_5986_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_5986_cast = einsum(equation = var_5986_equation_0, values = (var_5828_cast, var_5745_cast));
            tensor<fp16, []> var_5987_to_fp16 = const()[name = tensor<string, []>("op_5987_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_367_cast = mul(x = var_5986_cast, y = var_5987_to_fp16);
            tensor<string, []> var_5990_equation_0 = const()[name = tensor<string, []>("op_5990_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_5990_cast = einsum(equation = var_5990_equation_0, values = (var_5832_cast, var_5749_cast));
            tensor<fp16, []> var_5991_to_fp16 = const()[name = tensor<string, []>("op_5991_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_369_cast = mul(x = var_5990_cast, y = var_5991_to_fp16);
            tensor<string, []> var_5994_equation_0 = const()[name = tensor<string, []>("op_5994_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_5994_cast = einsum(equation = var_5994_equation_0, values = (var_5836_cast, var_5753_cast));
            tensor<fp16, []> var_5995_to_fp16 = const()[name = tensor<string, []>("op_5995_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_371_cast = mul(x = var_5994_cast, y = var_5995_to_fp16);
            tensor<string, []> var_5998_equation_0 = const()[name = tensor<string, []>("op_5998_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_5998_cast = einsum(equation = var_5998_equation_0, values = (var_5840_cast, var_5757_cast));
            tensor<fp16, []> var_5999_to_fp16 = const()[name = tensor<string, []>("op_5999_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_373_cast = mul(x = var_5998_cast, y = var_5999_to_fp16);
            tensor<string, []> var_6002_equation_0 = const()[name = tensor<string, []>("op_6002_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_6002_cast = einsum(equation = var_6002_equation_0, values = (var_5844_cast, var_5761_cast));
            tensor<fp16, []> var_6003_to_fp16 = const()[name = tensor<string, []>("op_6003_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_375_cast = mul(x = var_6002_cast, y = var_6003_to_fp16);
            tensor<string, []> var_6006_equation_0 = const()[name = tensor<string, []>("op_6006_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_6006_cast = einsum(equation = var_6006_equation_0, values = (var_5848_cast, var_5765_cast));
            tensor<fp16, []> var_6007_to_fp16 = const()[name = tensor<string, []>("op_6007_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_377_cast = mul(x = var_6006_cast, y = var_6007_to_fp16);
            tensor<string, []> var_6010_equation_0 = const()[name = tensor<string, []>("op_6010_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_6010_cast = einsum(equation = var_6010_equation_0, values = (var_5852_cast, var_5769_cast));
            tensor<fp16, []> var_6011_to_fp16 = const()[name = tensor<string, []>("op_6011_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_379_cast = mul(x = var_6010_cast, y = var_6011_to_fp16);
            tensor<string, []> var_6014_equation_0 = const()[name = tensor<string, []>("op_6014_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_6014_cast = einsum(equation = var_6014_equation_0, values = (var_5856_cast, var_5773_cast));
            tensor<fp16, []> var_6015_to_fp16 = const()[name = tensor<string, []>("op_6015_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_381_cast = mul(x = var_6014_cast, y = var_6015_to_fp16);
            tensor<string, []> var_6018_equation_0 = const()[name = tensor<string, []>("op_6018_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_6018_cast = einsum(equation = var_6018_equation_0, values = (var_5860_cast, var_5777_cast));
            tensor<fp16, []> var_6019_to_fp16 = const()[name = tensor<string, []>("op_6019_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_383_cast = mul(x = var_6018_cast, y = var_6019_to_fp16);
            tensor<string, []> var_6022_equation_0 = const()[name = tensor<string, []>("op_6022_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_6022_cast = einsum(equation = var_6022_equation_0, values = (var_5864_cast, var_5781_cast));
            tensor<fp16, []> var_6023_to_fp16 = const()[name = tensor<string, []>("op_6023_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_385_cast = mul(x = var_6022_cast, y = var_6023_to_fp16);
            tensor<string, []> var_6026_equation_0 = const()[name = tensor<string, []>("op_6026_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_6026_cast = einsum(equation = var_6026_equation_0, values = (var_5868_cast, var_5785_cast));
            tensor<fp16, []> var_6027_to_fp16 = const()[name = tensor<string, []>("op_6027_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_387_cast = mul(x = var_6026_cast, y = var_6027_to_fp16);
            tensor<string, []> var_6030_equation_0 = const()[name = tensor<string, []>("op_6030_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_6030_cast = einsum(equation = var_6030_equation_0, values = (var_5872_cast, var_5789_cast));
            tensor<fp16, []> var_6031_to_fp16 = const()[name = tensor<string, []>("op_6031_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_389_cast = mul(x = var_6030_cast, y = var_6031_to_fp16);
            tensor<string, []> var_6034_equation_0 = const()[name = tensor<string, []>("op_6034_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_6034_cast = einsum(equation = var_6034_equation_0, values = (var_5876_cast, var_5793_cast));
            tensor<fp16, []> var_6035_to_fp16 = const()[name = tensor<string, []>("op_6035_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_391_cast = mul(x = var_6034_cast, y = var_6035_to_fp16);
            tensor<string, []> var_6038_equation_0 = const()[name = tensor<string, []>("op_6038_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_6038_cast = einsum(equation = var_6038_equation_0, values = (var_5880_cast, var_5797_cast));
            tensor<fp16, []> var_6039_to_fp16 = const()[name = tensor<string, []>("op_6039_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_393_cast = mul(x = var_6038_cast, y = var_6039_to_fp16);
            tensor<string, []> var_6042_equation_0 = const()[name = tensor<string, []>("op_6042_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_6042_cast = einsum(equation = var_6042_equation_0, values = (var_5884_cast, var_5801_cast));
            tensor<fp16, []> var_6043_to_fp16 = const()[name = tensor<string, []>("op_6043_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_395_cast = mul(x = var_6042_cast, y = var_6043_to_fp16);
            tensor<string, []> var_6046_equation_0 = const()[name = tensor<string, []>("op_6046_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_6046_cast = einsum(equation = var_6046_equation_0, values = (var_5888_cast, var_5805_cast));
            tensor<fp16, []> var_6047_to_fp16 = const()[name = tensor<string, []>("op_6047_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_397_cast = mul(x = var_6046_cast, y = var_6047_to_fp16);
            tensor<string, []> var_6050_equation_0 = const()[name = tensor<string, []>("op_6050_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_6050_cast = einsum(equation = var_6050_equation_0, values = (var_5892_cast, var_5809_cast));
            tensor<fp16, []> var_6051_to_fp16 = const()[name = tensor<string, []>("op_6051_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_399_cast = mul(x = var_6050_cast, y = var_6051_to_fp16);
            tensor<fp16, [2, 256, 1, 256]> var_6053_cast = softmax(axis = var_5599, x = aw_361_cast);
            tensor<fp16, [2, 256, 1, 256]> var_6054_cast = softmax(axis = var_5599, x = aw_363_cast);
            tensor<fp16, [2, 256, 1, 256]> var_6055_cast = softmax(axis = var_5599, x = aw_365_cast);
            tensor<fp16, [2, 256, 1, 256]> var_6056_cast = softmax(axis = var_5599, x = aw_367_cast);
            tensor<fp16, [2, 256, 1, 256]> var_6057_cast = softmax(axis = var_5599, x = aw_369_cast);
            tensor<fp16, [2, 256, 1, 256]> var_6058_cast = softmax(axis = var_5599, x = aw_371_cast);
            tensor<fp16, [2, 256, 1, 256]> var_6059_cast = softmax(axis = var_5599, x = aw_373_cast);
            tensor<fp16, [2, 256, 1, 256]> var_6060_cast = softmax(axis = var_5599, x = aw_375_cast);
            tensor<fp16, [2, 256, 1, 256]> var_6061_cast = softmax(axis = var_5599, x = aw_377_cast);
            tensor<fp16, [2, 256, 1, 256]> var_6062_cast = softmax(axis = var_5599, x = aw_379_cast);
            tensor<fp16, [2, 256, 1, 256]> var_6063_cast = softmax(axis = var_5599, x = aw_381_cast);
            tensor<fp16, [2, 256, 1, 256]> var_6064_cast = softmax(axis = var_5599, x = aw_383_cast);
            tensor<fp16, [2, 256, 1, 256]> var_6065_cast = softmax(axis = var_5599, x = aw_385_cast);
            tensor<fp16, [2, 256, 1, 256]> var_6066_cast = softmax(axis = var_5599, x = aw_387_cast);
            tensor<fp16, [2, 256, 1, 256]> var_6067_cast = softmax(axis = var_5599, x = aw_389_cast);
            tensor<fp16, [2, 256, 1, 256]> var_6068_cast = softmax(axis = var_5599, x = aw_391_cast);
            tensor<fp16, [2, 256, 1, 256]> var_6069_cast = softmax(axis = var_5599, x = aw_393_cast);
            tensor<fp16, [2, 256, 1, 256]> var_6070_cast = softmax(axis = var_5599, x = aw_395_cast);
            tensor<fp16, [2, 256, 1, 256]> var_6071_cast = softmax(axis = var_5599, x = aw_397_cast);
            tensor<fp16, [2, 256, 1, 256]> var_6072_cast = softmax(axis = var_5599, x = aw_399_cast);
            tensor<string, []> var_6074_equation_0 = const()[name = tensor<string, []>("op_6074_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_6074_cast = einsum(equation = var_6074_equation_0, values = (var_5894_cast, var_6053_cast));
            tensor<string, []> var_6076_equation_0 = const()[name = tensor<string, []>("op_6076_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_6076_cast = einsum(equation = var_6076_equation_0, values = (var_5898_cast, var_6054_cast));
            tensor<string, []> var_6078_equation_0 = const()[name = tensor<string, []>("op_6078_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_6078_cast = einsum(equation = var_6078_equation_0, values = (var_5902_cast, var_6055_cast));
            tensor<string, []> var_6080_equation_0 = const()[name = tensor<string, []>("op_6080_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_6080_cast = einsum(equation = var_6080_equation_0, values = (var_5906_cast, var_6056_cast));
            tensor<string, []> var_6082_equation_0 = const()[name = tensor<string, []>("op_6082_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_6082_cast = einsum(equation = var_6082_equation_0, values = (var_5910_cast, var_6057_cast));
            tensor<string, []> var_6084_equation_0 = const()[name = tensor<string, []>("op_6084_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_6084_cast = einsum(equation = var_6084_equation_0, values = (var_5914_cast, var_6058_cast));
            tensor<string, []> var_6086_equation_0 = const()[name = tensor<string, []>("op_6086_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_6086_cast = einsum(equation = var_6086_equation_0, values = (var_5918_cast, var_6059_cast));
            tensor<string, []> var_6088_equation_0 = const()[name = tensor<string, []>("op_6088_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_6088_cast = einsum(equation = var_6088_equation_0, values = (var_5922_cast, var_6060_cast));
            tensor<string, []> var_6090_equation_0 = const()[name = tensor<string, []>("op_6090_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_6090_cast = einsum(equation = var_6090_equation_0, values = (var_5926_cast, var_6061_cast));
            tensor<string, []> var_6092_equation_0 = const()[name = tensor<string, []>("op_6092_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_6092_cast = einsum(equation = var_6092_equation_0, values = (var_5930_cast, var_6062_cast));
            tensor<string, []> var_6094_equation_0 = const()[name = tensor<string, []>("op_6094_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_6094_cast = einsum(equation = var_6094_equation_0, values = (var_5934_cast, var_6063_cast));
            tensor<string, []> var_6096_equation_0 = const()[name = tensor<string, []>("op_6096_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_6096_cast = einsum(equation = var_6096_equation_0, values = (var_5938_cast, var_6064_cast));
            tensor<string, []> var_6098_equation_0 = const()[name = tensor<string, []>("op_6098_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_6098_cast = einsum(equation = var_6098_equation_0, values = (var_5942_cast, var_6065_cast));
            tensor<string, []> var_6100_equation_0 = const()[name = tensor<string, []>("op_6100_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_6100_cast = einsum(equation = var_6100_equation_0, values = (var_5946_cast, var_6066_cast));
            tensor<string, []> var_6102_equation_0 = const()[name = tensor<string, []>("op_6102_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_6102_cast = einsum(equation = var_6102_equation_0, values = (var_5950_cast, var_6067_cast));
            tensor<string, []> var_6104_equation_0 = const()[name = tensor<string, []>("op_6104_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_6104_cast = einsum(equation = var_6104_equation_0, values = (var_5954_cast, var_6068_cast));
            tensor<string, []> var_6106_equation_0 = const()[name = tensor<string, []>("op_6106_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_6106_cast = einsum(equation = var_6106_equation_0, values = (var_5958_cast, var_6069_cast));
            tensor<string, []> var_6108_equation_0 = const()[name = tensor<string, []>("op_6108_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_6108_cast = einsum(equation = var_6108_equation_0, values = (var_5962_cast, var_6070_cast));
            tensor<string, []> var_6110_equation_0 = const()[name = tensor<string, []>("op_6110_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_6110_cast = einsum(equation = var_6110_equation_0, values = (var_5966_cast, var_6071_cast));
            tensor<string, []> var_6112_equation_0 = const()[name = tensor<string, []>("op_6112_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_6112_cast = einsum(equation = var_6112_equation_0, values = (var_5970_cast, var_6072_cast));
            tensor<bool, []> input_301_interleave_0 = const()[name = tensor<string, []>("input_301_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 1280, 1, 256]> input_301_cast = concat(axis = var_5599, interleave = input_301_interleave_0, values = (var_6074_cast, var_6076_cast, var_6078_cast, var_6080_cast, var_6082_cast, var_6084_cast, var_6086_cast, var_6088_cast, var_6090_cast, var_6092_cast, var_6094_cast, var_6096_cast, var_6098_cast, var_6100_cast, var_6102_cast, var_6104_cast, var_6106_cast, var_6108_cast, var_6110_cast, var_6112_cast));
            tensor<int32, [2]> var_6118 = const()[name = tensor<string, []>("op_6118"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6120 = const()[name = tensor<string, []>("op_6120"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_6122_pad_type_0 = const()[name = tensor<string, []>("op_6122_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_6122_pad_0 = const()[name = tensor<string, []>("op_6122_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(245868032)))];
            tensor<fp16, [1280]> up_blocks_1_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(249144896)))];
            tensor<fp16, [2, 1280, 1, 256]> var_6122_cast = conv(bias = up_blocks_1_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16, dilations = var_6120, groups = var_5599, pad = var_6122_pad_0, pad_type = var_6122_pad_type_0, strides = var_6118, weight = up_blocks_1_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16, x = input_301_cast);
            tensor<fp16, [2, 1280, 1, 256]> inputs_45_cast = add(x = var_6122_cast, y = inputs_43_cast);
            tensor<int32, [1]> var_6126 = const()[name = tensor<string, []>("op_6126"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> channels_mean_45_cast = reduce_mean(axes = var_6126, keep_dims = var_5594, x = inputs_45_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_45_cast = sub(x = inputs_45_cast, y = channels_mean_45_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_sq_45_cast = mul(x = zero_mean_45_cast, y = zero_mean_45_cast);
            tensor<int32, [1]> var_6130 = const()[name = tensor<string, []>("op_6130"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> var_6131_cast = reduce_mean(axes = var_6130, keep_dims = var_5594, x = zero_mean_sq_45_cast);
            tensor<fp16, []> var_6132_to_fp16 = const()[name = tensor<string, []>("op_6132_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 256]> var_6133_cast = add(x = var_6131_cast, y = var_6132_to_fp16);
            tensor<fp16, []> denom_45_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_45_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 256]> denom_45_cast = rsqrt(epsilon = denom_45_epsilon_0_to_fp16, x = var_6133_cast);
            tensor<fp16, [2, 1280, 1, 256]> out_45_cast = mul(x = zero_mean_45_cast, y = denom_45_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_6137_to_fp16 = const()[name = tensor<string, []>("op_6137_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(249147520)))];
            tensor<fp16, [2, 1280, 1, 256]> var_6138_cast = add(x = out_45_cast, y = var_6137_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_6140_to_fp16 = const()[name = tensor<string, []>("op_6140_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(249150144)))];
            tensor<fp16, [2, 1280, 1, 256]> hidden_states_169_cast = mul(x = var_6138_cast, y = var_6140_to_fp16);
            tensor<int32, [2]> var_6147 = const()[name = tensor<string, []>("op_6147"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6149 = const()[name = tensor<string, []>("op_6149"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_31_pad_type_0 = const()[name = tensor<string, []>("q_31_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_31_pad_0 = const()[name = tensor<string, []>("q_31_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(249152768)))];
            tensor<fp16, [2, 1280, 1, 256]> q_31_cast = conv(dilations = var_6149, groups = var_5599, pad = q_31_pad_0, pad_type = q_31_pad_type_0, strides = var_6147, weight = up_blocks_1_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16, x = hidden_states_169_cast);
            tensor<int32, [2]> var_6153 = const()[name = tensor<string, []>("op_6153"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6155 = const()[name = tensor<string, []>("op_6155"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_61_pad_type_0 = const()[name = tensor<string, []>("k_61_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_61_pad_0 = const()[name = tensor<string, []>("k_61_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1024, 1, 1]> up_blocks_1_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16"), val = tensor<fp16, [1280, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(252429632)))];
            tensor<fp16, [2, 1280, 1, 77]> k_61_cast = conv(dilations = var_6155, groups = var_5599, pad = k_61_pad_0, pad_type = k_61_pad_type_0, strides = var_6153, weight = up_blocks_1_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [2]> var_6159 = const()[name = tensor<string, []>("op_6159"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6161 = const()[name = tensor<string, []>("op_6161"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_31_pad_type_0 = const()[name = tensor<string, []>("v_31_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_31_pad_0 = const()[name = tensor<string, []>("v_31_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1024, 1, 1]> up_blocks_1_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16"), val = tensor<fp16, [1280, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(255051136)))];
            tensor<fp16, [2, 1280, 1, 77]> v_31_cast = conv(dilations = var_6161, groups = var_5599, pad = v_31_pad_0, pad_type = v_31_pad_type_0, strides = var_6159, weight = up_blocks_1_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [4]> var_6165_begin_0 = const()[name = tensor<string, []>("op_6165_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_6165_end_0 = const()[name = tensor<string, []>("op_6165_end_0"), val = tensor<int32, [4]>([2, 64, 1, 256])];
            tensor<bool, [4]> var_6165_end_mask_0 = const()[name = tensor<string, []>("op_6165_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6165_cast = slice_by_index(begin = var_6165_begin_0, end = var_6165_end_0, end_mask = var_6165_end_mask_0, x = q_31_cast);
            tensor<int32, [4]> var_6169_begin_0 = const()[name = tensor<string, []>("op_6169_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_6169_end_0 = const()[name = tensor<string, []>("op_6169_end_0"), val = tensor<int32, [4]>([2, 128, 1, 256])];
            tensor<bool, [4]> var_6169_end_mask_0 = const()[name = tensor<string, []>("op_6169_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6169_cast = slice_by_index(begin = var_6169_begin_0, end = var_6169_end_0, end_mask = var_6169_end_mask_0, x = q_31_cast);
            tensor<int32, [4]> var_6173_begin_0 = const()[name = tensor<string, []>("op_6173_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_6173_end_0 = const()[name = tensor<string, []>("op_6173_end_0"), val = tensor<int32, [4]>([2, 192, 1, 256])];
            tensor<bool, [4]> var_6173_end_mask_0 = const()[name = tensor<string, []>("op_6173_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6173_cast = slice_by_index(begin = var_6173_begin_0, end = var_6173_end_0, end_mask = var_6173_end_mask_0, x = q_31_cast);
            tensor<int32, [4]> var_6177_begin_0 = const()[name = tensor<string, []>("op_6177_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_6177_end_0 = const()[name = tensor<string, []>("op_6177_end_0"), val = tensor<int32, [4]>([2, 256, 1, 256])];
            tensor<bool, [4]> var_6177_end_mask_0 = const()[name = tensor<string, []>("op_6177_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6177_cast = slice_by_index(begin = var_6177_begin_0, end = var_6177_end_0, end_mask = var_6177_end_mask_0, x = q_31_cast);
            tensor<int32, [4]> var_6181_begin_0 = const()[name = tensor<string, []>("op_6181_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_6181_end_0 = const()[name = tensor<string, []>("op_6181_end_0"), val = tensor<int32, [4]>([2, 320, 1, 256])];
            tensor<bool, [4]> var_6181_end_mask_0 = const()[name = tensor<string, []>("op_6181_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6181_cast = slice_by_index(begin = var_6181_begin_0, end = var_6181_end_0, end_mask = var_6181_end_mask_0, x = q_31_cast);
            tensor<int32, [4]> var_6185_begin_0 = const()[name = tensor<string, []>("op_6185_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_6185_end_0 = const()[name = tensor<string, []>("op_6185_end_0"), val = tensor<int32, [4]>([2, 384, 1, 256])];
            tensor<bool, [4]> var_6185_end_mask_0 = const()[name = tensor<string, []>("op_6185_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6185_cast = slice_by_index(begin = var_6185_begin_0, end = var_6185_end_0, end_mask = var_6185_end_mask_0, x = q_31_cast);
            tensor<int32, [4]> var_6189_begin_0 = const()[name = tensor<string, []>("op_6189_begin_0"), val = tensor<int32, [4]>([0, 384, 0, 0])];
            tensor<int32, [4]> var_6189_end_0 = const()[name = tensor<string, []>("op_6189_end_0"), val = tensor<int32, [4]>([2, 448, 1, 256])];
            tensor<bool, [4]> var_6189_end_mask_0 = const()[name = tensor<string, []>("op_6189_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6189_cast = slice_by_index(begin = var_6189_begin_0, end = var_6189_end_0, end_mask = var_6189_end_mask_0, x = q_31_cast);
            tensor<int32, [4]> var_6193_begin_0 = const()[name = tensor<string, []>("op_6193_begin_0"), val = tensor<int32, [4]>([0, 448, 0, 0])];
            tensor<int32, [4]> var_6193_end_0 = const()[name = tensor<string, []>("op_6193_end_0"), val = tensor<int32, [4]>([2, 512, 1, 256])];
            tensor<bool, [4]> var_6193_end_mask_0 = const()[name = tensor<string, []>("op_6193_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6193_cast = slice_by_index(begin = var_6193_begin_0, end = var_6193_end_0, end_mask = var_6193_end_mask_0, x = q_31_cast);
            tensor<int32, [4]> var_6197_begin_0 = const()[name = tensor<string, []>("op_6197_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_6197_end_0 = const()[name = tensor<string, []>("op_6197_end_0"), val = tensor<int32, [4]>([2, 576, 1, 256])];
            tensor<bool, [4]> var_6197_end_mask_0 = const()[name = tensor<string, []>("op_6197_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6197_cast = slice_by_index(begin = var_6197_begin_0, end = var_6197_end_0, end_mask = var_6197_end_mask_0, x = q_31_cast);
            tensor<int32, [4]> var_6201_begin_0 = const()[name = tensor<string, []>("op_6201_begin_0"), val = tensor<int32, [4]>([0, 576, 0, 0])];
            tensor<int32, [4]> var_6201_end_0 = const()[name = tensor<string, []>("op_6201_end_0"), val = tensor<int32, [4]>([2, 640, 1, 256])];
            tensor<bool, [4]> var_6201_end_mask_0 = const()[name = tensor<string, []>("op_6201_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6201_cast = slice_by_index(begin = var_6201_begin_0, end = var_6201_end_0, end_mask = var_6201_end_mask_0, x = q_31_cast);
            tensor<int32, [4]> var_6205_begin_0 = const()[name = tensor<string, []>("op_6205_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_6205_end_0 = const()[name = tensor<string, []>("op_6205_end_0"), val = tensor<int32, [4]>([2, 704, 1, 256])];
            tensor<bool, [4]> var_6205_end_mask_0 = const()[name = tensor<string, []>("op_6205_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6205_cast = slice_by_index(begin = var_6205_begin_0, end = var_6205_end_0, end_mask = var_6205_end_mask_0, x = q_31_cast);
            tensor<int32, [4]> var_6209_begin_0 = const()[name = tensor<string, []>("op_6209_begin_0"), val = tensor<int32, [4]>([0, 704, 0, 0])];
            tensor<int32, [4]> var_6209_end_0 = const()[name = tensor<string, []>("op_6209_end_0"), val = tensor<int32, [4]>([2, 768, 1, 256])];
            tensor<bool, [4]> var_6209_end_mask_0 = const()[name = tensor<string, []>("op_6209_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6209_cast = slice_by_index(begin = var_6209_begin_0, end = var_6209_end_0, end_mask = var_6209_end_mask_0, x = q_31_cast);
            tensor<int32, [4]> var_6213_begin_0 = const()[name = tensor<string, []>("op_6213_begin_0"), val = tensor<int32, [4]>([0, 768, 0, 0])];
            tensor<int32, [4]> var_6213_end_0 = const()[name = tensor<string, []>("op_6213_end_0"), val = tensor<int32, [4]>([2, 832, 1, 256])];
            tensor<bool, [4]> var_6213_end_mask_0 = const()[name = tensor<string, []>("op_6213_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6213_cast = slice_by_index(begin = var_6213_begin_0, end = var_6213_end_0, end_mask = var_6213_end_mask_0, x = q_31_cast);
            tensor<int32, [4]> var_6217_begin_0 = const()[name = tensor<string, []>("op_6217_begin_0"), val = tensor<int32, [4]>([0, 832, 0, 0])];
            tensor<int32, [4]> var_6217_end_0 = const()[name = tensor<string, []>("op_6217_end_0"), val = tensor<int32, [4]>([2, 896, 1, 256])];
            tensor<bool, [4]> var_6217_end_mask_0 = const()[name = tensor<string, []>("op_6217_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6217_cast = slice_by_index(begin = var_6217_begin_0, end = var_6217_end_0, end_mask = var_6217_end_mask_0, x = q_31_cast);
            tensor<int32, [4]> var_6221_begin_0 = const()[name = tensor<string, []>("op_6221_begin_0"), val = tensor<int32, [4]>([0, 896, 0, 0])];
            tensor<int32, [4]> var_6221_end_0 = const()[name = tensor<string, []>("op_6221_end_0"), val = tensor<int32, [4]>([2, 960, 1, 256])];
            tensor<bool, [4]> var_6221_end_mask_0 = const()[name = tensor<string, []>("op_6221_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6221_cast = slice_by_index(begin = var_6221_begin_0, end = var_6221_end_0, end_mask = var_6221_end_mask_0, x = q_31_cast);
            tensor<int32, [4]> var_6225_begin_0 = const()[name = tensor<string, []>("op_6225_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_6225_end_0 = const()[name = tensor<string, []>("op_6225_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 256])];
            tensor<bool, [4]> var_6225_end_mask_0 = const()[name = tensor<string, []>("op_6225_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6225_cast = slice_by_index(begin = var_6225_begin_0, end = var_6225_end_0, end_mask = var_6225_end_mask_0, x = q_31_cast);
            tensor<int32, [4]> var_6229_begin_0 = const()[name = tensor<string, []>("op_6229_begin_0"), val = tensor<int32, [4]>([0, 1024, 0, 0])];
            tensor<int32, [4]> var_6229_end_0 = const()[name = tensor<string, []>("op_6229_end_0"), val = tensor<int32, [4]>([2, 1088, 1, 256])];
            tensor<bool, [4]> var_6229_end_mask_0 = const()[name = tensor<string, []>("op_6229_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6229_cast = slice_by_index(begin = var_6229_begin_0, end = var_6229_end_0, end_mask = var_6229_end_mask_0, x = q_31_cast);
            tensor<int32, [4]> var_6233_begin_0 = const()[name = tensor<string, []>("op_6233_begin_0"), val = tensor<int32, [4]>([0, 1088, 0, 0])];
            tensor<int32, [4]> var_6233_end_0 = const()[name = tensor<string, []>("op_6233_end_0"), val = tensor<int32, [4]>([2, 1152, 1, 256])];
            tensor<bool, [4]> var_6233_end_mask_0 = const()[name = tensor<string, []>("op_6233_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6233_cast = slice_by_index(begin = var_6233_begin_0, end = var_6233_end_0, end_mask = var_6233_end_mask_0, x = q_31_cast);
            tensor<int32, [4]> var_6237_begin_0 = const()[name = tensor<string, []>("op_6237_begin_0"), val = tensor<int32, [4]>([0, 1152, 0, 0])];
            tensor<int32, [4]> var_6237_end_0 = const()[name = tensor<string, []>("op_6237_end_0"), val = tensor<int32, [4]>([2, 1216, 1, 256])];
            tensor<bool, [4]> var_6237_end_mask_0 = const()[name = tensor<string, []>("op_6237_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6237_cast = slice_by_index(begin = var_6237_begin_0, end = var_6237_end_0, end_mask = var_6237_end_mask_0, x = q_31_cast);
            tensor<int32, [4]> var_6241_begin_0 = const()[name = tensor<string, []>("op_6241_begin_0"), val = tensor<int32, [4]>([0, 1216, 0, 0])];
            tensor<int32, [4]> var_6241_end_0 = const()[name = tensor<string, []>("op_6241_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<bool, [4]> var_6241_end_mask_0 = const()[name = tensor<string, []>("op_6241_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6241_cast = slice_by_index(begin = var_6241_begin_0, end = var_6241_end_0, end_mask = var_6241_end_mask_0, x = q_31_cast);
            tensor<int32, [4]> k_63_perm_0 = const()[name = tensor<string, []>("k_63_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_6248_begin_0 = const()[name = tensor<string, []>("op_6248_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_6248_end_0 = const()[name = tensor<string, []>("op_6248_end_0"), val = tensor<int32, [4]>([2, 77, 1, 64])];
            tensor<bool, [4]> var_6248_end_mask_0 = const()[name = tensor<string, []>("op_6248_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 1280]> transpose_16 = transpose(perm = k_63_perm_0, x = k_61_cast);
            tensor<fp16, [2, 77, 1, 64]> var_6248_cast = slice_by_index(begin = var_6248_begin_0, end = var_6248_end_0, end_mask = var_6248_end_mask_0, x = transpose_16);
            tensor<int32, [4]> var_6252_begin_0 = const()[name = tensor<string, []>("op_6252_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 64])];
            tensor<int32, [4]> var_6252_end_0 = const()[name = tensor<string, []>("op_6252_end_0"), val = tensor<int32, [4]>([2, 77, 1, 128])];
            tensor<bool, [4]> var_6252_end_mask_0 = const()[name = tensor<string, []>("op_6252_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_6252_cast = slice_by_index(begin = var_6252_begin_0, end = var_6252_end_0, end_mask = var_6252_end_mask_0, x = transpose_16);
            tensor<int32, [4]> var_6256_begin_0 = const()[name = tensor<string, []>("op_6256_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 128])];
            tensor<int32, [4]> var_6256_end_0 = const()[name = tensor<string, []>("op_6256_end_0"), val = tensor<int32, [4]>([2, 77, 1, 192])];
            tensor<bool, [4]> var_6256_end_mask_0 = const()[name = tensor<string, []>("op_6256_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_6256_cast = slice_by_index(begin = var_6256_begin_0, end = var_6256_end_0, end_mask = var_6256_end_mask_0, x = transpose_16);
            tensor<int32, [4]> var_6260_begin_0 = const()[name = tensor<string, []>("op_6260_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 192])];
            tensor<int32, [4]> var_6260_end_0 = const()[name = tensor<string, []>("op_6260_end_0"), val = tensor<int32, [4]>([2, 77, 1, 256])];
            tensor<bool, [4]> var_6260_end_mask_0 = const()[name = tensor<string, []>("op_6260_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_6260_cast = slice_by_index(begin = var_6260_begin_0, end = var_6260_end_0, end_mask = var_6260_end_mask_0, x = transpose_16);
            tensor<int32, [4]> var_6264_begin_0 = const()[name = tensor<string, []>("op_6264_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 256])];
            tensor<int32, [4]> var_6264_end_0 = const()[name = tensor<string, []>("op_6264_end_0"), val = tensor<int32, [4]>([2, 77, 1, 320])];
            tensor<bool, [4]> var_6264_end_mask_0 = const()[name = tensor<string, []>("op_6264_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_6264_cast = slice_by_index(begin = var_6264_begin_0, end = var_6264_end_0, end_mask = var_6264_end_mask_0, x = transpose_16);
            tensor<int32, [4]> var_6268_begin_0 = const()[name = tensor<string, []>("op_6268_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_6268_end_0 = const()[name = tensor<string, []>("op_6268_end_0"), val = tensor<int32, [4]>([2, 77, 1, 384])];
            tensor<bool, [4]> var_6268_end_mask_0 = const()[name = tensor<string, []>("op_6268_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_6268_cast = slice_by_index(begin = var_6268_begin_0, end = var_6268_end_0, end_mask = var_6268_end_mask_0, x = transpose_16);
            tensor<int32, [4]> var_6272_begin_0 = const()[name = tensor<string, []>("op_6272_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 384])];
            tensor<int32, [4]> var_6272_end_0 = const()[name = tensor<string, []>("op_6272_end_0"), val = tensor<int32, [4]>([2, 77, 1, 448])];
            tensor<bool, [4]> var_6272_end_mask_0 = const()[name = tensor<string, []>("op_6272_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_6272_cast = slice_by_index(begin = var_6272_begin_0, end = var_6272_end_0, end_mask = var_6272_end_mask_0, x = transpose_16);
            tensor<int32, [4]> var_6276_begin_0 = const()[name = tensor<string, []>("op_6276_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 448])];
            tensor<int32, [4]> var_6276_end_0 = const()[name = tensor<string, []>("op_6276_end_0"), val = tensor<int32, [4]>([2, 77, 1, 512])];
            tensor<bool, [4]> var_6276_end_mask_0 = const()[name = tensor<string, []>("op_6276_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_6276_cast = slice_by_index(begin = var_6276_begin_0, end = var_6276_end_0, end_mask = var_6276_end_mask_0, x = transpose_16);
            tensor<int32, [4]> var_6280_begin_0 = const()[name = tensor<string, []>("op_6280_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 512])];
            tensor<int32, [4]> var_6280_end_0 = const()[name = tensor<string, []>("op_6280_end_0"), val = tensor<int32, [4]>([2, 77, 1, 576])];
            tensor<bool, [4]> var_6280_end_mask_0 = const()[name = tensor<string, []>("op_6280_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_6280_cast = slice_by_index(begin = var_6280_begin_0, end = var_6280_end_0, end_mask = var_6280_end_mask_0, x = transpose_16);
            tensor<int32, [4]> var_6284_begin_0 = const()[name = tensor<string, []>("op_6284_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 576])];
            tensor<int32, [4]> var_6284_end_0 = const()[name = tensor<string, []>("op_6284_end_0"), val = tensor<int32, [4]>([2, 77, 1, 640])];
            tensor<bool, [4]> var_6284_end_mask_0 = const()[name = tensor<string, []>("op_6284_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_6284_cast = slice_by_index(begin = var_6284_begin_0, end = var_6284_end_0, end_mask = var_6284_end_mask_0, x = transpose_16);
            tensor<int32, [4]> var_6288_begin_0 = const()[name = tensor<string, []>("op_6288_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 640])];
            tensor<int32, [4]> var_6288_end_0 = const()[name = tensor<string, []>("op_6288_end_0"), val = tensor<int32, [4]>([2, 77, 1, 704])];
            tensor<bool, [4]> var_6288_end_mask_0 = const()[name = tensor<string, []>("op_6288_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_6288_cast = slice_by_index(begin = var_6288_begin_0, end = var_6288_end_0, end_mask = var_6288_end_mask_0, x = transpose_16);
            tensor<int32, [4]> var_6292_begin_0 = const()[name = tensor<string, []>("op_6292_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 704])];
            tensor<int32, [4]> var_6292_end_0 = const()[name = tensor<string, []>("op_6292_end_0"), val = tensor<int32, [4]>([2, 77, 1, 768])];
            tensor<bool, [4]> var_6292_end_mask_0 = const()[name = tensor<string, []>("op_6292_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_6292_cast = slice_by_index(begin = var_6292_begin_0, end = var_6292_end_0, end_mask = var_6292_end_mask_0, x = transpose_16);
            tensor<int32, [4]> var_6296_begin_0 = const()[name = tensor<string, []>("op_6296_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 768])];
            tensor<int32, [4]> var_6296_end_0 = const()[name = tensor<string, []>("op_6296_end_0"), val = tensor<int32, [4]>([2, 77, 1, 832])];
            tensor<bool, [4]> var_6296_end_mask_0 = const()[name = tensor<string, []>("op_6296_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_6296_cast = slice_by_index(begin = var_6296_begin_0, end = var_6296_end_0, end_mask = var_6296_end_mask_0, x = transpose_16);
            tensor<int32, [4]> var_6300_begin_0 = const()[name = tensor<string, []>("op_6300_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 832])];
            tensor<int32, [4]> var_6300_end_0 = const()[name = tensor<string, []>("op_6300_end_0"), val = tensor<int32, [4]>([2, 77, 1, 896])];
            tensor<bool, [4]> var_6300_end_mask_0 = const()[name = tensor<string, []>("op_6300_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_6300_cast = slice_by_index(begin = var_6300_begin_0, end = var_6300_end_0, end_mask = var_6300_end_mask_0, x = transpose_16);
            tensor<int32, [4]> var_6304_begin_0 = const()[name = tensor<string, []>("op_6304_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 896])];
            tensor<int32, [4]> var_6304_end_0 = const()[name = tensor<string, []>("op_6304_end_0"), val = tensor<int32, [4]>([2, 77, 1, 960])];
            tensor<bool, [4]> var_6304_end_mask_0 = const()[name = tensor<string, []>("op_6304_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_6304_cast = slice_by_index(begin = var_6304_begin_0, end = var_6304_end_0, end_mask = var_6304_end_mask_0, x = transpose_16);
            tensor<int32, [4]> var_6308_begin_0 = const()[name = tensor<string, []>("op_6308_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 960])];
            tensor<int32, [4]> var_6308_end_0 = const()[name = tensor<string, []>("op_6308_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1024])];
            tensor<bool, [4]> var_6308_end_mask_0 = const()[name = tensor<string, []>("op_6308_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_6308_cast = slice_by_index(begin = var_6308_begin_0, end = var_6308_end_0, end_mask = var_6308_end_mask_0, x = transpose_16);
            tensor<int32, [4]> var_6312_begin_0 = const()[name = tensor<string, []>("op_6312_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1024])];
            tensor<int32, [4]> var_6312_end_0 = const()[name = tensor<string, []>("op_6312_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1088])];
            tensor<bool, [4]> var_6312_end_mask_0 = const()[name = tensor<string, []>("op_6312_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_6312_cast = slice_by_index(begin = var_6312_begin_0, end = var_6312_end_0, end_mask = var_6312_end_mask_0, x = transpose_16);
            tensor<int32, [4]> var_6316_begin_0 = const()[name = tensor<string, []>("op_6316_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1088])];
            tensor<int32, [4]> var_6316_end_0 = const()[name = tensor<string, []>("op_6316_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1152])];
            tensor<bool, [4]> var_6316_end_mask_0 = const()[name = tensor<string, []>("op_6316_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_6316_cast = slice_by_index(begin = var_6316_begin_0, end = var_6316_end_0, end_mask = var_6316_end_mask_0, x = transpose_16);
            tensor<int32, [4]> var_6320_begin_0 = const()[name = tensor<string, []>("op_6320_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1152])];
            tensor<int32, [4]> var_6320_end_0 = const()[name = tensor<string, []>("op_6320_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1216])];
            tensor<bool, [4]> var_6320_end_mask_0 = const()[name = tensor<string, []>("op_6320_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_6320_cast = slice_by_index(begin = var_6320_begin_0, end = var_6320_end_0, end_mask = var_6320_end_mask_0, x = transpose_16);
            tensor<int32, [4]> var_6324_begin_0 = const()[name = tensor<string, []>("op_6324_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1216])];
            tensor<int32, [4]> var_6324_end_0 = const()[name = tensor<string, []>("op_6324_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1280])];
            tensor<bool, [4]> var_6324_end_mask_0 = const()[name = tensor<string, []>("op_6324_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_6324_cast = slice_by_index(begin = var_6324_begin_0, end = var_6324_end_0, end_mask = var_6324_end_mask_0, x = transpose_16);
            tensor<int32, [4]> var_6326_begin_0 = const()[name = tensor<string, []>("op_6326_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_6326_end_0 = const()[name = tensor<string, []>("op_6326_end_0"), val = tensor<int32, [4]>([2, 64, 1, 77])];
            tensor<bool, [4]> var_6326_end_mask_0 = const()[name = tensor<string, []>("op_6326_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_6326_cast = slice_by_index(begin = var_6326_begin_0, end = var_6326_end_0, end_mask = var_6326_end_mask_0, x = v_31_cast);
            tensor<int32, [4]> var_6330_begin_0 = const()[name = tensor<string, []>("op_6330_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_6330_end_0 = const()[name = tensor<string, []>("op_6330_end_0"), val = tensor<int32, [4]>([2, 128, 1, 77])];
            tensor<bool, [4]> var_6330_end_mask_0 = const()[name = tensor<string, []>("op_6330_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_6330_cast = slice_by_index(begin = var_6330_begin_0, end = var_6330_end_0, end_mask = var_6330_end_mask_0, x = v_31_cast);
            tensor<int32, [4]> var_6334_begin_0 = const()[name = tensor<string, []>("op_6334_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_6334_end_0 = const()[name = tensor<string, []>("op_6334_end_0"), val = tensor<int32, [4]>([2, 192, 1, 77])];
            tensor<bool, [4]> var_6334_end_mask_0 = const()[name = tensor<string, []>("op_6334_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_6334_cast = slice_by_index(begin = var_6334_begin_0, end = var_6334_end_0, end_mask = var_6334_end_mask_0, x = v_31_cast);
            tensor<int32, [4]> var_6338_begin_0 = const()[name = tensor<string, []>("op_6338_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_6338_end_0 = const()[name = tensor<string, []>("op_6338_end_0"), val = tensor<int32, [4]>([2, 256, 1, 77])];
            tensor<bool, [4]> var_6338_end_mask_0 = const()[name = tensor<string, []>("op_6338_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_6338_cast = slice_by_index(begin = var_6338_begin_0, end = var_6338_end_0, end_mask = var_6338_end_mask_0, x = v_31_cast);
            tensor<int32, [4]> var_6342_begin_0 = const()[name = tensor<string, []>("op_6342_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_6342_end_0 = const()[name = tensor<string, []>("op_6342_end_0"), val = tensor<int32, [4]>([2, 320, 1, 77])];
            tensor<bool, [4]> var_6342_end_mask_0 = const()[name = tensor<string, []>("op_6342_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_6342_cast = slice_by_index(begin = var_6342_begin_0, end = var_6342_end_0, end_mask = var_6342_end_mask_0, x = v_31_cast);
            tensor<int32, [4]> var_6346_begin_0 = const()[name = tensor<string, []>("op_6346_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_6346_end_0 = const()[name = tensor<string, []>("op_6346_end_0"), val = tensor<int32, [4]>([2, 384, 1, 77])];
            tensor<bool, [4]> var_6346_end_mask_0 = const()[name = tensor<string, []>("op_6346_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_6346_cast = slice_by_index(begin = var_6346_begin_0, end = var_6346_end_0, end_mask = var_6346_end_mask_0, x = v_31_cast);
            tensor<int32, [4]> var_6350_begin_0 = const()[name = tensor<string, []>("op_6350_begin_0"), val = tensor<int32, [4]>([0, 384, 0, 0])];
            tensor<int32, [4]> var_6350_end_0 = const()[name = tensor<string, []>("op_6350_end_0"), val = tensor<int32, [4]>([2, 448, 1, 77])];
            tensor<bool, [4]> var_6350_end_mask_0 = const()[name = tensor<string, []>("op_6350_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_6350_cast = slice_by_index(begin = var_6350_begin_0, end = var_6350_end_0, end_mask = var_6350_end_mask_0, x = v_31_cast);
            tensor<int32, [4]> var_6354_begin_0 = const()[name = tensor<string, []>("op_6354_begin_0"), val = tensor<int32, [4]>([0, 448, 0, 0])];
            tensor<int32, [4]> var_6354_end_0 = const()[name = tensor<string, []>("op_6354_end_0"), val = tensor<int32, [4]>([2, 512, 1, 77])];
            tensor<bool, [4]> var_6354_end_mask_0 = const()[name = tensor<string, []>("op_6354_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_6354_cast = slice_by_index(begin = var_6354_begin_0, end = var_6354_end_0, end_mask = var_6354_end_mask_0, x = v_31_cast);
            tensor<int32, [4]> var_6358_begin_0 = const()[name = tensor<string, []>("op_6358_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_6358_end_0 = const()[name = tensor<string, []>("op_6358_end_0"), val = tensor<int32, [4]>([2, 576, 1, 77])];
            tensor<bool, [4]> var_6358_end_mask_0 = const()[name = tensor<string, []>("op_6358_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_6358_cast = slice_by_index(begin = var_6358_begin_0, end = var_6358_end_0, end_mask = var_6358_end_mask_0, x = v_31_cast);
            tensor<int32, [4]> var_6362_begin_0 = const()[name = tensor<string, []>("op_6362_begin_0"), val = tensor<int32, [4]>([0, 576, 0, 0])];
            tensor<int32, [4]> var_6362_end_0 = const()[name = tensor<string, []>("op_6362_end_0"), val = tensor<int32, [4]>([2, 640, 1, 77])];
            tensor<bool, [4]> var_6362_end_mask_0 = const()[name = tensor<string, []>("op_6362_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_6362_cast = slice_by_index(begin = var_6362_begin_0, end = var_6362_end_0, end_mask = var_6362_end_mask_0, x = v_31_cast);
            tensor<int32, [4]> var_6366_begin_0 = const()[name = tensor<string, []>("op_6366_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_6366_end_0 = const()[name = tensor<string, []>("op_6366_end_0"), val = tensor<int32, [4]>([2, 704, 1, 77])];
            tensor<bool, [4]> var_6366_end_mask_0 = const()[name = tensor<string, []>("op_6366_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_6366_cast = slice_by_index(begin = var_6366_begin_0, end = var_6366_end_0, end_mask = var_6366_end_mask_0, x = v_31_cast);
            tensor<int32, [4]> var_6370_begin_0 = const()[name = tensor<string, []>("op_6370_begin_0"), val = tensor<int32, [4]>([0, 704, 0, 0])];
            tensor<int32, [4]> var_6370_end_0 = const()[name = tensor<string, []>("op_6370_end_0"), val = tensor<int32, [4]>([2, 768, 1, 77])];
            tensor<bool, [4]> var_6370_end_mask_0 = const()[name = tensor<string, []>("op_6370_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_6370_cast = slice_by_index(begin = var_6370_begin_0, end = var_6370_end_0, end_mask = var_6370_end_mask_0, x = v_31_cast);
            tensor<int32, [4]> var_6374_begin_0 = const()[name = tensor<string, []>("op_6374_begin_0"), val = tensor<int32, [4]>([0, 768, 0, 0])];
            tensor<int32, [4]> var_6374_end_0 = const()[name = tensor<string, []>("op_6374_end_0"), val = tensor<int32, [4]>([2, 832, 1, 77])];
            tensor<bool, [4]> var_6374_end_mask_0 = const()[name = tensor<string, []>("op_6374_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_6374_cast = slice_by_index(begin = var_6374_begin_0, end = var_6374_end_0, end_mask = var_6374_end_mask_0, x = v_31_cast);
            tensor<int32, [4]> var_6378_begin_0 = const()[name = tensor<string, []>("op_6378_begin_0"), val = tensor<int32, [4]>([0, 832, 0, 0])];
            tensor<int32, [4]> var_6378_end_0 = const()[name = tensor<string, []>("op_6378_end_0"), val = tensor<int32, [4]>([2, 896, 1, 77])];
            tensor<bool, [4]> var_6378_end_mask_0 = const()[name = tensor<string, []>("op_6378_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_6378_cast = slice_by_index(begin = var_6378_begin_0, end = var_6378_end_0, end_mask = var_6378_end_mask_0, x = v_31_cast);
            tensor<int32, [4]> var_6382_begin_0 = const()[name = tensor<string, []>("op_6382_begin_0"), val = tensor<int32, [4]>([0, 896, 0, 0])];
            tensor<int32, [4]> var_6382_end_0 = const()[name = tensor<string, []>("op_6382_end_0"), val = tensor<int32, [4]>([2, 960, 1, 77])];
            tensor<bool, [4]> var_6382_end_mask_0 = const()[name = tensor<string, []>("op_6382_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_6382_cast = slice_by_index(begin = var_6382_begin_0, end = var_6382_end_0, end_mask = var_6382_end_mask_0, x = v_31_cast);
            tensor<int32, [4]> var_6386_begin_0 = const()[name = tensor<string, []>("op_6386_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_6386_end_0 = const()[name = tensor<string, []>("op_6386_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 77])];
            tensor<bool, [4]> var_6386_end_mask_0 = const()[name = tensor<string, []>("op_6386_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_6386_cast = slice_by_index(begin = var_6386_begin_0, end = var_6386_end_0, end_mask = var_6386_end_mask_0, x = v_31_cast);
            tensor<int32, [4]> var_6390_begin_0 = const()[name = tensor<string, []>("op_6390_begin_0"), val = tensor<int32, [4]>([0, 1024, 0, 0])];
            tensor<int32, [4]> var_6390_end_0 = const()[name = tensor<string, []>("op_6390_end_0"), val = tensor<int32, [4]>([2, 1088, 1, 77])];
            tensor<bool, [4]> var_6390_end_mask_0 = const()[name = tensor<string, []>("op_6390_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_6390_cast = slice_by_index(begin = var_6390_begin_0, end = var_6390_end_0, end_mask = var_6390_end_mask_0, x = v_31_cast);
            tensor<int32, [4]> var_6394_begin_0 = const()[name = tensor<string, []>("op_6394_begin_0"), val = tensor<int32, [4]>([0, 1088, 0, 0])];
            tensor<int32, [4]> var_6394_end_0 = const()[name = tensor<string, []>("op_6394_end_0"), val = tensor<int32, [4]>([2, 1152, 1, 77])];
            tensor<bool, [4]> var_6394_end_mask_0 = const()[name = tensor<string, []>("op_6394_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_6394_cast = slice_by_index(begin = var_6394_begin_0, end = var_6394_end_0, end_mask = var_6394_end_mask_0, x = v_31_cast);
            tensor<int32, [4]> var_6398_begin_0 = const()[name = tensor<string, []>("op_6398_begin_0"), val = tensor<int32, [4]>([0, 1152, 0, 0])];
            tensor<int32, [4]> var_6398_end_0 = const()[name = tensor<string, []>("op_6398_end_0"), val = tensor<int32, [4]>([2, 1216, 1, 77])];
            tensor<bool, [4]> var_6398_end_mask_0 = const()[name = tensor<string, []>("op_6398_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_6398_cast = slice_by_index(begin = var_6398_begin_0, end = var_6398_end_0, end_mask = var_6398_end_mask_0, x = v_31_cast);
            tensor<int32, [4]> var_6402_begin_0 = const()[name = tensor<string, []>("op_6402_begin_0"), val = tensor<int32, [4]>([0, 1216, 0, 0])];
            tensor<int32, [4]> var_6402_end_0 = const()[name = tensor<string, []>("op_6402_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 77])];
            tensor<bool, [4]> var_6402_end_mask_0 = const()[name = tensor<string, []>("op_6402_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_6402_cast = slice_by_index(begin = var_6402_begin_0, end = var_6402_end_0, end_mask = var_6402_end_mask_0, x = v_31_cast);
            tensor<string, []> var_6406_equation_0 = const()[name = tensor<string, []>("op_6406_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_6406_cast = einsum(equation = var_6406_equation_0, values = (var_6248_cast, var_6165_cast));
            tensor<fp16, []> var_6407_to_fp16 = const()[name = tensor<string, []>("op_6407_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_401_cast = mul(x = var_6406_cast, y = var_6407_to_fp16);
            tensor<string, []> var_6410_equation_0 = const()[name = tensor<string, []>("op_6410_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_6410_cast = einsum(equation = var_6410_equation_0, values = (var_6252_cast, var_6169_cast));
            tensor<fp16, []> var_6411_to_fp16 = const()[name = tensor<string, []>("op_6411_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_403_cast = mul(x = var_6410_cast, y = var_6411_to_fp16);
            tensor<string, []> var_6414_equation_0 = const()[name = tensor<string, []>("op_6414_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_6414_cast = einsum(equation = var_6414_equation_0, values = (var_6256_cast, var_6173_cast));
            tensor<fp16, []> var_6415_to_fp16 = const()[name = tensor<string, []>("op_6415_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_405_cast = mul(x = var_6414_cast, y = var_6415_to_fp16);
            tensor<string, []> var_6418_equation_0 = const()[name = tensor<string, []>("op_6418_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_6418_cast = einsum(equation = var_6418_equation_0, values = (var_6260_cast, var_6177_cast));
            tensor<fp16, []> var_6419_to_fp16 = const()[name = tensor<string, []>("op_6419_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_407_cast = mul(x = var_6418_cast, y = var_6419_to_fp16);
            tensor<string, []> var_6422_equation_0 = const()[name = tensor<string, []>("op_6422_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_6422_cast = einsum(equation = var_6422_equation_0, values = (var_6264_cast, var_6181_cast));
            tensor<fp16, []> var_6423_to_fp16 = const()[name = tensor<string, []>("op_6423_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_409_cast = mul(x = var_6422_cast, y = var_6423_to_fp16);
            tensor<string, []> var_6426_equation_0 = const()[name = tensor<string, []>("op_6426_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_6426_cast = einsum(equation = var_6426_equation_0, values = (var_6268_cast, var_6185_cast));
            tensor<fp16, []> var_6427_to_fp16 = const()[name = tensor<string, []>("op_6427_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_411_cast = mul(x = var_6426_cast, y = var_6427_to_fp16);
            tensor<string, []> var_6430_equation_0 = const()[name = tensor<string, []>("op_6430_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_6430_cast = einsum(equation = var_6430_equation_0, values = (var_6272_cast, var_6189_cast));
            tensor<fp16, []> var_6431_to_fp16 = const()[name = tensor<string, []>("op_6431_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_413_cast = mul(x = var_6430_cast, y = var_6431_to_fp16);
            tensor<string, []> var_6434_equation_0 = const()[name = tensor<string, []>("op_6434_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_6434_cast = einsum(equation = var_6434_equation_0, values = (var_6276_cast, var_6193_cast));
            tensor<fp16, []> var_6435_to_fp16 = const()[name = tensor<string, []>("op_6435_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_415_cast = mul(x = var_6434_cast, y = var_6435_to_fp16);
            tensor<string, []> var_6438_equation_0 = const()[name = tensor<string, []>("op_6438_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_6438_cast = einsum(equation = var_6438_equation_0, values = (var_6280_cast, var_6197_cast));
            tensor<fp16, []> var_6439_to_fp16 = const()[name = tensor<string, []>("op_6439_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_417_cast = mul(x = var_6438_cast, y = var_6439_to_fp16);
            tensor<string, []> var_6442_equation_0 = const()[name = tensor<string, []>("op_6442_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_6442_cast = einsum(equation = var_6442_equation_0, values = (var_6284_cast, var_6201_cast));
            tensor<fp16, []> var_6443_to_fp16 = const()[name = tensor<string, []>("op_6443_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_419_cast = mul(x = var_6442_cast, y = var_6443_to_fp16);
            tensor<string, []> var_6446_equation_0 = const()[name = tensor<string, []>("op_6446_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_6446_cast = einsum(equation = var_6446_equation_0, values = (var_6288_cast, var_6205_cast));
            tensor<fp16, []> var_6447_to_fp16 = const()[name = tensor<string, []>("op_6447_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_421_cast = mul(x = var_6446_cast, y = var_6447_to_fp16);
            tensor<string, []> var_6450_equation_0 = const()[name = tensor<string, []>("op_6450_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_6450_cast = einsum(equation = var_6450_equation_0, values = (var_6292_cast, var_6209_cast));
            tensor<fp16, []> var_6451_to_fp16 = const()[name = tensor<string, []>("op_6451_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_423_cast = mul(x = var_6450_cast, y = var_6451_to_fp16);
            tensor<string, []> var_6454_equation_0 = const()[name = tensor<string, []>("op_6454_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_6454_cast = einsum(equation = var_6454_equation_0, values = (var_6296_cast, var_6213_cast));
            tensor<fp16, []> var_6455_to_fp16 = const()[name = tensor<string, []>("op_6455_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_425_cast = mul(x = var_6454_cast, y = var_6455_to_fp16);
            tensor<string, []> var_6458_equation_0 = const()[name = tensor<string, []>("op_6458_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_6458_cast = einsum(equation = var_6458_equation_0, values = (var_6300_cast, var_6217_cast));
            tensor<fp16, []> var_6459_to_fp16 = const()[name = tensor<string, []>("op_6459_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_427_cast = mul(x = var_6458_cast, y = var_6459_to_fp16);
            tensor<string, []> var_6462_equation_0 = const()[name = tensor<string, []>("op_6462_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_6462_cast = einsum(equation = var_6462_equation_0, values = (var_6304_cast, var_6221_cast));
            tensor<fp16, []> var_6463_to_fp16 = const()[name = tensor<string, []>("op_6463_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_429_cast = mul(x = var_6462_cast, y = var_6463_to_fp16);
            tensor<string, []> var_6466_equation_0 = const()[name = tensor<string, []>("op_6466_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_6466_cast = einsum(equation = var_6466_equation_0, values = (var_6308_cast, var_6225_cast));
            tensor<fp16, []> var_6467_to_fp16 = const()[name = tensor<string, []>("op_6467_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_431_cast = mul(x = var_6466_cast, y = var_6467_to_fp16);
            tensor<string, []> var_6470_equation_0 = const()[name = tensor<string, []>("op_6470_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_6470_cast = einsum(equation = var_6470_equation_0, values = (var_6312_cast, var_6229_cast));
            tensor<fp16, []> var_6471_to_fp16 = const()[name = tensor<string, []>("op_6471_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_433_cast = mul(x = var_6470_cast, y = var_6471_to_fp16);
            tensor<string, []> var_6474_equation_0 = const()[name = tensor<string, []>("op_6474_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_6474_cast = einsum(equation = var_6474_equation_0, values = (var_6316_cast, var_6233_cast));
            tensor<fp16, []> var_6475_to_fp16 = const()[name = tensor<string, []>("op_6475_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_435_cast = mul(x = var_6474_cast, y = var_6475_to_fp16);
            tensor<string, []> var_6478_equation_0 = const()[name = tensor<string, []>("op_6478_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_6478_cast = einsum(equation = var_6478_equation_0, values = (var_6320_cast, var_6237_cast));
            tensor<fp16, []> var_6479_to_fp16 = const()[name = tensor<string, []>("op_6479_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_437_cast = mul(x = var_6478_cast, y = var_6479_to_fp16);
            tensor<string, []> var_6482_equation_0 = const()[name = tensor<string, []>("op_6482_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_6482_cast = einsum(equation = var_6482_equation_0, values = (var_6324_cast, var_6241_cast));
            tensor<fp16, []> var_6483_to_fp16 = const()[name = tensor<string, []>("op_6483_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_439_cast = mul(x = var_6482_cast, y = var_6483_to_fp16);
            tensor<fp16, [2, 77, 1, 256]> var_6485_cast = softmax(axis = var_5599, x = aw_401_cast);
            tensor<fp16, [2, 77, 1, 256]> var_6486_cast = softmax(axis = var_5599, x = aw_403_cast);
            tensor<fp16, [2, 77, 1, 256]> var_6487_cast = softmax(axis = var_5599, x = aw_405_cast);
            tensor<fp16, [2, 77, 1, 256]> var_6488_cast = softmax(axis = var_5599, x = aw_407_cast);
            tensor<fp16, [2, 77, 1, 256]> var_6489_cast = softmax(axis = var_5599, x = aw_409_cast);
            tensor<fp16, [2, 77, 1, 256]> var_6490_cast = softmax(axis = var_5599, x = aw_411_cast);
            tensor<fp16, [2, 77, 1, 256]> var_6491_cast = softmax(axis = var_5599, x = aw_413_cast);
            tensor<fp16, [2, 77, 1, 256]> var_6492_cast = softmax(axis = var_5599, x = aw_415_cast);
            tensor<fp16, [2, 77, 1, 256]> var_6493_cast = softmax(axis = var_5599, x = aw_417_cast);
            tensor<fp16, [2, 77, 1, 256]> var_6494_cast = softmax(axis = var_5599, x = aw_419_cast);
            tensor<fp16, [2, 77, 1, 256]> var_6495_cast = softmax(axis = var_5599, x = aw_421_cast);
            tensor<fp16, [2, 77, 1, 256]> var_6496_cast = softmax(axis = var_5599, x = aw_423_cast);
            tensor<fp16, [2, 77, 1, 256]> var_6497_cast = softmax(axis = var_5599, x = aw_425_cast);
            tensor<fp16, [2, 77, 1, 256]> var_6498_cast = softmax(axis = var_5599, x = aw_427_cast);
            tensor<fp16, [2, 77, 1, 256]> var_6499_cast = softmax(axis = var_5599, x = aw_429_cast);
            tensor<fp16, [2, 77, 1, 256]> var_6500_cast = softmax(axis = var_5599, x = aw_431_cast);
            tensor<fp16, [2, 77, 1, 256]> var_6501_cast = softmax(axis = var_5599, x = aw_433_cast);
            tensor<fp16, [2, 77, 1, 256]> var_6502_cast = softmax(axis = var_5599, x = aw_435_cast);
            tensor<fp16, [2, 77, 1, 256]> var_6503_cast = softmax(axis = var_5599, x = aw_437_cast);
            tensor<fp16, [2, 77, 1, 256]> var_6504_cast = softmax(axis = var_5599, x = aw_439_cast);
            tensor<string, []> var_6506_equation_0 = const()[name = tensor<string, []>("op_6506_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_6506_cast = einsum(equation = var_6506_equation_0, values = (var_6326_cast, var_6485_cast));
            tensor<string, []> var_6508_equation_0 = const()[name = tensor<string, []>("op_6508_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_6508_cast = einsum(equation = var_6508_equation_0, values = (var_6330_cast, var_6486_cast));
            tensor<string, []> var_6510_equation_0 = const()[name = tensor<string, []>("op_6510_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_6510_cast = einsum(equation = var_6510_equation_0, values = (var_6334_cast, var_6487_cast));
            tensor<string, []> var_6512_equation_0 = const()[name = tensor<string, []>("op_6512_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_6512_cast = einsum(equation = var_6512_equation_0, values = (var_6338_cast, var_6488_cast));
            tensor<string, []> var_6514_equation_0 = const()[name = tensor<string, []>("op_6514_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_6514_cast = einsum(equation = var_6514_equation_0, values = (var_6342_cast, var_6489_cast));
            tensor<string, []> var_6516_equation_0 = const()[name = tensor<string, []>("op_6516_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_6516_cast = einsum(equation = var_6516_equation_0, values = (var_6346_cast, var_6490_cast));
            tensor<string, []> var_6518_equation_0 = const()[name = tensor<string, []>("op_6518_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_6518_cast = einsum(equation = var_6518_equation_0, values = (var_6350_cast, var_6491_cast));
            tensor<string, []> var_6520_equation_0 = const()[name = tensor<string, []>("op_6520_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_6520_cast = einsum(equation = var_6520_equation_0, values = (var_6354_cast, var_6492_cast));
            tensor<string, []> var_6522_equation_0 = const()[name = tensor<string, []>("op_6522_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_6522_cast = einsum(equation = var_6522_equation_0, values = (var_6358_cast, var_6493_cast));
            tensor<string, []> var_6524_equation_0 = const()[name = tensor<string, []>("op_6524_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_6524_cast = einsum(equation = var_6524_equation_0, values = (var_6362_cast, var_6494_cast));
            tensor<string, []> var_6526_equation_0 = const()[name = tensor<string, []>("op_6526_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_6526_cast = einsum(equation = var_6526_equation_0, values = (var_6366_cast, var_6495_cast));
            tensor<string, []> var_6528_equation_0 = const()[name = tensor<string, []>("op_6528_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_6528_cast = einsum(equation = var_6528_equation_0, values = (var_6370_cast, var_6496_cast));
            tensor<string, []> var_6530_equation_0 = const()[name = tensor<string, []>("op_6530_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_6530_cast = einsum(equation = var_6530_equation_0, values = (var_6374_cast, var_6497_cast));
            tensor<string, []> var_6532_equation_0 = const()[name = tensor<string, []>("op_6532_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_6532_cast = einsum(equation = var_6532_equation_0, values = (var_6378_cast, var_6498_cast));
            tensor<string, []> var_6534_equation_0 = const()[name = tensor<string, []>("op_6534_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_6534_cast = einsum(equation = var_6534_equation_0, values = (var_6382_cast, var_6499_cast));
            tensor<string, []> var_6536_equation_0 = const()[name = tensor<string, []>("op_6536_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_6536_cast = einsum(equation = var_6536_equation_0, values = (var_6386_cast, var_6500_cast));
            tensor<string, []> var_6538_equation_0 = const()[name = tensor<string, []>("op_6538_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_6538_cast = einsum(equation = var_6538_equation_0, values = (var_6390_cast, var_6501_cast));
            tensor<string, []> var_6540_equation_0 = const()[name = tensor<string, []>("op_6540_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_6540_cast = einsum(equation = var_6540_equation_0, values = (var_6394_cast, var_6502_cast));
            tensor<string, []> var_6542_equation_0 = const()[name = tensor<string, []>("op_6542_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_6542_cast = einsum(equation = var_6542_equation_0, values = (var_6398_cast, var_6503_cast));
            tensor<string, []> var_6544_equation_0 = const()[name = tensor<string, []>("op_6544_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_6544_cast = einsum(equation = var_6544_equation_0, values = (var_6402_cast, var_6504_cast));
            tensor<bool, []> input_303_interleave_0 = const()[name = tensor<string, []>("input_303_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 1280, 1, 256]> input_303_cast = concat(axis = var_5599, interleave = input_303_interleave_0, values = (var_6506_cast, var_6508_cast, var_6510_cast, var_6512_cast, var_6514_cast, var_6516_cast, var_6518_cast, var_6520_cast, var_6522_cast, var_6524_cast, var_6526_cast, var_6528_cast, var_6530_cast, var_6532_cast, var_6534_cast, var_6536_cast, var_6538_cast, var_6540_cast, var_6542_cast, var_6544_cast));
            tensor<int32, [2]> var_6550 = const()[name = tensor<string, []>("op_6550"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6552 = const()[name = tensor<string, []>("op_6552"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_6554_pad_type_0 = const()[name = tensor<string, []>("op_6554_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_6554_pad_0 = const()[name = tensor<string, []>("op_6554_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(257672640)))];
            tensor<fp16, [1280]> up_blocks_1_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(260949504)))];
            tensor<fp16, [2, 1280, 1, 256]> var_6554_cast = conv(bias = up_blocks_1_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16, dilations = var_6552, groups = var_5599, pad = var_6554_pad_0, pad_type = var_6554_pad_type_0, strides = var_6550, weight = up_blocks_1_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16, x = input_303_cast);
            tensor<fp16, [2, 1280, 1, 256]> inputs_47_cast = add(x = var_6554_cast, y = inputs_45_cast);
            tensor<int32, [1]> var_6558 = const()[name = tensor<string, []>("op_6558"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> channels_mean_47_cast = reduce_mean(axes = var_6558, keep_dims = var_5594, x = inputs_47_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_47_cast = sub(x = inputs_47_cast, y = channels_mean_47_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_sq_47_cast = mul(x = zero_mean_47_cast, y = zero_mean_47_cast);
            tensor<int32, [1]> var_6562 = const()[name = tensor<string, []>("op_6562"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> var_6563_cast = reduce_mean(axes = var_6562, keep_dims = var_5594, x = zero_mean_sq_47_cast);
            tensor<fp16, []> var_6564_to_fp16 = const()[name = tensor<string, []>("op_6564_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 256]> var_6565_cast = add(x = var_6563_cast, y = var_6564_to_fp16);
            tensor<fp16, []> denom_47_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_47_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 256]> denom_47_cast = rsqrt(epsilon = denom_47_epsilon_0_to_fp16, x = var_6565_cast);
            tensor<fp16, [2, 1280, 1, 256]> out_47_cast = mul(x = zero_mean_47_cast, y = denom_47_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_6569_to_fp16 = const()[name = tensor<string, []>("op_6569_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(260952128)))];
            tensor<fp16, [2, 1280, 1, 256]> var_6570_cast = add(x = out_47_cast, y = var_6569_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_6572_to_fp16 = const()[name = tensor<string, []>("op_6572_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(260954752)))];
            tensor<fp16, [2, 1280, 1, 256]> input_305_cast = mul(x = var_6570_cast, y = var_6572_to_fp16);
            tensor<int32, [2]> var_6580 = const()[name = tensor<string, []>("op_6580"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6582 = const()[name = tensor<string, []>("op_6582"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_6584_pad_type_0 = const()[name = tensor<string, []>("op_6584_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_6584_pad_0 = const()[name = tensor<string, []>("op_6584_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [10240, 1280, 1, 1]> up_blocks_1_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16"), val = tensor<fp16, [10240, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(260957376)))];
            tensor<fp16, [10240]> up_blocks_1_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16"), val = tensor<fp16, [10240]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(287171840)))];
            tensor<fp16, [2, 10240, 1, 256]> var_6584_cast = conv(bias = up_blocks_1_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16, dilations = var_6582, groups = var_5599, pad = var_6584_pad_0, pad_type = var_6584_pad_type_0, strides = var_6580, weight = up_blocks_1_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16, x = input_305_cast);
            tensor<int32, [2]> var_6585_split_sizes_0 = const()[name = tensor<string, []>("op_6585_split_sizes_0"), val = tensor<int32, [2]>([5120, 5120])];
            tensor<int32, []> var_6585_axis_0 = const()[name = tensor<string, []>("op_6585_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [2, 5120, 1, 256]> var_6585_cast_0, tensor<fp16, [2, 5120, 1, 256]> var_6585_cast_1 = split(axis = var_6585_axis_0, split_sizes = var_6585_split_sizes_0, x = var_6584_cast);
            tensor<string, []> var_6587_mode_0 = const()[name = tensor<string, []>("op_6587_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [2, 5120, 1, 256]> var_6587_cast = gelu(mode = var_6587_mode_0, x = var_6585_cast_1);
            tensor<fp16, [2, 5120, 1, 256]> input_307_cast = mul(x = var_6585_cast_0, y = var_6587_cast);
            tensor<int32, [2]> var_6591 = const()[name = tensor<string, []>("op_6591"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6593 = const()[name = tensor<string, []>("op_6593"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_6595_pad_type_0 = const()[name = tensor<string, []>("op_6595_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_6595_pad_0 = const()[name = tensor<string, []>("op_6595_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 5120, 1, 1]> up_blocks_1_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(287192384)))];
            tensor<fp16, [1280]> up_blocks_1_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(300299648)))];
            tensor<fp16, [2, 1280, 1, 256]> var_6595_cast = conv(bias = up_blocks_1_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16, dilations = var_6593, groups = var_5599, pad = var_6595_pad_0, pad_type = var_6595_pad_type_0, strides = var_6591, weight = up_blocks_1_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16, x = input_307_cast);
            tensor<fp16, [2, 1280, 1, 256]> hidden_states_173_cast = add(x = var_6595_cast, y = inputs_47_cast);
            tensor<int32, [4]> var_6597 = const()[name = tensor<string, []>("op_6597"), val = tensor<int32, [4]>([2, 1280, 16, 16])];
            tensor<fp16, [2, 1280, 16, 16]> input_309_cast = reshape(shape = var_6597, x = hidden_states_173_cast);
            tensor<int32, [2]> var_6601 = const()[name = tensor<string, []>("op_6601"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6603 = const()[name = tensor<string, []>("op_6603"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_175_pad_type_0 = const()[name = tensor<string, []>("hidden_states_175_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_175_pad_0 = const()[name = tensor<string, []>("hidden_states_175_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_0_proj_out_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_proj_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(300302272)))];
            tensor<fp16, [1280]> up_blocks_1_attentions_0_proj_out_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_proj_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(303579136)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_175_cast = conv(bias = up_blocks_1_attentions_0_proj_out_bias_to_fp16, dilations = var_6603, groups = var_5599, pad = hidden_states_175_pad_0, pad_type = hidden_states_175_pad_type_0, strides = var_6601, weight = up_blocks_1_attentions_0_proj_out_weight_to_fp16, x = input_309_cast);
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_177_cast = add(x = hidden_states_175_cast, y = hidden_states_163_cast);
            tensor<bool, []> input_311_interleave_0 = const()[name = tensor<string, []>("input_311_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 1280, 16, 16]> cast_5 = cast(dtype = cast_11_dtype_0, x = input_143_cast);
            tensor<fp16, [2, 2560, 16, 16]> input_311_cast = concat(axis = var_5599, interleave = input_311_interleave_0, values = (hidden_states_177_cast, cast_5));
            tensor<int32, [5]> reshape_144_shape_0 = const()[name = tensor<string, []>("reshape_144_shape_0"), val = tensor<int32, [5]>([2, 32, 80, 16, 16])];
            tensor<fp16, [2, 32, 80, 16, 16]> reshape_144_cast = reshape(shape = reshape_144_shape_0, x = input_311_cast);
            tensor<int32, [3]> reduce_mean_108_axes_0 = const()[name = tensor<string, []>("reduce_mean_108_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_108_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_108_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_108_cast = reduce_mean(axes = reduce_mean_108_axes_0, keep_dims = reduce_mean_108_keep_dims_0, x = reshape_144_cast);
            tensor<fp16, [2, 32, 80, 16, 16]> sub_72_cast = sub(x = reshape_144_cast, y = reduce_mean_108_cast);
            tensor<fp16, [2, 32, 80, 16, 16]> square_36_cast = square(x = sub_72_cast);
            tensor<int32, [3]> reduce_mean_110_axes_0 = const()[name = tensor<string, []>("reduce_mean_110_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_110_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_110_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_110_cast = reduce_mean(axes = reduce_mean_110_axes_0, keep_dims = reduce_mean_110_keep_dims_0, x = square_36_cast);
            tensor<fp16, []> add_72_y_0_to_fp16 = const()[name = tensor<string, []>("add_72_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_72_cast = add(x = reduce_mean_110_cast, y = add_72_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_36_cast = sqrt(x = add_72_cast);
            tensor<fp16, [2, 32, 80, 16, 16]> real_div_36_cast = real_div(x = sub_72_cast, y = sqrt_36_cast);
            tensor<int32, [4]> reshape_145_shape_0 = const()[name = tensor<string, []>("reshape_145_shape_0"), val = tensor<int32, [4]>([2, 2560, 16, 16])];
            tensor<fp16, [2, 2560, 16, 16]> reshape_145_cast = reshape(shape = reshape_145_shape_0, x = real_div_36_cast);
            tensor<fp16, [2560]> add_73_mean_0_to_fp16 = const()[name = tensor<string, []>("add_73_mean_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(303581760)))];
            tensor<fp16, [2560]> add_73_variance_0_to_fp16 = const()[name = tensor<string, []>("add_73_variance_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(303586944)))];
            tensor<fp16, [2560]> add_73_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_73_gamma_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(303592128)))];
            tensor<fp16, [2560]> add_73_beta_0_to_fp16 = const()[name = tensor<string, []>("add_73_beta_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(303597312)))];
            tensor<fp16, []> add_73_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_73_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 2560, 16, 16]> add_73_cast = batch_norm(beta = add_73_beta_0_to_fp16, epsilon = add_73_epsilon_0_to_fp16, gamma = add_73_gamma_0_to_fp16, mean = add_73_mean_0_to_fp16, variance = add_73_variance_0_to_fp16, x = reshape_145_cast);
            tensor<fp16, [2, 2560, 16, 16]> input_315_cast = silu(x = add_73_cast);
            tensor<int32, [2]> var_6621 = const()[name = tensor<string, []>("op_6621"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6623 = const()[name = tensor<string, []>("op_6623"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_179_pad_type_0 = const()[name = tensor<string, []>("hidden_states_179_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_179_pad_0 = const()[name = tensor<string, []>("hidden_states_179_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 2560, 3, 3]> up_blocks_1_resnets_1_conv1_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_1_conv1_weight_to_fp16"), val = tensor<fp16, [1280, 2560, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(303602496)))];
            tensor<fp16, [1280]> up_blocks_1_resnets_1_conv1_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_1_conv1_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(362584960)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_179_cast = conv(bias = up_blocks_1_resnets_1_conv1_bias_to_fp16, dilations = var_6623, groups = var_5599, pad = hidden_states_179_pad_0, pad_type = hidden_states_179_pad_type_0, strides = var_6621, weight = up_blocks_1_resnets_1_conv1_weight_to_fp16, x = input_315_cast);
            tensor<int32, [2]> var_6629 = const()[name = tensor<string, []>("op_6629"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6631 = const()[name = tensor<string, []>("op_6631"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_29_pad_type_0 = const()[name = tensor<string, []>("temb_29_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_29_pad_0 = const()[name = tensor<string, []>("temb_29_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_resnets_1_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_1_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(362587584)))];
            tensor<fp16, [1280]> up_blocks_1_resnets_1_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_1_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(365864448)))];
            tensor<fp16, [2, 1280, 1, 1]> temb_29_cast = conv(bias = up_blocks_1_resnets_1_time_emb_proj_bias_to_fp16, dilations = var_6631, groups = var_5599, pad = temb_29_pad_0, pad_type = temb_29_pad_type_0, strides = var_6629, weight = up_blocks_1_resnets_1_time_emb_proj_weight_to_fp16, x = cast_12);
            tensor<fp16, [2, 1280, 16, 16]> input_319_cast = add(x = hidden_states_179_cast, y = temb_29_cast);
            tensor<int32, [5]> reshape_148_shape_0 = const()[name = tensor<string, []>("reshape_148_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 16, 16])];
            tensor<fp16, [2, 32, 40, 16, 16]> reshape_148_cast = reshape(shape = reshape_148_shape_0, x = input_319_cast);
            tensor<int32, [3]> reduce_mean_111_axes_0 = const()[name = tensor<string, []>("reduce_mean_111_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_111_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_111_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_111_cast = reduce_mean(axes = reduce_mean_111_axes_0, keep_dims = reduce_mean_111_keep_dims_0, x = reshape_148_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> sub_74_cast = sub(x = reshape_148_cast, y = reduce_mean_111_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> square_37_cast = square(x = sub_74_cast);
            tensor<int32, [3]> reduce_mean_113_axes_0 = const()[name = tensor<string, []>("reduce_mean_113_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_113_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_113_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_113_cast = reduce_mean(axes = reduce_mean_113_axes_0, keep_dims = reduce_mean_113_keep_dims_0, x = square_37_cast);
            tensor<fp16, []> add_74_y_0_to_fp16 = const()[name = tensor<string, []>("add_74_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_74_cast = add(x = reduce_mean_113_cast, y = add_74_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_37_cast = sqrt(x = add_74_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> real_div_37_cast = real_div(x = sub_74_cast, y = sqrt_37_cast);
            tensor<int32, [4]> reshape_149_shape_0 = const()[name = tensor<string, []>("reshape_149_shape_0"), val = tensor<int32, [4]>([2, 1280, 16, 16])];
            tensor<fp16, [2, 1280, 16, 16]> reshape_149_cast = reshape(shape = reshape_149_shape_0, x = real_div_37_cast);
            tensor<fp16, [1280]> add_75_mean_0_to_fp16 = const()[name = tensor<string, []>("add_75_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(365867072)))];
            tensor<fp16, [1280]> add_75_variance_0_to_fp16 = const()[name = tensor<string, []>("add_75_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(365869696)))];
            tensor<fp16, [1280]> add_75_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_75_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(365872320)))];
            tensor<fp16, [1280]> add_75_beta_0_to_fp16 = const()[name = tensor<string, []>("add_75_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(365874944)))];
            tensor<fp16, []> add_75_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_75_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 16, 16]> add_75_cast = batch_norm(beta = add_75_beta_0_to_fp16, epsilon = add_75_epsilon_0_to_fp16, gamma = add_75_gamma_0_to_fp16, mean = add_75_mean_0_to_fp16, variance = add_75_variance_0_to_fp16, x = reshape_149_cast);
            tensor<fp16, [2, 1280, 16, 16]> input_323_cast = silu(x = add_75_cast);
            tensor<int32, [2]> var_6641 = const()[name = tensor<string, []>("op_6641"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6643 = const()[name = tensor<string, []>("op_6643"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_181_pad_type_0 = const()[name = tensor<string, []>("hidden_states_181_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_181_pad_0 = const()[name = tensor<string, []>("hidden_states_181_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> up_blocks_1_resnets_1_conv2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_1_conv2_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(365877568)))];
            tensor<fp16, [1280]> up_blocks_1_resnets_1_conv2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_1_conv2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(395368832)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_181_cast = conv(bias = up_blocks_1_resnets_1_conv2_bias_to_fp16, dilations = var_6643, groups = var_5599, pad = hidden_states_181_pad_0, pad_type = hidden_states_181_pad_type_0, strides = var_6641, weight = up_blocks_1_resnets_1_conv2_weight_to_fp16, x = input_323_cast);
            tensor<int32, [2]> var_6648 = const()[name = tensor<string, []>("op_6648"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6650 = const()[name = tensor<string, []>("op_6650"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_13_pad_type_0 = const()[name = tensor<string, []>("x_13_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_13_pad_0 = const()[name = tensor<string, []>("x_13_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 2560, 1, 1]> up_blocks_1_resnets_1_conv_shortcut_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_1_conv_shortcut_weight_to_fp16"), val = tensor<fp16, [1280, 2560, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(395371456)))];
            tensor<fp16, [1280]> up_blocks_1_resnets_1_conv_shortcut_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_1_conv_shortcut_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(401925120)))];
            tensor<fp16, [2, 1280, 16, 16]> x_13_cast = conv(bias = up_blocks_1_resnets_1_conv_shortcut_bias_to_fp16, dilations = var_6650, groups = var_5599, pad = x_13_pad_0, pad_type = x_13_pad_type_0, strides = var_6648, weight = up_blocks_1_resnets_1_conv_shortcut_weight_to_fp16, x = input_311_cast);
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_183_cast = add(x = x_13_cast, y = hidden_states_181_cast);
            tensor<int32, [5]> reshape_152_shape_0 = const()[name = tensor<string, []>("reshape_152_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 16, 16])];
            tensor<fp16, [2, 32, 40, 16, 16]> reshape_152_cast = reshape(shape = reshape_152_shape_0, x = hidden_states_183_cast);
            tensor<int32, [3]> reduce_mean_114_axes_0 = const()[name = tensor<string, []>("reduce_mean_114_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_114_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_114_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_114_cast = reduce_mean(axes = reduce_mean_114_axes_0, keep_dims = reduce_mean_114_keep_dims_0, x = reshape_152_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> sub_76_cast = sub(x = reshape_152_cast, y = reduce_mean_114_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> square_38_cast = square(x = sub_76_cast);
            tensor<int32, [3]> reduce_mean_116_axes_0 = const()[name = tensor<string, []>("reduce_mean_116_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_116_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_116_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_116_cast = reduce_mean(axes = reduce_mean_116_axes_0, keep_dims = reduce_mean_116_keep_dims_0, x = square_38_cast);
            tensor<fp16, []> add_76_y_0_to_fp16 = const()[name = tensor<string, []>("add_76_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_76_cast = add(x = reduce_mean_116_cast, y = add_76_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_38_cast = sqrt(x = add_76_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> real_div_38_cast = real_div(x = sub_76_cast, y = sqrt_38_cast);
            tensor<int32, [4]> reshape_153_shape_0 = const()[name = tensor<string, []>("reshape_153_shape_0"), val = tensor<int32, [4]>([2, 1280, 16, 16])];
            tensor<fp16, [2, 1280, 16, 16]> reshape_153_cast = reshape(shape = reshape_153_shape_0, x = real_div_38_cast);
            tensor<fp16, [1280]> add_77_mean_0_to_fp16 = const()[name = tensor<string, []>("add_77_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(401927744)))];
            tensor<fp16, [1280]> add_77_variance_0_to_fp16 = const()[name = tensor<string, []>("add_77_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(401930368)))];
            tensor<fp16, [1280]> add_77_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_77_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(401932992)))];
            tensor<fp16, [1280]> add_77_beta_0_to_fp16 = const()[name = tensor<string, []>("add_77_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(401935616)))];
            tensor<fp16, []> add_77_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_77_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 16, 16]> add_77_cast = batch_norm(beta = add_77_beta_0_to_fp16, epsilon = add_77_epsilon_0_to_fp16, gamma = add_77_gamma_0_to_fp16, mean = add_77_mean_0_to_fp16, variance = add_77_variance_0_to_fp16, x = reshape_153_cast);
            tensor<int32, [2]> var_6670 = const()[name = tensor<string, []>("op_6670"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6672 = const()[name = tensor<string, []>("op_6672"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_185_pad_type_0 = const()[name = tensor<string, []>("hidden_states_185_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_185_pad_0 = const()[name = tensor<string, []>("hidden_states_185_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_1_proj_in_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_proj_in_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(401938240)))];
            tensor<fp16, [1280]> up_blocks_1_attentions_1_proj_in_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_proj_in_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(405215104)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_185_cast = conv(bias = up_blocks_1_attentions_1_proj_in_bias_to_fp16, dilations = var_6672, groups = var_5599, pad = hidden_states_185_pad_0, pad_type = hidden_states_185_pad_type_0, strides = var_6670, weight = up_blocks_1_attentions_1_proj_in_weight_to_fp16, x = add_77_cast);
            tensor<int32, [4]> var_6677 = const()[name = tensor<string, []>("op_6677"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<fp16, [2, 1280, 1, 256]> inputs_49_cast = reshape(shape = var_6677, x = hidden_states_185_cast);
            tensor<int32, [1]> var_6687 = const()[name = tensor<string, []>("op_6687"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> channels_mean_49_cast = reduce_mean(axes = var_6687, keep_dims = var_5594, x = inputs_49_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_49_cast = sub(x = inputs_49_cast, y = channels_mean_49_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_sq_49_cast = mul(x = zero_mean_49_cast, y = zero_mean_49_cast);
            tensor<int32, [1]> var_6691 = const()[name = tensor<string, []>("op_6691"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> var_6692_cast = reduce_mean(axes = var_6691, keep_dims = var_5594, x = zero_mean_sq_49_cast);
            tensor<fp16, []> var_6693_to_fp16 = const()[name = tensor<string, []>("op_6693_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 256]> var_6694_cast = add(x = var_6692_cast, y = var_6693_to_fp16);
            tensor<fp16, []> denom_49_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_49_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 256]> denom_49_cast = rsqrt(epsilon = denom_49_epsilon_0_to_fp16, x = var_6694_cast);
            tensor<fp16, [2, 1280, 1, 256]> out_49_cast = mul(x = zero_mean_49_cast, y = denom_49_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_6698_to_fp16 = const()[name = tensor<string, []>("op_6698_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(405217728)))];
            tensor<fp16, [2, 1280, 1, 256]> var_6699_cast = add(x = out_49_cast, y = var_6698_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_6701_to_fp16 = const()[name = tensor<string, []>("op_6701_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(405220352)))];
            tensor<fp16, [2, 1280, 1, 256]> hidden_states_187_cast = mul(x = var_6699_cast, y = var_6701_to_fp16);
            tensor<int32, [2]> var_6708 = const()[name = tensor<string, []>("op_6708"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6710 = const()[name = tensor<string, []>("op_6710"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_33_pad_type_0 = const()[name = tensor<string, []>("q_33_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_33_pad_0 = const()[name = tensor<string, []>("q_33_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(405222976)))];
            tensor<fp16, [2, 1280, 1, 256]> q_33_cast = conv(dilations = var_6710, groups = var_5599, pad = q_33_pad_0, pad_type = q_33_pad_type_0, strides = var_6708, weight = up_blocks_1_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16, x = hidden_states_187_cast);
            tensor<int32, [2]> var_6714 = const()[name = tensor<string, []>("op_6714"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6716 = const()[name = tensor<string, []>("op_6716"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_65_pad_type_0 = const()[name = tensor<string, []>("k_65_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_65_pad_0 = const()[name = tensor<string, []>("k_65_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(408499840)))];
            tensor<fp16, [2, 1280, 1, 256]> k_65_cast = conv(dilations = var_6716, groups = var_5599, pad = k_65_pad_0, pad_type = k_65_pad_type_0, strides = var_6714, weight = up_blocks_1_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16, x = hidden_states_187_cast);
            tensor<int32, [2]> var_6720 = const()[name = tensor<string, []>("op_6720"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6722 = const()[name = tensor<string, []>("op_6722"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_33_pad_type_0 = const()[name = tensor<string, []>("v_33_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_33_pad_0 = const()[name = tensor<string, []>("v_33_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(411776704)))];
            tensor<fp16, [2, 1280, 1, 256]> v_33_cast = conv(dilations = var_6722, groups = var_5599, pad = v_33_pad_0, pad_type = v_33_pad_type_0, strides = var_6720, weight = up_blocks_1_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16, x = hidden_states_187_cast);
            tensor<int32, [4]> var_6726_begin_0 = const()[name = tensor<string, []>("op_6726_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_6726_end_0 = const()[name = tensor<string, []>("op_6726_end_0"), val = tensor<int32, [4]>([2, 64, 1, 256])];
            tensor<bool, [4]> var_6726_end_mask_0 = const()[name = tensor<string, []>("op_6726_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6726_cast = slice_by_index(begin = var_6726_begin_0, end = var_6726_end_0, end_mask = var_6726_end_mask_0, x = q_33_cast);
            tensor<int32, [4]> var_6730_begin_0 = const()[name = tensor<string, []>("op_6730_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_6730_end_0 = const()[name = tensor<string, []>("op_6730_end_0"), val = tensor<int32, [4]>([2, 128, 1, 256])];
            tensor<bool, [4]> var_6730_end_mask_0 = const()[name = tensor<string, []>("op_6730_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6730_cast = slice_by_index(begin = var_6730_begin_0, end = var_6730_end_0, end_mask = var_6730_end_mask_0, x = q_33_cast);
            tensor<int32, [4]> var_6734_begin_0 = const()[name = tensor<string, []>("op_6734_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_6734_end_0 = const()[name = tensor<string, []>("op_6734_end_0"), val = tensor<int32, [4]>([2, 192, 1, 256])];
            tensor<bool, [4]> var_6734_end_mask_0 = const()[name = tensor<string, []>("op_6734_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6734_cast = slice_by_index(begin = var_6734_begin_0, end = var_6734_end_0, end_mask = var_6734_end_mask_0, x = q_33_cast);
            tensor<int32, [4]> var_6738_begin_0 = const()[name = tensor<string, []>("op_6738_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_6738_end_0 = const()[name = tensor<string, []>("op_6738_end_0"), val = tensor<int32, [4]>([2, 256, 1, 256])];
            tensor<bool, [4]> var_6738_end_mask_0 = const()[name = tensor<string, []>("op_6738_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6738_cast = slice_by_index(begin = var_6738_begin_0, end = var_6738_end_0, end_mask = var_6738_end_mask_0, x = q_33_cast);
            tensor<int32, [4]> var_6742_begin_0 = const()[name = tensor<string, []>("op_6742_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_6742_end_0 = const()[name = tensor<string, []>("op_6742_end_0"), val = tensor<int32, [4]>([2, 320, 1, 256])];
            tensor<bool, [4]> var_6742_end_mask_0 = const()[name = tensor<string, []>("op_6742_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6742_cast = slice_by_index(begin = var_6742_begin_0, end = var_6742_end_0, end_mask = var_6742_end_mask_0, x = q_33_cast);
            tensor<int32, [4]> var_6746_begin_0 = const()[name = tensor<string, []>("op_6746_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_6746_end_0 = const()[name = tensor<string, []>("op_6746_end_0"), val = tensor<int32, [4]>([2, 384, 1, 256])];
            tensor<bool, [4]> var_6746_end_mask_0 = const()[name = tensor<string, []>("op_6746_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6746_cast = slice_by_index(begin = var_6746_begin_0, end = var_6746_end_0, end_mask = var_6746_end_mask_0, x = q_33_cast);
            tensor<int32, [4]> var_6750_begin_0 = const()[name = tensor<string, []>("op_6750_begin_0"), val = tensor<int32, [4]>([0, 384, 0, 0])];
            tensor<int32, [4]> var_6750_end_0 = const()[name = tensor<string, []>("op_6750_end_0"), val = tensor<int32, [4]>([2, 448, 1, 256])];
            tensor<bool, [4]> var_6750_end_mask_0 = const()[name = tensor<string, []>("op_6750_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6750_cast = slice_by_index(begin = var_6750_begin_0, end = var_6750_end_0, end_mask = var_6750_end_mask_0, x = q_33_cast);
            tensor<int32, [4]> var_6754_begin_0 = const()[name = tensor<string, []>("op_6754_begin_0"), val = tensor<int32, [4]>([0, 448, 0, 0])];
            tensor<int32, [4]> var_6754_end_0 = const()[name = tensor<string, []>("op_6754_end_0"), val = tensor<int32, [4]>([2, 512, 1, 256])];
            tensor<bool, [4]> var_6754_end_mask_0 = const()[name = tensor<string, []>("op_6754_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6754_cast = slice_by_index(begin = var_6754_begin_0, end = var_6754_end_0, end_mask = var_6754_end_mask_0, x = q_33_cast);
            tensor<int32, [4]> var_6758_begin_0 = const()[name = tensor<string, []>("op_6758_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_6758_end_0 = const()[name = tensor<string, []>("op_6758_end_0"), val = tensor<int32, [4]>([2, 576, 1, 256])];
            tensor<bool, [4]> var_6758_end_mask_0 = const()[name = tensor<string, []>("op_6758_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6758_cast = slice_by_index(begin = var_6758_begin_0, end = var_6758_end_0, end_mask = var_6758_end_mask_0, x = q_33_cast);
            tensor<int32, [4]> var_6762_begin_0 = const()[name = tensor<string, []>("op_6762_begin_0"), val = tensor<int32, [4]>([0, 576, 0, 0])];
            tensor<int32, [4]> var_6762_end_0 = const()[name = tensor<string, []>("op_6762_end_0"), val = tensor<int32, [4]>([2, 640, 1, 256])];
            tensor<bool, [4]> var_6762_end_mask_0 = const()[name = tensor<string, []>("op_6762_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6762_cast = slice_by_index(begin = var_6762_begin_0, end = var_6762_end_0, end_mask = var_6762_end_mask_0, x = q_33_cast);
            tensor<int32, [4]> var_6766_begin_0 = const()[name = tensor<string, []>("op_6766_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_6766_end_0 = const()[name = tensor<string, []>("op_6766_end_0"), val = tensor<int32, [4]>([2, 704, 1, 256])];
            tensor<bool, [4]> var_6766_end_mask_0 = const()[name = tensor<string, []>("op_6766_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6766_cast = slice_by_index(begin = var_6766_begin_0, end = var_6766_end_0, end_mask = var_6766_end_mask_0, x = q_33_cast);
            tensor<int32, [4]> var_6770_begin_0 = const()[name = tensor<string, []>("op_6770_begin_0"), val = tensor<int32, [4]>([0, 704, 0, 0])];
            tensor<int32, [4]> var_6770_end_0 = const()[name = tensor<string, []>("op_6770_end_0"), val = tensor<int32, [4]>([2, 768, 1, 256])];
            tensor<bool, [4]> var_6770_end_mask_0 = const()[name = tensor<string, []>("op_6770_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6770_cast = slice_by_index(begin = var_6770_begin_0, end = var_6770_end_0, end_mask = var_6770_end_mask_0, x = q_33_cast);
            tensor<int32, [4]> var_6774_begin_0 = const()[name = tensor<string, []>("op_6774_begin_0"), val = tensor<int32, [4]>([0, 768, 0, 0])];
            tensor<int32, [4]> var_6774_end_0 = const()[name = tensor<string, []>("op_6774_end_0"), val = tensor<int32, [4]>([2, 832, 1, 256])];
            tensor<bool, [4]> var_6774_end_mask_0 = const()[name = tensor<string, []>("op_6774_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6774_cast = slice_by_index(begin = var_6774_begin_0, end = var_6774_end_0, end_mask = var_6774_end_mask_0, x = q_33_cast);
            tensor<int32, [4]> var_6778_begin_0 = const()[name = tensor<string, []>("op_6778_begin_0"), val = tensor<int32, [4]>([0, 832, 0, 0])];
            tensor<int32, [4]> var_6778_end_0 = const()[name = tensor<string, []>("op_6778_end_0"), val = tensor<int32, [4]>([2, 896, 1, 256])];
            tensor<bool, [4]> var_6778_end_mask_0 = const()[name = tensor<string, []>("op_6778_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6778_cast = slice_by_index(begin = var_6778_begin_0, end = var_6778_end_0, end_mask = var_6778_end_mask_0, x = q_33_cast);
            tensor<int32, [4]> var_6782_begin_0 = const()[name = tensor<string, []>("op_6782_begin_0"), val = tensor<int32, [4]>([0, 896, 0, 0])];
            tensor<int32, [4]> var_6782_end_0 = const()[name = tensor<string, []>("op_6782_end_0"), val = tensor<int32, [4]>([2, 960, 1, 256])];
            tensor<bool, [4]> var_6782_end_mask_0 = const()[name = tensor<string, []>("op_6782_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6782_cast = slice_by_index(begin = var_6782_begin_0, end = var_6782_end_0, end_mask = var_6782_end_mask_0, x = q_33_cast);
            tensor<int32, [4]> var_6786_begin_0 = const()[name = tensor<string, []>("op_6786_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_6786_end_0 = const()[name = tensor<string, []>("op_6786_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 256])];
            tensor<bool, [4]> var_6786_end_mask_0 = const()[name = tensor<string, []>("op_6786_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6786_cast = slice_by_index(begin = var_6786_begin_0, end = var_6786_end_0, end_mask = var_6786_end_mask_0, x = q_33_cast);
            tensor<int32, [4]> var_6790_begin_0 = const()[name = tensor<string, []>("op_6790_begin_0"), val = tensor<int32, [4]>([0, 1024, 0, 0])];
            tensor<int32, [4]> var_6790_end_0 = const()[name = tensor<string, []>("op_6790_end_0"), val = tensor<int32, [4]>([2, 1088, 1, 256])];
            tensor<bool, [4]> var_6790_end_mask_0 = const()[name = tensor<string, []>("op_6790_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6790_cast = slice_by_index(begin = var_6790_begin_0, end = var_6790_end_0, end_mask = var_6790_end_mask_0, x = q_33_cast);
            tensor<int32, [4]> var_6794_begin_0 = const()[name = tensor<string, []>("op_6794_begin_0"), val = tensor<int32, [4]>([0, 1088, 0, 0])];
            tensor<int32, [4]> var_6794_end_0 = const()[name = tensor<string, []>("op_6794_end_0"), val = tensor<int32, [4]>([2, 1152, 1, 256])];
            tensor<bool, [4]> var_6794_end_mask_0 = const()[name = tensor<string, []>("op_6794_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6794_cast = slice_by_index(begin = var_6794_begin_0, end = var_6794_end_0, end_mask = var_6794_end_mask_0, x = q_33_cast);
            tensor<int32, [4]> var_6798_begin_0 = const()[name = tensor<string, []>("op_6798_begin_0"), val = tensor<int32, [4]>([0, 1152, 0, 0])];
            tensor<int32, [4]> var_6798_end_0 = const()[name = tensor<string, []>("op_6798_end_0"), val = tensor<int32, [4]>([2, 1216, 1, 256])];
            tensor<bool, [4]> var_6798_end_mask_0 = const()[name = tensor<string, []>("op_6798_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6798_cast = slice_by_index(begin = var_6798_begin_0, end = var_6798_end_0, end_mask = var_6798_end_mask_0, x = q_33_cast);
            tensor<int32, [4]> var_6802_begin_0 = const()[name = tensor<string, []>("op_6802_begin_0"), val = tensor<int32, [4]>([0, 1216, 0, 0])];
            tensor<int32, [4]> var_6802_end_0 = const()[name = tensor<string, []>("op_6802_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<bool, [4]> var_6802_end_mask_0 = const()[name = tensor<string, []>("op_6802_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6802_cast = slice_by_index(begin = var_6802_begin_0, end = var_6802_end_0, end_mask = var_6802_end_mask_0, x = q_33_cast);
            tensor<int32, [4]> k_67_perm_0 = const()[name = tensor<string, []>("k_67_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_6809_begin_0 = const()[name = tensor<string, []>("op_6809_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_6809_end_0 = const()[name = tensor<string, []>("op_6809_end_0"), val = tensor<int32, [4]>([2, 256, 1, 64])];
            tensor<bool, [4]> var_6809_end_mask_0 = const()[name = tensor<string, []>("op_6809_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 1280]> transpose_15 = transpose(perm = k_67_perm_0, x = k_65_cast);
            tensor<fp16, [2, 256, 1, 64]> var_6809_cast = slice_by_index(begin = var_6809_begin_0, end = var_6809_end_0, end_mask = var_6809_end_mask_0, x = transpose_15);
            tensor<int32, [4]> var_6813_begin_0 = const()[name = tensor<string, []>("op_6813_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 64])];
            tensor<int32, [4]> var_6813_end_0 = const()[name = tensor<string, []>("op_6813_end_0"), val = tensor<int32, [4]>([2, 256, 1, 128])];
            tensor<bool, [4]> var_6813_end_mask_0 = const()[name = tensor<string, []>("op_6813_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_6813_cast = slice_by_index(begin = var_6813_begin_0, end = var_6813_end_0, end_mask = var_6813_end_mask_0, x = transpose_15);
            tensor<int32, [4]> var_6817_begin_0 = const()[name = tensor<string, []>("op_6817_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 128])];
            tensor<int32, [4]> var_6817_end_0 = const()[name = tensor<string, []>("op_6817_end_0"), val = tensor<int32, [4]>([2, 256, 1, 192])];
            tensor<bool, [4]> var_6817_end_mask_0 = const()[name = tensor<string, []>("op_6817_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_6817_cast = slice_by_index(begin = var_6817_begin_0, end = var_6817_end_0, end_mask = var_6817_end_mask_0, x = transpose_15);
            tensor<int32, [4]> var_6821_begin_0 = const()[name = tensor<string, []>("op_6821_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 192])];
            tensor<int32, [4]> var_6821_end_0 = const()[name = tensor<string, []>("op_6821_end_0"), val = tensor<int32, [4]>([2, 256, 1, 256])];
            tensor<bool, [4]> var_6821_end_mask_0 = const()[name = tensor<string, []>("op_6821_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_6821_cast = slice_by_index(begin = var_6821_begin_0, end = var_6821_end_0, end_mask = var_6821_end_mask_0, x = transpose_15);
            tensor<int32, [4]> var_6825_begin_0 = const()[name = tensor<string, []>("op_6825_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 256])];
            tensor<int32, [4]> var_6825_end_0 = const()[name = tensor<string, []>("op_6825_end_0"), val = tensor<int32, [4]>([2, 256, 1, 320])];
            tensor<bool, [4]> var_6825_end_mask_0 = const()[name = tensor<string, []>("op_6825_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_6825_cast = slice_by_index(begin = var_6825_begin_0, end = var_6825_end_0, end_mask = var_6825_end_mask_0, x = transpose_15);
            tensor<int32, [4]> var_6829_begin_0 = const()[name = tensor<string, []>("op_6829_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_6829_end_0 = const()[name = tensor<string, []>("op_6829_end_0"), val = tensor<int32, [4]>([2, 256, 1, 384])];
            tensor<bool, [4]> var_6829_end_mask_0 = const()[name = tensor<string, []>("op_6829_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_6829_cast = slice_by_index(begin = var_6829_begin_0, end = var_6829_end_0, end_mask = var_6829_end_mask_0, x = transpose_15);
            tensor<int32, [4]> var_6833_begin_0 = const()[name = tensor<string, []>("op_6833_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 384])];
            tensor<int32, [4]> var_6833_end_0 = const()[name = tensor<string, []>("op_6833_end_0"), val = tensor<int32, [4]>([2, 256, 1, 448])];
            tensor<bool, [4]> var_6833_end_mask_0 = const()[name = tensor<string, []>("op_6833_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_6833_cast = slice_by_index(begin = var_6833_begin_0, end = var_6833_end_0, end_mask = var_6833_end_mask_0, x = transpose_15);
            tensor<int32, [4]> var_6837_begin_0 = const()[name = tensor<string, []>("op_6837_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 448])];
            tensor<int32, [4]> var_6837_end_0 = const()[name = tensor<string, []>("op_6837_end_0"), val = tensor<int32, [4]>([2, 256, 1, 512])];
            tensor<bool, [4]> var_6837_end_mask_0 = const()[name = tensor<string, []>("op_6837_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_6837_cast = slice_by_index(begin = var_6837_begin_0, end = var_6837_end_0, end_mask = var_6837_end_mask_0, x = transpose_15);
            tensor<int32, [4]> var_6841_begin_0 = const()[name = tensor<string, []>("op_6841_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 512])];
            tensor<int32, [4]> var_6841_end_0 = const()[name = tensor<string, []>("op_6841_end_0"), val = tensor<int32, [4]>([2, 256, 1, 576])];
            tensor<bool, [4]> var_6841_end_mask_0 = const()[name = tensor<string, []>("op_6841_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_6841_cast = slice_by_index(begin = var_6841_begin_0, end = var_6841_end_0, end_mask = var_6841_end_mask_0, x = transpose_15);
            tensor<int32, [4]> var_6845_begin_0 = const()[name = tensor<string, []>("op_6845_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 576])];
            tensor<int32, [4]> var_6845_end_0 = const()[name = tensor<string, []>("op_6845_end_0"), val = tensor<int32, [4]>([2, 256, 1, 640])];
            tensor<bool, [4]> var_6845_end_mask_0 = const()[name = tensor<string, []>("op_6845_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_6845_cast = slice_by_index(begin = var_6845_begin_0, end = var_6845_end_0, end_mask = var_6845_end_mask_0, x = transpose_15);
            tensor<int32, [4]> var_6849_begin_0 = const()[name = tensor<string, []>("op_6849_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 640])];
            tensor<int32, [4]> var_6849_end_0 = const()[name = tensor<string, []>("op_6849_end_0"), val = tensor<int32, [4]>([2, 256, 1, 704])];
            tensor<bool, [4]> var_6849_end_mask_0 = const()[name = tensor<string, []>("op_6849_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_6849_cast = slice_by_index(begin = var_6849_begin_0, end = var_6849_end_0, end_mask = var_6849_end_mask_0, x = transpose_15);
            tensor<int32, [4]> var_6853_begin_0 = const()[name = tensor<string, []>("op_6853_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 704])];
            tensor<int32, [4]> var_6853_end_0 = const()[name = tensor<string, []>("op_6853_end_0"), val = tensor<int32, [4]>([2, 256, 1, 768])];
            tensor<bool, [4]> var_6853_end_mask_0 = const()[name = tensor<string, []>("op_6853_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_6853_cast = slice_by_index(begin = var_6853_begin_0, end = var_6853_end_0, end_mask = var_6853_end_mask_0, x = transpose_15);
            tensor<int32, [4]> var_6857_begin_0 = const()[name = tensor<string, []>("op_6857_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 768])];
            tensor<int32, [4]> var_6857_end_0 = const()[name = tensor<string, []>("op_6857_end_0"), val = tensor<int32, [4]>([2, 256, 1, 832])];
            tensor<bool, [4]> var_6857_end_mask_0 = const()[name = tensor<string, []>("op_6857_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_6857_cast = slice_by_index(begin = var_6857_begin_0, end = var_6857_end_0, end_mask = var_6857_end_mask_0, x = transpose_15);
            tensor<int32, [4]> var_6861_begin_0 = const()[name = tensor<string, []>("op_6861_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 832])];
            tensor<int32, [4]> var_6861_end_0 = const()[name = tensor<string, []>("op_6861_end_0"), val = tensor<int32, [4]>([2, 256, 1, 896])];
            tensor<bool, [4]> var_6861_end_mask_0 = const()[name = tensor<string, []>("op_6861_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_6861_cast = slice_by_index(begin = var_6861_begin_0, end = var_6861_end_0, end_mask = var_6861_end_mask_0, x = transpose_15);
            tensor<int32, [4]> var_6865_begin_0 = const()[name = tensor<string, []>("op_6865_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 896])];
            tensor<int32, [4]> var_6865_end_0 = const()[name = tensor<string, []>("op_6865_end_0"), val = tensor<int32, [4]>([2, 256, 1, 960])];
            tensor<bool, [4]> var_6865_end_mask_0 = const()[name = tensor<string, []>("op_6865_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_6865_cast = slice_by_index(begin = var_6865_begin_0, end = var_6865_end_0, end_mask = var_6865_end_mask_0, x = transpose_15);
            tensor<int32, [4]> var_6869_begin_0 = const()[name = tensor<string, []>("op_6869_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 960])];
            tensor<int32, [4]> var_6869_end_0 = const()[name = tensor<string, []>("op_6869_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1024])];
            tensor<bool, [4]> var_6869_end_mask_0 = const()[name = tensor<string, []>("op_6869_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_6869_cast = slice_by_index(begin = var_6869_begin_0, end = var_6869_end_0, end_mask = var_6869_end_mask_0, x = transpose_15);
            tensor<int32, [4]> var_6873_begin_0 = const()[name = tensor<string, []>("op_6873_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1024])];
            tensor<int32, [4]> var_6873_end_0 = const()[name = tensor<string, []>("op_6873_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1088])];
            tensor<bool, [4]> var_6873_end_mask_0 = const()[name = tensor<string, []>("op_6873_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_6873_cast = slice_by_index(begin = var_6873_begin_0, end = var_6873_end_0, end_mask = var_6873_end_mask_0, x = transpose_15);
            tensor<int32, [4]> var_6877_begin_0 = const()[name = tensor<string, []>("op_6877_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1088])];
            tensor<int32, [4]> var_6877_end_0 = const()[name = tensor<string, []>("op_6877_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1152])];
            tensor<bool, [4]> var_6877_end_mask_0 = const()[name = tensor<string, []>("op_6877_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_6877_cast = slice_by_index(begin = var_6877_begin_0, end = var_6877_end_0, end_mask = var_6877_end_mask_0, x = transpose_15);
            tensor<int32, [4]> var_6881_begin_0 = const()[name = tensor<string, []>("op_6881_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1152])];
            tensor<int32, [4]> var_6881_end_0 = const()[name = tensor<string, []>("op_6881_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1216])];
            tensor<bool, [4]> var_6881_end_mask_0 = const()[name = tensor<string, []>("op_6881_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_6881_cast = slice_by_index(begin = var_6881_begin_0, end = var_6881_end_0, end_mask = var_6881_end_mask_0, x = transpose_15);
            tensor<int32, [4]> var_6885_begin_0 = const()[name = tensor<string, []>("op_6885_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1216])];
            tensor<int32, [4]> var_6885_end_0 = const()[name = tensor<string, []>("op_6885_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1280])];
            tensor<bool, [4]> var_6885_end_mask_0 = const()[name = tensor<string, []>("op_6885_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_6885_cast = slice_by_index(begin = var_6885_begin_0, end = var_6885_end_0, end_mask = var_6885_end_mask_0, x = transpose_15);
            tensor<int32, [4]> var_6887_begin_0 = const()[name = tensor<string, []>("op_6887_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_6887_end_0 = const()[name = tensor<string, []>("op_6887_end_0"), val = tensor<int32, [4]>([2, 64, 1, 256])];
            tensor<bool, [4]> var_6887_end_mask_0 = const()[name = tensor<string, []>("op_6887_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6887_cast = slice_by_index(begin = var_6887_begin_0, end = var_6887_end_0, end_mask = var_6887_end_mask_0, x = v_33_cast);
            tensor<int32, [4]> var_6891_begin_0 = const()[name = tensor<string, []>("op_6891_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_6891_end_0 = const()[name = tensor<string, []>("op_6891_end_0"), val = tensor<int32, [4]>([2, 128, 1, 256])];
            tensor<bool, [4]> var_6891_end_mask_0 = const()[name = tensor<string, []>("op_6891_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6891_cast = slice_by_index(begin = var_6891_begin_0, end = var_6891_end_0, end_mask = var_6891_end_mask_0, x = v_33_cast);
            tensor<int32, [4]> var_6895_begin_0 = const()[name = tensor<string, []>("op_6895_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_6895_end_0 = const()[name = tensor<string, []>("op_6895_end_0"), val = tensor<int32, [4]>([2, 192, 1, 256])];
            tensor<bool, [4]> var_6895_end_mask_0 = const()[name = tensor<string, []>("op_6895_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6895_cast = slice_by_index(begin = var_6895_begin_0, end = var_6895_end_0, end_mask = var_6895_end_mask_0, x = v_33_cast);
            tensor<int32, [4]> var_6899_begin_0 = const()[name = tensor<string, []>("op_6899_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_6899_end_0 = const()[name = tensor<string, []>("op_6899_end_0"), val = tensor<int32, [4]>([2, 256, 1, 256])];
            tensor<bool, [4]> var_6899_end_mask_0 = const()[name = tensor<string, []>("op_6899_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6899_cast = slice_by_index(begin = var_6899_begin_0, end = var_6899_end_0, end_mask = var_6899_end_mask_0, x = v_33_cast);
            tensor<int32, [4]> var_6903_begin_0 = const()[name = tensor<string, []>("op_6903_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_6903_end_0 = const()[name = tensor<string, []>("op_6903_end_0"), val = tensor<int32, [4]>([2, 320, 1, 256])];
            tensor<bool, [4]> var_6903_end_mask_0 = const()[name = tensor<string, []>("op_6903_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6903_cast = slice_by_index(begin = var_6903_begin_0, end = var_6903_end_0, end_mask = var_6903_end_mask_0, x = v_33_cast);
            tensor<int32, [4]> var_6907_begin_0 = const()[name = tensor<string, []>("op_6907_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_6907_end_0 = const()[name = tensor<string, []>("op_6907_end_0"), val = tensor<int32, [4]>([2, 384, 1, 256])];
            tensor<bool, [4]> var_6907_end_mask_0 = const()[name = tensor<string, []>("op_6907_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6907_cast = slice_by_index(begin = var_6907_begin_0, end = var_6907_end_0, end_mask = var_6907_end_mask_0, x = v_33_cast);
            tensor<int32, [4]> var_6911_begin_0 = const()[name = tensor<string, []>("op_6911_begin_0"), val = tensor<int32, [4]>([0, 384, 0, 0])];
            tensor<int32, [4]> var_6911_end_0 = const()[name = tensor<string, []>("op_6911_end_0"), val = tensor<int32, [4]>([2, 448, 1, 256])];
            tensor<bool, [4]> var_6911_end_mask_0 = const()[name = tensor<string, []>("op_6911_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6911_cast = slice_by_index(begin = var_6911_begin_0, end = var_6911_end_0, end_mask = var_6911_end_mask_0, x = v_33_cast);
            tensor<int32, [4]> var_6915_begin_0 = const()[name = tensor<string, []>("op_6915_begin_0"), val = tensor<int32, [4]>([0, 448, 0, 0])];
            tensor<int32, [4]> var_6915_end_0 = const()[name = tensor<string, []>("op_6915_end_0"), val = tensor<int32, [4]>([2, 512, 1, 256])];
            tensor<bool, [4]> var_6915_end_mask_0 = const()[name = tensor<string, []>("op_6915_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6915_cast = slice_by_index(begin = var_6915_begin_0, end = var_6915_end_0, end_mask = var_6915_end_mask_0, x = v_33_cast);
            tensor<int32, [4]> var_6919_begin_0 = const()[name = tensor<string, []>("op_6919_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_6919_end_0 = const()[name = tensor<string, []>("op_6919_end_0"), val = tensor<int32, [4]>([2, 576, 1, 256])];
            tensor<bool, [4]> var_6919_end_mask_0 = const()[name = tensor<string, []>("op_6919_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6919_cast = slice_by_index(begin = var_6919_begin_0, end = var_6919_end_0, end_mask = var_6919_end_mask_0, x = v_33_cast);
            tensor<int32, [4]> var_6923_begin_0 = const()[name = tensor<string, []>("op_6923_begin_0"), val = tensor<int32, [4]>([0, 576, 0, 0])];
            tensor<int32, [4]> var_6923_end_0 = const()[name = tensor<string, []>("op_6923_end_0"), val = tensor<int32, [4]>([2, 640, 1, 256])];
            tensor<bool, [4]> var_6923_end_mask_0 = const()[name = tensor<string, []>("op_6923_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6923_cast = slice_by_index(begin = var_6923_begin_0, end = var_6923_end_0, end_mask = var_6923_end_mask_0, x = v_33_cast);
            tensor<int32, [4]> var_6927_begin_0 = const()[name = tensor<string, []>("op_6927_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_6927_end_0 = const()[name = tensor<string, []>("op_6927_end_0"), val = tensor<int32, [4]>([2, 704, 1, 256])];
            tensor<bool, [4]> var_6927_end_mask_0 = const()[name = tensor<string, []>("op_6927_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6927_cast = slice_by_index(begin = var_6927_begin_0, end = var_6927_end_0, end_mask = var_6927_end_mask_0, x = v_33_cast);
            tensor<int32, [4]> var_6931_begin_0 = const()[name = tensor<string, []>("op_6931_begin_0"), val = tensor<int32, [4]>([0, 704, 0, 0])];
            tensor<int32, [4]> var_6931_end_0 = const()[name = tensor<string, []>("op_6931_end_0"), val = tensor<int32, [4]>([2, 768, 1, 256])];
            tensor<bool, [4]> var_6931_end_mask_0 = const()[name = tensor<string, []>("op_6931_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6931_cast = slice_by_index(begin = var_6931_begin_0, end = var_6931_end_0, end_mask = var_6931_end_mask_0, x = v_33_cast);
            tensor<int32, [4]> var_6935_begin_0 = const()[name = tensor<string, []>("op_6935_begin_0"), val = tensor<int32, [4]>([0, 768, 0, 0])];
            tensor<int32, [4]> var_6935_end_0 = const()[name = tensor<string, []>("op_6935_end_0"), val = tensor<int32, [4]>([2, 832, 1, 256])];
            tensor<bool, [4]> var_6935_end_mask_0 = const()[name = tensor<string, []>("op_6935_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6935_cast = slice_by_index(begin = var_6935_begin_0, end = var_6935_end_0, end_mask = var_6935_end_mask_0, x = v_33_cast);
            tensor<int32, [4]> var_6939_begin_0 = const()[name = tensor<string, []>("op_6939_begin_0"), val = tensor<int32, [4]>([0, 832, 0, 0])];
            tensor<int32, [4]> var_6939_end_0 = const()[name = tensor<string, []>("op_6939_end_0"), val = tensor<int32, [4]>([2, 896, 1, 256])];
            tensor<bool, [4]> var_6939_end_mask_0 = const()[name = tensor<string, []>("op_6939_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6939_cast = slice_by_index(begin = var_6939_begin_0, end = var_6939_end_0, end_mask = var_6939_end_mask_0, x = v_33_cast);
            tensor<int32, [4]> var_6943_begin_0 = const()[name = tensor<string, []>("op_6943_begin_0"), val = tensor<int32, [4]>([0, 896, 0, 0])];
            tensor<int32, [4]> var_6943_end_0 = const()[name = tensor<string, []>("op_6943_end_0"), val = tensor<int32, [4]>([2, 960, 1, 256])];
            tensor<bool, [4]> var_6943_end_mask_0 = const()[name = tensor<string, []>("op_6943_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6943_cast = slice_by_index(begin = var_6943_begin_0, end = var_6943_end_0, end_mask = var_6943_end_mask_0, x = v_33_cast);
            tensor<int32, [4]> var_6947_begin_0 = const()[name = tensor<string, []>("op_6947_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_6947_end_0 = const()[name = tensor<string, []>("op_6947_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 256])];
            tensor<bool, [4]> var_6947_end_mask_0 = const()[name = tensor<string, []>("op_6947_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6947_cast = slice_by_index(begin = var_6947_begin_0, end = var_6947_end_0, end_mask = var_6947_end_mask_0, x = v_33_cast);
            tensor<int32, [4]> var_6951_begin_0 = const()[name = tensor<string, []>("op_6951_begin_0"), val = tensor<int32, [4]>([0, 1024, 0, 0])];
            tensor<int32, [4]> var_6951_end_0 = const()[name = tensor<string, []>("op_6951_end_0"), val = tensor<int32, [4]>([2, 1088, 1, 256])];
            tensor<bool, [4]> var_6951_end_mask_0 = const()[name = tensor<string, []>("op_6951_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6951_cast = slice_by_index(begin = var_6951_begin_0, end = var_6951_end_0, end_mask = var_6951_end_mask_0, x = v_33_cast);
            tensor<int32, [4]> var_6955_begin_0 = const()[name = tensor<string, []>("op_6955_begin_0"), val = tensor<int32, [4]>([0, 1088, 0, 0])];
            tensor<int32, [4]> var_6955_end_0 = const()[name = tensor<string, []>("op_6955_end_0"), val = tensor<int32, [4]>([2, 1152, 1, 256])];
            tensor<bool, [4]> var_6955_end_mask_0 = const()[name = tensor<string, []>("op_6955_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6955_cast = slice_by_index(begin = var_6955_begin_0, end = var_6955_end_0, end_mask = var_6955_end_mask_0, x = v_33_cast);
            tensor<int32, [4]> var_6959_begin_0 = const()[name = tensor<string, []>("op_6959_begin_0"), val = tensor<int32, [4]>([0, 1152, 0, 0])];
            tensor<int32, [4]> var_6959_end_0 = const()[name = tensor<string, []>("op_6959_end_0"), val = tensor<int32, [4]>([2, 1216, 1, 256])];
            tensor<bool, [4]> var_6959_end_mask_0 = const()[name = tensor<string, []>("op_6959_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6959_cast = slice_by_index(begin = var_6959_begin_0, end = var_6959_end_0, end_mask = var_6959_end_mask_0, x = v_33_cast);
            tensor<int32, [4]> var_6963_begin_0 = const()[name = tensor<string, []>("op_6963_begin_0"), val = tensor<int32, [4]>([0, 1216, 0, 0])];
            tensor<int32, [4]> var_6963_end_0 = const()[name = tensor<string, []>("op_6963_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<bool, [4]> var_6963_end_mask_0 = const()[name = tensor<string, []>("op_6963_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_6963_cast = slice_by_index(begin = var_6963_begin_0, end = var_6963_end_0, end_mask = var_6963_end_mask_0, x = v_33_cast);
            tensor<string, []> var_6967_equation_0 = const()[name = tensor<string, []>("op_6967_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_6967_cast = einsum(equation = var_6967_equation_0, values = (var_6809_cast, var_6726_cast));
            tensor<fp16, []> var_6968_to_fp16 = const()[name = tensor<string, []>("op_6968_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_441_cast = mul(x = var_6967_cast, y = var_6968_to_fp16);
            tensor<string, []> var_6971_equation_0 = const()[name = tensor<string, []>("op_6971_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_6971_cast = einsum(equation = var_6971_equation_0, values = (var_6813_cast, var_6730_cast));
            tensor<fp16, []> var_6972_to_fp16 = const()[name = tensor<string, []>("op_6972_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_443_cast = mul(x = var_6971_cast, y = var_6972_to_fp16);
            tensor<string, []> var_6975_equation_0 = const()[name = tensor<string, []>("op_6975_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_6975_cast = einsum(equation = var_6975_equation_0, values = (var_6817_cast, var_6734_cast));
            tensor<fp16, []> var_6976_to_fp16 = const()[name = tensor<string, []>("op_6976_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_445_cast = mul(x = var_6975_cast, y = var_6976_to_fp16);
            tensor<string, []> var_6979_equation_0 = const()[name = tensor<string, []>("op_6979_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_6979_cast = einsum(equation = var_6979_equation_0, values = (var_6821_cast, var_6738_cast));
            tensor<fp16, []> var_6980_to_fp16 = const()[name = tensor<string, []>("op_6980_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_447_cast = mul(x = var_6979_cast, y = var_6980_to_fp16);
            tensor<string, []> var_6983_equation_0 = const()[name = tensor<string, []>("op_6983_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_6983_cast = einsum(equation = var_6983_equation_0, values = (var_6825_cast, var_6742_cast));
            tensor<fp16, []> var_6984_to_fp16 = const()[name = tensor<string, []>("op_6984_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_449_cast = mul(x = var_6983_cast, y = var_6984_to_fp16);
            tensor<string, []> var_6987_equation_0 = const()[name = tensor<string, []>("op_6987_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_6987_cast = einsum(equation = var_6987_equation_0, values = (var_6829_cast, var_6746_cast));
            tensor<fp16, []> var_6988_to_fp16 = const()[name = tensor<string, []>("op_6988_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_451_cast = mul(x = var_6987_cast, y = var_6988_to_fp16);
            tensor<string, []> var_6991_equation_0 = const()[name = tensor<string, []>("op_6991_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_6991_cast = einsum(equation = var_6991_equation_0, values = (var_6833_cast, var_6750_cast));
            tensor<fp16, []> var_6992_to_fp16 = const()[name = tensor<string, []>("op_6992_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_453_cast = mul(x = var_6991_cast, y = var_6992_to_fp16);
            tensor<string, []> var_6995_equation_0 = const()[name = tensor<string, []>("op_6995_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_6995_cast = einsum(equation = var_6995_equation_0, values = (var_6837_cast, var_6754_cast));
            tensor<fp16, []> var_6996_to_fp16 = const()[name = tensor<string, []>("op_6996_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_455_cast = mul(x = var_6995_cast, y = var_6996_to_fp16);
            tensor<string, []> var_6999_equation_0 = const()[name = tensor<string, []>("op_6999_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_6999_cast = einsum(equation = var_6999_equation_0, values = (var_6841_cast, var_6758_cast));
            tensor<fp16, []> var_7000_to_fp16 = const()[name = tensor<string, []>("op_7000_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_457_cast = mul(x = var_6999_cast, y = var_7000_to_fp16);
            tensor<string, []> var_7003_equation_0 = const()[name = tensor<string, []>("op_7003_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_7003_cast = einsum(equation = var_7003_equation_0, values = (var_6845_cast, var_6762_cast));
            tensor<fp16, []> var_7004_to_fp16 = const()[name = tensor<string, []>("op_7004_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_459_cast = mul(x = var_7003_cast, y = var_7004_to_fp16);
            tensor<string, []> var_7007_equation_0 = const()[name = tensor<string, []>("op_7007_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_7007_cast = einsum(equation = var_7007_equation_0, values = (var_6849_cast, var_6766_cast));
            tensor<fp16, []> var_7008_to_fp16 = const()[name = tensor<string, []>("op_7008_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_461_cast = mul(x = var_7007_cast, y = var_7008_to_fp16);
            tensor<string, []> var_7011_equation_0 = const()[name = tensor<string, []>("op_7011_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_7011_cast = einsum(equation = var_7011_equation_0, values = (var_6853_cast, var_6770_cast));
            tensor<fp16, []> var_7012_to_fp16 = const()[name = tensor<string, []>("op_7012_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_463_cast = mul(x = var_7011_cast, y = var_7012_to_fp16);
            tensor<string, []> var_7015_equation_0 = const()[name = tensor<string, []>("op_7015_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_7015_cast = einsum(equation = var_7015_equation_0, values = (var_6857_cast, var_6774_cast));
            tensor<fp16, []> var_7016_to_fp16 = const()[name = tensor<string, []>("op_7016_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_465_cast = mul(x = var_7015_cast, y = var_7016_to_fp16);
            tensor<string, []> var_7019_equation_0 = const()[name = tensor<string, []>("op_7019_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_7019_cast = einsum(equation = var_7019_equation_0, values = (var_6861_cast, var_6778_cast));
            tensor<fp16, []> var_7020_to_fp16 = const()[name = tensor<string, []>("op_7020_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_467_cast = mul(x = var_7019_cast, y = var_7020_to_fp16);
            tensor<string, []> var_7023_equation_0 = const()[name = tensor<string, []>("op_7023_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_7023_cast = einsum(equation = var_7023_equation_0, values = (var_6865_cast, var_6782_cast));
            tensor<fp16, []> var_7024_to_fp16 = const()[name = tensor<string, []>("op_7024_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_469_cast = mul(x = var_7023_cast, y = var_7024_to_fp16);
            tensor<string, []> var_7027_equation_0 = const()[name = tensor<string, []>("op_7027_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_7027_cast = einsum(equation = var_7027_equation_0, values = (var_6869_cast, var_6786_cast));
            tensor<fp16, []> var_7028_to_fp16 = const()[name = tensor<string, []>("op_7028_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_471_cast = mul(x = var_7027_cast, y = var_7028_to_fp16);
            tensor<string, []> var_7031_equation_0 = const()[name = tensor<string, []>("op_7031_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_7031_cast = einsum(equation = var_7031_equation_0, values = (var_6873_cast, var_6790_cast));
            tensor<fp16, []> var_7032_to_fp16 = const()[name = tensor<string, []>("op_7032_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_473_cast = mul(x = var_7031_cast, y = var_7032_to_fp16);
            tensor<string, []> var_7035_equation_0 = const()[name = tensor<string, []>("op_7035_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_7035_cast = einsum(equation = var_7035_equation_0, values = (var_6877_cast, var_6794_cast));
            tensor<fp16, []> var_7036_to_fp16 = const()[name = tensor<string, []>("op_7036_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_475_cast = mul(x = var_7035_cast, y = var_7036_to_fp16);
            tensor<string, []> var_7039_equation_0 = const()[name = tensor<string, []>("op_7039_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_7039_cast = einsum(equation = var_7039_equation_0, values = (var_6881_cast, var_6798_cast));
            tensor<fp16, []> var_7040_to_fp16 = const()[name = tensor<string, []>("op_7040_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_477_cast = mul(x = var_7039_cast, y = var_7040_to_fp16);
            tensor<string, []> var_7043_equation_0 = const()[name = tensor<string, []>("op_7043_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_7043_cast = einsum(equation = var_7043_equation_0, values = (var_6885_cast, var_6802_cast));
            tensor<fp16, []> var_7044_to_fp16 = const()[name = tensor<string, []>("op_7044_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_479_cast = mul(x = var_7043_cast, y = var_7044_to_fp16);
            tensor<fp16, [2, 256, 1, 256]> var_7046_cast = softmax(axis = var_5599, x = aw_441_cast);
            tensor<fp16, [2, 256, 1, 256]> var_7047_cast = softmax(axis = var_5599, x = aw_443_cast);
            tensor<fp16, [2, 256, 1, 256]> var_7048_cast = softmax(axis = var_5599, x = aw_445_cast);
            tensor<fp16, [2, 256, 1, 256]> var_7049_cast = softmax(axis = var_5599, x = aw_447_cast);
            tensor<fp16, [2, 256, 1, 256]> var_7050_cast = softmax(axis = var_5599, x = aw_449_cast);
            tensor<fp16, [2, 256, 1, 256]> var_7051_cast = softmax(axis = var_5599, x = aw_451_cast);
            tensor<fp16, [2, 256, 1, 256]> var_7052_cast = softmax(axis = var_5599, x = aw_453_cast);
            tensor<fp16, [2, 256, 1, 256]> var_7053_cast = softmax(axis = var_5599, x = aw_455_cast);
            tensor<fp16, [2, 256, 1, 256]> var_7054_cast = softmax(axis = var_5599, x = aw_457_cast);
            tensor<fp16, [2, 256, 1, 256]> var_7055_cast = softmax(axis = var_5599, x = aw_459_cast);
            tensor<fp16, [2, 256, 1, 256]> var_7056_cast = softmax(axis = var_5599, x = aw_461_cast);
            tensor<fp16, [2, 256, 1, 256]> var_7057_cast = softmax(axis = var_5599, x = aw_463_cast);
            tensor<fp16, [2, 256, 1, 256]> var_7058_cast = softmax(axis = var_5599, x = aw_465_cast);
            tensor<fp16, [2, 256, 1, 256]> var_7059_cast = softmax(axis = var_5599, x = aw_467_cast);
            tensor<fp16, [2, 256, 1, 256]> var_7060_cast = softmax(axis = var_5599, x = aw_469_cast);
            tensor<fp16, [2, 256, 1, 256]> var_7061_cast = softmax(axis = var_5599, x = aw_471_cast);
            tensor<fp16, [2, 256, 1, 256]> var_7062_cast = softmax(axis = var_5599, x = aw_473_cast);
            tensor<fp16, [2, 256, 1, 256]> var_7063_cast = softmax(axis = var_5599, x = aw_475_cast);
            tensor<fp16, [2, 256, 1, 256]> var_7064_cast = softmax(axis = var_5599, x = aw_477_cast);
            tensor<fp16, [2, 256, 1, 256]> var_7065_cast = softmax(axis = var_5599, x = aw_479_cast);
            tensor<string, []> var_7067_equation_0 = const()[name = tensor<string, []>("op_7067_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_7067_cast = einsum(equation = var_7067_equation_0, values = (var_6887_cast, var_7046_cast));
            tensor<string, []> var_7069_equation_0 = const()[name = tensor<string, []>("op_7069_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_7069_cast = einsum(equation = var_7069_equation_0, values = (var_6891_cast, var_7047_cast));
            tensor<string, []> var_7071_equation_0 = const()[name = tensor<string, []>("op_7071_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_7071_cast = einsum(equation = var_7071_equation_0, values = (var_6895_cast, var_7048_cast));
            tensor<string, []> var_7073_equation_0 = const()[name = tensor<string, []>("op_7073_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_7073_cast = einsum(equation = var_7073_equation_0, values = (var_6899_cast, var_7049_cast));
            tensor<string, []> var_7075_equation_0 = const()[name = tensor<string, []>("op_7075_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_7075_cast = einsum(equation = var_7075_equation_0, values = (var_6903_cast, var_7050_cast));
            tensor<string, []> var_7077_equation_0 = const()[name = tensor<string, []>("op_7077_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_7077_cast = einsum(equation = var_7077_equation_0, values = (var_6907_cast, var_7051_cast));
            tensor<string, []> var_7079_equation_0 = const()[name = tensor<string, []>("op_7079_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_7079_cast = einsum(equation = var_7079_equation_0, values = (var_6911_cast, var_7052_cast));
            tensor<string, []> var_7081_equation_0 = const()[name = tensor<string, []>("op_7081_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_7081_cast = einsum(equation = var_7081_equation_0, values = (var_6915_cast, var_7053_cast));
            tensor<string, []> var_7083_equation_0 = const()[name = tensor<string, []>("op_7083_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_7083_cast = einsum(equation = var_7083_equation_0, values = (var_6919_cast, var_7054_cast));
            tensor<string, []> var_7085_equation_0 = const()[name = tensor<string, []>("op_7085_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_7085_cast = einsum(equation = var_7085_equation_0, values = (var_6923_cast, var_7055_cast));
            tensor<string, []> var_7087_equation_0 = const()[name = tensor<string, []>("op_7087_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_7087_cast = einsum(equation = var_7087_equation_0, values = (var_6927_cast, var_7056_cast));
            tensor<string, []> var_7089_equation_0 = const()[name = tensor<string, []>("op_7089_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_7089_cast = einsum(equation = var_7089_equation_0, values = (var_6931_cast, var_7057_cast));
            tensor<string, []> var_7091_equation_0 = const()[name = tensor<string, []>("op_7091_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_7091_cast = einsum(equation = var_7091_equation_0, values = (var_6935_cast, var_7058_cast));
            tensor<string, []> var_7093_equation_0 = const()[name = tensor<string, []>("op_7093_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_7093_cast = einsum(equation = var_7093_equation_0, values = (var_6939_cast, var_7059_cast));
            tensor<string, []> var_7095_equation_0 = const()[name = tensor<string, []>("op_7095_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_7095_cast = einsum(equation = var_7095_equation_0, values = (var_6943_cast, var_7060_cast));
            tensor<string, []> var_7097_equation_0 = const()[name = tensor<string, []>("op_7097_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_7097_cast = einsum(equation = var_7097_equation_0, values = (var_6947_cast, var_7061_cast));
            tensor<string, []> var_7099_equation_0 = const()[name = tensor<string, []>("op_7099_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_7099_cast = einsum(equation = var_7099_equation_0, values = (var_6951_cast, var_7062_cast));
            tensor<string, []> var_7101_equation_0 = const()[name = tensor<string, []>("op_7101_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_7101_cast = einsum(equation = var_7101_equation_0, values = (var_6955_cast, var_7063_cast));
            tensor<string, []> var_7103_equation_0 = const()[name = tensor<string, []>("op_7103_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_7103_cast = einsum(equation = var_7103_equation_0, values = (var_6959_cast, var_7064_cast));
            tensor<string, []> var_7105_equation_0 = const()[name = tensor<string, []>("op_7105_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_7105_cast = einsum(equation = var_7105_equation_0, values = (var_6963_cast, var_7065_cast));
            tensor<bool, []> input_327_interleave_0 = const()[name = tensor<string, []>("input_327_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 1280, 1, 256]> input_327_cast = concat(axis = var_5599, interleave = input_327_interleave_0, values = (var_7067_cast, var_7069_cast, var_7071_cast, var_7073_cast, var_7075_cast, var_7077_cast, var_7079_cast, var_7081_cast, var_7083_cast, var_7085_cast, var_7087_cast, var_7089_cast, var_7091_cast, var_7093_cast, var_7095_cast, var_7097_cast, var_7099_cast, var_7101_cast, var_7103_cast, var_7105_cast));
            tensor<int32, [2]> var_7111 = const()[name = tensor<string, []>("op_7111"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7113 = const()[name = tensor<string, []>("op_7113"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_7115_pad_type_0 = const()[name = tensor<string, []>("op_7115_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_7115_pad_0 = const()[name = tensor<string, []>("op_7115_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(415053568)))];
            tensor<fp16, [1280]> up_blocks_1_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(418330432)))];
            tensor<fp16, [2, 1280, 1, 256]> var_7115_cast = conv(bias = up_blocks_1_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16, dilations = var_7113, groups = var_5599, pad = var_7115_pad_0, pad_type = var_7115_pad_type_0, strides = var_7111, weight = up_blocks_1_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16, x = input_327_cast);
            tensor<fp16, [2, 1280, 1, 256]> inputs_51_cast = add(x = var_7115_cast, y = inputs_49_cast);
            tensor<int32, [1]> var_7119 = const()[name = tensor<string, []>("op_7119"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> channels_mean_51_cast = reduce_mean(axes = var_7119, keep_dims = var_5594, x = inputs_51_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_51_cast = sub(x = inputs_51_cast, y = channels_mean_51_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_sq_51_cast = mul(x = zero_mean_51_cast, y = zero_mean_51_cast);
            tensor<int32, [1]> var_7123 = const()[name = tensor<string, []>("op_7123"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> var_7124_cast = reduce_mean(axes = var_7123, keep_dims = var_5594, x = zero_mean_sq_51_cast);
            tensor<fp16, []> var_7125_to_fp16 = const()[name = tensor<string, []>("op_7125_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 256]> var_7126_cast = add(x = var_7124_cast, y = var_7125_to_fp16);
            tensor<fp16, []> denom_51_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_51_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 256]> denom_51_cast = rsqrt(epsilon = denom_51_epsilon_0_to_fp16, x = var_7126_cast);
            tensor<fp16, [2, 1280, 1, 256]> out_51_cast = mul(x = zero_mean_51_cast, y = denom_51_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_7130_to_fp16 = const()[name = tensor<string, []>("op_7130_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(418333056)))];
            tensor<fp16, [2, 1280, 1, 256]> var_7131_cast = add(x = out_51_cast, y = var_7130_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_7133_to_fp16 = const()[name = tensor<string, []>("op_7133_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(418335680)))];
            tensor<fp16, [2, 1280, 1, 256]> hidden_states_189_cast = mul(x = var_7131_cast, y = var_7133_to_fp16);
            tensor<int32, [2]> var_7140 = const()[name = tensor<string, []>("op_7140"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7142 = const()[name = tensor<string, []>("op_7142"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_35_pad_type_0 = const()[name = tensor<string, []>("q_35_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_35_pad_0 = const()[name = tensor<string, []>("q_35_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(418338304)))];
            tensor<fp16, [2, 1280, 1, 256]> q_35_cast = conv(dilations = var_7142, groups = var_5599, pad = q_35_pad_0, pad_type = q_35_pad_type_0, strides = var_7140, weight = up_blocks_1_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16, x = hidden_states_189_cast);
            tensor<int32, [2]> var_7146 = const()[name = tensor<string, []>("op_7146"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7148 = const()[name = tensor<string, []>("op_7148"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_69_pad_type_0 = const()[name = tensor<string, []>("k_69_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_69_pad_0 = const()[name = tensor<string, []>("k_69_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1024, 1, 1]> up_blocks_1_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16"), val = tensor<fp16, [1280, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(421615168)))];
            tensor<fp16, [2, 1280, 1, 77]> k_69_cast = conv(dilations = var_7148, groups = var_5599, pad = k_69_pad_0, pad_type = k_69_pad_type_0, strides = var_7146, weight = up_blocks_1_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [2]> var_7152 = const()[name = tensor<string, []>("op_7152"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7154 = const()[name = tensor<string, []>("op_7154"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_35_pad_type_0 = const()[name = tensor<string, []>("v_35_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_35_pad_0 = const()[name = tensor<string, []>("v_35_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1024, 1, 1]> up_blocks_1_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16"), val = tensor<fp16, [1280, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(424236672)))];
            tensor<fp16, [2, 1280, 1, 77]> v_35_cast = conv(dilations = var_7154, groups = var_5599, pad = v_35_pad_0, pad_type = v_35_pad_type_0, strides = var_7152, weight = up_blocks_1_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [4]> var_7158_begin_0 = const()[name = tensor<string, []>("op_7158_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_7158_end_0 = const()[name = tensor<string, []>("op_7158_end_0"), val = tensor<int32, [4]>([2, 64, 1, 256])];
            tensor<bool, [4]> var_7158_end_mask_0 = const()[name = tensor<string, []>("op_7158_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7158_cast = slice_by_index(begin = var_7158_begin_0, end = var_7158_end_0, end_mask = var_7158_end_mask_0, x = q_35_cast);
            tensor<int32, [4]> var_7162_begin_0 = const()[name = tensor<string, []>("op_7162_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_7162_end_0 = const()[name = tensor<string, []>("op_7162_end_0"), val = tensor<int32, [4]>([2, 128, 1, 256])];
            tensor<bool, [4]> var_7162_end_mask_0 = const()[name = tensor<string, []>("op_7162_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7162_cast = slice_by_index(begin = var_7162_begin_0, end = var_7162_end_0, end_mask = var_7162_end_mask_0, x = q_35_cast);
            tensor<int32, [4]> var_7166_begin_0 = const()[name = tensor<string, []>("op_7166_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_7166_end_0 = const()[name = tensor<string, []>("op_7166_end_0"), val = tensor<int32, [4]>([2, 192, 1, 256])];
            tensor<bool, [4]> var_7166_end_mask_0 = const()[name = tensor<string, []>("op_7166_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7166_cast = slice_by_index(begin = var_7166_begin_0, end = var_7166_end_0, end_mask = var_7166_end_mask_0, x = q_35_cast);
            tensor<int32, [4]> var_7170_begin_0 = const()[name = tensor<string, []>("op_7170_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_7170_end_0 = const()[name = tensor<string, []>("op_7170_end_0"), val = tensor<int32, [4]>([2, 256, 1, 256])];
            tensor<bool, [4]> var_7170_end_mask_0 = const()[name = tensor<string, []>("op_7170_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7170_cast = slice_by_index(begin = var_7170_begin_0, end = var_7170_end_0, end_mask = var_7170_end_mask_0, x = q_35_cast);
            tensor<int32, [4]> var_7174_begin_0 = const()[name = tensor<string, []>("op_7174_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_7174_end_0 = const()[name = tensor<string, []>("op_7174_end_0"), val = tensor<int32, [4]>([2, 320, 1, 256])];
            tensor<bool, [4]> var_7174_end_mask_0 = const()[name = tensor<string, []>("op_7174_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7174_cast = slice_by_index(begin = var_7174_begin_0, end = var_7174_end_0, end_mask = var_7174_end_mask_0, x = q_35_cast);
            tensor<int32, [4]> var_7178_begin_0 = const()[name = tensor<string, []>("op_7178_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_7178_end_0 = const()[name = tensor<string, []>("op_7178_end_0"), val = tensor<int32, [4]>([2, 384, 1, 256])];
            tensor<bool, [4]> var_7178_end_mask_0 = const()[name = tensor<string, []>("op_7178_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7178_cast = slice_by_index(begin = var_7178_begin_0, end = var_7178_end_0, end_mask = var_7178_end_mask_0, x = q_35_cast);
            tensor<int32, [4]> var_7182_begin_0 = const()[name = tensor<string, []>("op_7182_begin_0"), val = tensor<int32, [4]>([0, 384, 0, 0])];
            tensor<int32, [4]> var_7182_end_0 = const()[name = tensor<string, []>("op_7182_end_0"), val = tensor<int32, [4]>([2, 448, 1, 256])];
            tensor<bool, [4]> var_7182_end_mask_0 = const()[name = tensor<string, []>("op_7182_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7182_cast = slice_by_index(begin = var_7182_begin_0, end = var_7182_end_0, end_mask = var_7182_end_mask_0, x = q_35_cast);
            tensor<int32, [4]> var_7186_begin_0 = const()[name = tensor<string, []>("op_7186_begin_0"), val = tensor<int32, [4]>([0, 448, 0, 0])];
            tensor<int32, [4]> var_7186_end_0 = const()[name = tensor<string, []>("op_7186_end_0"), val = tensor<int32, [4]>([2, 512, 1, 256])];
            tensor<bool, [4]> var_7186_end_mask_0 = const()[name = tensor<string, []>("op_7186_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7186_cast = slice_by_index(begin = var_7186_begin_0, end = var_7186_end_0, end_mask = var_7186_end_mask_0, x = q_35_cast);
            tensor<int32, [4]> var_7190_begin_0 = const()[name = tensor<string, []>("op_7190_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_7190_end_0 = const()[name = tensor<string, []>("op_7190_end_0"), val = tensor<int32, [4]>([2, 576, 1, 256])];
            tensor<bool, [4]> var_7190_end_mask_0 = const()[name = tensor<string, []>("op_7190_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7190_cast = slice_by_index(begin = var_7190_begin_0, end = var_7190_end_0, end_mask = var_7190_end_mask_0, x = q_35_cast);
            tensor<int32, [4]> var_7194_begin_0 = const()[name = tensor<string, []>("op_7194_begin_0"), val = tensor<int32, [4]>([0, 576, 0, 0])];
            tensor<int32, [4]> var_7194_end_0 = const()[name = tensor<string, []>("op_7194_end_0"), val = tensor<int32, [4]>([2, 640, 1, 256])];
            tensor<bool, [4]> var_7194_end_mask_0 = const()[name = tensor<string, []>("op_7194_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7194_cast = slice_by_index(begin = var_7194_begin_0, end = var_7194_end_0, end_mask = var_7194_end_mask_0, x = q_35_cast);
            tensor<int32, [4]> var_7198_begin_0 = const()[name = tensor<string, []>("op_7198_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_7198_end_0 = const()[name = tensor<string, []>("op_7198_end_0"), val = tensor<int32, [4]>([2, 704, 1, 256])];
            tensor<bool, [4]> var_7198_end_mask_0 = const()[name = tensor<string, []>("op_7198_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7198_cast = slice_by_index(begin = var_7198_begin_0, end = var_7198_end_0, end_mask = var_7198_end_mask_0, x = q_35_cast);
            tensor<int32, [4]> var_7202_begin_0 = const()[name = tensor<string, []>("op_7202_begin_0"), val = tensor<int32, [4]>([0, 704, 0, 0])];
            tensor<int32, [4]> var_7202_end_0 = const()[name = tensor<string, []>("op_7202_end_0"), val = tensor<int32, [4]>([2, 768, 1, 256])];
            tensor<bool, [4]> var_7202_end_mask_0 = const()[name = tensor<string, []>("op_7202_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7202_cast = slice_by_index(begin = var_7202_begin_0, end = var_7202_end_0, end_mask = var_7202_end_mask_0, x = q_35_cast);
            tensor<int32, [4]> var_7206_begin_0 = const()[name = tensor<string, []>("op_7206_begin_0"), val = tensor<int32, [4]>([0, 768, 0, 0])];
            tensor<int32, [4]> var_7206_end_0 = const()[name = tensor<string, []>("op_7206_end_0"), val = tensor<int32, [4]>([2, 832, 1, 256])];
            tensor<bool, [4]> var_7206_end_mask_0 = const()[name = tensor<string, []>("op_7206_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7206_cast = slice_by_index(begin = var_7206_begin_0, end = var_7206_end_0, end_mask = var_7206_end_mask_0, x = q_35_cast);
            tensor<int32, [4]> var_7210_begin_0 = const()[name = tensor<string, []>("op_7210_begin_0"), val = tensor<int32, [4]>([0, 832, 0, 0])];
            tensor<int32, [4]> var_7210_end_0 = const()[name = tensor<string, []>("op_7210_end_0"), val = tensor<int32, [4]>([2, 896, 1, 256])];
            tensor<bool, [4]> var_7210_end_mask_0 = const()[name = tensor<string, []>("op_7210_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7210_cast = slice_by_index(begin = var_7210_begin_0, end = var_7210_end_0, end_mask = var_7210_end_mask_0, x = q_35_cast);
            tensor<int32, [4]> var_7214_begin_0 = const()[name = tensor<string, []>("op_7214_begin_0"), val = tensor<int32, [4]>([0, 896, 0, 0])];
            tensor<int32, [4]> var_7214_end_0 = const()[name = tensor<string, []>("op_7214_end_0"), val = tensor<int32, [4]>([2, 960, 1, 256])];
            tensor<bool, [4]> var_7214_end_mask_0 = const()[name = tensor<string, []>("op_7214_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7214_cast = slice_by_index(begin = var_7214_begin_0, end = var_7214_end_0, end_mask = var_7214_end_mask_0, x = q_35_cast);
            tensor<int32, [4]> var_7218_begin_0 = const()[name = tensor<string, []>("op_7218_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_7218_end_0 = const()[name = tensor<string, []>("op_7218_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 256])];
            tensor<bool, [4]> var_7218_end_mask_0 = const()[name = tensor<string, []>("op_7218_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7218_cast = slice_by_index(begin = var_7218_begin_0, end = var_7218_end_0, end_mask = var_7218_end_mask_0, x = q_35_cast);
            tensor<int32, [4]> var_7222_begin_0 = const()[name = tensor<string, []>("op_7222_begin_0"), val = tensor<int32, [4]>([0, 1024, 0, 0])];
            tensor<int32, [4]> var_7222_end_0 = const()[name = tensor<string, []>("op_7222_end_0"), val = tensor<int32, [4]>([2, 1088, 1, 256])];
            tensor<bool, [4]> var_7222_end_mask_0 = const()[name = tensor<string, []>("op_7222_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7222_cast = slice_by_index(begin = var_7222_begin_0, end = var_7222_end_0, end_mask = var_7222_end_mask_0, x = q_35_cast);
            tensor<int32, [4]> var_7226_begin_0 = const()[name = tensor<string, []>("op_7226_begin_0"), val = tensor<int32, [4]>([0, 1088, 0, 0])];
            tensor<int32, [4]> var_7226_end_0 = const()[name = tensor<string, []>("op_7226_end_0"), val = tensor<int32, [4]>([2, 1152, 1, 256])];
            tensor<bool, [4]> var_7226_end_mask_0 = const()[name = tensor<string, []>("op_7226_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7226_cast = slice_by_index(begin = var_7226_begin_0, end = var_7226_end_0, end_mask = var_7226_end_mask_0, x = q_35_cast);
            tensor<int32, [4]> var_7230_begin_0 = const()[name = tensor<string, []>("op_7230_begin_0"), val = tensor<int32, [4]>([0, 1152, 0, 0])];
            tensor<int32, [4]> var_7230_end_0 = const()[name = tensor<string, []>("op_7230_end_0"), val = tensor<int32, [4]>([2, 1216, 1, 256])];
            tensor<bool, [4]> var_7230_end_mask_0 = const()[name = tensor<string, []>("op_7230_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7230_cast = slice_by_index(begin = var_7230_begin_0, end = var_7230_end_0, end_mask = var_7230_end_mask_0, x = q_35_cast);
            tensor<int32, [4]> var_7234_begin_0 = const()[name = tensor<string, []>("op_7234_begin_0"), val = tensor<int32, [4]>([0, 1216, 0, 0])];
            tensor<int32, [4]> var_7234_end_0 = const()[name = tensor<string, []>("op_7234_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<bool, [4]> var_7234_end_mask_0 = const()[name = tensor<string, []>("op_7234_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7234_cast = slice_by_index(begin = var_7234_begin_0, end = var_7234_end_0, end_mask = var_7234_end_mask_0, x = q_35_cast);
            tensor<int32, [4]> k_71_perm_0 = const()[name = tensor<string, []>("k_71_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_7241_begin_0 = const()[name = tensor<string, []>("op_7241_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_7241_end_0 = const()[name = tensor<string, []>("op_7241_end_0"), val = tensor<int32, [4]>([2, 77, 1, 64])];
            tensor<bool, [4]> var_7241_end_mask_0 = const()[name = tensor<string, []>("op_7241_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 1280]> transpose_14 = transpose(perm = k_71_perm_0, x = k_69_cast);
            tensor<fp16, [2, 77, 1, 64]> var_7241_cast = slice_by_index(begin = var_7241_begin_0, end = var_7241_end_0, end_mask = var_7241_end_mask_0, x = transpose_14);
            tensor<int32, [4]> var_7245_begin_0 = const()[name = tensor<string, []>("op_7245_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 64])];
            tensor<int32, [4]> var_7245_end_0 = const()[name = tensor<string, []>("op_7245_end_0"), val = tensor<int32, [4]>([2, 77, 1, 128])];
            tensor<bool, [4]> var_7245_end_mask_0 = const()[name = tensor<string, []>("op_7245_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_7245_cast = slice_by_index(begin = var_7245_begin_0, end = var_7245_end_0, end_mask = var_7245_end_mask_0, x = transpose_14);
            tensor<int32, [4]> var_7249_begin_0 = const()[name = tensor<string, []>("op_7249_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 128])];
            tensor<int32, [4]> var_7249_end_0 = const()[name = tensor<string, []>("op_7249_end_0"), val = tensor<int32, [4]>([2, 77, 1, 192])];
            tensor<bool, [4]> var_7249_end_mask_0 = const()[name = tensor<string, []>("op_7249_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_7249_cast = slice_by_index(begin = var_7249_begin_0, end = var_7249_end_0, end_mask = var_7249_end_mask_0, x = transpose_14);
            tensor<int32, [4]> var_7253_begin_0 = const()[name = tensor<string, []>("op_7253_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 192])];
            tensor<int32, [4]> var_7253_end_0 = const()[name = tensor<string, []>("op_7253_end_0"), val = tensor<int32, [4]>([2, 77, 1, 256])];
            tensor<bool, [4]> var_7253_end_mask_0 = const()[name = tensor<string, []>("op_7253_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_7253_cast = slice_by_index(begin = var_7253_begin_0, end = var_7253_end_0, end_mask = var_7253_end_mask_0, x = transpose_14);
            tensor<int32, [4]> var_7257_begin_0 = const()[name = tensor<string, []>("op_7257_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 256])];
            tensor<int32, [4]> var_7257_end_0 = const()[name = tensor<string, []>("op_7257_end_0"), val = tensor<int32, [4]>([2, 77, 1, 320])];
            tensor<bool, [4]> var_7257_end_mask_0 = const()[name = tensor<string, []>("op_7257_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_7257_cast = slice_by_index(begin = var_7257_begin_0, end = var_7257_end_0, end_mask = var_7257_end_mask_0, x = transpose_14);
            tensor<int32, [4]> var_7261_begin_0 = const()[name = tensor<string, []>("op_7261_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_7261_end_0 = const()[name = tensor<string, []>("op_7261_end_0"), val = tensor<int32, [4]>([2, 77, 1, 384])];
            tensor<bool, [4]> var_7261_end_mask_0 = const()[name = tensor<string, []>("op_7261_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_7261_cast = slice_by_index(begin = var_7261_begin_0, end = var_7261_end_0, end_mask = var_7261_end_mask_0, x = transpose_14);
            tensor<int32, [4]> var_7265_begin_0 = const()[name = tensor<string, []>("op_7265_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 384])];
            tensor<int32, [4]> var_7265_end_0 = const()[name = tensor<string, []>("op_7265_end_0"), val = tensor<int32, [4]>([2, 77, 1, 448])];
            tensor<bool, [4]> var_7265_end_mask_0 = const()[name = tensor<string, []>("op_7265_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_7265_cast = slice_by_index(begin = var_7265_begin_0, end = var_7265_end_0, end_mask = var_7265_end_mask_0, x = transpose_14);
            tensor<int32, [4]> var_7269_begin_0 = const()[name = tensor<string, []>("op_7269_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 448])];
            tensor<int32, [4]> var_7269_end_0 = const()[name = tensor<string, []>("op_7269_end_0"), val = tensor<int32, [4]>([2, 77, 1, 512])];
            tensor<bool, [4]> var_7269_end_mask_0 = const()[name = tensor<string, []>("op_7269_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_7269_cast = slice_by_index(begin = var_7269_begin_0, end = var_7269_end_0, end_mask = var_7269_end_mask_0, x = transpose_14);
            tensor<int32, [4]> var_7273_begin_0 = const()[name = tensor<string, []>("op_7273_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 512])];
            tensor<int32, [4]> var_7273_end_0 = const()[name = tensor<string, []>("op_7273_end_0"), val = tensor<int32, [4]>([2, 77, 1, 576])];
            tensor<bool, [4]> var_7273_end_mask_0 = const()[name = tensor<string, []>("op_7273_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_7273_cast = slice_by_index(begin = var_7273_begin_0, end = var_7273_end_0, end_mask = var_7273_end_mask_0, x = transpose_14);
            tensor<int32, [4]> var_7277_begin_0 = const()[name = tensor<string, []>("op_7277_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 576])];
            tensor<int32, [4]> var_7277_end_0 = const()[name = tensor<string, []>("op_7277_end_0"), val = tensor<int32, [4]>([2, 77, 1, 640])];
            tensor<bool, [4]> var_7277_end_mask_0 = const()[name = tensor<string, []>("op_7277_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_7277_cast = slice_by_index(begin = var_7277_begin_0, end = var_7277_end_0, end_mask = var_7277_end_mask_0, x = transpose_14);
            tensor<int32, [4]> var_7281_begin_0 = const()[name = tensor<string, []>("op_7281_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 640])];
            tensor<int32, [4]> var_7281_end_0 = const()[name = tensor<string, []>("op_7281_end_0"), val = tensor<int32, [4]>([2, 77, 1, 704])];
            tensor<bool, [4]> var_7281_end_mask_0 = const()[name = tensor<string, []>("op_7281_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_7281_cast = slice_by_index(begin = var_7281_begin_0, end = var_7281_end_0, end_mask = var_7281_end_mask_0, x = transpose_14);
            tensor<int32, [4]> var_7285_begin_0 = const()[name = tensor<string, []>("op_7285_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 704])];
            tensor<int32, [4]> var_7285_end_0 = const()[name = tensor<string, []>("op_7285_end_0"), val = tensor<int32, [4]>([2, 77, 1, 768])];
            tensor<bool, [4]> var_7285_end_mask_0 = const()[name = tensor<string, []>("op_7285_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_7285_cast = slice_by_index(begin = var_7285_begin_0, end = var_7285_end_0, end_mask = var_7285_end_mask_0, x = transpose_14);
            tensor<int32, [4]> var_7289_begin_0 = const()[name = tensor<string, []>("op_7289_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 768])];
            tensor<int32, [4]> var_7289_end_0 = const()[name = tensor<string, []>("op_7289_end_0"), val = tensor<int32, [4]>([2, 77, 1, 832])];
            tensor<bool, [4]> var_7289_end_mask_0 = const()[name = tensor<string, []>("op_7289_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_7289_cast = slice_by_index(begin = var_7289_begin_0, end = var_7289_end_0, end_mask = var_7289_end_mask_0, x = transpose_14);
            tensor<int32, [4]> var_7293_begin_0 = const()[name = tensor<string, []>("op_7293_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 832])];
            tensor<int32, [4]> var_7293_end_0 = const()[name = tensor<string, []>("op_7293_end_0"), val = tensor<int32, [4]>([2, 77, 1, 896])];
            tensor<bool, [4]> var_7293_end_mask_0 = const()[name = tensor<string, []>("op_7293_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_7293_cast = slice_by_index(begin = var_7293_begin_0, end = var_7293_end_0, end_mask = var_7293_end_mask_0, x = transpose_14);
            tensor<int32, [4]> var_7297_begin_0 = const()[name = tensor<string, []>("op_7297_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 896])];
            tensor<int32, [4]> var_7297_end_0 = const()[name = tensor<string, []>("op_7297_end_0"), val = tensor<int32, [4]>([2, 77, 1, 960])];
            tensor<bool, [4]> var_7297_end_mask_0 = const()[name = tensor<string, []>("op_7297_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_7297_cast = slice_by_index(begin = var_7297_begin_0, end = var_7297_end_0, end_mask = var_7297_end_mask_0, x = transpose_14);
            tensor<int32, [4]> var_7301_begin_0 = const()[name = tensor<string, []>("op_7301_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 960])];
            tensor<int32, [4]> var_7301_end_0 = const()[name = tensor<string, []>("op_7301_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1024])];
            tensor<bool, [4]> var_7301_end_mask_0 = const()[name = tensor<string, []>("op_7301_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_7301_cast = slice_by_index(begin = var_7301_begin_0, end = var_7301_end_0, end_mask = var_7301_end_mask_0, x = transpose_14);
            tensor<int32, [4]> var_7305_begin_0 = const()[name = tensor<string, []>("op_7305_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1024])];
            tensor<int32, [4]> var_7305_end_0 = const()[name = tensor<string, []>("op_7305_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1088])];
            tensor<bool, [4]> var_7305_end_mask_0 = const()[name = tensor<string, []>("op_7305_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_7305_cast = slice_by_index(begin = var_7305_begin_0, end = var_7305_end_0, end_mask = var_7305_end_mask_0, x = transpose_14);
            tensor<int32, [4]> var_7309_begin_0 = const()[name = tensor<string, []>("op_7309_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1088])];
            tensor<int32, [4]> var_7309_end_0 = const()[name = tensor<string, []>("op_7309_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1152])];
            tensor<bool, [4]> var_7309_end_mask_0 = const()[name = tensor<string, []>("op_7309_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_7309_cast = slice_by_index(begin = var_7309_begin_0, end = var_7309_end_0, end_mask = var_7309_end_mask_0, x = transpose_14);
            tensor<int32, [4]> var_7313_begin_0 = const()[name = tensor<string, []>("op_7313_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1152])];
            tensor<int32, [4]> var_7313_end_0 = const()[name = tensor<string, []>("op_7313_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1216])];
            tensor<bool, [4]> var_7313_end_mask_0 = const()[name = tensor<string, []>("op_7313_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_7313_cast = slice_by_index(begin = var_7313_begin_0, end = var_7313_end_0, end_mask = var_7313_end_mask_0, x = transpose_14);
            tensor<int32, [4]> var_7317_begin_0 = const()[name = tensor<string, []>("op_7317_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1216])];
            tensor<int32, [4]> var_7317_end_0 = const()[name = tensor<string, []>("op_7317_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1280])];
            tensor<bool, [4]> var_7317_end_mask_0 = const()[name = tensor<string, []>("op_7317_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_7317_cast = slice_by_index(begin = var_7317_begin_0, end = var_7317_end_0, end_mask = var_7317_end_mask_0, x = transpose_14);
            tensor<int32, [4]> var_7319_begin_0 = const()[name = tensor<string, []>("op_7319_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_7319_end_0 = const()[name = tensor<string, []>("op_7319_end_0"), val = tensor<int32, [4]>([2, 64, 1, 77])];
            tensor<bool, [4]> var_7319_end_mask_0 = const()[name = tensor<string, []>("op_7319_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_7319_cast = slice_by_index(begin = var_7319_begin_0, end = var_7319_end_0, end_mask = var_7319_end_mask_0, x = v_35_cast);
            tensor<int32, [4]> var_7323_begin_0 = const()[name = tensor<string, []>("op_7323_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_7323_end_0 = const()[name = tensor<string, []>("op_7323_end_0"), val = tensor<int32, [4]>([2, 128, 1, 77])];
            tensor<bool, [4]> var_7323_end_mask_0 = const()[name = tensor<string, []>("op_7323_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_7323_cast = slice_by_index(begin = var_7323_begin_0, end = var_7323_end_0, end_mask = var_7323_end_mask_0, x = v_35_cast);
            tensor<int32, [4]> var_7327_begin_0 = const()[name = tensor<string, []>("op_7327_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_7327_end_0 = const()[name = tensor<string, []>("op_7327_end_0"), val = tensor<int32, [4]>([2, 192, 1, 77])];
            tensor<bool, [4]> var_7327_end_mask_0 = const()[name = tensor<string, []>("op_7327_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_7327_cast = slice_by_index(begin = var_7327_begin_0, end = var_7327_end_0, end_mask = var_7327_end_mask_0, x = v_35_cast);
            tensor<int32, [4]> var_7331_begin_0 = const()[name = tensor<string, []>("op_7331_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_7331_end_0 = const()[name = tensor<string, []>("op_7331_end_0"), val = tensor<int32, [4]>([2, 256, 1, 77])];
            tensor<bool, [4]> var_7331_end_mask_0 = const()[name = tensor<string, []>("op_7331_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_7331_cast = slice_by_index(begin = var_7331_begin_0, end = var_7331_end_0, end_mask = var_7331_end_mask_0, x = v_35_cast);
            tensor<int32, [4]> var_7335_begin_0 = const()[name = tensor<string, []>("op_7335_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_7335_end_0 = const()[name = tensor<string, []>("op_7335_end_0"), val = tensor<int32, [4]>([2, 320, 1, 77])];
            tensor<bool, [4]> var_7335_end_mask_0 = const()[name = tensor<string, []>("op_7335_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_7335_cast = slice_by_index(begin = var_7335_begin_0, end = var_7335_end_0, end_mask = var_7335_end_mask_0, x = v_35_cast);
            tensor<int32, [4]> var_7339_begin_0 = const()[name = tensor<string, []>("op_7339_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_7339_end_0 = const()[name = tensor<string, []>("op_7339_end_0"), val = tensor<int32, [4]>([2, 384, 1, 77])];
            tensor<bool, [4]> var_7339_end_mask_0 = const()[name = tensor<string, []>("op_7339_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_7339_cast = slice_by_index(begin = var_7339_begin_0, end = var_7339_end_0, end_mask = var_7339_end_mask_0, x = v_35_cast);
            tensor<int32, [4]> var_7343_begin_0 = const()[name = tensor<string, []>("op_7343_begin_0"), val = tensor<int32, [4]>([0, 384, 0, 0])];
            tensor<int32, [4]> var_7343_end_0 = const()[name = tensor<string, []>("op_7343_end_0"), val = tensor<int32, [4]>([2, 448, 1, 77])];
            tensor<bool, [4]> var_7343_end_mask_0 = const()[name = tensor<string, []>("op_7343_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_7343_cast = slice_by_index(begin = var_7343_begin_0, end = var_7343_end_0, end_mask = var_7343_end_mask_0, x = v_35_cast);
            tensor<int32, [4]> var_7347_begin_0 = const()[name = tensor<string, []>("op_7347_begin_0"), val = tensor<int32, [4]>([0, 448, 0, 0])];
            tensor<int32, [4]> var_7347_end_0 = const()[name = tensor<string, []>("op_7347_end_0"), val = tensor<int32, [4]>([2, 512, 1, 77])];
            tensor<bool, [4]> var_7347_end_mask_0 = const()[name = tensor<string, []>("op_7347_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_7347_cast = slice_by_index(begin = var_7347_begin_0, end = var_7347_end_0, end_mask = var_7347_end_mask_0, x = v_35_cast);
            tensor<int32, [4]> var_7351_begin_0 = const()[name = tensor<string, []>("op_7351_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_7351_end_0 = const()[name = tensor<string, []>("op_7351_end_0"), val = tensor<int32, [4]>([2, 576, 1, 77])];
            tensor<bool, [4]> var_7351_end_mask_0 = const()[name = tensor<string, []>("op_7351_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_7351_cast = slice_by_index(begin = var_7351_begin_0, end = var_7351_end_0, end_mask = var_7351_end_mask_0, x = v_35_cast);
            tensor<int32, [4]> var_7355_begin_0 = const()[name = tensor<string, []>("op_7355_begin_0"), val = tensor<int32, [4]>([0, 576, 0, 0])];
            tensor<int32, [4]> var_7355_end_0 = const()[name = tensor<string, []>("op_7355_end_0"), val = tensor<int32, [4]>([2, 640, 1, 77])];
            tensor<bool, [4]> var_7355_end_mask_0 = const()[name = tensor<string, []>("op_7355_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_7355_cast = slice_by_index(begin = var_7355_begin_0, end = var_7355_end_0, end_mask = var_7355_end_mask_0, x = v_35_cast);
            tensor<int32, [4]> var_7359_begin_0 = const()[name = tensor<string, []>("op_7359_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_7359_end_0 = const()[name = tensor<string, []>("op_7359_end_0"), val = tensor<int32, [4]>([2, 704, 1, 77])];
            tensor<bool, [4]> var_7359_end_mask_0 = const()[name = tensor<string, []>("op_7359_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_7359_cast = slice_by_index(begin = var_7359_begin_0, end = var_7359_end_0, end_mask = var_7359_end_mask_0, x = v_35_cast);
            tensor<int32, [4]> var_7363_begin_0 = const()[name = tensor<string, []>("op_7363_begin_0"), val = tensor<int32, [4]>([0, 704, 0, 0])];
            tensor<int32, [4]> var_7363_end_0 = const()[name = tensor<string, []>("op_7363_end_0"), val = tensor<int32, [4]>([2, 768, 1, 77])];
            tensor<bool, [4]> var_7363_end_mask_0 = const()[name = tensor<string, []>("op_7363_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_7363_cast = slice_by_index(begin = var_7363_begin_0, end = var_7363_end_0, end_mask = var_7363_end_mask_0, x = v_35_cast);
            tensor<int32, [4]> var_7367_begin_0 = const()[name = tensor<string, []>("op_7367_begin_0"), val = tensor<int32, [4]>([0, 768, 0, 0])];
            tensor<int32, [4]> var_7367_end_0 = const()[name = tensor<string, []>("op_7367_end_0"), val = tensor<int32, [4]>([2, 832, 1, 77])];
            tensor<bool, [4]> var_7367_end_mask_0 = const()[name = tensor<string, []>("op_7367_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_7367_cast = slice_by_index(begin = var_7367_begin_0, end = var_7367_end_0, end_mask = var_7367_end_mask_0, x = v_35_cast);
            tensor<int32, [4]> var_7371_begin_0 = const()[name = tensor<string, []>("op_7371_begin_0"), val = tensor<int32, [4]>([0, 832, 0, 0])];
            tensor<int32, [4]> var_7371_end_0 = const()[name = tensor<string, []>("op_7371_end_0"), val = tensor<int32, [4]>([2, 896, 1, 77])];
            tensor<bool, [4]> var_7371_end_mask_0 = const()[name = tensor<string, []>("op_7371_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_7371_cast = slice_by_index(begin = var_7371_begin_0, end = var_7371_end_0, end_mask = var_7371_end_mask_0, x = v_35_cast);
            tensor<int32, [4]> var_7375_begin_0 = const()[name = tensor<string, []>("op_7375_begin_0"), val = tensor<int32, [4]>([0, 896, 0, 0])];
            tensor<int32, [4]> var_7375_end_0 = const()[name = tensor<string, []>("op_7375_end_0"), val = tensor<int32, [4]>([2, 960, 1, 77])];
            tensor<bool, [4]> var_7375_end_mask_0 = const()[name = tensor<string, []>("op_7375_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_7375_cast = slice_by_index(begin = var_7375_begin_0, end = var_7375_end_0, end_mask = var_7375_end_mask_0, x = v_35_cast);
            tensor<int32, [4]> var_7379_begin_0 = const()[name = tensor<string, []>("op_7379_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_7379_end_0 = const()[name = tensor<string, []>("op_7379_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 77])];
            tensor<bool, [4]> var_7379_end_mask_0 = const()[name = tensor<string, []>("op_7379_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_7379_cast = slice_by_index(begin = var_7379_begin_0, end = var_7379_end_0, end_mask = var_7379_end_mask_0, x = v_35_cast);
            tensor<int32, [4]> var_7383_begin_0 = const()[name = tensor<string, []>("op_7383_begin_0"), val = tensor<int32, [4]>([0, 1024, 0, 0])];
            tensor<int32, [4]> var_7383_end_0 = const()[name = tensor<string, []>("op_7383_end_0"), val = tensor<int32, [4]>([2, 1088, 1, 77])];
            tensor<bool, [4]> var_7383_end_mask_0 = const()[name = tensor<string, []>("op_7383_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_7383_cast = slice_by_index(begin = var_7383_begin_0, end = var_7383_end_0, end_mask = var_7383_end_mask_0, x = v_35_cast);
            tensor<int32, [4]> var_7387_begin_0 = const()[name = tensor<string, []>("op_7387_begin_0"), val = tensor<int32, [4]>([0, 1088, 0, 0])];
            tensor<int32, [4]> var_7387_end_0 = const()[name = tensor<string, []>("op_7387_end_0"), val = tensor<int32, [4]>([2, 1152, 1, 77])];
            tensor<bool, [4]> var_7387_end_mask_0 = const()[name = tensor<string, []>("op_7387_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_7387_cast = slice_by_index(begin = var_7387_begin_0, end = var_7387_end_0, end_mask = var_7387_end_mask_0, x = v_35_cast);
            tensor<int32, [4]> var_7391_begin_0 = const()[name = tensor<string, []>("op_7391_begin_0"), val = tensor<int32, [4]>([0, 1152, 0, 0])];
            tensor<int32, [4]> var_7391_end_0 = const()[name = tensor<string, []>("op_7391_end_0"), val = tensor<int32, [4]>([2, 1216, 1, 77])];
            tensor<bool, [4]> var_7391_end_mask_0 = const()[name = tensor<string, []>("op_7391_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_7391_cast = slice_by_index(begin = var_7391_begin_0, end = var_7391_end_0, end_mask = var_7391_end_mask_0, x = v_35_cast);
            tensor<int32, [4]> var_7395_begin_0 = const()[name = tensor<string, []>("op_7395_begin_0"), val = tensor<int32, [4]>([0, 1216, 0, 0])];
            tensor<int32, [4]> var_7395_end_0 = const()[name = tensor<string, []>("op_7395_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 77])];
            tensor<bool, [4]> var_7395_end_mask_0 = const()[name = tensor<string, []>("op_7395_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_7395_cast = slice_by_index(begin = var_7395_begin_0, end = var_7395_end_0, end_mask = var_7395_end_mask_0, x = v_35_cast);
            tensor<string, []> var_7399_equation_0 = const()[name = tensor<string, []>("op_7399_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_7399_cast = einsum(equation = var_7399_equation_0, values = (var_7241_cast, var_7158_cast));
            tensor<fp16, []> var_7400_to_fp16 = const()[name = tensor<string, []>("op_7400_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_481_cast = mul(x = var_7399_cast, y = var_7400_to_fp16);
            tensor<string, []> var_7403_equation_0 = const()[name = tensor<string, []>("op_7403_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_7403_cast = einsum(equation = var_7403_equation_0, values = (var_7245_cast, var_7162_cast));
            tensor<fp16, []> var_7404_to_fp16 = const()[name = tensor<string, []>("op_7404_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_483_cast = mul(x = var_7403_cast, y = var_7404_to_fp16);
            tensor<string, []> var_7407_equation_0 = const()[name = tensor<string, []>("op_7407_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_7407_cast = einsum(equation = var_7407_equation_0, values = (var_7249_cast, var_7166_cast));
            tensor<fp16, []> var_7408_to_fp16 = const()[name = tensor<string, []>("op_7408_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_485_cast = mul(x = var_7407_cast, y = var_7408_to_fp16);
            tensor<string, []> var_7411_equation_0 = const()[name = tensor<string, []>("op_7411_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_7411_cast = einsum(equation = var_7411_equation_0, values = (var_7253_cast, var_7170_cast));
            tensor<fp16, []> var_7412_to_fp16 = const()[name = tensor<string, []>("op_7412_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_487_cast = mul(x = var_7411_cast, y = var_7412_to_fp16);
            tensor<string, []> var_7415_equation_0 = const()[name = tensor<string, []>("op_7415_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_7415_cast = einsum(equation = var_7415_equation_0, values = (var_7257_cast, var_7174_cast));
            tensor<fp16, []> var_7416_to_fp16 = const()[name = tensor<string, []>("op_7416_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_489_cast = mul(x = var_7415_cast, y = var_7416_to_fp16);
            tensor<string, []> var_7419_equation_0 = const()[name = tensor<string, []>("op_7419_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_7419_cast = einsum(equation = var_7419_equation_0, values = (var_7261_cast, var_7178_cast));
            tensor<fp16, []> var_7420_to_fp16 = const()[name = tensor<string, []>("op_7420_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_491_cast = mul(x = var_7419_cast, y = var_7420_to_fp16);
            tensor<string, []> var_7423_equation_0 = const()[name = tensor<string, []>("op_7423_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_7423_cast = einsum(equation = var_7423_equation_0, values = (var_7265_cast, var_7182_cast));
            tensor<fp16, []> var_7424_to_fp16 = const()[name = tensor<string, []>("op_7424_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_493_cast = mul(x = var_7423_cast, y = var_7424_to_fp16);
            tensor<string, []> var_7427_equation_0 = const()[name = tensor<string, []>("op_7427_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_7427_cast = einsum(equation = var_7427_equation_0, values = (var_7269_cast, var_7186_cast));
            tensor<fp16, []> var_7428_to_fp16 = const()[name = tensor<string, []>("op_7428_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_495_cast = mul(x = var_7427_cast, y = var_7428_to_fp16);
            tensor<string, []> var_7431_equation_0 = const()[name = tensor<string, []>("op_7431_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_7431_cast = einsum(equation = var_7431_equation_0, values = (var_7273_cast, var_7190_cast));
            tensor<fp16, []> var_7432_to_fp16 = const()[name = tensor<string, []>("op_7432_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_497_cast = mul(x = var_7431_cast, y = var_7432_to_fp16);
            tensor<string, []> var_7435_equation_0 = const()[name = tensor<string, []>("op_7435_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_7435_cast = einsum(equation = var_7435_equation_0, values = (var_7277_cast, var_7194_cast));
            tensor<fp16, []> var_7436_to_fp16 = const()[name = tensor<string, []>("op_7436_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_499_cast = mul(x = var_7435_cast, y = var_7436_to_fp16);
            tensor<string, []> var_7439_equation_0 = const()[name = tensor<string, []>("op_7439_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_7439_cast = einsum(equation = var_7439_equation_0, values = (var_7281_cast, var_7198_cast));
            tensor<fp16, []> var_7440_to_fp16 = const()[name = tensor<string, []>("op_7440_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_501_cast = mul(x = var_7439_cast, y = var_7440_to_fp16);
            tensor<string, []> var_7443_equation_0 = const()[name = tensor<string, []>("op_7443_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_7443_cast = einsum(equation = var_7443_equation_0, values = (var_7285_cast, var_7202_cast));
            tensor<fp16, []> var_7444_to_fp16 = const()[name = tensor<string, []>("op_7444_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_503_cast = mul(x = var_7443_cast, y = var_7444_to_fp16);
            tensor<string, []> var_7447_equation_0 = const()[name = tensor<string, []>("op_7447_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_7447_cast = einsum(equation = var_7447_equation_0, values = (var_7289_cast, var_7206_cast));
            tensor<fp16, []> var_7448_to_fp16 = const()[name = tensor<string, []>("op_7448_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_505_cast = mul(x = var_7447_cast, y = var_7448_to_fp16);
            tensor<string, []> var_7451_equation_0 = const()[name = tensor<string, []>("op_7451_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_7451_cast = einsum(equation = var_7451_equation_0, values = (var_7293_cast, var_7210_cast));
            tensor<fp16, []> var_7452_to_fp16 = const()[name = tensor<string, []>("op_7452_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_507_cast = mul(x = var_7451_cast, y = var_7452_to_fp16);
            tensor<string, []> var_7455_equation_0 = const()[name = tensor<string, []>("op_7455_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_7455_cast = einsum(equation = var_7455_equation_0, values = (var_7297_cast, var_7214_cast));
            tensor<fp16, []> var_7456_to_fp16 = const()[name = tensor<string, []>("op_7456_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_509_cast = mul(x = var_7455_cast, y = var_7456_to_fp16);
            tensor<string, []> var_7459_equation_0 = const()[name = tensor<string, []>("op_7459_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_7459_cast = einsum(equation = var_7459_equation_0, values = (var_7301_cast, var_7218_cast));
            tensor<fp16, []> var_7460_to_fp16 = const()[name = tensor<string, []>("op_7460_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_511_cast = mul(x = var_7459_cast, y = var_7460_to_fp16);
            tensor<string, []> var_7463_equation_0 = const()[name = tensor<string, []>("op_7463_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_7463_cast = einsum(equation = var_7463_equation_0, values = (var_7305_cast, var_7222_cast));
            tensor<fp16, []> var_7464_to_fp16 = const()[name = tensor<string, []>("op_7464_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_513_cast = mul(x = var_7463_cast, y = var_7464_to_fp16);
            tensor<string, []> var_7467_equation_0 = const()[name = tensor<string, []>("op_7467_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_7467_cast = einsum(equation = var_7467_equation_0, values = (var_7309_cast, var_7226_cast));
            tensor<fp16, []> var_7468_to_fp16 = const()[name = tensor<string, []>("op_7468_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_515_cast = mul(x = var_7467_cast, y = var_7468_to_fp16);
            tensor<string, []> var_7471_equation_0 = const()[name = tensor<string, []>("op_7471_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_7471_cast = einsum(equation = var_7471_equation_0, values = (var_7313_cast, var_7230_cast));
            tensor<fp16, []> var_7472_to_fp16 = const()[name = tensor<string, []>("op_7472_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_517_cast = mul(x = var_7471_cast, y = var_7472_to_fp16);
            tensor<string, []> var_7475_equation_0 = const()[name = tensor<string, []>("op_7475_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_7475_cast = einsum(equation = var_7475_equation_0, values = (var_7317_cast, var_7234_cast));
            tensor<fp16, []> var_7476_to_fp16 = const()[name = tensor<string, []>("op_7476_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_519_cast = mul(x = var_7475_cast, y = var_7476_to_fp16);
            tensor<fp16, [2, 77, 1, 256]> var_7478_cast = softmax(axis = var_5599, x = aw_481_cast);
            tensor<fp16, [2, 77, 1, 256]> var_7479_cast = softmax(axis = var_5599, x = aw_483_cast);
            tensor<fp16, [2, 77, 1, 256]> var_7480_cast = softmax(axis = var_5599, x = aw_485_cast);
            tensor<fp16, [2, 77, 1, 256]> var_7481_cast = softmax(axis = var_5599, x = aw_487_cast);
            tensor<fp16, [2, 77, 1, 256]> var_7482_cast = softmax(axis = var_5599, x = aw_489_cast);
            tensor<fp16, [2, 77, 1, 256]> var_7483_cast = softmax(axis = var_5599, x = aw_491_cast);
            tensor<fp16, [2, 77, 1, 256]> var_7484_cast = softmax(axis = var_5599, x = aw_493_cast);
            tensor<fp16, [2, 77, 1, 256]> var_7485_cast = softmax(axis = var_5599, x = aw_495_cast);
            tensor<fp16, [2, 77, 1, 256]> var_7486_cast = softmax(axis = var_5599, x = aw_497_cast);
            tensor<fp16, [2, 77, 1, 256]> var_7487_cast = softmax(axis = var_5599, x = aw_499_cast);
            tensor<fp16, [2, 77, 1, 256]> var_7488_cast = softmax(axis = var_5599, x = aw_501_cast);
            tensor<fp16, [2, 77, 1, 256]> var_7489_cast = softmax(axis = var_5599, x = aw_503_cast);
            tensor<fp16, [2, 77, 1, 256]> var_7490_cast = softmax(axis = var_5599, x = aw_505_cast);
            tensor<fp16, [2, 77, 1, 256]> var_7491_cast = softmax(axis = var_5599, x = aw_507_cast);
            tensor<fp16, [2, 77, 1, 256]> var_7492_cast = softmax(axis = var_5599, x = aw_509_cast);
            tensor<fp16, [2, 77, 1, 256]> var_7493_cast = softmax(axis = var_5599, x = aw_511_cast);
            tensor<fp16, [2, 77, 1, 256]> var_7494_cast = softmax(axis = var_5599, x = aw_513_cast);
            tensor<fp16, [2, 77, 1, 256]> var_7495_cast = softmax(axis = var_5599, x = aw_515_cast);
            tensor<fp16, [2, 77, 1, 256]> var_7496_cast = softmax(axis = var_5599, x = aw_517_cast);
            tensor<fp16, [2, 77, 1, 256]> var_7497_cast = softmax(axis = var_5599, x = aw_519_cast);
            tensor<string, []> var_7499_equation_0 = const()[name = tensor<string, []>("op_7499_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_7499_cast = einsum(equation = var_7499_equation_0, values = (var_7319_cast, var_7478_cast));
            tensor<string, []> var_7501_equation_0 = const()[name = tensor<string, []>("op_7501_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_7501_cast = einsum(equation = var_7501_equation_0, values = (var_7323_cast, var_7479_cast));
            tensor<string, []> var_7503_equation_0 = const()[name = tensor<string, []>("op_7503_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_7503_cast = einsum(equation = var_7503_equation_0, values = (var_7327_cast, var_7480_cast));
            tensor<string, []> var_7505_equation_0 = const()[name = tensor<string, []>("op_7505_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_7505_cast = einsum(equation = var_7505_equation_0, values = (var_7331_cast, var_7481_cast));
            tensor<string, []> var_7507_equation_0 = const()[name = tensor<string, []>("op_7507_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_7507_cast = einsum(equation = var_7507_equation_0, values = (var_7335_cast, var_7482_cast));
            tensor<string, []> var_7509_equation_0 = const()[name = tensor<string, []>("op_7509_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_7509_cast = einsum(equation = var_7509_equation_0, values = (var_7339_cast, var_7483_cast));
            tensor<string, []> var_7511_equation_0 = const()[name = tensor<string, []>("op_7511_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_7511_cast = einsum(equation = var_7511_equation_0, values = (var_7343_cast, var_7484_cast));
            tensor<string, []> var_7513_equation_0 = const()[name = tensor<string, []>("op_7513_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_7513_cast = einsum(equation = var_7513_equation_0, values = (var_7347_cast, var_7485_cast));
            tensor<string, []> var_7515_equation_0 = const()[name = tensor<string, []>("op_7515_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_7515_cast = einsum(equation = var_7515_equation_0, values = (var_7351_cast, var_7486_cast));
            tensor<string, []> var_7517_equation_0 = const()[name = tensor<string, []>("op_7517_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_7517_cast = einsum(equation = var_7517_equation_0, values = (var_7355_cast, var_7487_cast));
            tensor<string, []> var_7519_equation_0 = const()[name = tensor<string, []>("op_7519_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_7519_cast = einsum(equation = var_7519_equation_0, values = (var_7359_cast, var_7488_cast));
            tensor<string, []> var_7521_equation_0 = const()[name = tensor<string, []>("op_7521_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_7521_cast = einsum(equation = var_7521_equation_0, values = (var_7363_cast, var_7489_cast));
            tensor<string, []> var_7523_equation_0 = const()[name = tensor<string, []>("op_7523_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_7523_cast = einsum(equation = var_7523_equation_0, values = (var_7367_cast, var_7490_cast));
            tensor<string, []> var_7525_equation_0 = const()[name = tensor<string, []>("op_7525_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_7525_cast = einsum(equation = var_7525_equation_0, values = (var_7371_cast, var_7491_cast));
            tensor<string, []> var_7527_equation_0 = const()[name = tensor<string, []>("op_7527_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_7527_cast = einsum(equation = var_7527_equation_0, values = (var_7375_cast, var_7492_cast));
            tensor<string, []> var_7529_equation_0 = const()[name = tensor<string, []>("op_7529_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_7529_cast = einsum(equation = var_7529_equation_0, values = (var_7379_cast, var_7493_cast));
            tensor<string, []> var_7531_equation_0 = const()[name = tensor<string, []>("op_7531_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_7531_cast = einsum(equation = var_7531_equation_0, values = (var_7383_cast, var_7494_cast));
            tensor<string, []> var_7533_equation_0 = const()[name = tensor<string, []>("op_7533_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_7533_cast = einsum(equation = var_7533_equation_0, values = (var_7387_cast, var_7495_cast));
            tensor<string, []> var_7535_equation_0 = const()[name = tensor<string, []>("op_7535_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_7535_cast = einsum(equation = var_7535_equation_0, values = (var_7391_cast, var_7496_cast));
            tensor<string, []> var_7537_equation_0 = const()[name = tensor<string, []>("op_7537_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_7537_cast = einsum(equation = var_7537_equation_0, values = (var_7395_cast, var_7497_cast));
            tensor<bool, []> input_329_interleave_0 = const()[name = tensor<string, []>("input_329_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 1280, 1, 256]> input_329_cast = concat(axis = var_5599, interleave = input_329_interleave_0, values = (var_7499_cast, var_7501_cast, var_7503_cast, var_7505_cast, var_7507_cast, var_7509_cast, var_7511_cast, var_7513_cast, var_7515_cast, var_7517_cast, var_7519_cast, var_7521_cast, var_7523_cast, var_7525_cast, var_7527_cast, var_7529_cast, var_7531_cast, var_7533_cast, var_7535_cast, var_7537_cast));
            tensor<int32, [2]> var_7543 = const()[name = tensor<string, []>("op_7543"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7545 = const()[name = tensor<string, []>("op_7545"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_7547_pad_type_0 = const()[name = tensor<string, []>("op_7547_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_7547_pad_0 = const()[name = tensor<string, []>("op_7547_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(426858176)))];
            tensor<fp16, [1280]> up_blocks_1_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(430135040)))];
            tensor<fp16, [2, 1280, 1, 256]> var_7547_cast = conv(bias = up_blocks_1_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16, dilations = var_7545, groups = var_5599, pad = var_7547_pad_0, pad_type = var_7547_pad_type_0, strides = var_7543, weight = up_blocks_1_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16, x = input_329_cast);
            tensor<fp16, [2, 1280, 1, 256]> inputs_53_cast = add(x = var_7547_cast, y = inputs_51_cast);
            tensor<int32, [1]> var_7551 = const()[name = tensor<string, []>("op_7551"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> channels_mean_53_cast = reduce_mean(axes = var_7551, keep_dims = var_5594, x = inputs_53_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_53_cast = sub(x = inputs_53_cast, y = channels_mean_53_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_sq_53_cast = mul(x = zero_mean_53_cast, y = zero_mean_53_cast);
            tensor<int32, [1]> var_7555 = const()[name = tensor<string, []>("op_7555"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> var_7556_cast = reduce_mean(axes = var_7555, keep_dims = var_5594, x = zero_mean_sq_53_cast);
            tensor<fp16, []> var_7557_to_fp16 = const()[name = tensor<string, []>("op_7557_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 256]> var_7558_cast = add(x = var_7556_cast, y = var_7557_to_fp16);
            tensor<fp16, []> denom_53_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_53_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 256]> denom_53_cast = rsqrt(epsilon = denom_53_epsilon_0_to_fp16, x = var_7558_cast);
            tensor<fp16, [2, 1280, 1, 256]> out_53_cast = mul(x = zero_mean_53_cast, y = denom_53_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_7562_to_fp16 = const()[name = tensor<string, []>("op_7562_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(430137664)))];
            tensor<fp16, [2, 1280, 1, 256]> var_7563_cast = add(x = out_53_cast, y = var_7562_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_7565_to_fp16 = const()[name = tensor<string, []>("op_7565_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(430140288)))];
            tensor<fp16, [2, 1280, 1, 256]> input_331_cast = mul(x = var_7563_cast, y = var_7565_to_fp16);
            tensor<int32, [2]> var_7573 = const()[name = tensor<string, []>("op_7573"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7575 = const()[name = tensor<string, []>("op_7575"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_7577_pad_type_0 = const()[name = tensor<string, []>("op_7577_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_7577_pad_0 = const()[name = tensor<string, []>("op_7577_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [10240, 1280, 1, 1]> up_blocks_1_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16"), val = tensor<fp16, [10240, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(430142912)))];
            tensor<fp16, [10240]> up_blocks_1_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16"), val = tensor<fp16, [10240]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(456357376)))];
            tensor<fp16, [2, 10240, 1, 256]> var_7577_cast = conv(bias = up_blocks_1_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16, dilations = var_7575, groups = var_5599, pad = var_7577_pad_0, pad_type = var_7577_pad_type_0, strides = var_7573, weight = up_blocks_1_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16, x = input_331_cast);
            tensor<int32, [2]> var_7578_split_sizes_0 = const()[name = tensor<string, []>("op_7578_split_sizes_0"), val = tensor<int32, [2]>([5120, 5120])];
            tensor<int32, []> var_7578_axis_0 = const()[name = tensor<string, []>("op_7578_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [2, 5120, 1, 256]> var_7578_cast_0, tensor<fp16, [2, 5120, 1, 256]> var_7578_cast_1 = split(axis = var_7578_axis_0, split_sizes = var_7578_split_sizes_0, x = var_7577_cast);
            tensor<string, []> var_7580_mode_0 = const()[name = tensor<string, []>("op_7580_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [2, 5120, 1, 256]> var_7580_cast = gelu(mode = var_7580_mode_0, x = var_7578_cast_1);
            tensor<fp16, [2, 5120, 1, 256]> input_333_cast = mul(x = var_7578_cast_0, y = var_7580_cast);
            tensor<int32, [2]> var_7584 = const()[name = tensor<string, []>("op_7584"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7586 = const()[name = tensor<string, []>("op_7586"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_7588_pad_type_0 = const()[name = tensor<string, []>("op_7588_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_7588_pad_0 = const()[name = tensor<string, []>("op_7588_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 5120, 1, 1]> up_blocks_1_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(456377920)))];
            tensor<fp16, [1280]> up_blocks_1_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(469485184)))];
            tensor<fp16, [2, 1280, 1, 256]> var_7588_cast = conv(bias = up_blocks_1_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16, dilations = var_7586, groups = var_5599, pad = var_7588_pad_0, pad_type = var_7588_pad_type_0, strides = var_7584, weight = up_blocks_1_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16, x = input_333_cast);
            tensor<fp16, [2, 1280, 1, 256]> hidden_states_193_cast = add(x = var_7588_cast, y = inputs_53_cast);
            tensor<int32, [4]> var_7590 = const()[name = tensor<string, []>("op_7590"), val = tensor<int32, [4]>([2, 1280, 16, 16])];
            tensor<fp16, [2, 1280, 16, 16]> input_335_cast = reshape(shape = var_7590, x = hidden_states_193_cast);
            tensor<int32, [2]> var_7594 = const()[name = tensor<string, []>("op_7594"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7596 = const()[name = tensor<string, []>("op_7596"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_195_pad_type_0 = const()[name = tensor<string, []>("hidden_states_195_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_195_pad_0 = const()[name = tensor<string, []>("hidden_states_195_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_1_proj_out_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_proj_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(469487808)))];
            tensor<fp16, [1280]> up_blocks_1_attentions_1_proj_out_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_proj_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(472764672)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_195_cast = conv(bias = up_blocks_1_attentions_1_proj_out_bias_to_fp16, dilations = var_7596, groups = var_5599, pad = hidden_states_195_pad_0, pad_type = hidden_states_195_pad_type_0, strides = var_7594, weight = up_blocks_1_attentions_1_proj_out_weight_to_fp16, x = input_335_cast);
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_197_cast = add(x = hidden_states_195_cast, y = hidden_states_183_cast);
            tensor<bool, []> input_337_interleave_0 = const()[name = tensor<string, []>("input_337_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 640, 16, 16]> cast_6 = cast(dtype = cast_6_dtype_0, x = input_117_cast);
            tensor<fp16, [2, 1920, 16, 16]> input_337_cast = concat(axis = var_5599, interleave = input_337_interleave_0, values = (hidden_states_197_cast, cast_6));
            tensor<int32, [5]> reshape_156_shape_0 = const()[name = tensor<string, []>("reshape_156_shape_0"), val = tensor<int32, [5]>([2, 32, 60, 16, 16])];
            tensor<fp16, [2, 32, 60, 16, 16]> reshape_156_cast = reshape(shape = reshape_156_shape_0, x = input_337_cast);
            tensor<int32, [3]> reduce_mean_117_axes_0 = const()[name = tensor<string, []>("reduce_mean_117_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_117_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_117_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_117_cast = reduce_mean(axes = reduce_mean_117_axes_0, keep_dims = reduce_mean_117_keep_dims_0, x = reshape_156_cast);
            tensor<fp16, [2, 32, 60, 16, 16]> sub_78_cast = sub(x = reshape_156_cast, y = reduce_mean_117_cast);
            tensor<fp16, [2, 32, 60, 16, 16]> square_39_cast = square(x = sub_78_cast);
            tensor<int32, [3]> reduce_mean_119_axes_0 = const()[name = tensor<string, []>("reduce_mean_119_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_119_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_119_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_119_cast = reduce_mean(axes = reduce_mean_119_axes_0, keep_dims = reduce_mean_119_keep_dims_0, x = square_39_cast);
            tensor<fp16, []> add_78_y_0_to_fp16 = const()[name = tensor<string, []>("add_78_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_78_cast = add(x = reduce_mean_119_cast, y = add_78_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_39_cast = sqrt(x = add_78_cast);
            tensor<fp16, [2, 32, 60, 16, 16]> real_div_39_cast = real_div(x = sub_78_cast, y = sqrt_39_cast);
            tensor<int32, [4]> reshape_157_shape_0 = const()[name = tensor<string, []>("reshape_157_shape_0"), val = tensor<int32, [4]>([2, 1920, 16, 16])];
            tensor<fp16, [2, 1920, 16, 16]> reshape_157_cast = reshape(shape = reshape_157_shape_0, x = real_div_39_cast);
            tensor<fp16, [1920]> add_79_mean_0_to_fp16 = const()[name = tensor<string, []>("add_79_mean_0_to_fp16"), val = tensor<fp16, [1920]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(472767296)))];
            tensor<fp16, [1920]> add_79_variance_0_to_fp16 = const()[name = tensor<string, []>("add_79_variance_0_to_fp16"), val = tensor<fp16, [1920]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(472771200)))];
            tensor<fp16, [1920]> add_79_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_79_gamma_0_to_fp16"), val = tensor<fp16, [1920]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(472775104)))];
            tensor<fp16, [1920]> add_79_beta_0_to_fp16 = const()[name = tensor<string, []>("add_79_beta_0_to_fp16"), val = tensor<fp16, [1920]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(472779008)))];
            tensor<fp16, []> add_79_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_79_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1920, 16, 16]> add_79_cast = batch_norm(beta = add_79_beta_0_to_fp16, epsilon = add_79_epsilon_0_to_fp16, gamma = add_79_gamma_0_to_fp16, mean = add_79_mean_0_to_fp16, variance = add_79_variance_0_to_fp16, x = reshape_157_cast);
            tensor<fp16, [2, 1920, 16, 16]> input_341_cast = silu(x = add_79_cast);
            tensor<int32, [2]> var_7614 = const()[name = tensor<string, []>("op_7614"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7616 = const()[name = tensor<string, []>("op_7616"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_199_pad_type_0 = const()[name = tensor<string, []>("hidden_states_199_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_199_pad_0 = const()[name = tensor<string, []>("hidden_states_199_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1920, 3, 3]> up_blocks_1_resnets_2_conv1_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_2_conv1_weight_to_fp16"), val = tensor<fp16, [1280, 1920, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(472782912)))];
            tensor<fp16, [1280]> up_blocks_1_resnets_2_conv1_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_2_conv1_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(517019776)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_199_cast = conv(bias = up_blocks_1_resnets_2_conv1_bias_to_fp16, dilations = var_7616, groups = var_5599, pad = hidden_states_199_pad_0, pad_type = hidden_states_199_pad_type_0, strides = var_7614, weight = up_blocks_1_resnets_2_conv1_weight_to_fp16, x = input_341_cast);
            tensor<int32, [2]> var_7622 = const()[name = tensor<string, []>("op_7622"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7624 = const()[name = tensor<string, []>("op_7624"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_31_pad_type_0 = const()[name = tensor<string, []>("temb_31_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_31_pad_0 = const()[name = tensor<string, []>("temb_31_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_resnets_2_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_2_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(517022400)))];
            tensor<fp16, [1280]> up_blocks_1_resnets_2_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_2_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(520299264)))];
            tensor<fp16, [2, 1280, 1, 1]> temb_31_cast = conv(bias = up_blocks_1_resnets_2_time_emb_proj_bias_to_fp16, dilations = var_7624, groups = var_5599, pad = temb_31_pad_0, pad_type = temb_31_pad_type_0, strides = var_7622, weight = up_blocks_1_resnets_2_time_emb_proj_weight_to_fp16, x = cast_12);
            tensor<fp16, [2, 1280, 16, 16]> input_345_cast = add(x = hidden_states_199_cast, y = temb_31_cast);
            tensor<int32, [5]> reshape_160_shape_0 = const()[name = tensor<string, []>("reshape_160_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 16, 16])];
            tensor<fp16, [2, 32, 40, 16, 16]> reshape_160_cast = reshape(shape = reshape_160_shape_0, x = input_345_cast);
            tensor<int32, [3]> reduce_mean_120_axes_0 = const()[name = tensor<string, []>("reduce_mean_120_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_120_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_120_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_120_cast = reduce_mean(axes = reduce_mean_120_axes_0, keep_dims = reduce_mean_120_keep_dims_0, x = reshape_160_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> sub_80_cast = sub(x = reshape_160_cast, y = reduce_mean_120_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> square_40_cast = square(x = sub_80_cast);
            tensor<int32, [3]> reduce_mean_122_axes_0 = const()[name = tensor<string, []>("reduce_mean_122_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_122_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_122_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_122_cast = reduce_mean(axes = reduce_mean_122_axes_0, keep_dims = reduce_mean_122_keep_dims_0, x = square_40_cast);
            tensor<fp16, []> add_80_y_0_to_fp16 = const()[name = tensor<string, []>("add_80_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_80_cast = add(x = reduce_mean_122_cast, y = add_80_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_40_cast = sqrt(x = add_80_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> real_div_40_cast = real_div(x = sub_80_cast, y = sqrt_40_cast);
            tensor<int32, [4]> reshape_161_shape_0 = const()[name = tensor<string, []>("reshape_161_shape_0"), val = tensor<int32, [4]>([2, 1280, 16, 16])];
            tensor<fp16, [2, 1280, 16, 16]> reshape_161_cast = reshape(shape = reshape_161_shape_0, x = real_div_40_cast);
            tensor<fp16, [1280]> add_81_mean_0_to_fp16 = const()[name = tensor<string, []>("add_81_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(520301888)))];
            tensor<fp16, [1280]> add_81_variance_0_to_fp16 = const()[name = tensor<string, []>("add_81_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(520304512)))];
            tensor<fp16, [1280]> add_81_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_81_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(520307136)))];
            tensor<fp16, [1280]> add_81_beta_0_to_fp16 = const()[name = tensor<string, []>("add_81_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(520309760)))];
            tensor<fp16, []> add_81_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_81_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 16, 16]> add_81_cast = batch_norm(beta = add_81_beta_0_to_fp16, epsilon = add_81_epsilon_0_to_fp16, gamma = add_81_gamma_0_to_fp16, mean = add_81_mean_0_to_fp16, variance = add_81_variance_0_to_fp16, x = reshape_161_cast);
            tensor<fp16, [2, 1280, 16, 16]> input_349_cast = silu(x = add_81_cast);
            tensor<int32, [2]> var_7634 = const()[name = tensor<string, []>("op_7634"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7636 = const()[name = tensor<string, []>("op_7636"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_201_pad_type_0 = const()[name = tensor<string, []>("hidden_states_201_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_201_pad_0 = const()[name = tensor<string, []>("hidden_states_201_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> up_blocks_1_resnets_2_conv2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_2_conv2_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(520312384)))];
            tensor<fp16, [1280]> up_blocks_1_resnets_2_conv2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_2_conv2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(549803648)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_201_cast = conv(bias = up_blocks_1_resnets_2_conv2_bias_to_fp16, dilations = var_7636, groups = var_5599, pad = hidden_states_201_pad_0, pad_type = hidden_states_201_pad_type_0, strides = var_7634, weight = up_blocks_1_resnets_2_conv2_weight_to_fp16, x = input_349_cast);
            tensor<int32, [2]> var_7641 = const()[name = tensor<string, []>("op_7641"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7643 = const()[name = tensor<string, []>("op_7643"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_15_pad_type_0 = const()[name = tensor<string, []>("x_15_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_15_pad_0 = const()[name = tensor<string, []>("x_15_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1920, 1, 1]> up_blocks_1_resnets_2_conv_shortcut_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_2_conv_shortcut_weight_to_fp16"), val = tensor<fp16, [1280, 1920, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(549806272)))];
            tensor<fp16, [1280]> up_blocks_1_resnets_2_conv_shortcut_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_2_conv_shortcut_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(554721536)))];
            tensor<fp16, [2, 1280, 16, 16]> x_15_cast = conv(bias = up_blocks_1_resnets_2_conv_shortcut_bias_to_fp16, dilations = var_7643, groups = var_5599, pad = x_15_pad_0, pad_type = x_15_pad_type_0, strides = var_7641, weight = up_blocks_1_resnets_2_conv_shortcut_weight_to_fp16, x = input_337_cast);
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_203_cast = add(x = x_15_cast, y = hidden_states_201_cast);
            tensor<int32, [5]> reshape_164_shape_0 = const()[name = tensor<string, []>("reshape_164_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 16, 16])];
            tensor<fp16, [2, 32, 40, 16, 16]> reshape_164_cast = reshape(shape = reshape_164_shape_0, x = hidden_states_203_cast);
            tensor<int32, [3]> reduce_mean_123_axes_0 = const()[name = tensor<string, []>("reduce_mean_123_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_123_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_123_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_123_cast = reduce_mean(axes = reduce_mean_123_axes_0, keep_dims = reduce_mean_123_keep_dims_0, x = reshape_164_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> sub_82_cast = sub(x = reshape_164_cast, y = reduce_mean_123_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> square_41_cast = square(x = sub_82_cast);
            tensor<int32, [3]> reduce_mean_125_axes_0 = const()[name = tensor<string, []>("reduce_mean_125_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_125_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_125_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_125_cast = reduce_mean(axes = reduce_mean_125_axes_0, keep_dims = reduce_mean_125_keep_dims_0, x = square_41_cast);
            tensor<fp16, []> add_82_y_0_to_fp16 = const()[name = tensor<string, []>("add_82_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_82_cast = add(x = reduce_mean_125_cast, y = add_82_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_41_cast = sqrt(x = add_82_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> real_div_41_cast = real_div(x = sub_82_cast, y = sqrt_41_cast);
            tensor<int32, [4]> reshape_165_shape_0 = const()[name = tensor<string, []>("reshape_165_shape_0"), val = tensor<int32, [4]>([2, 1280, 16, 16])];
            tensor<fp16, [2, 1280, 16, 16]> reshape_165_cast = reshape(shape = reshape_165_shape_0, x = real_div_41_cast);
            tensor<fp16, [1280]> add_83_mean_0_to_fp16 = const()[name = tensor<string, []>("add_83_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(554724160)))];
            tensor<fp16, [1280]> add_83_variance_0_to_fp16 = const()[name = tensor<string, []>("add_83_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(554726784)))];
            tensor<fp16, [1280]> add_83_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_83_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(554729408)))];
            tensor<fp16, [1280]> add_83_beta_0_to_fp16 = const()[name = tensor<string, []>("add_83_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(554732032)))];
            tensor<fp16, []> add_83_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_83_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 16, 16]> add_83_cast = batch_norm(beta = add_83_beta_0_to_fp16, epsilon = add_83_epsilon_0_to_fp16, gamma = add_83_gamma_0_to_fp16, mean = add_83_mean_0_to_fp16, variance = add_83_variance_0_to_fp16, x = reshape_165_cast);
            tensor<int32, [2]> var_7663 = const()[name = tensor<string, []>("op_7663"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7665 = const()[name = tensor<string, []>("op_7665"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_205_pad_type_0 = const()[name = tensor<string, []>("hidden_states_205_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_205_pad_0 = const()[name = tensor<string, []>("hidden_states_205_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_2_proj_in_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_proj_in_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(554734656)))];
            tensor<fp16, [1280]> up_blocks_1_attentions_2_proj_in_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_proj_in_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(558011520)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_205_cast = conv(bias = up_blocks_1_attentions_2_proj_in_bias_to_fp16, dilations = var_7665, groups = var_5599, pad = hidden_states_205_pad_0, pad_type = hidden_states_205_pad_type_0, strides = var_7663, weight = up_blocks_1_attentions_2_proj_in_weight_to_fp16, x = add_83_cast);
            tensor<int32, [4]> var_7670 = const()[name = tensor<string, []>("op_7670"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<fp16, [2, 1280, 1, 256]> inputs_55_cast = reshape(shape = var_7670, x = hidden_states_205_cast);
            tensor<int32, [1]> var_7680 = const()[name = tensor<string, []>("op_7680"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> channels_mean_55_cast = reduce_mean(axes = var_7680, keep_dims = var_5594, x = inputs_55_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_55_cast = sub(x = inputs_55_cast, y = channels_mean_55_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_sq_55_cast = mul(x = zero_mean_55_cast, y = zero_mean_55_cast);
            tensor<int32, [1]> var_7684 = const()[name = tensor<string, []>("op_7684"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> var_7685_cast = reduce_mean(axes = var_7684, keep_dims = var_5594, x = zero_mean_sq_55_cast);
            tensor<fp16, []> var_7686_to_fp16 = const()[name = tensor<string, []>("op_7686_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 256]> var_7687_cast = add(x = var_7685_cast, y = var_7686_to_fp16);
            tensor<fp16, []> denom_55_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_55_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 256]> denom_55_cast = rsqrt(epsilon = denom_55_epsilon_0_to_fp16, x = var_7687_cast);
            tensor<fp16, [2, 1280, 1, 256]> out_55_cast = mul(x = zero_mean_55_cast, y = denom_55_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_7691_to_fp16 = const()[name = tensor<string, []>("op_7691_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(558014144)))];
            tensor<fp16, [2, 1280, 1, 256]> var_7692_cast = add(x = out_55_cast, y = var_7691_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_7694_to_fp16 = const()[name = tensor<string, []>("op_7694_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(558016768)))];
            tensor<fp16, [2, 1280, 1, 256]> hidden_states_207_cast = mul(x = var_7692_cast, y = var_7694_to_fp16);
            tensor<int32, [2]> var_7701 = const()[name = tensor<string, []>("op_7701"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7703 = const()[name = tensor<string, []>("op_7703"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_37_pad_type_0 = const()[name = tensor<string, []>("q_37_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_37_pad_0 = const()[name = tensor<string, []>("q_37_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_2_transformer_blocks_0_attn1_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_transformer_blocks_0_attn1_to_q_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(558019392)))];
            tensor<fp16, [2, 1280, 1, 256]> q_37_cast = conv(dilations = var_7703, groups = var_5599, pad = q_37_pad_0, pad_type = q_37_pad_type_0, strides = var_7701, weight = up_blocks_1_attentions_2_transformer_blocks_0_attn1_to_q_weight_to_fp16, x = hidden_states_207_cast);
            tensor<int32, [2]> var_7707 = const()[name = tensor<string, []>("op_7707"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7709 = const()[name = tensor<string, []>("op_7709"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_73_pad_type_0 = const()[name = tensor<string, []>("k_73_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_73_pad_0 = const()[name = tensor<string, []>("k_73_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_2_transformer_blocks_0_attn1_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_transformer_blocks_0_attn1_to_k_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(561296256)))];
            tensor<fp16, [2, 1280, 1, 256]> k_73_cast = conv(dilations = var_7709, groups = var_5599, pad = k_73_pad_0, pad_type = k_73_pad_type_0, strides = var_7707, weight = up_blocks_1_attentions_2_transformer_blocks_0_attn1_to_k_weight_to_fp16, x = hidden_states_207_cast);
            tensor<int32, [2]> var_7713 = const()[name = tensor<string, []>("op_7713"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7715 = const()[name = tensor<string, []>("op_7715"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_37_pad_type_0 = const()[name = tensor<string, []>("v_37_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_37_pad_0 = const()[name = tensor<string, []>("v_37_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_2_transformer_blocks_0_attn1_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_transformer_blocks_0_attn1_to_v_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(564573120)))];
            tensor<fp16, [2, 1280, 1, 256]> v_37_cast = conv(dilations = var_7715, groups = var_5599, pad = v_37_pad_0, pad_type = v_37_pad_type_0, strides = var_7713, weight = up_blocks_1_attentions_2_transformer_blocks_0_attn1_to_v_weight_to_fp16, x = hidden_states_207_cast);
            tensor<int32, [4]> var_7719_begin_0 = const()[name = tensor<string, []>("op_7719_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_7719_end_0 = const()[name = tensor<string, []>("op_7719_end_0"), val = tensor<int32, [4]>([2, 64, 1, 256])];
            tensor<bool, [4]> var_7719_end_mask_0 = const()[name = tensor<string, []>("op_7719_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7719_cast = slice_by_index(begin = var_7719_begin_0, end = var_7719_end_0, end_mask = var_7719_end_mask_0, x = q_37_cast);
            tensor<int32, [4]> var_7723_begin_0 = const()[name = tensor<string, []>("op_7723_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_7723_end_0 = const()[name = tensor<string, []>("op_7723_end_0"), val = tensor<int32, [4]>([2, 128, 1, 256])];
            tensor<bool, [4]> var_7723_end_mask_0 = const()[name = tensor<string, []>("op_7723_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7723_cast = slice_by_index(begin = var_7723_begin_0, end = var_7723_end_0, end_mask = var_7723_end_mask_0, x = q_37_cast);
            tensor<int32, [4]> var_7727_begin_0 = const()[name = tensor<string, []>("op_7727_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_7727_end_0 = const()[name = tensor<string, []>("op_7727_end_0"), val = tensor<int32, [4]>([2, 192, 1, 256])];
            tensor<bool, [4]> var_7727_end_mask_0 = const()[name = tensor<string, []>("op_7727_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7727_cast = slice_by_index(begin = var_7727_begin_0, end = var_7727_end_0, end_mask = var_7727_end_mask_0, x = q_37_cast);
            tensor<int32, [4]> var_7731_begin_0 = const()[name = tensor<string, []>("op_7731_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_7731_end_0 = const()[name = tensor<string, []>("op_7731_end_0"), val = tensor<int32, [4]>([2, 256, 1, 256])];
            tensor<bool, [4]> var_7731_end_mask_0 = const()[name = tensor<string, []>("op_7731_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7731_cast = slice_by_index(begin = var_7731_begin_0, end = var_7731_end_0, end_mask = var_7731_end_mask_0, x = q_37_cast);
            tensor<int32, [4]> var_7735_begin_0 = const()[name = tensor<string, []>("op_7735_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_7735_end_0 = const()[name = tensor<string, []>("op_7735_end_0"), val = tensor<int32, [4]>([2, 320, 1, 256])];
            tensor<bool, [4]> var_7735_end_mask_0 = const()[name = tensor<string, []>("op_7735_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7735_cast = slice_by_index(begin = var_7735_begin_0, end = var_7735_end_0, end_mask = var_7735_end_mask_0, x = q_37_cast);
            tensor<int32, [4]> var_7739_begin_0 = const()[name = tensor<string, []>("op_7739_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_7739_end_0 = const()[name = tensor<string, []>("op_7739_end_0"), val = tensor<int32, [4]>([2, 384, 1, 256])];
            tensor<bool, [4]> var_7739_end_mask_0 = const()[name = tensor<string, []>("op_7739_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7739_cast = slice_by_index(begin = var_7739_begin_0, end = var_7739_end_0, end_mask = var_7739_end_mask_0, x = q_37_cast);
            tensor<int32, [4]> var_7743_begin_0 = const()[name = tensor<string, []>("op_7743_begin_0"), val = tensor<int32, [4]>([0, 384, 0, 0])];
            tensor<int32, [4]> var_7743_end_0 = const()[name = tensor<string, []>("op_7743_end_0"), val = tensor<int32, [4]>([2, 448, 1, 256])];
            tensor<bool, [4]> var_7743_end_mask_0 = const()[name = tensor<string, []>("op_7743_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7743_cast = slice_by_index(begin = var_7743_begin_0, end = var_7743_end_0, end_mask = var_7743_end_mask_0, x = q_37_cast);
            tensor<int32, [4]> var_7747_begin_0 = const()[name = tensor<string, []>("op_7747_begin_0"), val = tensor<int32, [4]>([0, 448, 0, 0])];
            tensor<int32, [4]> var_7747_end_0 = const()[name = tensor<string, []>("op_7747_end_0"), val = tensor<int32, [4]>([2, 512, 1, 256])];
            tensor<bool, [4]> var_7747_end_mask_0 = const()[name = tensor<string, []>("op_7747_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7747_cast = slice_by_index(begin = var_7747_begin_0, end = var_7747_end_0, end_mask = var_7747_end_mask_0, x = q_37_cast);
            tensor<int32, [4]> var_7751_begin_0 = const()[name = tensor<string, []>("op_7751_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_7751_end_0 = const()[name = tensor<string, []>("op_7751_end_0"), val = tensor<int32, [4]>([2, 576, 1, 256])];
            tensor<bool, [4]> var_7751_end_mask_0 = const()[name = tensor<string, []>("op_7751_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7751_cast = slice_by_index(begin = var_7751_begin_0, end = var_7751_end_0, end_mask = var_7751_end_mask_0, x = q_37_cast);
            tensor<int32, [4]> var_7755_begin_0 = const()[name = tensor<string, []>("op_7755_begin_0"), val = tensor<int32, [4]>([0, 576, 0, 0])];
            tensor<int32, [4]> var_7755_end_0 = const()[name = tensor<string, []>("op_7755_end_0"), val = tensor<int32, [4]>([2, 640, 1, 256])];
            tensor<bool, [4]> var_7755_end_mask_0 = const()[name = tensor<string, []>("op_7755_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7755_cast = slice_by_index(begin = var_7755_begin_0, end = var_7755_end_0, end_mask = var_7755_end_mask_0, x = q_37_cast);
            tensor<int32, [4]> var_7759_begin_0 = const()[name = tensor<string, []>("op_7759_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_7759_end_0 = const()[name = tensor<string, []>("op_7759_end_0"), val = tensor<int32, [4]>([2, 704, 1, 256])];
            tensor<bool, [4]> var_7759_end_mask_0 = const()[name = tensor<string, []>("op_7759_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7759_cast = slice_by_index(begin = var_7759_begin_0, end = var_7759_end_0, end_mask = var_7759_end_mask_0, x = q_37_cast);
            tensor<int32, [4]> var_7763_begin_0 = const()[name = tensor<string, []>("op_7763_begin_0"), val = tensor<int32, [4]>([0, 704, 0, 0])];
            tensor<int32, [4]> var_7763_end_0 = const()[name = tensor<string, []>("op_7763_end_0"), val = tensor<int32, [4]>([2, 768, 1, 256])];
            tensor<bool, [4]> var_7763_end_mask_0 = const()[name = tensor<string, []>("op_7763_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7763_cast = slice_by_index(begin = var_7763_begin_0, end = var_7763_end_0, end_mask = var_7763_end_mask_0, x = q_37_cast);
            tensor<int32, [4]> var_7767_begin_0 = const()[name = tensor<string, []>("op_7767_begin_0"), val = tensor<int32, [4]>([0, 768, 0, 0])];
            tensor<int32, [4]> var_7767_end_0 = const()[name = tensor<string, []>("op_7767_end_0"), val = tensor<int32, [4]>([2, 832, 1, 256])];
            tensor<bool, [4]> var_7767_end_mask_0 = const()[name = tensor<string, []>("op_7767_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7767_cast = slice_by_index(begin = var_7767_begin_0, end = var_7767_end_0, end_mask = var_7767_end_mask_0, x = q_37_cast);
            tensor<int32, [4]> var_7771_begin_0 = const()[name = tensor<string, []>("op_7771_begin_0"), val = tensor<int32, [4]>([0, 832, 0, 0])];
            tensor<int32, [4]> var_7771_end_0 = const()[name = tensor<string, []>("op_7771_end_0"), val = tensor<int32, [4]>([2, 896, 1, 256])];
            tensor<bool, [4]> var_7771_end_mask_0 = const()[name = tensor<string, []>("op_7771_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7771_cast = slice_by_index(begin = var_7771_begin_0, end = var_7771_end_0, end_mask = var_7771_end_mask_0, x = q_37_cast);
            tensor<int32, [4]> var_7775_begin_0 = const()[name = tensor<string, []>("op_7775_begin_0"), val = tensor<int32, [4]>([0, 896, 0, 0])];
            tensor<int32, [4]> var_7775_end_0 = const()[name = tensor<string, []>("op_7775_end_0"), val = tensor<int32, [4]>([2, 960, 1, 256])];
            tensor<bool, [4]> var_7775_end_mask_0 = const()[name = tensor<string, []>("op_7775_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7775_cast = slice_by_index(begin = var_7775_begin_0, end = var_7775_end_0, end_mask = var_7775_end_mask_0, x = q_37_cast);
            tensor<int32, [4]> var_7779_begin_0 = const()[name = tensor<string, []>("op_7779_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_7779_end_0 = const()[name = tensor<string, []>("op_7779_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 256])];
            tensor<bool, [4]> var_7779_end_mask_0 = const()[name = tensor<string, []>("op_7779_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7779_cast = slice_by_index(begin = var_7779_begin_0, end = var_7779_end_0, end_mask = var_7779_end_mask_0, x = q_37_cast);
            tensor<int32, [4]> var_7783_begin_0 = const()[name = tensor<string, []>("op_7783_begin_0"), val = tensor<int32, [4]>([0, 1024, 0, 0])];
            tensor<int32, [4]> var_7783_end_0 = const()[name = tensor<string, []>("op_7783_end_0"), val = tensor<int32, [4]>([2, 1088, 1, 256])];
            tensor<bool, [4]> var_7783_end_mask_0 = const()[name = tensor<string, []>("op_7783_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7783_cast = slice_by_index(begin = var_7783_begin_0, end = var_7783_end_0, end_mask = var_7783_end_mask_0, x = q_37_cast);
            tensor<int32, [4]> var_7787_begin_0 = const()[name = tensor<string, []>("op_7787_begin_0"), val = tensor<int32, [4]>([0, 1088, 0, 0])];
            tensor<int32, [4]> var_7787_end_0 = const()[name = tensor<string, []>("op_7787_end_0"), val = tensor<int32, [4]>([2, 1152, 1, 256])];
            tensor<bool, [4]> var_7787_end_mask_0 = const()[name = tensor<string, []>("op_7787_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7787_cast = slice_by_index(begin = var_7787_begin_0, end = var_7787_end_0, end_mask = var_7787_end_mask_0, x = q_37_cast);
            tensor<int32, [4]> var_7791_begin_0 = const()[name = tensor<string, []>("op_7791_begin_0"), val = tensor<int32, [4]>([0, 1152, 0, 0])];
            tensor<int32, [4]> var_7791_end_0 = const()[name = tensor<string, []>("op_7791_end_0"), val = tensor<int32, [4]>([2, 1216, 1, 256])];
            tensor<bool, [4]> var_7791_end_mask_0 = const()[name = tensor<string, []>("op_7791_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7791_cast = slice_by_index(begin = var_7791_begin_0, end = var_7791_end_0, end_mask = var_7791_end_mask_0, x = q_37_cast);
            tensor<int32, [4]> var_7795_begin_0 = const()[name = tensor<string, []>("op_7795_begin_0"), val = tensor<int32, [4]>([0, 1216, 0, 0])];
            tensor<int32, [4]> var_7795_end_0 = const()[name = tensor<string, []>("op_7795_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<bool, [4]> var_7795_end_mask_0 = const()[name = tensor<string, []>("op_7795_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7795_cast = slice_by_index(begin = var_7795_begin_0, end = var_7795_end_0, end_mask = var_7795_end_mask_0, x = q_37_cast);
            tensor<int32, [4]> k_75_perm_0 = const()[name = tensor<string, []>("k_75_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_7802_begin_0 = const()[name = tensor<string, []>("op_7802_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_7802_end_0 = const()[name = tensor<string, []>("op_7802_end_0"), val = tensor<int32, [4]>([2, 256, 1, 64])];
            tensor<bool, [4]> var_7802_end_mask_0 = const()[name = tensor<string, []>("op_7802_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 1280]> transpose_13 = transpose(perm = k_75_perm_0, x = k_73_cast);
            tensor<fp16, [2, 256, 1, 64]> var_7802_cast = slice_by_index(begin = var_7802_begin_0, end = var_7802_end_0, end_mask = var_7802_end_mask_0, x = transpose_13);
            tensor<int32, [4]> var_7806_begin_0 = const()[name = tensor<string, []>("op_7806_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 64])];
            tensor<int32, [4]> var_7806_end_0 = const()[name = tensor<string, []>("op_7806_end_0"), val = tensor<int32, [4]>([2, 256, 1, 128])];
            tensor<bool, [4]> var_7806_end_mask_0 = const()[name = tensor<string, []>("op_7806_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_7806_cast = slice_by_index(begin = var_7806_begin_0, end = var_7806_end_0, end_mask = var_7806_end_mask_0, x = transpose_13);
            tensor<int32, [4]> var_7810_begin_0 = const()[name = tensor<string, []>("op_7810_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 128])];
            tensor<int32, [4]> var_7810_end_0 = const()[name = tensor<string, []>("op_7810_end_0"), val = tensor<int32, [4]>([2, 256, 1, 192])];
            tensor<bool, [4]> var_7810_end_mask_0 = const()[name = tensor<string, []>("op_7810_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_7810_cast = slice_by_index(begin = var_7810_begin_0, end = var_7810_end_0, end_mask = var_7810_end_mask_0, x = transpose_13);
            tensor<int32, [4]> var_7814_begin_0 = const()[name = tensor<string, []>("op_7814_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 192])];
            tensor<int32, [4]> var_7814_end_0 = const()[name = tensor<string, []>("op_7814_end_0"), val = tensor<int32, [4]>([2, 256, 1, 256])];
            tensor<bool, [4]> var_7814_end_mask_0 = const()[name = tensor<string, []>("op_7814_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_7814_cast = slice_by_index(begin = var_7814_begin_0, end = var_7814_end_0, end_mask = var_7814_end_mask_0, x = transpose_13);
            tensor<int32, [4]> var_7818_begin_0 = const()[name = tensor<string, []>("op_7818_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 256])];
            tensor<int32, [4]> var_7818_end_0 = const()[name = tensor<string, []>("op_7818_end_0"), val = tensor<int32, [4]>([2, 256, 1, 320])];
            tensor<bool, [4]> var_7818_end_mask_0 = const()[name = tensor<string, []>("op_7818_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_7818_cast = slice_by_index(begin = var_7818_begin_0, end = var_7818_end_0, end_mask = var_7818_end_mask_0, x = transpose_13);
            tensor<int32, [4]> var_7822_begin_0 = const()[name = tensor<string, []>("op_7822_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_7822_end_0 = const()[name = tensor<string, []>("op_7822_end_0"), val = tensor<int32, [4]>([2, 256, 1, 384])];
            tensor<bool, [4]> var_7822_end_mask_0 = const()[name = tensor<string, []>("op_7822_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_7822_cast = slice_by_index(begin = var_7822_begin_0, end = var_7822_end_0, end_mask = var_7822_end_mask_0, x = transpose_13);
            tensor<int32, [4]> var_7826_begin_0 = const()[name = tensor<string, []>("op_7826_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 384])];
            tensor<int32, [4]> var_7826_end_0 = const()[name = tensor<string, []>("op_7826_end_0"), val = tensor<int32, [4]>([2, 256, 1, 448])];
            tensor<bool, [4]> var_7826_end_mask_0 = const()[name = tensor<string, []>("op_7826_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_7826_cast = slice_by_index(begin = var_7826_begin_0, end = var_7826_end_0, end_mask = var_7826_end_mask_0, x = transpose_13);
            tensor<int32, [4]> var_7830_begin_0 = const()[name = tensor<string, []>("op_7830_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 448])];
            tensor<int32, [4]> var_7830_end_0 = const()[name = tensor<string, []>("op_7830_end_0"), val = tensor<int32, [4]>([2, 256, 1, 512])];
            tensor<bool, [4]> var_7830_end_mask_0 = const()[name = tensor<string, []>("op_7830_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_7830_cast = slice_by_index(begin = var_7830_begin_0, end = var_7830_end_0, end_mask = var_7830_end_mask_0, x = transpose_13);
            tensor<int32, [4]> var_7834_begin_0 = const()[name = tensor<string, []>("op_7834_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 512])];
            tensor<int32, [4]> var_7834_end_0 = const()[name = tensor<string, []>("op_7834_end_0"), val = tensor<int32, [4]>([2, 256, 1, 576])];
            tensor<bool, [4]> var_7834_end_mask_0 = const()[name = tensor<string, []>("op_7834_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_7834_cast = slice_by_index(begin = var_7834_begin_0, end = var_7834_end_0, end_mask = var_7834_end_mask_0, x = transpose_13);
            tensor<int32, [4]> var_7838_begin_0 = const()[name = tensor<string, []>("op_7838_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 576])];
            tensor<int32, [4]> var_7838_end_0 = const()[name = tensor<string, []>("op_7838_end_0"), val = tensor<int32, [4]>([2, 256, 1, 640])];
            tensor<bool, [4]> var_7838_end_mask_0 = const()[name = tensor<string, []>("op_7838_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_7838_cast = slice_by_index(begin = var_7838_begin_0, end = var_7838_end_0, end_mask = var_7838_end_mask_0, x = transpose_13);
            tensor<int32, [4]> var_7842_begin_0 = const()[name = tensor<string, []>("op_7842_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 640])];
            tensor<int32, [4]> var_7842_end_0 = const()[name = tensor<string, []>("op_7842_end_0"), val = tensor<int32, [4]>([2, 256, 1, 704])];
            tensor<bool, [4]> var_7842_end_mask_0 = const()[name = tensor<string, []>("op_7842_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_7842_cast = slice_by_index(begin = var_7842_begin_0, end = var_7842_end_0, end_mask = var_7842_end_mask_0, x = transpose_13);
            tensor<int32, [4]> var_7846_begin_0 = const()[name = tensor<string, []>("op_7846_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 704])];
            tensor<int32, [4]> var_7846_end_0 = const()[name = tensor<string, []>("op_7846_end_0"), val = tensor<int32, [4]>([2, 256, 1, 768])];
            tensor<bool, [4]> var_7846_end_mask_0 = const()[name = tensor<string, []>("op_7846_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_7846_cast = slice_by_index(begin = var_7846_begin_0, end = var_7846_end_0, end_mask = var_7846_end_mask_0, x = transpose_13);
            tensor<int32, [4]> var_7850_begin_0 = const()[name = tensor<string, []>("op_7850_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 768])];
            tensor<int32, [4]> var_7850_end_0 = const()[name = tensor<string, []>("op_7850_end_0"), val = tensor<int32, [4]>([2, 256, 1, 832])];
            tensor<bool, [4]> var_7850_end_mask_0 = const()[name = tensor<string, []>("op_7850_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_7850_cast = slice_by_index(begin = var_7850_begin_0, end = var_7850_end_0, end_mask = var_7850_end_mask_0, x = transpose_13);
            tensor<int32, [4]> var_7854_begin_0 = const()[name = tensor<string, []>("op_7854_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 832])];
            tensor<int32, [4]> var_7854_end_0 = const()[name = tensor<string, []>("op_7854_end_0"), val = tensor<int32, [4]>([2, 256, 1, 896])];
            tensor<bool, [4]> var_7854_end_mask_0 = const()[name = tensor<string, []>("op_7854_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_7854_cast = slice_by_index(begin = var_7854_begin_0, end = var_7854_end_0, end_mask = var_7854_end_mask_0, x = transpose_13);
            tensor<int32, [4]> var_7858_begin_0 = const()[name = tensor<string, []>("op_7858_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 896])];
            tensor<int32, [4]> var_7858_end_0 = const()[name = tensor<string, []>("op_7858_end_0"), val = tensor<int32, [4]>([2, 256, 1, 960])];
            tensor<bool, [4]> var_7858_end_mask_0 = const()[name = tensor<string, []>("op_7858_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_7858_cast = slice_by_index(begin = var_7858_begin_0, end = var_7858_end_0, end_mask = var_7858_end_mask_0, x = transpose_13);
            tensor<int32, [4]> var_7862_begin_0 = const()[name = tensor<string, []>("op_7862_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 960])];
            tensor<int32, [4]> var_7862_end_0 = const()[name = tensor<string, []>("op_7862_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1024])];
            tensor<bool, [4]> var_7862_end_mask_0 = const()[name = tensor<string, []>("op_7862_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_7862_cast = slice_by_index(begin = var_7862_begin_0, end = var_7862_end_0, end_mask = var_7862_end_mask_0, x = transpose_13);
            tensor<int32, [4]> var_7866_begin_0 = const()[name = tensor<string, []>("op_7866_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1024])];
            tensor<int32, [4]> var_7866_end_0 = const()[name = tensor<string, []>("op_7866_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1088])];
            tensor<bool, [4]> var_7866_end_mask_0 = const()[name = tensor<string, []>("op_7866_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_7866_cast = slice_by_index(begin = var_7866_begin_0, end = var_7866_end_0, end_mask = var_7866_end_mask_0, x = transpose_13);
            tensor<int32, [4]> var_7870_begin_0 = const()[name = tensor<string, []>("op_7870_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1088])];
            tensor<int32, [4]> var_7870_end_0 = const()[name = tensor<string, []>("op_7870_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1152])];
            tensor<bool, [4]> var_7870_end_mask_0 = const()[name = tensor<string, []>("op_7870_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_7870_cast = slice_by_index(begin = var_7870_begin_0, end = var_7870_end_0, end_mask = var_7870_end_mask_0, x = transpose_13);
            tensor<int32, [4]> var_7874_begin_0 = const()[name = tensor<string, []>("op_7874_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1152])];
            tensor<int32, [4]> var_7874_end_0 = const()[name = tensor<string, []>("op_7874_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1216])];
            tensor<bool, [4]> var_7874_end_mask_0 = const()[name = tensor<string, []>("op_7874_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_7874_cast = slice_by_index(begin = var_7874_begin_0, end = var_7874_end_0, end_mask = var_7874_end_mask_0, x = transpose_13);
            tensor<int32, [4]> var_7878_begin_0 = const()[name = tensor<string, []>("op_7878_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1216])];
            tensor<int32, [4]> var_7878_end_0 = const()[name = tensor<string, []>("op_7878_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1280])];
            tensor<bool, [4]> var_7878_end_mask_0 = const()[name = tensor<string, []>("op_7878_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 64]> var_7878_cast = slice_by_index(begin = var_7878_begin_0, end = var_7878_end_0, end_mask = var_7878_end_mask_0, x = transpose_13);
            tensor<int32, [4]> var_7880_begin_0 = const()[name = tensor<string, []>("op_7880_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_7880_end_0 = const()[name = tensor<string, []>("op_7880_end_0"), val = tensor<int32, [4]>([2, 64, 1, 256])];
            tensor<bool, [4]> var_7880_end_mask_0 = const()[name = tensor<string, []>("op_7880_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7880_cast = slice_by_index(begin = var_7880_begin_0, end = var_7880_end_0, end_mask = var_7880_end_mask_0, x = v_37_cast);
            tensor<int32, [4]> var_7884_begin_0 = const()[name = tensor<string, []>("op_7884_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_7884_end_0 = const()[name = tensor<string, []>("op_7884_end_0"), val = tensor<int32, [4]>([2, 128, 1, 256])];
            tensor<bool, [4]> var_7884_end_mask_0 = const()[name = tensor<string, []>("op_7884_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7884_cast = slice_by_index(begin = var_7884_begin_0, end = var_7884_end_0, end_mask = var_7884_end_mask_0, x = v_37_cast);
            tensor<int32, [4]> var_7888_begin_0 = const()[name = tensor<string, []>("op_7888_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_7888_end_0 = const()[name = tensor<string, []>("op_7888_end_0"), val = tensor<int32, [4]>([2, 192, 1, 256])];
            tensor<bool, [4]> var_7888_end_mask_0 = const()[name = tensor<string, []>("op_7888_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7888_cast = slice_by_index(begin = var_7888_begin_0, end = var_7888_end_0, end_mask = var_7888_end_mask_0, x = v_37_cast);
            tensor<int32, [4]> var_7892_begin_0 = const()[name = tensor<string, []>("op_7892_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_7892_end_0 = const()[name = tensor<string, []>("op_7892_end_0"), val = tensor<int32, [4]>([2, 256, 1, 256])];
            tensor<bool, [4]> var_7892_end_mask_0 = const()[name = tensor<string, []>("op_7892_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7892_cast = slice_by_index(begin = var_7892_begin_0, end = var_7892_end_0, end_mask = var_7892_end_mask_0, x = v_37_cast);
            tensor<int32, [4]> var_7896_begin_0 = const()[name = tensor<string, []>("op_7896_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_7896_end_0 = const()[name = tensor<string, []>("op_7896_end_0"), val = tensor<int32, [4]>([2, 320, 1, 256])];
            tensor<bool, [4]> var_7896_end_mask_0 = const()[name = tensor<string, []>("op_7896_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7896_cast = slice_by_index(begin = var_7896_begin_0, end = var_7896_end_0, end_mask = var_7896_end_mask_0, x = v_37_cast);
            tensor<int32, [4]> var_7900_begin_0 = const()[name = tensor<string, []>("op_7900_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_7900_end_0 = const()[name = tensor<string, []>("op_7900_end_0"), val = tensor<int32, [4]>([2, 384, 1, 256])];
            tensor<bool, [4]> var_7900_end_mask_0 = const()[name = tensor<string, []>("op_7900_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7900_cast = slice_by_index(begin = var_7900_begin_0, end = var_7900_end_0, end_mask = var_7900_end_mask_0, x = v_37_cast);
            tensor<int32, [4]> var_7904_begin_0 = const()[name = tensor<string, []>("op_7904_begin_0"), val = tensor<int32, [4]>([0, 384, 0, 0])];
            tensor<int32, [4]> var_7904_end_0 = const()[name = tensor<string, []>("op_7904_end_0"), val = tensor<int32, [4]>([2, 448, 1, 256])];
            tensor<bool, [4]> var_7904_end_mask_0 = const()[name = tensor<string, []>("op_7904_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7904_cast = slice_by_index(begin = var_7904_begin_0, end = var_7904_end_0, end_mask = var_7904_end_mask_0, x = v_37_cast);
            tensor<int32, [4]> var_7908_begin_0 = const()[name = tensor<string, []>("op_7908_begin_0"), val = tensor<int32, [4]>([0, 448, 0, 0])];
            tensor<int32, [4]> var_7908_end_0 = const()[name = tensor<string, []>("op_7908_end_0"), val = tensor<int32, [4]>([2, 512, 1, 256])];
            tensor<bool, [4]> var_7908_end_mask_0 = const()[name = tensor<string, []>("op_7908_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7908_cast = slice_by_index(begin = var_7908_begin_0, end = var_7908_end_0, end_mask = var_7908_end_mask_0, x = v_37_cast);
            tensor<int32, [4]> var_7912_begin_0 = const()[name = tensor<string, []>("op_7912_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_7912_end_0 = const()[name = tensor<string, []>("op_7912_end_0"), val = tensor<int32, [4]>([2, 576, 1, 256])];
            tensor<bool, [4]> var_7912_end_mask_0 = const()[name = tensor<string, []>("op_7912_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7912_cast = slice_by_index(begin = var_7912_begin_0, end = var_7912_end_0, end_mask = var_7912_end_mask_0, x = v_37_cast);
            tensor<int32, [4]> var_7916_begin_0 = const()[name = tensor<string, []>("op_7916_begin_0"), val = tensor<int32, [4]>([0, 576, 0, 0])];
            tensor<int32, [4]> var_7916_end_0 = const()[name = tensor<string, []>("op_7916_end_0"), val = tensor<int32, [4]>([2, 640, 1, 256])];
            tensor<bool, [4]> var_7916_end_mask_0 = const()[name = tensor<string, []>("op_7916_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7916_cast = slice_by_index(begin = var_7916_begin_0, end = var_7916_end_0, end_mask = var_7916_end_mask_0, x = v_37_cast);
            tensor<int32, [4]> var_7920_begin_0 = const()[name = tensor<string, []>("op_7920_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_7920_end_0 = const()[name = tensor<string, []>("op_7920_end_0"), val = tensor<int32, [4]>([2, 704, 1, 256])];
            tensor<bool, [4]> var_7920_end_mask_0 = const()[name = tensor<string, []>("op_7920_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7920_cast = slice_by_index(begin = var_7920_begin_0, end = var_7920_end_0, end_mask = var_7920_end_mask_0, x = v_37_cast);
            tensor<int32, [4]> var_7924_begin_0 = const()[name = tensor<string, []>("op_7924_begin_0"), val = tensor<int32, [4]>([0, 704, 0, 0])];
            tensor<int32, [4]> var_7924_end_0 = const()[name = tensor<string, []>("op_7924_end_0"), val = tensor<int32, [4]>([2, 768, 1, 256])];
            tensor<bool, [4]> var_7924_end_mask_0 = const()[name = tensor<string, []>("op_7924_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7924_cast = slice_by_index(begin = var_7924_begin_0, end = var_7924_end_0, end_mask = var_7924_end_mask_0, x = v_37_cast);
            tensor<int32, [4]> var_7928_begin_0 = const()[name = tensor<string, []>("op_7928_begin_0"), val = tensor<int32, [4]>([0, 768, 0, 0])];
            tensor<int32, [4]> var_7928_end_0 = const()[name = tensor<string, []>("op_7928_end_0"), val = tensor<int32, [4]>([2, 832, 1, 256])];
            tensor<bool, [4]> var_7928_end_mask_0 = const()[name = tensor<string, []>("op_7928_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7928_cast = slice_by_index(begin = var_7928_begin_0, end = var_7928_end_0, end_mask = var_7928_end_mask_0, x = v_37_cast);
            tensor<int32, [4]> var_7932_begin_0 = const()[name = tensor<string, []>("op_7932_begin_0"), val = tensor<int32, [4]>([0, 832, 0, 0])];
            tensor<int32, [4]> var_7932_end_0 = const()[name = tensor<string, []>("op_7932_end_0"), val = tensor<int32, [4]>([2, 896, 1, 256])];
            tensor<bool, [4]> var_7932_end_mask_0 = const()[name = tensor<string, []>("op_7932_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7932_cast = slice_by_index(begin = var_7932_begin_0, end = var_7932_end_0, end_mask = var_7932_end_mask_0, x = v_37_cast);
            tensor<int32, [4]> var_7936_begin_0 = const()[name = tensor<string, []>("op_7936_begin_0"), val = tensor<int32, [4]>([0, 896, 0, 0])];
            tensor<int32, [4]> var_7936_end_0 = const()[name = tensor<string, []>("op_7936_end_0"), val = tensor<int32, [4]>([2, 960, 1, 256])];
            tensor<bool, [4]> var_7936_end_mask_0 = const()[name = tensor<string, []>("op_7936_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7936_cast = slice_by_index(begin = var_7936_begin_0, end = var_7936_end_0, end_mask = var_7936_end_mask_0, x = v_37_cast);
            tensor<int32, [4]> var_7940_begin_0 = const()[name = tensor<string, []>("op_7940_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_7940_end_0 = const()[name = tensor<string, []>("op_7940_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 256])];
            tensor<bool, [4]> var_7940_end_mask_0 = const()[name = tensor<string, []>("op_7940_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7940_cast = slice_by_index(begin = var_7940_begin_0, end = var_7940_end_0, end_mask = var_7940_end_mask_0, x = v_37_cast);
            tensor<int32, [4]> var_7944_begin_0 = const()[name = tensor<string, []>("op_7944_begin_0"), val = tensor<int32, [4]>([0, 1024, 0, 0])];
            tensor<int32, [4]> var_7944_end_0 = const()[name = tensor<string, []>("op_7944_end_0"), val = tensor<int32, [4]>([2, 1088, 1, 256])];
            tensor<bool, [4]> var_7944_end_mask_0 = const()[name = tensor<string, []>("op_7944_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7944_cast = slice_by_index(begin = var_7944_begin_0, end = var_7944_end_0, end_mask = var_7944_end_mask_0, x = v_37_cast);
            tensor<int32, [4]> var_7948_begin_0 = const()[name = tensor<string, []>("op_7948_begin_0"), val = tensor<int32, [4]>([0, 1088, 0, 0])];
            tensor<int32, [4]> var_7948_end_0 = const()[name = tensor<string, []>("op_7948_end_0"), val = tensor<int32, [4]>([2, 1152, 1, 256])];
            tensor<bool, [4]> var_7948_end_mask_0 = const()[name = tensor<string, []>("op_7948_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7948_cast = slice_by_index(begin = var_7948_begin_0, end = var_7948_end_0, end_mask = var_7948_end_mask_0, x = v_37_cast);
            tensor<int32, [4]> var_7952_begin_0 = const()[name = tensor<string, []>("op_7952_begin_0"), val = tensor<int32, [4]>([0, 1152, 0, 0])];
            tensor<int32, [4]> var_7952_end_0 = const()[name = tensor<string, []>("op_7952_end_0"), val = tensor<int32, [4]>([2, 1216, 1, 256])];
            tensor<bool, [4]> var_7952_end_mask_0 = const()[name = tensor<string, []>("op_7952_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7952_cast = slice_by_index(begin = var_7952_begin_0, end = var_7952_end_0, end_mask = var_7952_end_mask_0, x = v_37_cast);
            tensor<int32, [4]> var_7956_begin_0 = const()[name = tensor<string, []>("op_7956_begin_0"), val = tensor<int32, [4]>([0, 1216, 0, 0])];
            tensor<int32, [4]> var_7956_end_0 = const()[name = tensor<string, []>("op_7956_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<bool, [4]> var_7956_end_mask_0 = const()[name = tensor<string, []>("op_7956_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_7956_cast = slice_by_index(begin = var_7956_begin_0, end = var_7956_end_0, end_mask = var_7956_end_mask_0, x = v_37_cast);
            tensor<string, []> var_7960_equation_0 = const()[name = tensor<string, []>("op_7960_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_7960_cast = einsum(equation = var_7960_equation_0, values = (var_7802_cast, var_7719_cast));
            tensor<fp16, []> var_7961_to_fp16 = const()[name = tensor<string, []>("op_7961_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_521_cast = mul(x = var_7960_cast, y = var_7961_to_fp16);
            tensor<string, []> var_7964_equation_0 = const()[name = tensor<string, []>("op_7964_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_7964_cast = einsum(equation = var_7964_equation_0, values = (var_7806_cast, var_7723_cast));
            tensor<fp16, []> var_7965_to_fp16 = const()[name = tensor<string, []>("op_7965_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_523_cast = mul(x = var_7964_cast, y = var_7965_to_fp16);
            tensor<string, []> var_7968_equation_0 = const()[name = tensor<string, []>("op_7968_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_7968_cast = einsum(equation = var_7968_equation_0, values = (var_7810_cast, var_7727_cast));
            tensor<fp16, []> var_7969_to_fp16 = const()[name = tensor<string, []>("op_7969_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_525_cast = mul(x = var_7968_cast, y = var_7969_to_fp16);
            tensor<string, []> var_7972_equation_0 = const()[name = tensor<string, []>("op_7972_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_7972_cast = einsum(equation = var_7972_equation_0, values = (var_7814_cast, var_7731_cast));
            tensor<fp16, []> var_7973_to_fp16 = const()[name = tensor<string, []>("op_7973_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_527_cast = mul(x = var_7972_cast, y = var_7973_to_fp16);
            tensor<string, []> var_7976_equation_0 = const()[name = tensor<string, []>("op_7976_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_7976_cast = einsum(equation = var_7976_equation_0, values = (var_7818_cast, var_7735_cast));
            tensor<fp16, []> var_7977_to_fp16 = const()[name = tensor<string, []>("op_7977_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_529_cast = mul(x = var_7976_cast, y = var_7977_to_fp16);
            tensor<string, []> var_7980_equation_0 = const()[name = tensor<string, []>("op_7980_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_7980_cast = einsum(equation = var_7980_equation_0, values = (var_7822_cast, var_7739_cast));
            tensor<fp16, []> var_7981_to_fp16 = const()[name = tensor<string, []>("op_7981_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_531_cast = mul(x = var_7980_cast, y = var_7981_to_fp16);
            tensor<string, []> var_7984_equation_0 = const()[name = tensor<string, []>("op_7984_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_7984_cast = einsum(equation = var_7984_equation_0, values = (var_7826_cast, var_7743_cast));
            tensor<fp16, []> var_7985_to_fp16 = const()[name = tensor<string, []>("op_7985_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_533_cast = mul(x = var_7984_cast, y = var_7985_to_fp16);
            tensor<string, []> var_7988_equation_0 = const()[name = tensor<string, []>("op_7988_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_7988_cast = einsum(equation = var_7988_equation_0, values = (var_7830_cast, var_7747_cast));
            tensor<fp16, []> var_7989_to_fp16 = const()[name = tensor<string, []>("op_7989_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_535_cast = mul(x = var_7988_cast, y = var_7989_to_fp16);
            tensor<string, []> var_7992_equation_0 = const()[name = tensor<string, []>("op_7992_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_7992_cast = einsum(equation = var_7992_equation_0, values = (var_7834_cast, var_7751_cast));
            tensor<fp16, []> var_7993_to_fp16 = const()[name = tensor<string, []>("op_7993_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_537_cast = mul(x = var_7992_cast, y = var_7993_to_fp16);
            tensor<string, []> var_7996_equation_0 = const()[name = tensor<string, []>("op_7996_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_7996_cast = einsum(equation = var_7996_equation_0, values = (var_7838_cast, var_7755_cast));
            tensor<fp16, []> var_7997_to_fp16 = const()[name = tensor<string, []>("op_7997_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_539_cast = mul(x = var_7996_cast, y = var_7997_to_fp16);
            tensor<string, []> var_8000_equation_0 = const()[name = tensor<string, []>("op_8000_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_8000_cast = einsum(equation = var_8000_equation_0, values = (var_7842_cast, var_7759_cast));
            tensor<fp16, []> var_8001_to_fp16 = const()[name = tensor<string, []>("op_8001_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_541_cast = mul(x = var_8000_cast, y = var_8001_to_fp16);
            tensor<string, []> var_8004_equation_0 = const()[name = tensor<string, []>("op_8004_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_8004_cast = einsum(equation = var_8004_equation_0, values = (var_7846_cast, var_7763_cast));
            tensor<fp16, []> var_8005_to_fp16 = const()[name = tensor<string, []>("op_8005_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_543_cast = mul(x = var_8004_cast, y = var_8005_to_fp16);
            tensor<string, []> var_8008_equation_0 = const()[name = tensor<string, []>("op_8008_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_8008_cast = einsum(equation = var_8008_equation_0, values = (var_7850_cast, var_7767_cast));
            tensor<fp16, []> var_8009_to_fp16 = const()[name = tensor<string, []>("op_8009_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_545_cast = mul(x = var_8008_cast, y = var_8009_to_fp16);
            tensor<string, []> var_8012_equation_0 = const()[name = tensor<string, []>("op_8012_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_8012_cast = einsum(equation = var_8012_equation_0, values = (var_7854_cast, var_7771_cast));
            tensor<fp16, []> var_8013_to_fp16 = const()[name = tensor<string, []>("op_8013_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_547_cast = mul(x = var_8012_cast, y = var_8013_to_fp16);
            tensor<string, []> var_8016_equation_0 = const()[name = tensor<string, []>("op_8016_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_8016_cast = einsum(equation = var_8016_equation_0, values = (var_7858_cast, var_7775_cast));
            tensor<fp16, []> var_8017_to_fp16 = const()[name = tensor<string, []>("op_8017_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_549_cast = mul(x = var_8016_cast, y = var_8017_to_fp16);
            tensor<string, []> var_8020_equation_0 = const()[name = tensor<string, []>("op_8020_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_8020_cast = einsum(equation = var_8020_equation_0, values = (var_7862_cast, var_7779_cast));
            tensor<fp16, []> var_8021_to_fp16 = const()[name = tensor<string, []>("op_8021_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_551_cast = mul(x = var_8020_cast, y = var_8021_to_fp16);
            tensor<string, []> var_8024_equation_0 = const()[name = tensor<string, []>("op_8024_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_8024_cast = einsum(equation = var_8024_equation_0, values = (var_7866_cast, var_7783_cast));
            tensor<fp16, []> var_8025_to_fp16 = const()[name = tensor<string, []>("op_8025_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_553_cast = mul(x = var_8024_cast, y = var_8025_to_fp16);
            tensor<string, []> var_8028_equation_0 = const()[name = tensor<string, []>("op_8028_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_8028_cast = einsum(equation = var_8028_equation_0, values = (var_7870_cast, var_7787_cast));
            tensor<fp16, []> var_8029_to_fp16 = const()[name = tensor<string, []>("op_8029_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_555_cast = mul(x = var_8028_cast, y = var_8029_to_fp16);
            tensor<string, []> var_8032_equation_0 = const()[name = tensor<string, []>("op_8032_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_8032_cast = einsum(equation = var_8032_equation_0, values = (var_7874_cast, var_7791_cast));
            tensor<fp16, []> var_8033_to_fp16 = const()[name = tensor<string, []>("op_8033_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_557_cast = mul(x = var_8032_cast, y = var_8033_to_fp16);
            tensor<string, []> var_8036_equation_0 = const()[name = tensor<string, []>("op_8036_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_8036_cast = einsum(equation = var_8036_equation_0, values = (var_7878_cast, var_7795_cast));
            tensor<fp16, []> var_8037_to_fp16 = const()[name = tensor<string, []>("op_8037_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 256, 1, 256]> aw_559_cast = mul(x = var_8036_cast, y = var_8037_to_fp16);
            tensor<fp16, [2, 256, 1, 256]> var_8039_cast = softmax(axis = var_5599, x = aw_521_cast);
            tensor<fp16, [2, 256, 1, 256]> var_8040_cast = softmax(axis = var_5599, x = aw_523_cast);
            tensor<fp16, [2, 256, 1, 256]> var_8041_cast = softmax(axis = var_5599, x = aw_525_cast);
            tensor<fp16, [2, 256, 1, 256]> var_8042_cast = softmax(axis = var_5599, x = aw_527_cast);
            tensor<fp16, [2, 256, 1, 256]> var_8043_cast = softmax(axis = var_5599, x = aw_529_cast);
            tensor<fp16, [2, 256, 1, 256]> var_8044_cast = softmax(axis = var_5599, x = aw_531_cast);
            tensor<fp16, [2, 256, 1, 256]> var_8045_cast = softmax(axis = var_5599, x = aw_533_cast);
            tensor<fp16, [2, 256, 1, 256]> var_8046_cast = softmax(axis = var_5599, x = aw_535_cast);
            tensor<fp16, [2, 256, 1, 256]> var_8047_cast = softmax(axis = var_5599, x = aw_537_cast);
            tensor<fp16, [2, 256, 1, 256]> var_8048_cast = softmax(axis = var_5599, x = aw_539_cast);
            tensor<fp16, [2, 256, 1, 256]> var_8049_cast = softmax(axis = var_5599, x = aw_541_cast);
            tensor<fp16, [2, 256, 1, 256]> var_8050_cast = softmax(axis = var_5599, x = aw_543_cast);
            tensor<fp16, [2, 256, 1, 256]> var_8051_cast = softmax(axis = var_5599, x = aw_545_cast);
            tensor<fp16, [2, 256, 1, 256]> var_8052_cast = softmax(axis = var_5599, x = aw_547_cast);
            tensor<fp16, [2, 256, 1, 256]> var_8053_cast = softmax(axis = var_5599, x = aw_549_cast);
            tensor<fp16, [2, 256, 1, 256]> var_8054_cast = softmax(axis = var_5599, x = aw_551_cast);
            tensor<fp16, [2, 256, 1, 256]> var_8055_cast = softmax(axis = var_5599, x = aw_553_cast);
            tensor<fp16, [2, 256, 1, 256]> var_8056_cast = softmax(axis = var_5599, x = aw_555_cast);
            tensor<fp16, [2, 256, 1, 256]> var_8057_cast = softmax(axis = var_5599, x = aw_557_cast);
            tensor<fp16, [2, 256, 1, 256]> var_8058_cast = softmax(axis = var_5599, x = aw_559_cast);
            tensor<string, []> var_8060_equation_0 = const()[name = tensor<string, []>("op_8060_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_8060_cast = einsum(equation = var_8060_equation_0, values = (var_7880_cast, var_8039_cast));
            tensor<string, []> var_8062_equation_0 = const()[name = tensor<string, []>("op_8062_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_8062_cast = einsum(equation = var_8062_equation_0, values = (var_7884_cast, var_8040_cast));
            tensor<string, []> var_8064_equation_0 = const()[name = tensor<string, []>("op_8064_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_8064_cast = einsum(equation = var_8064_equation_0, values = (var_7888_cast, var_8041_cast));
            tensor<string, []> var_8066_equation_0 = const()[name = tensor<string, []>("op_8066_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_8066_cast = einsum(equation = var_8066_equation_0, values = (var_7892_cast, var_8042_cast));
            tensor<string, []> var_8068_equation_0 = const()[name = tensor<string, []>("op_8068_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_8068_cast = einsum(equation = var_8068_equation_0, values = (var_7896_cast, var_8043_cast));
            tensor<string, []> var_8070_equation_0 = const()[name = tensor<string, []>("op_8070_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_8070_cast = einsum(equation = var_8070_equation_0, values = (var_7900_cast, var_8044_cast));
            tensor<string, []> var_8072_equation_0 = const()[name = tensor<string, []>("op_8072_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_8072_cast = einsum(equation = var_8072_equation_0, values = (var_7904_cast, var_8045_cast));
            tensor<string, []> var_8074_equation_0 = const()[name = tensor<string, []>("op_8074_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_8074_cast = einsum(equation = var_8074_equation_0, values = (var_7908_cast, var_8046_cast));
            tensor<string, []> var_8076_equation_0 = const()[name = tensor<string, []>("op_8076_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_8076_cast = einsum(equation = var_8076_equation_0, values = (var_7912_cast, var_8047_cast));
            tensor<string, []> var_8078_equation_0 = const()[name = tensor<string, []>("op_8078_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_8078_cast = einsum(equation = var_8078_equation_0, values = (var_7916_cast, var_8048_cast));
            tensor<string, []> var_8080_equation_0 = const()[name = tensor<string, []>("op_8080_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_8080_cast = einsum(equation = var_8080_equation_0, values = (var_7920_cast, var_8049_cast));
            tensor<string, []> var_8082_equation_0 = const()[name = tensor<string, []>("op_8082_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_8082_cast = einsum(equation = var_8082_equation_0, values = (var_7924_cast, var_8050_cast));
            tensor<string, []> var_8084_equation_0 = const()[name = tensor<string, []>("op_8084_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_8084_cast = einsum(equation = var_8084_equation_0, values = (var_7928_cast, var_8051_cast));
            tensor<string, []> var_8086_equation_0 = const()[name = tensor<string, []>("op_8086_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_8086_cast = einsum(equation = var_8086_equation_0, values = (var_7932_cast, var_8052_cast));
            tensor<string, []> var_8088_equation_0 = const()[name = tensor<string, []>("op_8088_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_8088_cast = einsum(equation = var_8088_equation_0, values = (var_7936_cast, var_8053_cast));
            tensor<string, []> var_8090_equation_0 = const()[name = tensor<string, []>("op_8090_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_8090_cast = einsum(equation = var_8090_equation_0, values = (var_7940_cast, var_8054_cast));
            tensor<string, []> var_8092_equation_0 = const()[name = tensor<string, []>("op_8092_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_8092_cast = einsum(equation = var_8092_equation_0, values = (var_7944_cast, var_8055_cast));
            tensor<string, []> var_8094_equation_0 = const()[name = tensor<string, []>("op_8094_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_8094_cast = einsum(equation = var_8094_equation_0, values = (var_7948_cast, var_8056_cast));
            tensor<string, []> var_8096_equation_0 = const()[name = tensor<string, []>("op_8096_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_8096_cast = einsum(equation = var_8096_equation_0, values = (var_7952_cast, var_8057_cast));
            tensor<string, []> var_8098_equation_0 = const()[name = tensor<string, []>("op_8098_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_8098_cast = einsum(equation = var_8098_equation_0, values = (var_7956_cast, var_8058_cast));
            tensor<bool, []> input_353_interleave_0 = const()[name = tensor<string, []>("input_353_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 1280, 1, 256]> input_353_cast = concat(axis = var_5599, interleave = input_353_interleave_0, values = (var_8060_cast, var_8062_cast, var_8064_cast, var_8066_cast, var_8068_cast, var_8070_cast, var_8072_cast, var_8074_cast, var_8076_cast, var_8078_cast, var_8080_cast, var_8082_cast, var_8084_cast, var_8086_cast, var_8088_cast, var_8090_cast, var_8092_cast, var_8094_cast, var_8096_cast, var_8098_cast));
            tensor<int32, [2]> var_8104 = const()[name = tensor<string, []>("op_8104"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8106 = const()[name = tensor<string, []>("op_8106"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_8108_pad_type_0 = const()[name = tensor<string, []>("op_8108_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_8108_pad_0 = const()[name = tensor<string, []>("op_8108_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_2_transformer_blocks_0_attn1_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_transformer_blocks_0_attn1_to_out_0_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(567849984)))];
            tensor<fp16, [1280]> up_blocks_1_attentions_2_transformer_blocks_0_attn1_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_transformer_blocks_0_attn1_to_out_0_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(571126848)))];
            tensor<fp16, [2, 1280, 1, 256]> var_8108_cast = conv(bias = up_blocks_1_attentions_2_transformer_blocks_0_attn1_to_out_0_bias_to_fp16, dilations = var_8106, groups = var_5599, pad = var_8108_pad_0, pad_type = var_8108_pad_type_0, strides = var_8104, weight = up_blocks_1_attentions_2_transformer_blocks_0_attn1_to_out_0_weight_to_fp16, x = input_353_cast);
            tensor<fp16, [2, 1280, 1, 256]> inputs_57_cast = add(x = var_8108_cast, y = inputs_55_cast);
            tensor<int32, [1]> var_8112 = const()[name = tensor<string, []>("op_8112"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> channels_mean_57_cast = reduce_mean(axes = var_8112, keep_dims = var_5594, x = inputs_57_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_57_cast = sub(x = inputs_57_cast, y = channels_mean_57_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_sq_57_cast = mul(x = zero_mean_57_cast, y = zero_mean_57_cast);
            tensor<int32, [1]> var_8116 = const()[name = tensor<string, []>("op_8116"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> var_8117_cast = reduce_mean(axes = var_8116, keep_dims = var_5594, x = zero_mean_sq_57_cast);
            tensor<fp16, []> var_8118_to_fp16 = const()[name = tensor<string, []>("op_8118_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 256]> var_8119_cast = add(x = var_8117_cast, y = var_8118_to_fp16);
            tensor<fp16, []> denom_57_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_57_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 256]> denom_57_cast = rsqrt(epsilon = denom_57_epsilon_0_to_fp16, x = var_8119_cast);
            tensor<fp16, [2, 1280, 1, 256]> out_57_cast = mul(x = zero_mean_57_cast, y = denom_57_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_8123_to_fp16 = const()[name = tensor<string, []>("op_8123_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(571129472)))];
            tensor<fp16, [2, 1280, 1, 256]> var_8124_cast = add(x = out_57_cast, y = var_8123_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_8126_to_fp16 = const()[name = tensor<string, []>("op_8126_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(571132096)))];
            tensor<fp16, [2, 1280, 1, 256]> hidden_states_209_cast = mul(x = var_8124_cast, y = var_8126_to_fp16);
            tensor<int32, [2]> var_8133 = const()[name = tensor<string, []>("op_8133"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8135 = const()[name = tensor<string, []>("op_8135"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_39_pad_type_0 = const()[name = tensor<string, []>("q_39_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_39_pad_0 = const()[name = tensor<string, []>("q_39_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_2_transformer_blocks_0_attn2_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_transformer_blocks_0_attn2_to_q_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(571134720)))];
            tensor<fp16, [2, 1280, 1, 256]> q_39_cast = conv(dilations = var_8135, groups = var_5599, pad = q_39_pad_0, pad_type = q_39_pad_type_0, strides = var_8133, weight = up_blocks_1_attentions_2_transformer_blocks_0_attn2_to_q_weight_to_fp16, x = hidden_states_209_cast);
            tensor<int32, [2]> var_8139 = const()[name = tensor<string, []>("op_8139"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8141 = const()[name = tensor<string, []>("op_8141"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_77_pad_type_0 = const()[name = tensor<string, []>("k_77_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_77_pad_0 = const()[name = tensor<string, []>("k_77_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1024, 1, 1]> up_blocks_1_attentions_2_transformer_blocks_0_attn2_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_transformer_blocks_0_attn2_to_k_weight_to_fp16"), val = tensor<fp16, [1280, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(574411584)))];
            tensor<fp16, [2, 1280, 1, 77]> k_77_cast = conv(dilations = var_8141, groups = var_5599, pad = k_77_pad_0, pad_type = k_77_pad_type_0, strides = var_8139, weight = up_blocks_1_attentions_2_transformer_blocks_0_attn2_to_k_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [2]> var_8145 = const()[name = tensor<string, []>("op_8145"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8147 = const()[name = tensor<string, []>("op_8147"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_39_pad_type_0 = const()[name = tensor<string, []>("v_39_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_39_pad_0 = const()[name = tensor<string, []>("v_39_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1024, 1, 1]> up_blocks_1_attentions_2_transformer_blocks_0_attn2_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_transformer_blocks_0_attn2_to_v_weight_to_fp16"), val = tensor<fp16, [1280, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(577033088)))];
            tensor<fp16, [2, 1280, 1, 77]> v_39_cast = conv(dilations = var_8147, groups = var_5599, pad = v_39_pad_0, pad_type = v_39_pad_type_0, strides = var_8145, weight = up_blocks_1_attentions_2_transformer_blocks_0_attn2_to_v_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [4]> var_8151_begin_0 = const()[name = tensor<string, []>("op_8151_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_8151_end_0 = const()[name = tensor<string, []>("op_8151_end_0"), val = tensor<int32, [4]>([2, 64, 1, 256])];
            tensor<bool, [4]> var_8151_end_mask_0 = const()[name = tensor<string, []>("op_8151_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_8151_cast = slice_by_index(begin = var_8151_begin_0, end = var_8151_end_0, end_mask = var_8151_end_mask_0, x = q_39_cast);
            tensor<int32, [4]> var_8155_begin_0 = const()[name = tensor<string, []>("op_8155_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_8155_end_0 = const()[name = tensor<string, []>("op_8155_end_0"), val = tensor<int32, [4]>([2, 128, 1, 256])];
            tensor<bool, [4]> var_8155_end_mask_0 = const()[name = tensor<string, []>("op_8155_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_8155_cast = slice_by_index(begin = var_8155_begin_0, end = var_8155_end_0, end_mask = var_8155_end_mask_0, x = q_39_cast);
            tensor<int32, [4]> var_8159_begin_0 = const()[name = tensor<string, []>("op_8159_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_8159_end_0 = const()[name = tensor<string, []>("op_8159_end_0"), val = tensor<int32, [4]>([2, 192, 1, 256])];
            tensor<bool, [4]> var_8159_end_mask_0 = const()[name = tensor<string, []>("op_8159_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_8159_cast = slice_by_index(begin = var_8159_begin_0, end = var_8159_end_0, end_mask = var_8159_end_mask_0, x = q_39_cast);
            tensor<int32, [4]> var_8163_begin_0 = const()[name = tensor<string, []>("op_8163_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_8163_end_0 = const()[name = tensor<string, []>("op_8163_end_0"), val = tensor<int32, [4]>([2, 256, 1, 256])];
            tensor<bool, [4]> var_8163_end_mask_0 = const()[name = tensor<string, []>("op_8163_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_8163_cast = slice_by_index(begin = var_8163_begin_0, end = var_8163_end_0, end_mask = var_8163_end_mask_0, x = q_39_cast);
            tensor<int32, [4]> var_8167_begin_0 = const()[name = tensor<string, []>("op_8167_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_8167_end_0 = const()[name = tensor<string, []>("op_8167_end_0"), val = tensor<int32, [4]>([2, 320, 1, 256])];
            tensor<bool, [4]> var_8167_end_mask_0 = const()[name = tensor<string, []>("op_8167_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_8167_cast = slice_by_index(begin = var_8167_begin_0, end = var_8167_end_0, end_mask = var_8167_end_mask_0, x = q_39_cast);
            tensor<int32, [4]> var_8171_begin_0 = const()[name = tensor<string, []>("op_8171_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_8171_end_0 = const()[name = tensor<string, []>("op_8171_end_0"), val = tensor<int32, [4]>([2, 384, 1, 256])];
            tensor<bool, [4]> var_8171_end_mask_0 = const()[name = tensor<string, []>("op_8171_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_8171_cast = slice_by_index(begin = var_8171_begin_0, end = var_8171_end_0, end_mask = var_8171_end_mask_0, x = q_39_cast);
            tensor<int32, [4]> var_8175_begin_0 = const()[name = tensor<string, []>("op_8175_begin_0"), val = tensor<int32, [4]>([0, 384, 0, 0])];
            tensor<int32, [4]> var_8175_end_0 = const()[name = tensor<string, []>("op_8175_end_0"), val = tensor<int32, [4]>([2, 448, 1, 256])];
            tensor<bool, [4]> var_8175_end_mask_0 = const()[name = tensor<string, []>("op_8175_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_8175_cast = slice_by_index(begin = var_8175_begin_0, end = var_8175_end_0, end_mask = var_8175_end_mask_0, x = q_39_cast);
            tensor<int32, [4]> var_8179_begin_0 = const()[name = tensor<string, []>("op_8179_begin_0"), val = tensor<int32, [4]>([0, 448, 0, 0])];
            tensor<int32, [4]> var_8179_end_0 = const()[name = tensor<string, []>("op_8179_end_0"), val = tensor<int32, [4]>([2, 512, 1, 256])];
            tensor<bool, [4]> var_8179_end_mask_0 = const()[name = tensor<string, []>("op_8179_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_8179_cast = slice_by_index(begin = var_8179_begin_0, end = var_8179_end_0, end_mask = var_8179_end_mask_0, x = q_39_cast);
            tensor<int32, [4]> var_8183_begin_0 = const()[name = tensor<string, []>("op_8183_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_8183_end_0 = const()[name = tensor<string, []>("op_8183_end_0"), val = tensor<int32, [4]>([2, 576, 1, 256])];
            tensor<bool, [4]> var_8183_end_mask_0 = const()[name = tensor<string, []>("op_8183_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_8183_cast = slice_by_index(begin = var_8183_begin_0, end = var_8183_end_0, end_mask = var_8183_end_mask_0, x = q_39_cast);
            tensor<int32, [4]> var_8187_begin_0 = const()[name = tensor<string, []>("op_8187_begin_0"), val = tensor<int32, [4]>([0, 576, 0, 0])];
            tensor<int32, [4]> var_8187_end_0 = const()[name = tensor<string, []>("op_8187_end_0"), val = tensor<int32, [4]>([2, 640, 1, 256])];
            tensor<bool, [4]> var_8187_end_mask_0 = const()[name = tensor<string, []>("op_8187_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_8187_cast = slice_by_index(begin = var_8187_begin_0, end = var_8187_end_0, end_mask = var_8187_end_mask_0, x = q_39_cast);
            tensor<int32, [4]> var_8191_begin_0 = const()[name = tensor<string, []>("op_8191_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_8191_end_0 = const()[name = tensor<string, []>("op_8191_end_0"), val = tensor<int32, [4]>([2, 704, 1, 256])];
            tensor<bool, [4]> var_8191_end_mask_0 = const()[name = tensor<string, []>("op_8191_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_8191_cast = slice_by_index(begin = var_8191_begin_0, end = var_8191_end_0, end_mask = var_8191_end_mask_0, x = q_39_cast);
            tensor<int32, [4]> var_8195_begin_0 = const()[name = tensor<string, []>("op_8195_begin_0"), val = tensor<int32, [4]>([0, 704, 0, 0])];
            tensor<int32, [4]> var_8195_end_0 = const()[name = tensor<string, []>("op_8195_end_0"), val = tensor<int32, [4]>([2, 768, 1, 256])];
            tensor<bool, [4]> var_8195_end_mask_0 = const()[name = tensor<string, []>("op_8195_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_8195_cast = slice_by_index(begin = var_8195_begin_0, end = var_8195_end_0, end_mask = var_8195_end_mask_0, x = q_39_cast);
            tensor<int32, [4]> var_8199_begin_0 = const()[name = tensor<string, []>("op_8199_begin_0"), val = tensor<int32, [4]>([0, 768, 0, 0])];
            tensor<int32, [4]> var_8199_end_0 = const()[name = tensor<string, []>("op_8199_end_0"), val = tensor<int32, [4]>([2, 832, 1, 256])];
            tensor<bool, [4]> var_8199_end_mask_0 = const()[name = tensor<string, []>("op_8199_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_8199_cast = slice_by_index(begin = var_8199_begin_0, end = var_8199_end_0, end_mask = var_8199_end_mask_0, x = q_39_cast);
            tensor<int32, [4]> var_8203_begin_0 = const()[name = tensor<string, []>("op_8203_begin_0"), val = tensor<int32, [4]>([0, 832, 0, 0])];
            tensor<int32, [4]> var_8203_end_0 = const()[name = tensor<string, []>("op_8203_end_0"), val = tensor<int32, [4]>([2, 896, 1, 256])];
            tensor<bool, [4]> var_8203_end_mask_0 = const()[name = tensor<string, []>("op_8203_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_8203_cast = slice_by_index(begin = var_8203_begin_0, end = var_8203_end_0, end_mask = var_8203_end_mask_0, x = q_39_cast);
            tensor<int32, [4]> var_8207_begin_0 = const()[name = tensor<string, []>("op_8207_begin_0"), val = tensor<int32, [4]>([0, 896, 0, 0])];
            tensor<int32, [4]> var_8207_end_0 = const()[name = tensor<string, []>("op_8207_end_0"), val = tensor<int32, [4]>([2, 960, 1, 256])];
            tensor<bool, [4]> var_8207_end_mask_0 = const()[name = tensor<string, []>("op_8207_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_8207_cast = slice_by_index(begin = var_8207_begin_0, end = var_8207_end_0, end_mask = var_8207_end_mask_0, x = q_39_cast);
            tensor<int32, [4]> var_8211_begin_0 = const()[name = tensor<string, []>("op_8211_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_8211_end_0 = const()[name = tensor<string, []>("op_8211_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 256])];
            tensor<bool, [4]> var_8211_end_mask_0 = const()[name = tensor<string, []>("op_8211_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_8211_cast = slice_by_index(begin = var_8211_begin_0, end = var_8211_end_0, end_mask = var_8211_end_mask_0, x = q_39_cast);
            tensor<int32, [4]> var_8215_begin_0 = const()[name = tensor<string, []>("op_8215_begin_0"), val = tensor<int32, [4]>([0, 1024, 0, 0])];
            tensor<int32, [4]> var_8215_end_0 = const()[name = tensor<string, []>("op_8215_end_0"), val = tensor<int32, [4]>([2, 1088, 1, 256])];
            tensor<bool, [4]> var_8215_end_mask_0 = const()[name = tensor<string, []>("op_8215_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_8215_cast = slice_by_index(begin = var_8215_begin_0, end = var_8215_end_0, end_mask = var_8215_end_mask_0, x = q_39_cast);
            tensor<int32, [4]> var_8219_begin_0 = const()[name = tensor<string, []>("op_8219_begin_0"), val = tensor<int32, [4]>([0, 1088, 0, 0])];
            tensor<int32, [4]> var_8219_end_0 = const()[name = tensor<string, []>("op_8219_end_0"), val = tensor<int32, [4]>([2, 1152, 1, 256])];
            tensor<bool, [4]> var_8219_end_mask_0 = const()[name = tensor<string, []>("op_8219_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_8219_cast = slice_by_index(begin = var_8219_begin_0, end = var_8219_end_0, end_mask = var_8219_end_mask_0, x = q_39_cast);
            tensor<int32, [4]> var_8223_begin_0 = const()[name = tensor<string, []>("op_8223_begin_0"), val = tensor<int32, [4]>([0, 1152, 0, 0])];
            tensor<int32, [4]> var_8223_end_0 = const()[name = tensor<string, []>("op_8223_end_0"), val = tensor<int32, [4]>([2, 1216, 1, 256])];
            tensor<bool, [4]> var_8223_end_mask_0 = const()[name = tensor<string, []>("op_8223_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_8223_cast = slice_by_index(begin = var_8223_begin_0, end = var_8223_end_0, end_mask = var_8223_end_mask_0, x = q_39_cast);
            tensor<int32, [4]> var_8227_begin_0 = const()[name = tensor<string, []>("op_8227_begin_0"), val = tensor<int32, [4]>([0, 1216, 0, 0])];
            tensor<int32, [4]> var_8227_end_0 = const()[name = tensor<string, []>("op_8227_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<bool, [4]> var_8227_end_mask_0 = const()[name = tensor<string, []>("op_8227_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 256]> var_8227_cast = slice_by_index(begin = var_8227_begin_0, end = var_8227_end_0, end_mask = var_8227_end_mask_0, x = q_39_cast);
            tensor<int32, [4]> k_79_perm_0 = const()[name = tensor<string, []>("k_79_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_8234_begin_0 = const()[name = tensor<string, []>("op_8234_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_8234_end_0 = const()[name = tensor<string, []>("op_8234_end_0"), val = tensor<int32, [4]>([2, 77, 1, 64])];
            tensor<bool, [4]> var_8234_end_mask_0 = const()[name = tensor<string, []>("op_8234_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 1280]> transpose_12 = transpose(perm = k_79_perm_0, x = k_77_cast);
            tensor<fp16, [2, 77, 1, 64]> var_8234_cast = slice_by_index(begin = var_8234_begin_0, end = var_8234_end_0, end_mask = var_8234_end_mask_0, x = transpose_12);
            tensor<int32, [4]> var_8238_begin_0 = const()[name = tensor<string, []>("op_8238_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 64])];
            tensor<int32, [4]> var_8238_end_0 = const()[name = tensor<string, []>("op_8238_end_0"), val = tensor<int32, [4]>([2, 77, 1, 128])];
            tensor<bool, [4]> var_8238_end_mask_0 = const()[name = tensor<string, []>("op_8238_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_8238_cast = slice_by_index(begin = var_8238_begin_0, end = var_8238_end_0, end_mask = var_8238_end_mask_0, x = transpose_12);
            tensor<int32, [4]> var_8242_begin_0 = const()[name = tensor<string, []>("op_8242_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 128])];
            tensor<int32, [4]> var_8242_end_0 = const()[name = tensor<string, []>("op_8242_end_0"), val = tensor<int32, [4]>([2, 77, 1, 192])];
            tensor<bool, [4]> var_8242_end_mask_0 = const()[name = tensor<string, []>("op_8242_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_8242_cast = slice_by_index(begin = var_8242_begin_0, end = var_8242_end_0, end_mask = var_8242_end_mask_0, x = transpose_12);
            tensor<int32, [4]> var_8246_begin_0 = const()[name = tensor<string, []>("op_8246_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 192])];
            tensor<int32, [4]> var_8246_end_0 = const()[name = tensor<string, []>("op_8246_end_0"), val = tensor<int32, [4]>([2, 77, 1, 256])];
            tensor<bool, [4]> var_8246_end_mask_0 = const()[name = tensor<string, []>("op_8246_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_8246_cast = slice_by_index(begin = var_8246_begin_0, end = var_8246_end_0, end_mask = var_8246_end_mask_0, x = transpose_12);
            tensor<int32, [4]> var_8250_begin_0 = const()[name = tensor<string, []>("op_8250_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 256])];
            tensor<int32, [4]> var_8250_end_0 = const()[name = tensor<string, []>("op_8250_end_0"), val = tensor<int32, [4]>([2, 77, 1, 320])];
            tensor<bool, [4]> var_8250_end_mask_0 = const()[name = tensor<string, []>("op_8250_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_8250_cast = slice_by_index(begin = var_8250_begin_0, end = var_8250_end_0, end_mask = var_8250_end_mask_0, x = transpose_12);
            tensor<int32, [4]> var_8254_begin_0 = const()[name = tensor<string, []>("op_8254_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_8254_end_0 = const()[name = tensor<string, []>("op_8254_end_0"), val = tensor<int32, [4]>([2, 77, 1, 384])];
            tensor<bool, [4]> var_8254_end_mask_0 = const()[name = tensor<string, []>("op_8254_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_8254_cast = slice_by_index(begin = var_8254_begin_0, end = var_8254_end_0, end_mask = var_8254_end_mask_0, x = transpose_12);
            tensor<int32, [4]> var_8258_begin_0 = const()[name = tensor<string, []>("op_8258_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 384])];
            tensor<int32, [4]> var_8258_end_0 = const()[name = tensor<string, []>("op_8258_end_0"), val = tensor<int32, [4]>([2, 77, 1, 448])];
            tensor<bool, [4]> var_8258_end_mask_0 = const()[name = tensor<string, []>("op_8258_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_8258_cast = slice_by_index(begin = var_8258_begin_0, end = var_8258_end_0, end_mask = var_8258_end_mask_0, x = transpose_12);
            tensor<int32, [4]> var_8262_begin_0 = const()[name = tensor<string, []>("op_8262_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 448])];
            tensor<int32, [4]> var_8262_end_0 = const()[name = tensor<string, []>("op_8262_end_0"), val = tensor<int32, [4]>([2, 77, 1, 512])];
            tensor<bool, [4]> var_8262_end_mask_0 = const()[name = tensor<string, []>("op_8262_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_8262_cast = slice_by_index(begin = var_8262_begin_0, end = var_8262_end_0, end_mask = var_8262_end_mask_0, x = transpose_12);
            tensor<int32, [4]> var_8266_begin_0 = const()[name = tensor<string, []>("op_8266_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 512])];
            tensor<int32, [4]> var_8266_end_0 = const()[name = tensor<string, []>("op_8266_end_0"), val = tensor<int32, [4]>([2, 77, 1, 576])];
            tensor<bool, [4]> var_8266_end_mask_0 = const()[name = tensor<string, []>("op_8266_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_8266_cast = slice_by_index(begin = var_8266_begin_0, end = var_8266_end_0, end_mask = var_8266_end_mask_0, x = transpose_12);
            tensor<int32, [4]> var_8270_begin_0 = const()[name = tensor<string, []>("op_8270_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 576])];
            tensor<int32, [4]> var_8270_end_0 = const()[name = tensor<string, []>("op_8270_end_0"), val = tensor<int32, [4]>([2, 77, 1, 640])];
            tensor<bool, [4]> var_8270_end_mask_0 = const()[name = tensor<string, []>("op_8270_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_8270_cast = slice_by_index(begin = var_8270_begin_0, end = var_8270_end_0, end_mask = var_8270_end_mask_0, x = transpose_12);
            tensor<int32, [4]> var_8274_begin_0 = const()[name = tensor<string, []>("op_8274_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 640])];
            tensor<int32, [4]> var_8274_end_0 = const()[name = tensor<string, []>("op_8274_end_0"), val = tensor<int32, [4]>([2, 77, 1, 704])];
            tensor<bool, [4]> var_8274_end_mask_0 = const()[name = tensor<string, []>("op_8274_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_8274_cast = slice_by_index(begin = var_8274_begin_0, end = var_8274_end_0, end_mask = var_8274_end_mask_0, x = transpose_12);
            tensor<int32, [4]> var_8278_begin_0 = const()[name = tensor<string, []>("op_8278_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 704])];
            tensor<int32, [4]> var_8278_end_0 = const()[name = tensor<string, []>("op_8278_end_0"), val = tensor<int32, [4]>([2, 77, 1, 768])];
            tensor<bool, [4]> var_8278_end_mask_0 = const()[name = tensor<string, []>("op_8278_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_8278_cast = slice_by_index(begin = var_8278_begin_0, end = var_8278_end_0, end_mask = var_8278_end_mask_0, x = transpose_12);
            tensor<int32, [4]> var_8282_begin_0 = const()[name = tensor<string, []>("op_8282_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 768])];
            tensor<int32, [4]> var_8282_end_0 = const()[name = tensor<string, []>("op_8282_end_0"), val = tensor<int32, [4]>([2, 77, 1, 832])];
            tensor<bool, [4]> var_8282_end_mask_0 = const()[name = tensor<string, []>("op_8282_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_8282_cast = slice_by_index(begin = var_8282_begin_0, end = var_8282_end_0, end_mask = var_8282_end_mask_0, x = transpose_12);
            tensor<int32, [4]> var_8286_begin_0 = const()[name = tensor<string, []>("op_8286_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 832])];
            tensor<int32, [4]> var_8286_end_0 = const()[name = tensor<string, []>("op_8286_end_0"), val = tensor<int32, [4]>([2, 77, 1, 896])];
            tensor<bool, [4]> var_8286_end_mask_0 = const()[name = tensor<string, []>("op_8286_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_8286_cast = slice_by_index(begin = var_8286_begin_0, end = var_8286_end_0, end_mask = var_8286_end_mask_0, x = transpose_12);
            tensor<int32, [4]> var_8290_begin_0 = const()[name = tensor<string, []>("op_8290_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 896])];
            tensor<int32, [4]> var_8290_end_0 = const()[name = tensor<string, []>("op_8290_end_0"), val = tensor<int32, [4]>([2, 77, 1, 960])];
            tensor<bool, [4]> var_8290_end_mask_0 = const()[name = tensor<string, []>("op_8290_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_8290_cast = slice_by_index(begin = var_8290_begin_0, end = var_8290_end_0, end_mask = var_8290_end_mask_0, x = transpose_12);
            tensor<int32, [4]> var_8294_begin_0 = const()[name = tensor<string, []>("op_8294_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 960])];
            tensor<int32, [4]> var_8294_end_0 = const()[name = tensor<string, []>("op_8294_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1024])];
            tensor<bool, [4]> var_8294_end_mask_0 = const()[name = tensor<string, []>("op_8294_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_8294_cast = slice_by_index(begin = var_8294_begin_0, end = var_8294_end_0, end_mask = var_8294_end_mask_0, x = transpose_12);
            tensor<int32, [4]> var_8298_begin_0 = const()[name = tensor<string, []>("op_8298_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1024])];
            tensor<int32, [4]> var_8298_end_0 = const()[name = tensor<string, []>("op_8298_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1088])];
            tensor<bool, [4]> var_8298_end_mask_0 = const()[name = tensor<string, []>("op_8298_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_8298_cast = slice_by_index(begin = var_8298_begin_0, end = var_8298_end_0, end_mask = var_8298_end_mask_0, x = transpose_12);
            tensor<int32, [4]> var_8302_begin_0 = const()[name = tensor<string, []>("op_8302_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1088])];
            tensor<int32, [4]> var_8302_end_0 = const()[name = tensor<string, []>("op_8302_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1152])];
            tensor<bool, [4]> var_8302_end_mask_0 = const()[name = tensor<string, []>("op_8302_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_8302_cast = slice_by_index(begin = var_8302_begin_0, end = var_8302_end_0, end_mask = var_8302_end_mask_0, x = transpose_12);
            tensor<int32, [4]> var_8306_begin_0 = const()[name = tensor<string, []>("op_8306_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1152])];
            tensor<int32, [4]> var_8306_end_0 = const()[name = tensor<string, []>("op_8306_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1216])];
            tensor<bool, [4]> var_8306_end_mask_0 = const()[name = tensor<string, []>("op_8306_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_8306_cast = slice_by_index(begin = var_8306_begin_0, end = var_8306_end_0, end_mask = var_8306_end_mask_0, x = transpose_12);
            tensor<int32, [4]> var_8310_begin_0 = const()[name = tensor<string, []>("op_8310_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1216])];
            tensor<int32, [4]> var_8310_end_0 = const()[name = tensor<string, []>("op_8310_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1280])];
            tensor<bool, [4]> var_8310_end_mask_0 = const()[name = tensor<string, []>("op_8310_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_8310_cast = slice_by_index(begin = var_8310_begin_0, end = var_8310_end_0, end_mask = var_8310_end_mask_0, x = transpose_12);
            tensor<int32, [4]> var_8312_begin_0 = const()[name = tensor<string, []>("op_8312_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_8312_end_0 = const()[name = tensor<string, []>("op_8312_end_0"), val = tensor<int32, [4]>([2, 64, 1, 77])];
            tensor<bool, [4]> var_8312_end_mask_0 = const()[name = tensor<string, []>("op_8312_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_8312_cast = slice_by_index(begin = var_8312_begin_0, end = var_8312_end_0, end_mask = var_8312_end_mask_0, x = v_39_cast);
            tensor<int32, [4]> var_8316_begin_0 = const()[name = tensor<string, []>("op_8316_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_8316_end_0 = const()[name = tensor<string, []>("op_8316_end_0"), val = tensor<int32, [4]>([2, 128, 1, 77])];
            tensor<bool, [4]> var_8316_end_mask_0 = const()[name = tensor<string, []>("op_8316_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_8316_cast = slice_by_index(begin = var_8316_begin_0, end = var_8316_end_0, end_mask = var_8316_end_mask_0, x = v_39_cast);
            tensor<int32, [4]> var_8320_begin_0 = const()[name = tensor<string, []>("op_8320_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_8320_end_0 = const()[name = tensor<string, []>("op_8320_end_0"), val = tensor<int32, [4]>([2, 192, 1, 77])];
            tensor<bool, [4]> var_8320_end_mask_0 = const()[name = tensor<string, []>("op_8320_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_8320_cast = slice_by_index(begin = var_8320_begin_0, end = var_8320_end_0, end_mask = var_8320_end_mask_0, x = v_39_cast);
            tensor<int32, [4]> var_8324_begin_0 = const()[name = tensor<string, []>("op_8324_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_8324_end_0 = const()[name = tensor<string, []>("op_8324_end_0"), val = tensor<int32, [4]>([2, 256, 1, 77])];
            tensor<bool, [4]> var_8324_end_mask_0 = const()[name = tensor<string, []>("op_8324_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_8324_cast = slice_by_index(begin = var_8324_begin_0, end = var_8324_end_0, end_mask = var_8324_end_mask_0, x = v_39_cast);
            tensor<int32, [4]> var_8328_begin_0 = const()[name = tensor<string, []>("op_8328_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_8328_end_0 = const()[name = tensor<string, []>("op_8328_end_0"), val = tensor<int32, [4]>([2, 320, 1, 77])];
            tensor<bool, [4]> var_8328_end_mask_0 = const()[name = tensor<string, []>("op_8328_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_8328_cast = slice_by_index(begin = var_8328_begin_0, end = var_8328_end_0, end_mask = var_8328_end_mask_0, x = v_39_cast);
            tensor<int32, [4]> var_8332_begin_0 = const()[name = tensor<string, []>("op_8332_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_8332_end_0 = const()[name = tensor<string, []>("op_8332_end_0"), val = tensor<int32, [4]>([2, 384, 1, 77])];
            tensor<bool, [4]> var_8332_end_mask_0 = const()[name = tensor<string, []>("op_8332_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_8332_cast = slice_by_index(begin = var_8332_begin_0, end = var_8332_end_0, end_mask = var_8332_end_mask_0, x = v_39_cast);
            tensor<int32, [4]> var_8336_begin_0 = const()[name = tensor<string, []>("op_8336_begin_0"), val = tensor<int32, [4]>([0, 384, 0, 0])];
            tensor<int32, [4]> var_8336_end_0 = const()[name = tensor<string, []>("op_8336_end_0"), val = tensor<int32, [4]>([2, 448, 1, 77])];
            tensor<bool, [4]> var_8336_end_mask_0 = const()[name = tensor<string, []>("op_8336_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_8336_cast = slice_by_index(begin = var_8336_begin_0, end = var_8336_end_0, end_mask = var_8336_end_mask_0, x = v_39_cast);
            tensor<int32, [4]> var_8340_begin_0 = const()[name = tensor<string, []>("op_8340_begin_0"), val = tensor<int32, [4]>([0, 448, 0, 0])];
            tensor<int32, [4]> var_8340_end_0 = const()[name = tensor<string, []>("op_8340_end_0"), val = tensor<int32, [4]>([2, 512, 1, 77])];
            tensor<bool, [4]> var_8340_end_mask_0 = const()[name = tensor<string, []>("op_8340_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_8340_cast = slice_by_index(begin = var_8340_begin_0, end = var_8340_end_0, end_mask = var_8340_end_mask_0, x = v_39_cast);
            tensor<int32, [4]> var_8344_begin_0 = const()[name = tensor<string, []>("op_8344_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_8344_end_0 = const()[name = tensor<string, []>("op_8344_end_0"), val = tensor<int32, [4]>([2, 576, 1, 77])];
            tensor<bool, [4]> var_8344_end_mask_0 = const()[name = tensor<string, []>("op_8344_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_8344_cast = slice_by_index(begin = var_8344_begin_0, end = var_8344_end_0, end_mask = var_8344_end_mask_0, x = v_39_cast);
            tensor<int32, [4]> var_8348_begin_0 = const()[name = tensor<string, []>("op_8348_begin_0"), val = tensor<int32, [4]>([0, 576, 0, 0])];
            tensor<int32, [4]> var_8348_end_0 = const()[name = tensor<string, []>("op_8348_end_0"), val = tensor<int32, [4]>([2, 640, 1, 77])];
            tensor<bool, [4]> var_8348_end_mask_0 = const()[name = tensor<string, []>("op_8348_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_8348_cast = slice_by_index(begin = var_8348_begin_0, end = var_8348_end_0, end_mask = var_8348_end_mask_0, x = v_39_cast);
            tensor<int32, [4]> var_8352_begin_0 = const()[name = tensor<string, []>("op_8352_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_8352_end_0 = const()[name = tensor<string, []>("op_8352_end_0"), val = tensor<int32, [4]>([2, 704, 1, 77])];
            tensor<bool, [4]> var_8352_end_mask_0 = const()[name = tensor<string, []>("op_8352_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_8352_cast = slice_by_index(begin = var_8352_begin_0, end = var_8352_end_0, end_mask = var_8352_end_mask_0, x = v_39_cast);
            tensor<int32, [4]> var_8356_begin_0 = const()[name = tensor<string, []>("op_8356_begin_0"), val = tensor<int32, [4]>([0, 704, 0, 0])];
            tensor<int32, [4]> var_8356_end_0 = const()[name = tensor<string, []>("op_8356_end_0"), val = tensor<int32, [4]>([2, 768, 1, 77])];
            tensor<bool, [4]> var_8356_end_mask_0 = const()[name = tensor<string, []>("op_8356_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_8356_cast = slice_by_index(begin = var_8356_begin_0, end = var_8356_end_0, end_mask = var_8356_end_mask_0, x = v_39_cast);
            tensor<int32, [4]> var_8360_begin_0 = const()[name = tensor<string, []>("op_8360_begin_0"), val = tensor<int32, [4]>([0, 768, 0, 0])];
            tensor<int32, [4]> var_8360_end_0 = const()[name = tensor<string, []>("op_8360_end_0"), val = tensor<int32, [4]>([2, 832, 1, 77])];
            tensor<bool, [4]> var_8360_end_mask_0 = const()[name = tensor<string, []>("op_8360_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_8360_cast = slice_by_index(begin = var_8360_begin_0, end = var_8360_end_0, end_mask = var_8360_end_mask_0, x = v_39_cast);
            tensor<int32, [4]> var_8364_begin_0 = const()[name = tensor<string, []>("op_8364_begin_0"), val = tensor<int32, [4]>([0, 832, 0, 0])];
            tensor<int32, [4]> var_8364_end_0 = const()[name = tensor<string, []>("op_8364_end_0"), val = tensor<int32, [4]>([2, 896, 1, 77])];
            tensor<bool, [4]> var_8364_end_mask_0 = const()[name = tensor<string, []>("op_8364_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_8364_cast = slice_by_index(begin = var_8364_begin_0, end = var_8364_end_0, end_mask = var_8364_end_mask_0, x = v_39_cast);
            tensor<int32, [4]> var_8368_begin_0 = const()[name = tensor<string, []>("op_8368_begin_0"), val = tensor<int32, [4]>([0, 896, 0, 0])];
            tensor<int32, [4]> var_8368_end_0 = const()[name = tensor<string, []>("op_8368_end_0"), val = tensor<int32, [4]>([2, 960, 1, 77])];
            tensor<bool, [4]> var_8368_end_mask_0 = const()[name = tensor<string, []>("op_8368_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_8368_cast = slice_by_index(begin = var_8368_begin_0, end = var_8368_end_0, end_mask = var_8368_end_mask_0, x = v_39_cast);
            tensor<int32, [4]> var_8372_begin_0 = const()[name = tensor<string, []>("op_8372_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_8372_end_0 = const()[name = tensor<string, []>("op_8372_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 77])];
            tensor<bool, [4]> var_8372_end_mask_0 = const()[name = tensor<string, []>("op_8372_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_8372_cast = slice_by_index(begin = var_8372_begin_0, end = var_8372_end_0, end_mask = var_8372_end_mask_0, x = v_39_cast);
            tensor<int32, [4]> var_8376_begin_0 = const()[name = tensor<string, []>("op_8376_begin_0"), val = tensor<int32, [4]>([0, 1024, 0, 0])];
            tensor<int32, [4]> var_8376_end_0 = const()[name = tensor<string, []>("op_8376_end_0"), val = tensor<int32, [4]>([2, 1088, 1, 77])];
            tensor<bool, [4]> var_8376_end_mask_0 = const()[name = tensor<string, []>("op_8376_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_8376_cast = slice_by_index(begin = var_8376_begin_0, end = var_8376_end_0, end_mask = var_8376_end_mask_0, x = v_39_cast);
            tensor<int32, [4]> var_8380_begin_0 = const()[name = tensor<string, []>("op_8380_begin_0"), val = tensor<int32, [4]>([0, 1088, 0, 0])];
            tensor<int32, [4]> var_8380_end_0 = const()[name = tensor<string, []>("op_8380_end_0"), val = tensor<int32, [4]>([2, 1152, 1, 77])];
            tensor<bool, [4]> var_8380_end_mask_0 = const()[name = tensor<string, []>("op_8380_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_8380_cast = slice_by_index(begin = var_8380_begin_0, end = var_8380_end_0, end_mask = var_8380_end_mask_0, x = v_39_cast);
            tensor<int32, [4]> var_8384_begin_0 = const()[name = tensor<string, []>("op_8384_begin_0"), val = tensor<int32, [4]>([0, 1152, 0, 0])];
            tensor<int32, [4]> var_8384_end_0 = const()[name = tensor<string, []>("op_8384_end_0"), val = tensor<int32, [4]>([2, 1216, 1, 77])];
            tensor<bool, [4]> var_8384_end_mask_0 = const()[name = tensor<string, []>("op_8384_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_8384_cast = slice_by_index(begin = var_8384_begin_0, end = var_8384_end_0, end_mask = var_8384_end_mask_0, x = v_39_cast);
            tensor<int32, [4]> var_8388_begin_0 = const()[name = tensor<string, []>("op_8388_begin_0"), val = tensor<int32, [4]>([0, 1216, 0, 0])];
            tensor<int32, [4]> var_8388_end_0 = const()[name = tensor<string, []>("op_8388_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 77])];
            tensor<bool, [4]> var_8388_end_mask_0 = const()[name = tensor<string, []>("op_8388_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_8388_cast = slice_by_index(begin = var_8388_begin_0, end = var_8388_end_0, end_mask = var_8388_end_mask_0, x = v_39_cast);
            tensor<string, []> var_8392_equation_0 = const()[name = tensor<string, []>("op_8392_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_8392_cast = einsum(equation = var_8392_equation_0, values = (var_8234_cast, var_8151_cast));
            tensor<fp16, []> var_8393_to_fp16 = const()[name = tensor<string, []>("op_8393_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_561_cast = mul(x = var_8392_cast, y = var_8393_to_fp16);
            tensor<string, []> var_8396_equation_0 = const()[name = tensor<string, []>("op_8396_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_8396_cast = einsum(equation = var_8396_equation_0, values = (var_8238_cast, var_8155_cast));
            tensor<fp16, []> var_8397_to_fp16 = const()[name = tensor<string, []>("op_8397_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_563_cast = mul(x = var_8396_cast, y = var_8397_to_fp16);
            tensor<string, []> var_8400_equation_0 = const()[name = tensor<string, []>("op_8400_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_8400_cast = einsum(equation = var_8400_equation_0, values = (var_8242_cast, var_8159_cast));
            tensor<fp16, []> var_8401_to_fp16 = const()[name = tensor<string, []>("op_8401_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_565_cast = mul(x = var_8400_cast, y = var_8401_to_fp16);
            tensor<string, []> var_8404_equation_0 = const()[name = tensor<string, []>("op_8404_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_8404_cast = einsum(equation = var_8404_equation_0, values = (var_8246_cast, var_8163_cast));
            tensor<fp16, []> var_8405_to_fp16 = const()[name = tensor<string, []>("op_8405_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_567_cast = mul(x = var_8404_cast, y = var_8405_to_fp16);
            tensor<string, []> var_8408_equation_0 = const()[name = tensor<string, []>("op_8408_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_8408_cast = einsum(equation = var_8408_equation_0, values = (var_8250_cast, var_8167_cast));
            tensor<fp16, []> var_8409_to_fp16 = const()[name = tensor<string, []>("op_8409_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_569_cast = mul(x = var_8408_cast, y = var_8409_to_fp16);
            tensor<string, []> var_8412_equation_0 = const()[name = tensor<string, []>("op_8412_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_8412_cast = einsum(equation = var_8412_equation_0, values = (var_8254_cast, var_8171_cast));
            tensor<fp16, []> var_8413_to_fp16 = const()[name = tensor<string, []>("op_8413_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_571_cast = mul(x = var_8412_cast, y = var_8413_to_fp16);
            tensor<string, []> var_8416_equation_0 = const()[name = tensor<string, []>("op_8416_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_8416_cast = einsum(equation = var_8416_equation_0, values = (var_8258_cast, var_8175_cast));
            tensor<fp16, []> var_8417_to_fp16 = const()[name = tensor<string, []>("op_8417_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_573_cast = mul(x = var_8416_cast, y = var_8417_to_fp16);
            tensor<string, []> var_8420_equation_0 = const()[name = tensor<string, []>("op_8420_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_8420_cast = einsum(equation = var_8420_equation_0, values = (var_8262_cast, var_8179_cast));
            tensor<fp16, []> var_8421_to_fp16 = const()[name = tensor<string, []>("op_8421_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_575_cast = mul(x = var_8420_cast, y = var_8421_to_fp16);
            tensor<string, []> var_8424_equation_0 = const()[name = tensor<string, []>("op_8424_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_8424_cast = einsum(equation = var_8424_equation_0, values = (var_8266_cast, var_8183_cast));
            tensor<fp16, []> var_8425_to_fp16 = const()[name = tensor<string, []>("op_8425_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_577_cast = mul(x = var_8424_cast, y = var_8425_to_fp16);
            tensor<string, []> var_8428_equation_0 = const()[name = tensor<string, []>("op_8428_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_8428_cast = einsum(equation = var_8428_equation_0, values = (var_8270_cast, var_8187_cast));
            tensor<fp16, []> var_8429_to_fp16 = const()[name = tensor<string, []>("op_8429_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_579_cast = mul(x = var_8428_cast, y = var_8429_to_fp16);
            tensor<string, []> var_8432_equation_0 = const()[name = tensor<string, []>("op_8432_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_8432_cast = einsum(equation = var_8432_equation_0, values = (var_8274_cast, var_8191_cast));
            tensor<fp16, []> var_8433_to_fp16 = const()[name = tensor<string, []>("op_8433_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_581_cast = mul(x = var_8432_cast, y = var_8433_to_fp16);
            tensor<string, []> var_8436_equation_0 = const()[name = tensor<string, []>("op_8436_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_8436_cast = einsum(equation = var_8436_equation_0, values = (var_8278_cast, var_8195_cast));
            tensor<fp16, []> var_8437_to_fp16 = const()[name = tensor<string, []>("op_8437_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_583_cast = mul(x = var_8436_cast, y = var_8437_to_fp16);
            tensor<string, []> var_8440_equation_0 = const()[name = tensor<string, []>("op_8440_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_8440_cast = einsum(equation = var_8440_equation_0, values = (var_8282_cast, var_8199_cast));
            tensor<fp16, []> var_8441_to_fp16 = const()[name = tensor<string, []>("op_8441_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_585_cast = mul(x = var_8440_cast, y = var_8441_to_fp16);
            tensor<string, []> var_8444_equation_0 = const()[name = tensor<string, []>("op_8444_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_8444_cast = einsum(equation = var_8444_equation_0, values = (var_8286_cast, var_8203_cast));
            tensor<fp16, []> var_8445_to_fp16 = const()[name = tensor<string, []>("op_8445_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_587_cast = mul(x = var_8444_cast, y = var_8445_to_fp16);
            tensor<string, []> var_8448_equation_0 = const()[name = tensor<string, []>("op_8448_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_8448_cast = einsum(equation = var_8448_equation_0, values = (var_8290_cast, var_8207_cast));
            tensor<fp16, []> var_8449_to_fp16 = const()[name = tensor<string, []>("op_8449_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_589_cast = mul(x = var_8448_cast, y = var_8449_to_fp16);
            tensor<string, []> var_8452_equation_0 = const()[name = tensor<string, []>("op_8452_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_8452_cast = einsum(equation = var_8452_equation_0, values = (var_8294_cast, var_8211_cast));
            tensor<fp16, []> var_8453_to_fp16 = const()[name = tensor<string, []>("op_8453_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_591_cast = mul(x = var_8452_cast, y = var_8453_to_fp16);
            tensor<string, []> var_8456_equation_0 = const()[name = tensor<string, []>("op_8456_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_8456_cast = einsum(equation = var_8456_equation_0, values = (var_8298_cast, var_8215_cast));
            tensor<fp16, []> var_8457_to_fp16 = const()[name = tensor<string, []>("op_8457_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_593_cast = mul(x = var_8456_cast, y = var_8457_to_fp16);
            tensor<string, []> var_8460_equation_0 = const()[name = tensor<string, []>("op_8460_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_8460_cast = einsum(equation = var_8460_equation_0, values = (var_8302_cast, var_8219_cast));
            tensor<fp16, []> var_8461_to_fp16 = const()[name = tensor<string, []>("op_8461_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_595_cast = mul(x = var_8460_cast, y = var_8461_to_fp16);
            tensor<string, []> var_8464_equation_0 = const()[name = tensor<string, []>("op_8464_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_8464_cast = einsum(equation = var_8464_equation_0, values = (var_8306_cast, var_8223_cast));
            tensor<fp16, []> var_8465_to_fp16 = const()[name = tensor<string, []>("op_8465_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_597_cast = mul(x = var_8464_cast, y = var_8465_to_fp16);
            tensor<string, []> var_8468_equation_0 = const()[name = tensor<string, []>("op_8468_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_8468_cast = einsum(equation = var_8468_equation_0, values = (var_8310_cast, var_8227_cast));
            tensor<fp16, []> var_8469_to_fp16 = const()[name = tensor<string, []>("op_8469_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 256]> aw_599_cast = mul(x = var_8468_cast, y = var_8469_to_fp16);
            tensor<fp16, [2, 77, 1, 256]> var_8471_cast = softmax(axis = var_5599, x = aw_561_cast);
            tensor<fp16, [2, 77, 1, 256]> var_8472_cast = softmax(axis = var_5599, x = aw_563_cast);
            tensor<fp16, [2, 77, 1, 256]> var_8473_cast = softmax(axis = var_5599, x = aw_565_cast);
            tensor<fp16, [2, 77, 1, 256]> var_8474_cast = softmax(axis = var_5599, x = aw_567_cast);
            tensor<fp16, [2, 77, 1, 256]> var_8475_cast = softmax(axis = var_5599, x = aw_569_cast);
            tensor<fp16, [2, 77, 1, 256]> var_8476_cast = softmax(axis = var_5599, x = aw_571_cast);
            tensor<fp16, [2, 77, 1, 256]> var_8477_cast = softmax(axis = var_5599, x = aw_573_cast);
            tensor<fp16, [2, 77, 1, 256]> var_8478_cast = softmax(axis = var_5599, x = aw_575_cast);
            tensor<fp16, [2, 77, 1, 256]> var_8479_cast = softmax(axis = var_5599, x = aw_577_cast);
            tensor<fp16, [2, 77, 1, 256]> var_8480_cast = softmax(axis = var_5599, x = aw_579_cast);
            tensor<fp16, [2, 77, 1, 256]> var_8481_cast = softmax(axis = var_5599, x = aw_581_cast);
            tensor<fp16, [2, 77, 1, 256]> var_8482_cast = softmax(axis = var_5599, x = aw_583_cast);
            tensor<fp16, [2, 77, 1, 256]> var_8483_cast = softmax(axis = var_5599, x = aw_585_cast);
            tensor<fp16, [2, 77, 1, 256]> var_8484_cast = softmax(axis = var_5599, x = aw_587_cast);
            tensor<fp16, [2, 77, 1, 256]> var_8485_cast = softmax(axis = var_5599, x = aw_589_cast);
            tensor<fp16, [2, 77, 1, 256]> var_8486_cast = softmax(axis = var_5599, x = aw_591_cast);
            tensor<fp16, [2, 77, 1, 256]> var_8487_cast = softmax(axis = var_5599, x = aw_593_cast);
            tensor<fp16, [2, 77, 1, 256]> var_8488_cast = softmax(axis = var_5599, x = aw_595_cast);
            tensor<fp16, [2, 77, 1, 256]> var_8489_cast = softmax(axis = var_5599, x = aw_597_cast);
            tensor<fp16, [2, 77, 1, 256]> var_8490_cast = softmax(axis = var_5599, x = aw_599_cast);
            tensor<string, []> var_8492_equation_0 = const()[name = tensor<string, []>("op_8492_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_8492_cast = einsum(equation = var_8492_equation_0, values = (var_8312_cast, var_8471_cast));
            tensor<string, []> var_8494_equation_0 = const()[name = tensor<string, []>("op_8494_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_8494_cast = einsum(equation = var_8494_equation_0, values = (var_8316_cast, var_8472_cast));
            tensor<string, []> var_8496_equation_0 = const()[name = tensor<string, []>("op_8496_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_8496_cast = einsum(equation = var_8496_equation_0, values = (var_8320_cast, var_8473_cast));
            tensor<string, []> var_8498_equation_0 = const()[name = tensor<string, []>("op_8498_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_8498_cast = einsum(equation = var_8498_equation_0, values = (var_8324_cast, var_8474_cast));
            tensor<string, []> var_8500_equation_0 = const()[name = tensor<string, []>("op_8500_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_8500_cast = einsum(equation = var_8500_equation_0, values = (var_8328_cast, var_8475_cast));
            tensor<string, []> var_8502_equation_0 = const()[name = tensor<string, []>("op_8502_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_8502_cast = einsum(equation = var_8502_equation_0, values = (var_8332_cast, var_8476_cast));
            tensor<string, []> var_8504_equation_0 = const()[name = tensor<string, []>("op_8504_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_8504_cast = einsum(equation = var_8504_equation_0, values = (var_8336_cast, var_8477_cast));
            tensor<string, []> var_8506_equation_0 = const()[name = tensor<string, []>("op_8506_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_8506_cast = einsum(equation = var_8506_equation_0, values = (var_8340_cast, var_8478_cast));
            tensor<string, []> var_8508_equation_0 = const()[name = tensor<string, []>("op_8508_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_8508_cast = einsum(equation = var_8508_equation_0, values = (var_8344_cast, var_8479_cast));
            tensor<string, []> var_8510_equation_0 = const()[name = tensor<string, []>("op_8510_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_8510_cast = einsum(equation = var_8510_equation_0, values = (var_8348_cast, var_8480_cast));
            tensor<string, []> var_8512_equation_0 = const()[name = tensor<string, []>("op_8512_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_8512_cast = einsum(equation = var_8512_equation_0, values = (var_8352_cast, var_8481_cast));
            tensor<string, []> var_8514_equation_0 = const()[name = tensor<string, []>("op_8514_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_8514_cast = einsum(equation = var_8514_equation_0, values = (var_8356_cast, var_8482_cast));
            tensor<string, []> var_8516_equation_0 = const()[name = tensor<string, []>("op_8516_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_8516_cast = einsum(equation = var_8516_equation_0, values = (var_8360_cast, var_8483_cast));
            tensor<string, []> var_8518_equation_0 = const()[name = tensor<string, []>("op_8518_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_8518_cast = einsum(equation = var_8518_equation_0, values = (var_8364_cast, var_8484_cast));
            tensor<string, []> var_8520_equation_0 = const()[name = tensor<string, []>("op_8520_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_8520_cast = einsum(equation = var_8520_equation_0, values = (var_8368_cast, var_8485_cast));
            tensor<string, []> var_8522_equation_0 = const()[name = tensor<string, []>("op_8522_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_8522_cast = einsum(equation = var_8522_equation_0, values = (var_8372_cast, var_8486_cast));
            tensor<string, []> var_8524_equation_0 = const()[name = tensor<string, []>("op_8524_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_8524_cast = einsum(equation = var_8524_equation_0, values = (var_8376_cast, var_8487_cast));
            tensor<string, []> var_8526_equation_0 = const()[name = tensor<string, []>("op_8526_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_8526_cast = einsum(equation = var_8526_equation_0, values = (var_8380_cast, var_8488_cast));
            tensor<string, []> var_8528_equation_0 = const()[name = tensor<string, []>("op_8528_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_8528_cast = einsum(equation = var_8528_equation_0, values = (var_8384_cast, var_8489_cast));
            tensor<string, []> var_8530_equation_0 = const()[name = tensor<string, []>("op_8530_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 256]> var_8530_cast = einsum(equation = var_8530_equation_0, values = (var_8388_cast, var_8490_cast));
            tensor<bool, []> input_355_interleave_0 = const()[name = tensor<string, []>("input_355_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 1280, 1, 256]> input_355_cast = concat(axis = var_5599, interleave = input_355_interleave_0, values = (var_8492_cast, var_8494_cast, var_8496_cast, var_8498_cast, var_8500_cast, var_8502_cast, var_8504_cast, var_8506_cast, var_8508_cast, var_8510_cast, var_8512_cast, var_8514_cast, var_8516_cast, var_8518_cast, var_8520_cast, var_8522_cast, var_8524_cast, var_8526_cast, var_8528_cast, var_8530_cast));
            tensor<int32, [2]> var_8536 = const()[name = tensor<string, []>("op_8536"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8538 = const()[name = tensor<string, []>("op_8538"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_8540_pad_type_0 = const()[name = tensor<string, []>("op_8540_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_8540_pad_0 = const()[name = tensor<string, []>("op_8540_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_2_transformer_blocks_0_attn2_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_transformer_blocks_0_attn2_to_out_0_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(579654592)))];
            tensor<fp16, [1280]> up_blocks_1_attentions_2_transformer_blocks_0_attn2_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_transformer_blocks_0_attn2_to_out_0_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(582931456)))];
            tensor<fp16, [2, 1280, 1, 256]> var_8540_cast = conv(bias = up_blocks_1_attentions_2_transformer_blocks_0_attn2_to_out_0_bias_to_fp16, dilations = var_8538, groups = var_5599, pad = var_8540_pad_0, pad_type = var_8540_pad_type_0, strides = var_8536, weight = up_blocks_1_attentions_2_transformer_blocks_0_attn2_to_out_0_weight_to_fp16, x = input_355_cast);
            tensor<fp16, [2, 1280, 1, 256]> inputs_59_cast = add(x = var_8540_cast, y = inputs_57_cast);
            tensor<int32, [1]> var_8544 = const()[name = tensor<string, []>("op_8544"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> channels_mean_59_cast = reduce_mean(axes = var_8544, keep_dims = var_5594, x = inputs_59_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_59_cast = sub(x = inputs_59_cast, y = channels_mean_59_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_sq_59_cast = mul(x = zero_mean_59_cast, y = zero_mean_59_cast);
            tensor<int32, [1]> var_8548 = const()[name = tensor<string, []>("op_8548"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> var_8549_cast = reduce_mean(axes = var_8548, keep_dims = var_5594, x = zero_mean_sq_59_cast);
            tensor<fp16, []> var_8550_to_fp16 = const()[name = tensor<string, []>("op_8550_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 256]> var_8551_cast = add(x = var_8549_cast, y = var_8550_to_fp16);
            tensor<fp16, []> denom_59_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_59_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 256]> denom_59_cast = rsqrt(epsilon = denom_59_epsilon_0_to_fp16, x = var_8551_cast);
            tensor<fp16, [2, 1280, 1, 256]> out_59_cast = mul(x = zero_mean_59_cast, y = denom_59_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_8555_to_fp16 = const()[name = tensor<string, []>("op_8555_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(582934080)))];
            tensor<fp16, [2, 1280, 1, 256]> var_8556_cast = add(x = out_59_cast, y = var_8555_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_8558_to_fp16 = const()[name = tensor<string, []>("op_8558_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(582936704)))];
            tensor<fp16, [2, 1280, 1, 256]> input_357_cast = mul(x = var_8556_cast, y = var_8558_to_fp16);
            tensor<int32, [2]> var_8566 = const()[name = tensor<string, []>("op_8566"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8568 = const()[name = tensor<string, []>("op_8568"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_8570_pad_type_0 = const()[name = tensor<string, []>("op_8570_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_8570_pad_0 = const()[name = tensor<string, []>("op_8570_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [10240, 1280, 1, 1]> up_blocks_1_attentions_2_transformer_blocks_0_ff_net_0_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_transformer_blocks_0_ff_net_0_proj_weight_to_fp16"), val = tensor<fp16, [10240, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(582939328)))];
            tensor<fp16, [10240]> up_blocks_1_attentions_2_transformer_blocks_0_ff_net_0_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_transformer_blocks_0_ff_net_0_proj_bias_to_fp16"), val = tensor<fp16, [10240]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(609153792)))];
            tensor<fp16, [2, 10240, 1, 256]> var_8570_cast = conv(bias = up_blocks_1_attentions_2_transformer_blocks_0_ff_net_0_proj_bias_to_fp16, dilations = var_8568, groups = var_5599, pad = var_8570_pad_0, pad_type = var_8570_pad_type_0, strides = var_8566, weight = up_blocks_1_attentions_2_transformer_blocks_0_ff_net_0_proj_weight_to_fp16, x = input_357_cast);
            tensor<int32, [2]> var_8571_split_sizes_0 = const()[name = tensor<string, []>("op_8571_split_sizes_0"), val = tensor<int32, [2]>([5120, 5120])];
            tensor<int32, []> var_8571_axis_0 = const()[name = tensor<string, []>("op_8571_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [2, 5120, 1, 256]> var_8571_cast_0, tensor<fp16, [2, 5120, 1, 256]> var_8571_cast_1 = split(axis = var_8571_axis_0, split_sizes = var_8571_split_sizes_0, x = var_8570_cast);
            tensor<string, []> var_8573_mode_0 = const()[name = tensor<string, []>("op_8573_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [2, 5120, 1, 256]> var_8573_cast = gelu(mode = var_8573_mode_0, x = var_8571_cast_1);
            tensor<fp16, [2, 5120, 1, 256]> input_359_cast = mul(x = var_8571_cast_0, y = var_8573_cast);
            tensor<int32, [2]> var_8577 = const()[name = tensor<string, []>("op_8577"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8579 = const()[name = tensor<string, []>("op_8579"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_8581_pad_type_0 = const()[name = tensor<string, []>("op_8581_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_8581_pad_0 = const()[name = tensor<string, []>("op_8581_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 5120, 1, 1]> up_blocks_1_attentions_2_transformer_blocks_0_ff_net_2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_transformer_blocks_0_ff_net_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(609174336)))];
            tensor<fp16, [1280]> up_blocks_1_attentions_2_transformer_blocks_0_ff_net_2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_transformer_blocks_0_ff_net_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(622281600)))];
            tensor<fp16, [2, 1280, 1, 256]> var_8581_cast = conv(bias = up_blocks_1_attentions_2_transformer_blocks_0_ff_net_2_bias_to_fp16, dilations = var_8579, groups = var_5599, pad = var_8581_pad_0, pad_type = var_8581_pad_type_0, strides = var_8577, weight = up_blocks_1_attentions_2_transformer_blocks_0_ff_net_2_weight_to_fp16, x = input_359_cast);
            tensor<fp16, [2, 1280, 1, 256]> hidden_states_213_cast = add(x = var_8581_cast, y = inputs_59_cast);
            tensor<int32, [4]> var_8583 = const()[name = tensor<string, []>("op_8583"), val = tensor<int32, [4]>([2, 1280, 16, 16])];
            tensor<fp16, [2, 1280, 16, 16]> input_361_cast = reshape(shape = var_8583, x = hidden_states_213_cast);
            tensor<int32, [2]> var_8587 = const()[name = tensor<string, []>("op_8587"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8589 = const()[name = tensor<string, []>("op_8589"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_215_pad_type_0 = const()[name = tensor<string, []>("hidden_states_215_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_215_pad_0 = const()[name = tensor<string, []>("hidden_states_215_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_2_proj_out_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_proj_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(622284224)))];
            tensor<fp16, [1280]> up_blocks_1_attentions_2_proj_out_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_proj_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(625561088)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_215_cast = conv(bias = up_blocks_1_attentions_2_proj_out_bias_to_fp16, dilations = var_8589, groups = var_5599, pad = hidden_states_215_pad_0, pad_type = hidden_states_215_pad_type_0, strides = var_8587, weight = up_blocks_1_attentions_2_proj_out_weight_to_fp16, x = input_361_cast);
            tensor<fp16, [2, 1280, 16, 16]> input_363_cast = add(x = hidden_states_215_cast, y = hidden_states_203_cast);
            tensor<fp32, []> input_365_scale_factor_height_0 = const()[name = tensor<string, []>("input_365_scale_factor_height_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp32, []> input_365_scale_factor_width_0 = const()[name = tensor<string, []>("input_365_scale_factor_width_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp16, [2, 1280, 32, 32]> input_365_cast = upsample_nearest_neighbor(scale_factor_height = input_365_scale_factor_height_0, scale_factor_width = input_365_scale_factor_width_0, x = input_363_cast);
            tensor<int32, [2]> var_8598 = const()[name = tensor<string, []>("op_8598"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8600 = const()[name = tensor<string, []>("op_8600"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_217_pad_type_0 = const()[name = tensor<string, []>("hidden_states_217_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_217_pad_0 = const()[name = tensor<string, []>("hidden_states_217_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> up_blocks_1_upsamplers_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_upsamplers_0_conv_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(625563712)))];
            tensor<fp16, [1280]> up_blocks_1_upsamplers_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_upsamplers_0_conv_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(655054976)))];
            tensor<fp16, [2, 1280, 32, 32]> hidden_states_217_cast = conv(bias = up_blocks_1_upsamplers_0_conv_bias_to_fp16, dilations = var_8600, groups = var_5599, pad = hidden_states_217_pad_0, pad_type = hidden_states_217_pad_type_0, strides = var_8598, weight = up_blocks_1_upsamplers_0_conv_weight_to_fp16, x = input_365_cast);
            tensor<bool, []> var_8622 = const()[name = tensor<string, []>("op_8622"), val = tensor<bool, []>(true)];
            tensor<int32, []> var_8627 = const()[name = tensor<string, []>("op_8627"), val = tensor<int32, []>(1)];
            tensor<bool, []> input_367_interleave_0 = const()[name = tensor<string, []>("input_367_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 640, 32, 32]> cast_7 = cast(dtype = cast_2_dtype_0, x = input_115_cast);
            tensor<fp16, [2, 1920, 32, 32]> input_367_cast = concat(axis = var_8627, interleave = input_367_interleave_0, values = (hidden_states_217_cast, cast_7));
            tensor<int32, [5]> reshape_168_shape_0 = const()[name = tensor<string, []>("reshape_168_shape_0"), val = tensor<int32, [5]>([2, 32, 60, 32, 32])];
            tensor<fp16, [2, 32, 60, 32, 32]> reshape_168_cast = reshape(shape = reshape_168_shape_0, x = input_367_cast);
            tensor<int32, [3]> reduce_mean_126_axes_0 = const()[name = tensor<string, []>("reduce_mean_126_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_126_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_126_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_126_cast = reduce_mean(axes = reduce_mean_126_axes_0, keep_dims = reduce_mean_126_keep_dims_0, x = reshape_168_cast);
            tensor<fp16, [2, 32, 60, 32, 32]> sub_84_cast = sub(x = reshape_168_cast, y = reduce_mean_126_cast);
            tensor<fp16, [2, 32, 60, 32, 32]> square_42_cast = square(x = sub_84_cast);
            tensor<int32, [3]> reduce_mean_128_axes_0 = const()[name = tensor<string, []>("reduce_mean_128_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_128_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_128_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_128_cast = reduce_mean(axes = reduce_mean_128_axes_0, keep_dims = reduce_mean_128_keep_dims_0, x = square_42_cast);
            tensor<fp16, []> add_84_y_0_to_fp16 = const()[name = tensor<string, []>("add_84_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_84_cast = add(x = reduce_mean_128_cast, y = add_84_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_42_cast = sqrt(x = add_84_cast);
            tensor<fp16, [2, 32, 60, 32, 32]> real_div_42_cast = real_div(x = sub_84_cast, y = sqrt_42_cast);
            tensor<int32, [4]> reshape_169_shape_0 = const()[name = tensor<string, []>("reshape_169_shape_0"), val = tensor<int32, [4]>([2, 1920, 32, 32])];
            tensor<fp16, [2, 1920, 32, 32]> reshape_169_cast = reshape(shape = reshape_169_shape_0, x = real_div_42_cast);
            tensor<fp16, [1920]> add_85_mean_0_to_fp16 = const()[name = tensor<string, []>("add_85_mean_0_to_fp16"), val = tensor<fp16, [1920]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(655057600)))];
            tensor<fp16, [1920]> add_85_variance_0_to_fp16 = const()[name = tensor<string, []>("add_85_variance_0_to_fp16"), val = tensor<fp16, [1920]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(655061504)))];
            tensor<fp16, [1920]> add_85_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_85_gamma_0_to_fp16"), val = tensor<fp16, [1920]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(655065408)))];
            tensor<fp16, [1920]> add_85_beta_0_to_fp16 = const()[name = tensor<string, []>("add_85_beta_0_to_fp16"), val = tensor<fp16, [1920]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(655069312)))];
            tensor<fp16, []> add_85_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_85_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1920, 32, 32]> add_85_cast = batch_norm(beta = add_85_beta_0_to_fp16, epsilon = add_85_epsilon_0_to_fp16, gamma = add_85_gamma_0_to_fp16, mean = add_85_mean_0_to_fp16, variance = add_85_variance_0_to_fp16, x = reshape_169_cast);
            tensor<fp16, [2, 1920, 32, 32]> input_371_cast = silu(x = add_85_cast);
            tensor<int32, [2]> var_8656 = const()[name = tensor<string, []>("op_8656"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8658 = const()[name = tensor<string, []>("op_8658"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_219_pad_type_0 = const()[name = tensor<string, []>("hidden_states_219_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_219_pad_0 = const()[name = tensor<string, []>("hidden_states_219_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [640, 1920, 3, 3]> up_blocks_2_resnets_0_conv1_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_0_conv1_weight_to_fp16"), val = tensor<fp16, [640, 1920, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(655073216)))];
            tensor<fp16, [640]> up_blocks_2_resnets_0_conv1_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_0_conv1_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(677191680)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_219_cast = conv(bias = up_blocks_2_resnets_0_conv1_bias_to_fp16, dilations = var_8658, groups = var_8627, pad = hidden_states_219_pad_0, pad_type = hidden_states_219_pad_type_0, strides = var_8656, weight = up_blocks_2_resnets_0_conv1_weight_to_fp16, x = input_371_cast);
            tensor<int32, [2]> var_8664 = const()[name = tensor<string, []>("op_8664"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8666 = const()[name = tensor<string, []>("op_8666"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_33_pad_type_0 = const()[name = tensor<string, []>("temb_33_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_33_pad_0 = const()[name = tensor<string, []>("temb_33_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 1280, 1, 1]> up_blocks_2_resnets_0_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_0_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [640, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(677193024)))];
            tensor<fp16, [640]> up_blocks_2_resnets_0_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_0_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(678831488)))];
            tensor<fp16, [2, 640, 1, 1]> temb_33_cast = conv(bias = up_blocks_2_resnets_0_time_emb_proj_bias_to_fp16, dilations = var_8666, groups = var_8627, pad = temb_33_pad_0, pad_type = temb_33_pad_type_0, strides = var_8664, weight = up_blocks_2_resnets_0_time_emb_proj_weight_to_fp16, x = cast_12);
            tensor<fp16, [2, 640, 32, 32]> input_375_cast = add(x = hidden_states_219_cast, y = temb_33_cast);
            tensor<int32, [5]> reshape_172_shape_0 = const()[name = tensor<string, []>("reshape_172_shape_0"), val = tensor<int32, [5]>([2, 32, 20, 32, 32])];
            tensor<fp16, [2, 32, 20, 32, 32]> reshape_172_cast = reshape(shape = reshape_172_shape_0, x = input_375_cast);
            tensor<int32, [3]> reduce_mean_129_axes_0 = const()[name = tensor<string, []>("reduce_mean_129_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_129_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_129_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_129_cast = reduce_mean(axes = reduce_mean_129_axes_0, keep_dims = reduce_mean_129_keep_dims_0, x = reshape_172_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> sub_86_cast = sub(x = reshape_172_cast, y = reduce_mean_129_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> square_43_cast = square(x = sub_86_cast);
            tensor<int32, [3]> reduce_mean_131_axes_0 = const()[name = tensor<string, []>("reduce_mean_131_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_131_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_131_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_131_cast = reduce_mean(axes = reduce_mean_131_axes_0, keep_dims = reduce_mean_131_keep_dims_0, x = square_43_cast);
            tensor<fp16, []> add_86_y_0_to_fp16 = const()[name = tensor<string, []>("add_86_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_86_cast = add(x = reduce_mean_131_cast, y = add_86_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_43_cast = sqrt(x = add_86_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> real_div_43_cast = real_div(x = sub_86_cast, y = sqrt_43_cast);
            tensor<int32, [4]> reshape_173_shape_0 = const()[name = tensor<string, []>("reshape_173_shape_0"), val = tensor<int32, [4]>([2, 640, 32, 32])];
            tensor<fp16, [2, 640, 32, 32]> reshape_173_cast = reshape(shape = reshape_173_shape_0, x = real_div_43_cast);
            tensor<fp16, [640]> add_87_mean_0_to_fp16 = const()[name = tensor<string, []>("add_87_mean_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(678832832)))];
            tensor<fp16, [640]> add_87_variance_0_to_fp16 = const()[name = tensor<string, []>("add_87_variance_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(678834176)))];
            tensor<fp16, [640]> add_87_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_87_gamma_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(678835520)))];
            tensor<fp16, [640]> add_87_beta_0_to_fp16 = const()[name = tensor<string, []>("add_87_beta_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(678836864)))];
            tensor<fp16, []> add_87_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_87_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 640, 32, 32]> add_87_cast = batch_norm(beta = add_87_beta_0_to_fp16, epsilon = add_87_epsilon_0_to_fp16, gamma = add_87_gamma_0_to_fp16, mean = add_87_mean_0_to_fp16, variance = add_87_variance_0_to_fp16, x = reshape_173_cast);
            tensor<fp16, [2, 640, 32, 32]> input_379_cast = silu(x = add_87_cast);
            tensor<int32, [2]> var_8676 = const()[name = tensor<string, []>("op_8676"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8678 = const()[name = tensor<string, []>("op_8678"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_221_pad_type_0 = const()[name = tensor<string, []>("hidden_states_221_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_221_pad_0 = const()[name = tensor<string, []>("hidden_states_221_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [640, 640, 3, 3]> up_blocks_2_resnets_0_conv2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_0_conv2_weight_to_fp16"), val = tensor<fp16, [640, 640, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(678838208)))];
            tensor<fp16, [640]> up_blocks_2_resnets_0_conv2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_0_conv2_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(686211072)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_221_cast = conv(bias = up_blocks_2_resnets_0_conv2_bias_to_fp16, dilations = var_8678, groups = var_8627, pad = hidden_states_221_pad_0, pad_type = hidden_states_221_pad_type_0, strides = var_8676, weight = up_blocks_2_resnets_0_conv2_weight_to_fp16, x = input_379_cast);
            tensor<int32, [2]> var_8683 = const()[name = tensor<string, []>("op_8683"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8685 = const()[name = tensor<string, []>("op_8685"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_17_pad_type_0 = const()[name = tensor<string, []>("x_17_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_17_pad_0 = const()[name = tensor<string, []>("x_17_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 1920, 1, 1]> up_blocks_2_resnets_0_conv_shortcut_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_0_conv_shortcut_weight_to_fp16"), val = tensor<fp16, [640, 1920, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(686212416)))];
            tensor<fp16, [640]> up_blocks_2_resnets_0_conv_shortcut_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_0_conv_shortcut_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(688670080)))];
            tensor<fp16, [2, 640, 32, 32]> x_17_cast = conv(bias = up_blocks_2_resnets_0_conv_shortcut_bias_to_fp16, dilations = var_8685, groups = var_8627, pad = x_17_pad_0, pad_type = x_17_pad_type_0, strides = var_8683, weight = up_blocks_2_resnets_0_conv_shortcut_weight_to_fp16, x = input_367_cast);
            tensor<fp16, [2, 640, 32, 32]> hidden_states_223_cast = add(x = x_17_cast, y = hidden_states_221_cast);
            tensor<int32, [5]> reshape_176_shape_0 = const()[name = tensor<string, []>("reshape_176_shape_0"), val = tensor<int32, [5]>([2, 32, 20, 32, 32])];
            tensor<fp16, [2, 32, 20, 32, 32]> reshape_176_cast = reshape(shape = reshape_176_shape_0, x = hidden_states_223_cast);
            tensor<int32, [3]> reduce_mean_132_axes_0 = const()[name = tensor<string, []>("reduce_mean_132_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_132_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_132_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_132_cast = reduce_mean(axes = reduce_mean_132_axes_0, keep_dims = reduce_mean_132_keep_dims_0, x = reshape_176_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> sub_88_cast = sub(x = reshape_176_cast, y = reduce_mean_132_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> square_44_cast = square(x = sub_88_cast);
            tensor<int32, [3]> reduce_mean_134_axes_0 = const()[name = tensor<string, []>("reduce_mean_134_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_134_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_134_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_134_cast = reduce_mean(axes = reduce_mean_134_axes_0, keep_dims = reduce_mean_134_keep_dims_0, x = square_44_cast);
            tensor<fp16, []> add_88_y_0_to_fp16 = const()[name = tensor<string, []>("add_88_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_88_cast = add(x = reduce_mean_134_cast, y = add_88_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_44_cast = sqrt(x = add_88_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> real_div_44_cast = real_div(x = sub_88_cast, y = sqrt_44_cast);
            tensor<int32, [4]> reshape_177_shape_0 = const()[name = tensor<string, []>("reshape_177_shape_0"), val = tensor<int32, [4]>([2, 640, 32, 32])];
            tensor<fp16, [2, 640, 32, 32]> reshape_177_cast = reshape(shape = reshape_177_shape_0, x = real_div_44_cast);
            tensor<fp16, [640]> add_89_mean_0_to_fp16 = const()[name = tensor<string, []>("add_89_mean_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(688671424)))];
            tensor<fp16, [640]> add_89_variance_0_to_fp16 = const()[name = tensor<string, []>("add_89_variance_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(688672768)))];
            tensor<fp16, [640]> add_89_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_89_gamma_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(688674112)))];
            tensor<fp16, [640]> add_89_beta_0_to_fp16 = const()[name = tensor<string, []>("add_89_beta_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(688675456)))];
            tensor<fp16, []> add_89_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_89_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 640, 32, 32]> add_89_cast = batch_norm(beta = add_89_beta_0_to_fp16, epsilon = add_89_epsilon_0_to_fp16, gamma = add_89_gamma_0_to_fp16, mean = add_89_mean_0_to_fp16, variance = add_89_variance_0_to_fp16, x = reshape_177_cast);
            tensor<int32, [2]> var_8705 = const()[name = tensor<string, []>("op_8705"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8707 = const()[name = tensor<string, []>("op_8707"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_225_pad_type_0 = const()[name = tensor<string, []>("hidden_states_225_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_225_pad_0 = const()[name = tensor<string, []>("hidden_states_225_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_0_proj_in_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_proj_in_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(688676800)))];
            tensor<fp16, [640]> up_blocks_2_attentions_0_proj_in_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_proj_in_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(689496064)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_225_cast = conv(bias = up_blocks_2_attentions_0_proj_in_bias_to_fp16, dilations = var_8707, groups = var_8627, pad = hidden_states_225_pad_0, pad_type = hidden_states_225_pad_type_0, strides = var_8705, weight = up_blocks_2_attentions_0_proj_in_weight_to_fp16, x = add_89_cast);
            tensor<int32, [4]> var_8712 = const()[name = tensor<string, []>("op_8712"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<fp16, [2, 640, 1, 1024]> inputs_61_cast = reshape(shape = var_8712, x = hidden_states_225_cast);
            tensor<int32, [1]> var_8722 = const()[name = tensor<string, []>("op_8722"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> channels_mean_61_cast = reduce_mean(axes = var_8722, keep_dims = var_8622, x = inputs_61_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_61_cast = sub(x = inputs_61_cast, y = channels_mean_61_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_sq_61_cast = mul(x = zero_mean_61_cast, y = zero_mean_61_cast);
            tensor<int32, [1]> var_8726 = const()[name = tensor<string, []>("op_8726"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> var_8727_cast = reduce_mean(axes = var_8726, keep_dims = var_8622, x = zero_mean_sq_61_cast);
            tensor<fp16, []> var_8728_to_fp16 = const()[name = tensor<string, []>("op_8728_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 1024]> var_8729_cast = add(x = var_8727_cast, y = var_8728_to_fp16);
            tensor<fp16, []> denom_61_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_61_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 1024]> denom_61_cast = rsqrt(epsilon = denom_61_epsilon_0_to_fp16, x = var_8729_cast);
            tensor<fp16, [2, 640, 1, 1024]> out_61_cast = mul(x = zero_mean_61_cast, y = denom_61_cast);
            tensor<fp16, [1, 640, 1, 1]> var_8733_to_fp16 = const()[name = tensor<string, []>("op_8733_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(689497408)))];
            tensor<fp16, [2, 640, 1, 1024]> var_8734_cast = add(x = out_61_cast, y = var_8733_to_fp16);
            tensor<fp16, [1, 640, 1, 1]> var_8736_to_fp16 = const()[name = tensor<string, []>("op_8736_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(689498752)))];
            tensor<fp16, [2, 640, 1, 1024]> hidden_states_227_cast = mul(x = var_8734_cast, y = var_8736_to_fp16);
            tensor<int32, [2]> var_8743 = const()[name = tensor<string, []>("op_8743"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8745 = const()[name = tensor<string, []>("op_8745"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_41_pad_type_0 = const()[name = tensor<string, []>("q_41_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_41_pad_0 = const()[name = tensor<string, []>("q_41_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(689500096)))];
            tensor<fp16, [2, 640, 1, 1024]> q_41_cast = conv(dilations = var_8745, groups = var_8627, pad = q_41_pad_0, pad_type = q_41_pad_type_0, strides = var_8743, weight = up_blocks_2_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16, x = hidden_states_227_cast);
            tensor<int32, [2]> var_8749 = const()[name = tensor<string, []>("op_8749"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8751 = const()[name = tensor<string, []>("op_8751"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_81_pad_type_0 = const()[name = tensor<string, []>("k_81_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_81_pad_0 = const()[name = tensor<string, []>("k_81_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(690319360)))];
            tensor<fp16, [2, 640, 1, 1024]> k_81_cast = conv(dilations = var_8751, groups = var_8627, pad = k_81_pad_0, pad_type = k_81_pad_type_0, strides = var_8749, weight = up_blocks_2_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16, x = hidden_states_227_cast);
            tensor<int32, [2]> var_8755 = const()[name = tensor<string, []>("op_8755"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8757 = const()[name = tensor<string, []>("op_8757"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_41_pad_type_0 = const()[name = tensor<string, []>("v_41_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_41_pad_0 = const()[name = tensor<string, []>("v_41_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(691138624)))];
            tensor<fp16, [2, 640, 1, 1024]> v_41_cast = conv(dilations = var_8757, groups = var_8627, pad = v_41_pad_0, pad_type = v_41_pad_type_0, strides = var_8755, weight = up_blocks_2_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16, x = hidden_states_227_cast);
            tensor<int32, [4]> var_8761_begin_0 = const()[name = tensor<string, []>("op_8761_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_8761_end_0 = const()[name = tensor<string, []>("op_8761_end_0"), val = tensor<int32, [4]>([2, 64, 1, 1024])];
            tensor<bool, [4]> var_8761_end_mask_0 = const()[name = tensor<string, []>("op_8761_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_8761_cast = slice_by_index(begin = var_8761_begin_0, end = var_8761_end_0, end_mask = var_8761_end_mask_0, x = q_41_cast);
            tensor<int32, [4]> var_8765_begin_0 = const()[name = tensor<string, []>("op_8765_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_8765_end_0 = const()[name = tensor<string, []>("op_8765_end_0"), val = tensor<int32, [4]>([2, 128, 1, 1024])];
            tensor<bool, [4]> var_8765_end_mask_0 = const()[name = tensor<string, []>("op_8765_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_8765_cast = slice_by_index(begin = var_8765_begin_0, end = var_8765_end_0, end_mask = var_8765_end_mask_0, x = q_41_cast);
            tensor<int32, [4]> var_8769_begin_0 = const()[name = tensor<string, []>("op_8769_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_8769_end_0 = const()[name = tensor<string, []>("op_8769_end_0"), val = tensor<int32, [4]>([2, 192, 1, 1024])];
            tensor<bool, [4]> var_8769_end_mask_0 = const()[name = tensor<string, []>("op_8769_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_8769_cast = slice_by_index(begin = var_8769_begin_0, end = var_8769_end_0, end_mask = var_8769_end_mask_0, x = q_41_cast);
            tensor<int32, [4]> var_8773_begin_0 = const()[name = tensor<string, []>("op_8773_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_8773_end_0 = const()[name = tensor<string, []>("op_8773_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1024])];
            tensor<bool, [4]> var_8773_end_mask_0 = const()[name = tensor<string, []>("op_8773_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_8773_cast = slice_by_index(begin = var_8773_begin_0, end = var_8773_end_0, end_mask = var_8773_end_mask_0, x = q_41_cast);
            tensor<int32, [4]> var_8777_begin_0 = const()[name = tensor<string, []>("op_8777_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_8777_end_0 = const()[name = tensor<string, []>("op_8777_end_0"), val = tensor<int32, [4]>([2, 320, 1, 1024])];
            tensor<bool, [4]> var_8777_end_mask_0 = const()[name = tensor<string, []>("op_8777_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_8777_cast = slice_by_index(begin = var_8777_begin_0, end = var_8777_end_0, end_mask = var_8777_end_mask_0, x = q_41_cast);
            tensor<int32, [4]> var_8781_begin_0 = const()[name = tensor<string, []>("op_8781_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_8781_end_0 = const()[name = tensor<string, []>("op_8781_end_0"), val = tensor<int32, [4]>([2, 384, 1, 1024])];
            tensor<bool, [4]> var_8781_end_mask_0 = const()[name = tensor<string, []>("op_8781_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_8781_cast = slice_by_index(begin = var_8781_begin_0, end = var_8781_end_0, end_mask = var_8781_end_mask_0, x = q_41_cast);
            tensor<int32, [4]> var_8785_begin_0 = const()[name = tensor<string, []>("op_8785_begin_0"), val = tensor<int32, [4]>([0, 384, 0, 0])];
            tensor<int32, [4]> var_8785_end_0 = const()[name = tensor<string, []>("op_8785_end_0"), val = tensor<int32, [4]>([2, 448, 1, 1024])];
            tensor<bool, [4]> var_8785_end_mask_0 = const()[name = tensor<string, []>("op_8785_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_8785_cast = slice_by_index(begin = var_8785_begin_0, end = var_8785_end_0, end_mask = var_8785_end_mask_0, x = q_41_cast);
            tensor<int32, [4]> var_8789_begin_0 = const()[name = tensor<string, []>("op_8789_begin_0"), val = tensor<int32, [4]>([0, 448, 0, 0])];
            tensor<int32, [4]> var_8789_end_0 = const()[name = tensor<string, []>("op_8789_end_0"), val = tensor<int32, [4]>([2, 512, 1, 1024])];
            tensor<bool, [4]> var_8789_end_mask_0 = const()[name = tensor<string, []>("op_8789_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_8789_cast = slice_by_index(begin = var_8789_begin_0, end = var_8789_end_0, end_mask = var_8789_end_mask_0, x = q_41_cast);
            tensor<int32, [4]> var_8793_begin_0 = const()[name = tensor<string, []>("op_8793_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_8793_end_0 = const()[name = tensor<string, []>("op_8793_end_0"), val = tensor<int32, [4]>([2, 576, 1, 1024])];
            tensor<bool, [4]> var_8793_end_mask_0 = const()[name = tensor<string, []>("op_8793_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_8793_cast = slice_by_index(begin = var_8793_begin_0, end = var_8793_end_0, end_mask = var_8793_end_mask_0, x = q_41_cast);
            tensor<int32, [4]> var_8797_begin_0 = const()[name = tensor<string, []>("op_8797_begin_0"), val = tensor<int32, [4]>([0, 576, 0, 0])];
            tensor<int32, [4]> var_8797_end_0 = const()[name = tensor<string, []>("op_8797_end_0"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<bool, [4]> var_8797_end_mask_0 = const()[name = tensor<string, []>("op_8797_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_8797_cast = slice_by_index(begin = var_8797_begin_0, end = var_8797_end_0, end_mask = var_8797_end_mask_0, x = q_41_cast);
            tensor<int32, [4]> k_83_perm_0 = const()[name = tensor<string, []>("k_83_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_8804_begin_0 = const()[name = tensor<string, []>("op_8804_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_8804_end_0 = const()[name = tensor<string, []>("op_8804_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 64])];
            tensor<bool, [4]> var_8804_end_mask_0 = const()[name = tensor<string, []>("op_8804_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 640]> transpose_11 = transpose(perm = k_83_perm_0, x = k_81_cast);
            tensor<fp16, [2, 1024, 1, 64]> var_8804_cast = slice_by_index(begin = var_8804_begin_0, end = var_8804_end_0, end_mask = var_8804_end_mask_0, x = transpose_11);
            tensor<int32, [4]> var_8808_begin_0 = const()[name = tensor<string, []>("op_8808_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 64])];
            tensor<int32, [4]> var_8808_end_0 = const()[name = tensor<string, []>("op_8808_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 128])];
            tensor<bool, [4]> var_8808_end_mask_0 = const()[name = tensor<string, []>("op_8808_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 64]> var_8808_cast = slice_by_index(begin = var_8808_begin_0, end = var_8808_end_0, end_mask = var_8808_end_mask_0, x = transpose_11);
            tensor<int32, [4]> var_8812_begin_0 = const()[name = tensor<string, []>("op_8812_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 128])];
            tensor<int32, [4]> var_8812_end_0 = const()[name = tensor<string, []>("op_8812_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 192])];
            tensor<bool, [4]> var_8812_end_mask_0 = const()[name = tensor<string, []>("op_8812_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 64]> var_8812_cast = slice_by_index(begin = var_8812_begin_0, end = var_8812_end_0, end_mask = var_8812_end_mask_0, x = transpose_11);
            tensor<int32, [4]> var_8816_begin_0 = const()[name = tensor<string, []>("op_8816_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 192])];
            tensor<int32, [4]> var_8816_end_0 = const()[name = tensor<string, []>("op_8816_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 256])];
            tensor<bool, [4]> var_8816_end_mask_0 = const()[name = tensor<string, []>("op_8816_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 64]> var_8816_cast = slice_by_index(begin = var_8816_begin_0, end = var_8816_end_0, end_mask = var_8816_end_mask_0, x = transpose_11);
            tensor<int32, [4]> var_8820_begin_0 = const()[name = tensor<string, []>("op_8820_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 256])];
            tensor<int32, [4]> var_8820_end_0 = const()[name = tensor<string, []>("op_8820_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 320])];
            tensor<bool, [4]> var_8820_end_mask_0 = const()[name = tensor<string, []>("op_8820_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 64]> var_8820_cast = slice_by_index(begin = var_8820_begin_0, end = var_8820_end_0, end_mask = var_8820_end_mask_0, x = transpose_11);
            tensor<int32, [4]> var_8824_begin_0 = const()[name = tensor<string, []>("op_8824_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_8824_end_0 = const()[name = tensor<string, []>("op_8824_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 384])];
            tensor<bool, [4]> var_8824_end_mask_0 = const()[name = tensor<string, []>("op_8824_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 64]> var_8824_cast = slice_by_index(begin = var_8824_begin_0, end = var_8824_end_0, end_mask = var_8824_end_mask_0, x = transpose_11);
            tensor<int32, [4]> var_8828_begin_0 = const()[name = tensor<string, []>("op_8828_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 384])];
            tensor<int32, [4]> var_8828_end_0 = const()[name = tensor<string, []>("op_8828_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 448])];
            tensor<bool, [4]> var_8828_end_mask_0 = const()[name = tensor<string, []>("op_8828_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 64]> var_8828_cast = slice_by_index(begin = var_8828_begin_0, end = var_8828_end_0, end_mask = var_8828_end_mask_0, x = transpose_11);
            tensor<int32, [4]> var_8832_begin_0 = const()[name = tensor<string, []>("op_8832_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 448])];
            tensor<int32, [4]> var_8832_end_0 = const()[name = tensor<string, []>("op_8832_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 512])];
            tensor<bool, [4]> var_8832_end_mask_0 = const()[name = tensor<string, []>("op_8832_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 64]> var_8832_cast = slice_by_index(begin = var_8832_begin_0, end = var_8832_end_0, end_mask = var_8832_end_mask_0, x = transpose_11);
            tensor<int32, [4]> var_8836_begin_0 = const()[name = tensor<string, []>("op_8836_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 512])];
            tensor<int32, [4]> var_8836_end_0 = const()[name = tensor<string, []>("op_8836_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 576])];
            tensor<bool, [4]> var_8836_end_mask_0 = const()[name = tensor<string, []>("op_8836_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 64]> var_8836_cast = slice_by_index(begin = var_8836_begin_0, end = var_8836_end_0, end_mask = var_8836_end_mask_0, x = transpose_11);
            tensor<int32, [4]> var_8840_begin_0 = const()[name = tensor<string, []>("op_8840_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 576])];
            tensor<int32, [4]> var_8840_end_0 = const()[name = tensor<string, []>("op_8840_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 640])];
            tensor<bool, [4]> var_8840_end_mask_0 = const()[name = tensor<string, []>("op_8840_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 64]> var_8840_cast = slice_by_index(begin = var_8840_begin_0, end = var_8840_end_0, end_mask = var_8840_end_mask_0, x = transpose_11);
            tensor<int32, [4]> var_8842_begin_0 = const()[name = tensor<string, []>("op_8842_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_8842_end_0 = const()[name = tensor<string, []>("op_8842_end_0"), val = tensor<int32, [4]>([2, 64, 1, 1024])];
            tensor<bool, [4]> var_8842_end_mask_0 = const()[name = tensor<string, []>("op_8842_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_8842_cast = slice_by_index(begin = var_8842_begin_0, end = var_8842_end_0, end_mask = var_8842_end_mask_0, x = v_41_cast);
            tensor<int32, [4]> var_8846_begin_0 = const()[name = tensor<string, []>("op_8846_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_8846_end_0 = const()[name = tensor<string, []>("op_8846_end_0"), val = tensor<int32, [4]>([2, 128, 1, 1024])];
            tensor<bool, [4]> var_8846_end_mask_0 = const()[name = tensor<string, []>("op_8846_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_8846_cast = slice_by_index(begin = var_8846_begin_0, end = var_8846_end_0, end_mask = var_8846_end_mask_0, x = v_41_cast);
            tensor<int32, [4]> var_8850_begin_0 = const()[name = tensor<string, []>("op_8850_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_8850_end_0 = const()[name = tensor<string, []>("op_8850_end_0"), val = tensor<int32, [4]>([2, 192, 1, 1024])];
            tensor<bool, [4]> var_8850_end_mask_0 = const()[name = tensor<string, []>("op_8850_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_8850_cast = slice_by_index(begin = var_8850_begin_0, end = var_8850_end_0, end_mask = var_8850_end_mask_0, x = v_41_cast);
            tensor<int32, [4]> var_8854_begin_0 = const()[name = tensor<string, []>("op_8854_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_8854_end_0 = const()[name = tensor<string, []>("op_8854_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1024])];
            tensor<bool, [4]> var_8854_end_mask_0 = const()[name = tensor<string, []>("op_8854_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_8854_cast = slice_by_index(begin = var_8854_begin_0, end = var_8854_end_0, end_mask = var_8854_end_mask_0, x = v_41_cast);
            tensor<int32, [4]> var_8858_begin_0 = const()[name = tensor<string, []>("op_8858_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_8858_end_0 = const()[name = tensor<string, []>("op_8858_end_0"), val = tensor<int32, [4]>([2, 320, 1, 1024])];
            tensor<bool, [4]> var_8858_end_mask_0 = const()[name = tensor<string, []>("op_8858_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_8858_cast = slice_by_index(begin = var_8858_begin_0, end = var_8858_end_0, end_mask = var_8858_end_mask_0, x = v_41_cast);
            tensor<int32, [4]> var_8862_begin_0 = const()[name = tensor<string, []>("op_8862_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_8862_end_0 = const()[name = tensor<string, []>("op_8862_end_0"), val = tensor<int32, [4]>([2, 384, 1, 1024])];
            tensor<bool, [4]> var_8862_end_mask_0 = const()[name = tensor<string, []>("op_8862_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_8862_cast = slice_by_index(begin = var_8862_begin_0, end = var_8862_end_0, end_mask = var_8862_end_mask_0, x = v_41_cast);
            tensor<int32, [4]> var_8866_begin_0 = const()[name = tensor<string, []>("op_8866_begin_0"), val = tensor<int32, [4]>([0, 384, 0, 0])];
            tensor<int32, [4]> var_8866_end_0 = const()[name = tensor<string, []>("op_8866_end_0"), val = tensor<int32, [4]>([2, 448, 1, 1024])];
            tensor<bool, [4]> var_8866_end_mask_0 = const()[name = tensor<string, []>("op_8866_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_8866_cast = slice_by_index(begin = var_8866_begin_0, end = var_8866_end_0, end_mask = var_8866_end_mask_0, x = v_41_cast);
            tensor<int32, [4]> var_8870_begin_0 = const()[name = tensor<string, []>("op_8870_begin_0"), val = tensor<int32, [4]>([0, 448, 0, 0])];
            tensor<int32, [4]> var_8870_end_0 = const()[name = tensor<string, []>("op_8870_end_0"), val = tensor<int32, [4]>([2, 512, 1, 1024])];
            tensor<bool, [4]> var_8870_end_mask_0 = const()[name = tensor<string, []>("op_8870_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_8870_cast = slice_by_index(begin = var_8870_begin_0, end = var_8870_end_0, end_mask = var_8870_end_mask_0, x = v_41_cast);
            tensor<int32, [4]> var_8874_begin_0 = const()[name = tensor<string, []>("op_8874_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_8874_end_0 = const()[name = tensor<string, []>("op_8874_end_0"), val = tensor<int32, [4]>([2, 576, 1, 1024])];
            tensor<bool, [4]> var_8874_end_mask_0 = const()[name = tensor<string, []>("op_8874_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_8874_cast = slice_by_index(begin = var_8874_begin_0, end = var_8874_end_0, end_mask = var_8874_end_mask_0, x = v_41_cast);
            tensor<int32, [4]> var_8878_begin_0 = const()[name = tensor<string, []>("op_8878_begin_0"), val = tensor<int32, [4]>([0, 576, 0, 0])];
            tensor<int32, [4]> var_8878_end_0 = const()[name = tensor<string, []>("op_8878_end_0"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<bool, [4]> var_8878_end_mask_0 = const()[name = tensor<string, []>("op_8878_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_8878_cast = slice_by_index(begin = var_8878_begin_0, end = var_8878_end_0, end_mask = var_8878_end_mask_0, x = v_41_cast);
            tensor<string, []> var_8882_equation_0 = const()[name = tensor<string, []>("op_8882_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_8882_cast = einsum(equation = var_8882_equation_0, values = (var_8804_cast, var_8761_cast));
            tensor<fp16, []> var_8883_to_fp16 = const()[name = tensor<string, []>("op_8883_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_601_cast = mul(x = var_8882_cast, y = var_8883_to_fp16);
            tensor<string, []> var_8886_equation_0 = const()[name = tensor<string, []>("op_8886_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_8886_cast = einsum(equation = var_8886_equation_0, values = (var_8808_cast, var_8765_cast));
            tensor<fp16, []> var_8887_to_fp16 = const()[name = tensor<string, []>("op_8887_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_603_cast = mul(x = var_8886_cast, y = var_8887_to_fp16);
            tensor<string, []> var_8890_equation_0 = const()[name = tensor<string, []>("op_8890_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_8890_cast = einsum(equation = var_8890_equation_0, values = (var_8812_cast, var_8769_cast));
            tensor<fp16, []> var_8891_to_fp16 = const()[name = tensor<string, []>("op_8891_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_605_cast = mul(x = var_8890_cast, y = var_8891_to_fp16);
            tensor<string, []> var_8894_equation_0 = const()[name = tensor<string, []>("op_8894_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_8894_cast = einsum(equation = var_8894_equation_0, values = (var_8816_cast, var_8773_cast));
            tensor<fp16, []> var_8895_to_fp16 = const()[name = tensor<string, []>("op_8895_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_607_cast = mul(x = var_8894_cast, y = var_8895_to_fp16);
            tensor<string, []> var_8898_equation_0 = const()[name = tensor<string, []>("op_8898_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_8898_cast = einsum(equation = var_8898_equation_0, values = (var_8820_cast, var_8777_cast));
            tensor<fp16, []> var_8899_to_fp16 = const()[name = tensor<string, []>("op_8899_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_609_cast = mul(x = var_8898_cast, y = var_8899_to_fp16);
            tensor<string, []> var_8902_equation_0 = const()[name = tensor<string, []>("op_8902_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_8902_cast = einsum(equation = var_8902_equation_0, values = (var_8824_cast, var_8781_cast));
            tensor<fp16, []> var_8903_to_fp16 = const()[name = tensor<string, []>("op_8903_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_611_cast = mul(x = var_8902_cast, y = var_8903_to_fp16);
            tensor<string, []> var_8906_equation_0 = const()[name = tensor<string, []>("op_8906_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_8906_cast = einsum(equation = var_8906_equation_0, values = (var_8828_cast, var_8785_cast));
            tensor<fp16, []> var_8907_to_fp16 = const()[name = tensor<string, []>("op_8907_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_613_cast = mul(x = var_8906_cast, y = var_8907_to_fp16);
            tensor<string, []> var_8910_equation_0 = const()[name = tensor<string, []>("op_8910_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_8910_cast = einsum(equation = var_8910_equation_0, values = (var_8832_cast, var_8789_cast));
            tensor<fp16, []> var_8911_to_fp16 = const()[name = tensor<string, []>("op_8911_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_615_cast = mul(x = var_8910_cast, y = var_8911_to_fp16);
            tensor<string, []> var_8914_equation_0 = const()[name = tensor<string, []>("op_8914_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_8914_cast = einsum(equation = var_8914_equation_0, values = (var_8836_cast, var_8793_cast));
            tensor<fp16, []> var_8915_to_fp16 = const()[name = tensor<string, []>("op_8915_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_617_cast = mul(x = var_8914_cast, y = var_8915_to_fp16);
            tensor<string, []> var_8918_equation_0 = const()[name = tensor<string, []>("op_8918_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_8918_cast = einsum(equation = var_8918_equation_0, values = (var_8840_cast, var_8797_cast));
            tensor<fp16, []> var_8919_to_fp16 = const()[name = tensor<string, []>("op_8919_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_619_cast = mul(x = var_8918_cast, y = var_8919_to_fp16);
            tensor<fp16, [2, 1024, 1, 1024]> var_8921_cast = softmax(axis = var_8627, x = aw_601_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_8922_cast = softmax(axis = var_8627, x = aw_603_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_8923_cast = softmax(axis = var_8627, x = aw_605_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_8924_cast = softmax(axis = var_8627, x = aw_607_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_8925_cast = softmax(axis = var_8627, x = aw_609_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_8926_cast = softmax(axis = var_8627, x = aw_611_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_8927_cast = softmax(axis = var_8627, x = aw_613_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_8928_cast = softmax(axis = var_8627, x = aw_615_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_8929_cast = softmax(axis = var_8627, x = aw_617_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_8930_cast = softmax(axis = var_8627, x = aw_619_cast);
            tensor<string, []> var_8932_equation_0 = const()[name = tensor<string, []>("op_8932_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_8932_cast = einsum(equation = var_8932_equation_0, values = (var_8842_cast, var_8921_cast));
            tensor<string, []> var_8934_equation_0 = const()[name = tensor<string, []>("op_8934_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_8934_cast = einsum(equation = var_8934_equation_0, values = (var_8846_cast, var_8922_cast));
            tensor<string, []> var_8936_equation_0 = const()[name = tensor<string, []>("op_8936_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_8936_cast = einsum(equation = var_8936_equation_0, values = (var_8850_cast, var_8923_cast));
            tensor<string, []> var_8938_equation_0 = const()[name = tensor<string, []>("op_8938_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_8938_cast = einsum(equation = var_8938_equation_0, values = (var_8854_cast, var_8924_cast));
            tensor<string, []> var_8940_equation_0 = const()[name = tensor<string, []>("op_8940_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_8940_cast = einsum(equation = var_8940_equation_0, values = (var_8858_cast, var_8925_cast));
            tensor<string, []> var_8942_equation_0 = const()[name = tensor<string, []>("op_8942_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_8942_cast = einsum(equation = var_8942_equation_0, values = (var_8862_cast, var_8926_cast));
            tensor<string, []> var_8944_equation_0 = const()[name = tensor<string, []>("op_8944_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_8944_cast = einsum(equation = var_8944_equation_0, values = (var_8866_cast, var_8927_cast));
            tensor<string, []> var_8946_equation_0 = const()[name = tensor<string, []>("op_8946_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_8946_cast = einsum(equation = var_8946_equation_0, values = (var_8870_cast, var_8928_cast));
            tensor<string, []> var_8948_equation_0 = const()[name = tensor<string, []>("op_8948_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_8948_cast = einsum(equation = var_8948_equation_0, values = (var_8874_cast, var_8929_cast));
            tensor<string, []> var_8950_equation_0 = const()[name = tensor<string, []>("op_8950_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_8950_cast = einsum(equation = var_8950_equation_0, values = (var_8878_cast, var_8930_cast));
            tensor<bool, []> input_383_interleave_0 = const()[name = tensor<string, []>("input_383_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 640, 1, 1024]> input_383_cast = concat(axis = var_8627, interleave = input_383_interleave_0, values = (var_8932_cast, var_8934_cast, var_8936_cast, var_8938_cast, var_8940_cast, var_8942_cast, var_8944_cast, var_8946_cast, var_8948_cast, var_8950_cast));
            tensor<int32, [2]> var_8956 = const()[name = tensor<string, []>("op_8956"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8958 = const()[name = tensor<string, []>("op_8958"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_8960_pad_type_0 = const()[name = tensor<string, []>("op_8960_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_8960_pad_0 = const()[name = tensor<string, []>("op_8960_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(691957888)))];
            tensor<fp16, [640]> up_blocks_2_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(692777152)))];
            tensor<fp16, [2, 640, 1, 1024]> var_8960_cast = conv(bias = up_blocks_2_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16, dilations = var_8958, groups = var_8627, pad = var_8960_pad_0, pad_type = var_8960_pad_type_0, strides = var_8956, weight = up_blocks_2_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16, x = input_383_cast);
            tensor<fp16, [2, 640, 1, 1024]> inputs_63_cast = add(x = var_8960_cast, y = inputs_61_cast);
            tensor<int32, [1]> var_8964 = const()[name = tensor<string, []>("op_8964"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> channels_mean_63_cast = reduce_mean(axes = var_8964, keep_dims = var_8622, x = inputs_63_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_63_cast = sub(x = inputs_63_cast, y = channels_mean_63_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_sq_63_cast = mul(x = zero_mean_63_cast, y = zero_mean_63_cast);
            tensor<int32, [1]> var_8968 = const()[name = tensor<string, []>("op_8968"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> var_8969_cast = reduce_mean(axes = var_8968, keep_dims = var_8622, x = zero_mean_sq_63_cast);
            tensor<fp16, []> var_8970_to_fp16 = const()[name = tensor<string, []>("op_8970_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 1024]> var_8971_cast = add(x = var_8969_cast, y = var_8970_to_fp16);
            tensor<fp16, []> denom_63_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_63_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 1024]> denom_63_cast = rsqrt(epsilon = denom_63_epsilon_0_to_fp16, x = var_8971_cast);
            tensor<fp16, [2, 640, 1, 1024]> out_63_cast = mul(x = zero_mean_63_cast, y = denom_63_cast);
            tensor<fp16, [1, 640, 1, 1]> var_8975_to_fp16 = const()[name = tensor<string, []>("op_8975_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(692778496)))];
            tensor<fp16, [2, 640, 1, 1024]> var_8976_cast = add(x = out_63_cast, y = var_8975_to_fp16);
            tensor<fp16, [1, 640, 1, 1]> var_8978_to_fp16 = const()[name = tensor<string, []>("op_8978_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(692779840)))];
            tensor<fp16, [2, 640, 1, 1024]> hidden_states_229_cast = mul(x = var_8976_cast, y = var_8978_to_fp16);
            tensor<int32, [2]> var_8985 = const()[name = tensor<string, []>("op_8985"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8987 = const()[name = tensor<string, []>("op_8987"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_43_pad_type_0 = const()[name = tensor<string, []>("q_43_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_43_pad_0 = const()[name = tensor<string, []>("q_43_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(692781184)))];
            tensor<fp16, [2, 640, 1, 1024]> q_43_cast = conv(dilations = var_8987, groups = var_8627, pad = q_43_pad_0, pad_type = q_43_pad_type_0, strides = var_8985, weight = up_blocks_2_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16, x = hidden_states_229_cast);
            tensor<int32, [2]> var_8991 = const()[name = tensor<string, []>("op_8991"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8993 = const()[name = tensor<string, []>("op_8993"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_85_pad_type_0 = const()[name = tensor<string, []>("k_85_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_85_pad_0 = const()[name = tensor<string, []>("k_85_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 1024, 1, 1]> up_blocks_2_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16"), val = tensor<fp16, [640, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(693600448)))];
            tensor<fp16, [2, 640, 1, 77]> k_85_cast = conv(dilations = var_8993, groups = var_8627, pad = k_85_pad_0, pad_type = k_85_pad_type_0, strides = var_8991, weight = up_blocks_2_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [2]> var_8997 = const()[name = tensor<string, []>("op_8997"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8999 = const()[name = tensor<string, []>("op_8999"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_43_pad_type_0 = const()[name = tensor<string, []>("v_43_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_43_pad_0 = const()[name = tensor<string, []>("v_43_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 1024, 1, 1]> up_blocks_2_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16"), val = tensor<fp16, [640, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(694911232)))];
            tensor<fp16, [2, 640, 1, 77]> v_43_cast = conv(dilations = var_8999, groups = var_8627, pad = v_43_pad_0, pad_type = v_43_pad_type_0, strides = var_8997, weight = up_blocks_2_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [4]> var_9003_begin_0 = const()[name = tensor<string, []>("op_9003_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_9003_end_0 = const()[name = tensor<string, []>("op_9003_end_0"), val = tensor<int32, [4]>([2, 64, 1, 1024])];
            tensor<bool, [4]> var_9003_end_mask_0 = const()[name = tensor<string, []>("op_9003_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_9003_cast = slice_by_index(begin = var_9003_begin_0, end = var_9003_end_0, end_mask = var_9003_end_mask_0, x = q_43_cast);
            tensor<int32, [4]> var_9007_begin_0 = const()[name = tensor<string, []>("op_9007_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_9007_end_0 = const()[name = tensor<string, []>("op_9007_end_0"), val = tensor<int32, [4]>([2, 128, 1, 1024])];
            tensor<bool, [4]> var_9007_end_mask_0 = const()[name = tensor<string, []>("op_9007_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_9007_cast = slice_by_index(begin = var_9007_begin_0, end = var_9007_end_0, end_mask = var_9007_end_mask_0, x = q_43_cast);
            tensor<int32, [4]> var_9011_begin_0 = const()[name = tensor<string, []>("op_9011_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_9011_end_0 = const()[name = tensor<string, []>("op_9011_end_0"), val = tensor<int32, [4]>([2, 192, 1, 1024])];
            tensor<bool, [4]> var_9011_end_mask_0 = const()[name = tensor<string, []>("op_9011_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_9011_cast = slice_by_index(begin = var_9011_begin_0, end = var_9011_end_0, end_mask = var_9011_end_mask_0, x = q_43_cast);
            tensor<int32, [4]> var_9015_begin_0 = const()[name = tensor<string, []>("op_9015_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_9015_end_0 = const()[name = tensor<string, []>("op_9015_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1024])];
            tensor<bool, [4]> var_9015_end_mask_0 = const()[name = tensor<string, []>("op_9015_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_9015_cast = slice_by_index(begin = var_9015_begin_0, end = var_9015_end_0, end_mask = var_9015_end_mask_0, x = q_43_cast);
            tensor<int32, [4]> var_9019_begin_0 = const()[name = tensor<string, []>("op_9019_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_9019_end_0 = const()[name = tensor<string, []>("op_9019_end_0"), val = tensor<int32, [4]>([2, 320, 1, 1024])];
            tensor<bool, [4]> var_9019_end_mask_0 = const()[name = tensor<string, []>("op_9019_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_9019_cast = slice_by_index(begin = var_9019_begin_0, end = var_9019_end_0, end_mask = var_9019_end_mask_0, x = q_43_cast);
            tensor<int32, [4]> var_9023_begin_0 = const()[name = tensor<string, []>("op_9023_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_9023_end_0 = const()[name = tensor<string, []>("op_9023_end_0"), val = tensor<int32, [4]>([2, 384, 1, 1024])];
            tensor<bool, [4]> var_9023_end_mask_0 = const()[name = tensor<string, []>("op_9023_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_9023_cast = slice_by_index(begin = var_9023_begin_0, end = var_9023_end_0, end_mask = var_9023_end_mask_0, x = q_43_cast);
            tensor<int32, [4]> var_9027_begin_0 = const()[name = tensor<string, []>("op_9027_begin_0"), val = tensor<int32, [4]>([0, 384, 0, 0])];
            tensor<int32, [4]> var_9027_end_0 = const()[name = tensor<string, []>("op_9027_end_0"), val = tensor<int32, [4]>([2, 448, 1, 1024])];
            tensor<bool, [4]> var_9027_end_mask_0 = const()[name = tensor<string, []>("op_9027_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_9027_cast = slice_by_index(begin = var_9027_begin_0, end = var_9027_end_0, end_mask = var_9027_end_mask_0, x = q_43_cast);
            tensor<int32, [4]> var_9031_begin_0 = const()[name = tensor<string, []>("op_9031_begin_0"), val = tensor<int32, [4]>([0, 448, 0, 0])];
            tensor<int32, [4]> var_9031_end_0 = const()[name = tensor<string, []>("op_9031_end_0"), val = tensor<int32, [4]>([2, 512, 1, 1024])];
            tensor<bool, [4]> var_9031_end_mask_0 = const()[name = tensor<string, []>("op_9031_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_9031_cast = slice_by_index(begin = var_9031_begin_0, end = var_9031_end_0, end_mask = var_9031_end_mask_0, x = q_43_cast);
            tensor<int32, [4]> var_9035_begin_0 = const()[name = tensor<string, []>("op_9035_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_9035_end_0 = const()[name = tensor<string, []>("op_9035_end_0"), val = tensor<int32, [4]>([2, 576, 1, 1024])];
            tensor<bool, [4]> var_9035_end_mask_0 = const()[name = tensor<string, []>("op_9035_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_9035_cast = slice_by_index(begin = var_9035_begin_0, end = var_9035_end_0, end_mask = var_9035_end_mask_0, x = q_43_cast);
            tensor<int32, [4]> var_9039_begin_0 = const()[name = tensor<string, []>("op_9039_begin_0"), val = tensor<int32, [4]>([0, 576, 0, 0])];
            tensor<int32, [4]> var_9039_end_0 = const()[name = tensor<string, []>("op_9039_end_0"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<bool, [4]> var_9039_end_mask_0 = const()[name = tensor<string, []>("op_9039_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_9039_cast = slice_by_index(begin = var_9039_begin_0, end = var_9039_end_0, end_mask = var_9039_end_mask_0, x = q_43_cast);
            tensor<int32, [4]> k_87_perm_0 = const()[name = tensor<string, []>("k_87_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_9046_begin_0 = const()[name = tensor<string, []>("op_9046_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_9046_end_0 = const()[name = tensor<string, []>("op_9046_end_0"), val = tensor<int32, [4]>([2, 77, 1, 64])];
            tensor<bool, [4]> var_9046_end_mask_0 = const()[name = tensor<string, []>("op_9046_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 640]> transpose_10 = transpose(perm = k_87_perm_0, x = k_85_cast);
            tensor<fp16, [2, 77, 1, 64]> var_9046_cast = slice_by_index(begin = var_9046_begin_0, end = var_9046_end_0, end_mask = var_9046_end_mask_0, x = transpose_10);
            tensor<int32, [4]> var_9050_begin_0 = const()[name = tensor<string, []>("op_9050_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 64])];
            tensor<int32, [4]> var_9050_end_0 = const()[name = tensor<string, []>("op_9050_end_0"), val = tensor<int32, [4]>([2, 77, 1, 128])];
            tensor<bool, [4]> var_9050_end_mask_0 = const()[name = tensor<string, []>("op_9050_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_9050_cast = slice_by_index(begin = var_9050_begin_0, end = var_9050_end_0, end_mask = var_9050_end_mask_0, x = transpose_10);
            tensor<int32, [4]> var_9054_begin_0 = const()[name = tensor<string, []>("op_9054_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 128])];
            tensor<int32, [4]> var_9054_end_0 = const()[name = tensor<string, []>("op_9054_end_0"), val = tensor<int32, [4]>([2, 77, 1, 192])];
            tensor<bool, [4]> var_9054_end_mask_0 = const()[name = tensor<string, []>("op_9054_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_9054_cast = slice_by_index(begin = var_9054_begin_0, end = var_9054_end_0, end_mask = var_9054_end_mask_0, x = transpose_10);
            tensor<int32, [4]> var_9058_begin_0 = const()[name = tensor<string, []>("op_9058_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 192])];
            tensor<int32, [4]> var_9058_end_0 = const()[name = tensor<string, []>("op_9058_end_0"), val = tensor<int32, [4]>([2, 77, 1, 256])];
            tensor<bool, [4]> var_9058_end_mask_0 = const()[name = tensor<string, []>("op_9058_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_9058_cast = slice_by_index(begin = var_9058_begin_0, end = var_9058_end_0, end_mask = var_9058_end_mask_0, x = transpose_10);
            tensor<int32, [4]> var_9062_begin_0 = const()[name = tensor<string, []>("op_9062_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 256])];
            tensor<int32, [4]> var_9062_end_0 = const()[name = tensor<string, []>("op_9062_end_0"), val = tensor<int32, [4]>([2, 77, 1, 320])];
            tensor<bool, [4]> var_9062_end_mask_0 = const()[name = tensor<string, []>("op_9062_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_9062_cast = slice_by_index(begin = var_9062_begin_0, end = var_9062_end_0, end_mask = var_9062_end_mask_0, x = transpose_10);
            tensor<int32, [4]> var_9066_begin_0 = const()[name = tensor<string, []>("op_9066_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_9066_end_0 = const()[name = tensor<string, []>("op_9066_end_0"), val = tensor<int32, [4]>([2, 77, 1, 384])];
            tensor<bool, [4]> var_9066_end_mask_0 = const()[name = tensor<string, []>("op_9066_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_9066_cast = slice_by_index(begin = var_9066_begin_0, end = var_9066_end_0, end_mask = var_9066_end_mask_0, x = transpose_10);
            tensor<int32, [4]> var_9070_begin_0 = const()[name = tensor<string, []>("op_9070_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 384])];
            tensor<int32, [4]> var_9070_end_0 = const()[name = tensor<string, []>("op_9070_end_0"), val = tensor<int32, [4]>([2, 77, 1, 448])];
            tensor<bool, [4]> var_9070_end_mask_0 = const()[name = tensor<string, []>("op_9070_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_9070_cast = slice_by_index(begin = var_9070_begin_0, end = var_9070_end_0, end_mask = var_9070_end_mask_0, x = transpose_10);
            tensor<int32, [4]> var_9074_begin_0 = const()[name = tensor<string, []>("op_9074_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 448])];
            tensor<int32, [4]> var_9074_end_0 = const()[name = tensor<string, []>("op_9074_end_0"), val = tensor<int32, [4]>([2, 77, 1, 512])];
            tensor<bool, [4]> var_9074_end_mask_0 = const()[name = tensor<string, []>("op_9074_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_9074_cast = slice_by_index(begin = var_9074_begin_0, end = var_9074_end_0, end_mask = var_9074_end_mask_0, x = transpose_10);
            tensor<int32, [4]> var_9078_begin_0 = const()[name = tensor<string, []>("op_9078_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 512])];
            tensor<int32, [4]> var_9078_end_0 = const()[name = tensor<string, []>("op_9078_end_0"), val = tensor<int32, [4]>([2, 77, 1, 576])];
            tensor<bool, [4]> var_9078_end_mask_0 = const()[name = tensor<string, []>("op_9078_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_9078_cast = slice_by_index(begin = var_9078_begin_0, end = var_9078_end_0, end_mask = var_9078_end_mask_0, x = transpose_10);
            tensor<int32, [4]> var_9082_begin_0 = const()[name = tensor<string, []>("op_9082_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 576])];
            tensor<int32, [4]> var_9082_end_0 = const()[name = tensor<string, []>("op_9082_end_0"), val = tensor<int32, [4]>([2, 77, 1, 640])];
            tensor<bool, [4]> var_9082_end_mask_0 = const()[name = tensor<string, []>("op_9082_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_9082_cast = slice_by_index(begin = var_9082_begin_0, end = var_9082_end_0, end_mask = var_9082_end_mask_0, x = transpose_10);
            tensor<int32, [4]> var_9084_begin_0 = const()[name = tensor<string, []>("op_9084_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_9084_end_0 = const()[name = tensor<string, []>("op_9084_end_0"), val = tensor<int32, [4]>([2, 64, 1, 77])];
            tensor<bool, [4]> var_9084_end_mask_0 = const()[name = tensor<string, []>("op_9084_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_9084_cast = slice_by_index(begin = var_9084_begin_0, end = var_9084_end_0, end_mask = var_9084_end_mask_0, x = v_43_cast);
            tensor<int32, [4]> var_9088_begin_0 = const()[name = tensor<string, []>("op_9088_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_9088_end_0 = const()[name = tensor<string, []>("op_9088_end_0"), val = tensor<int32, [4]>([2, 128, 1, 77])];
            tensor<bool, [4]> var_9088_end_mask_0 = const()[name = tensor<string, []>("op_9088_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_9088_cast = slice_by_index(begin = var_9088_begin_0, end = var_9088_end_0, end_mask = var_9088_end_mask_0, x = v_43_cast);
            tensor<int32, [4]> var_9092_begin_0 = const()[name = tensor<string, []>("op_9092_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_9092_end_0 = const()[name = tensor<string, []>("op_9092_end_0"), val = tensor<int32, [4]>([2, 192, 1, 77])];
            tensor<bool, [4]> var_9092_end_mask_0 = const()[name = tensor<string, []>("op_9092_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_9092_cast = slice_by_index(begin = var_9092_begin_0, end = var_9092_end_0, end_mask = var_9092_end_mask_0, x = v_43_cast);
            tensor<int32, [4]> var_9096_begin_0 = const()[name = tensor<string, []>("op_9096_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_9096_end_0 = const()[name = tensor<string, []>("op_9096_end_0"), val = tensor<int32, [4]>([2, 256, 1, 77])];
            tensor<bool, [4]> var_9096_end_mask_0 = const()[name = tensor<string, []>("op_9096_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_9096_cast = slice_by_index(begin = var_9096_begin_0, end = var_9096_end_0, end_mask = var_9096_end_mask_0, x = v_43_cast);
            tensor<int32, [4]> var_9100_begin_0 = const()[name = tensor<string, []>("op_9100_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_9100_end_0 = const()[name = tensor<string, []>("op_9100_end_0"), val = tensor<int32, [4]>([2, 320, 1, 77])];
            tensor<bool, [4]> var_9100_end_mask_0 = const()[name = tensor<string, []>("op_9100_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_9100_cast = slice_by_index(begin = var_9100_begin_0, end = var_9100_end_0, end_mask = var_9100_end_mask_0, x = v_43_cast);
            tensor<int32, [4]> var_9104_begin_0 = const()[name = tensor<string, []>("op_9104_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_9104_end_0 = const()[name = tensor<string, []>("op_9104_end_0"), val = tensor<int32, [4]>([2, 384, 1, 77])];
            tensor<bool, [4]> var_9104_end_mask_0 = const()[name = tensor<string, []>("op_9104_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_9104_cast = slice_by_index(begin = var_9104_begin_0, end = var_9104_end_0, end_mask = var_9104_end_mask_0, x = v_43_cast);
            tensor<int32, [4]> var_9108_begin_0 = const()[name = tensor<string, []>("op_9108_begin_0"), val = tensor<int32, [4]>([0, 384, 0, 0])];
            tensor<int32, [4]> var_9108_end_0 = const()[name = tensor<string, []>("op_9108_end_0"), val = tensor<int32, [4]>([2, 448, 1, 77])];
            tensor<bool, [4]> var_9108_end_mask_0 = const()[name = tensor<string, []>("op_9108_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_9108_cast = slice_by_index(begin = var_9108_begin_0, end = var_9108_end_0, end_mask = var_9108_end_mask_0, x = v_43_cast);
            tensor<int32, [4]> var_9112_begin_0 = const()[name = tensor<string, []>("op_9112_begin_0"), val = tensor<int32, [4]>([0, 448, 0, 0])];
            tensor<int32, [4]> var_9112_end_0 = const()[name = tensor<string, []>("op_9112_end_0"), val = tensor<int32, [4]>([2, 512, 1, 77])];
            tensor<bool, [4]> var_9112_end_mask_0 = const()[name = tensor<string, []>("op_9112_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_9112_cast = slice_by_index(begin = var_9112_begin_0, end = var_9112_end_0, end_mask = var_9112_end_mask_0, x = v_43_cast);
            tensor<int32, [4]> var_9116_begin_0 = const()[name = tensor<string, []>("op_9116_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_9116_end_0 = const()[name = tensor<string, []>("op_9116_end_0"), val = tensor<int32, [4]>([2, 576, 1, 77])];
            tensor<bool, [4]> var_9116_end_mask_0 = const()[name = tensor<string, []>("op_9116_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_9116_cast = slice_by_index(begin = var_9116_begin_0, end = var_9116_end_0, end_mask = var_9116_end_mask_0, x = v_43_cast);
            tensor<int32, [4]> var_9120_begin_0 = const()[name = tensor<string, []>("op_9120_begin_0"), val = tensor<int32, [4]>([0, 576, 0, 0])];
            tensor<int32, [4]> var_9120_end_0 = const()[name = tensor<string, []>("op_9120_end_0"), val = tensor<int32, [4]>([2, 640, 1, 77])];
            tensor<bool, [4]> var_9120_end_mask_0 = const()[name = tensor<string, []>("op_9120_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_9120_cast = slice_by_index(begin = var_9120_begin_0, end = var_9120_end_0, end_mask = var_9120_end_mask_0, x = v_43_cast);
            tensor<string, []> var_9124_equation_0 = const()[name = tensor<string, []>("op_9124_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_9124_cast = einsum(equation = var_9124_equation_0, values = (var_9046_cast, var_9003_cast));
            tensor<fp16, []> var_9125_to_fp16 = const()[name = tensor<string, []>("op_9125_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_621_cast = mul(x = var_9124_cast, y = var_9125_to_fp16);
            tensor<string, []> var_9128_equation_0 = const()[name = tensor<string, []>("op_9128_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_9128_cast = einsum(equation = var_9128_equation_0, values = (var_9050_cast, var_9007_cast));
            tensor<fp16, []> var_9129_to_fp16 = const()[name = tensor<string, []>("op_9129_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_623_cast = mul(x = var_9128_cast, y = var_9129_to_fp16);
            tensor<string, []> var_9132_equation_0 = const()[name = tensor<string, []>("op_9132_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_9132_cast = einsum(equation = var_9132_equation_0, values = (var_9054_cast, var_9011_cast));
            tensor<fp16, []> var_9133_to_fp16 = const()[name = tensor<string, []>("op_9133_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_625_cast = mul(x = var_9132_cast, y = var_9133_to_fp16);
            tensor<string, []> var_9136_equation_0 = const()[name = tensor<string, []>("op_9136_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_9136_cast = einsum(equation = var_9136_equation_0, values = (var_9058_cast, var_9015_cast));
            tensor<fp16, []> var_9137_to_fp16 = const()[name = tensor<string, []>("op_9137_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_627_cast = mul(x = var_9136_cast, y = var_9137_to_fp16);
            tensor<string, []> var_9140_equation_0 = const()[name = tensor<string, []>("op_9140_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_9140_cast = einsum(equation = var_9140_equation_0, values = (var_9062_cast, var_9019_cast));
            tensor<fp16, []> var_9141_to_fp16 = const()[name = tensor<string, []>("op_9141_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_629_cast = mul(x = var_9140_cast, y = var_9141_to_fp16);
            tensor<string, []> var_9144_equation_0 = const()[name = tensor<string, []>("op_9144_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_9144_cast = einsum(equation = var_9144_equation_0, values = (var_9066_cast, var_9023_cast));
            tensor<fp16, []> var_9145_to_fp16 = const()[name = tensor<string, []>("op_9145_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_631_cast = mul(x = var_9144_cast, y = var_9145_to_fp16);
            tensor<string, []> var_9148_equation_0 = const()[name = tensor<string, []>("op_9148_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_9148_cast = einsum(equation = var_9148_equation_0, values = (var_9070_cast, var_9027_cast));
            tensor<fp16, []> var_9149_to_fp16 = const()[name = tensor<string, []>("op_9149_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_633_cast = mul(x = var_9148_cast, y = var_9149_to_fp16);
            tensor<string, []> var_9152_equation_0 = const()[name = tensor<string, []>("op_9152_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_9152_cast = einsum(equation = var_9152_equation_0, values = (var_9074_cast, var_9031_cast));
            tensor<fp16, []> var_9153_to_fp16 = const()[name = tensor<string, []>("op_9153_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_635_cast = mul(x = var_9152_cast, y = var_9153_to_fp16);
            tensor<string, []> var_9156_equation_0 = const()[name = tensor<string, []>("op_9156_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_9156_cast = einsum(equation = var_9156_equation_0, values = (var_9078_cast, var_9035_cast));
            tensor<fp16, []> var_9157_to_fp16 = const()[name = tensor<string, []>("op_9157_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_637_cast = mul(x = var_9156_cast, y = var_9157_to_fp16);
            tensor<string, []> var_9160_equation_0 = const()[name = tensor<string, []>("op_9160_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_9160_cast = einsum(equation = var_9160_equation_0, values = (var_9082_cast, var_9039_cast));
            tensor<fp16, []> var_9161_to_fp16 = const()[name = tensor<string, []>("op_9161_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_639_cast = mul(x = var_9160_cast, y = var_9161_to_fp16);
            tensor<fp16, [2, 77, 1, 1024]> var_9163_cast = softmax(axis = var_8627, x = aw_621_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_9164_cast = softmax(axis = var_8627, x = aw_623_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_9165_cast = softmax(axis = var_8627, x = aw_625_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_9166_cast = softmax(axis = var_8627, x = aw_627_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_9167_cast = softmax(axis = var_8627, x = aw_629_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_9168_cast = softmax(axis = var_8627, x = aw_631_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_9169_cast = softmax(axis = var_8627, x = aw_633_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_9170_cast = softmax(axis = var_8627, x = aw_635_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_9171_cast = softmax(axis = var_8627, x = aw_637_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_9172_cast = softmax(axis = var_8627, x = aw_639_cast);
            tensor<string, []> var_9174_equation_0 = const()[name = tensor<string, []>("op_9174_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_9174_cast = einsum(equation = var_9174_equation_0, values = (var_9084_cast, var_9163_cast));
            tensor<string, []> var_9176_equation_0 = const()[name = tensor<string, []>("op_9176_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_9176_cast = einsum(equation = var_9176_equation_0, values = (var_9088_cast, var_9164_cast));
            tensor<string, []> var_9178_equation_0 = const()[name = tensor<string, []>("op_9178_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_9178_cast = einsum(equation = var_9178_equation_0, values = (var_9092_cast, var_9165_cast));
            tensor<string, []> var_9180_equation_0 = const()[name = tensor<string, []>("op_9180_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_9180_cast = einsum(equation = var_9180_equation_0, values = (var_9096_cast, var_9166_cast));
            tensor<string, []> var_9182_equation_0 = const()[name = tensor<string, []>("op_9182_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_9182_cast = einsum(equation = var_9182_equation_0, values = (var_9100_cast, var_9167_cast));
            tensor<string, []> var_9184_equation_0 = const()[name = tensor<string, []>("op_9184_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_9184_cast = einsum(equation = var_9184_equation_0, values = (var_9104_cast, var_9168_cast));
            tensor<string, []> var_9186_equation_0 = const()[name = tensor<string, []>("op_9186_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_9186_cast = einsum(equation = var_9186_equation_0, values = (var_9108_cast, var_9169_cast));
            tensor<string, []> var_9188_equation_0 = const()[name = tensor<string, []>("op_9188_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_9188_cast = einsum(equation = var_9188_equation_0, values = (var_9112_cast, var_9170_cast));
            tensor<string, []> var_9190_equation_0 = const()[name = tensor<string, []>("op_9190_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_9190_cast = einsum(equation = var_9190_equation_0, values = (var_9116_cast, var_9171_cast));
            tensor<string, []> var_9192_equation_0 = const()[name = tensor<string, []>("op_9192_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_9192_cast = einsum(equation = var_9192_equation_0, values = (var_9120_cast, var_9172_cast));
            tensor<bool, []> input_385_interleave_0 = const()[name = tensor<string, []>("input_385_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 640, 1, 1024]> input_385_cast = concat(axis = var_8627, interleave = input_385_interleave_0, values = (var_9174_cast, var_9176_cast, var_9178_cast, var_9180_cast, var_9182_cast, var_9184_cast, var_9186_cast, var_9188_cast, var_9190_cast, var_9192_cast));
            tensor<int32, [2]> var_9198 = const()[name = tensor<string, []>("op_9198"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9200 = const()[name = tensor<string, []>("op_9200"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_9202_pad_type_0 = const()[name = tensor<string, []>("op_9202_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_9202_pad_0 = const()[name = tensor<string, []>("op_9202_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(696222016)))];
            tensor<fp16, [640]> up_blocks_2_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(697041280)))];
            tensor<fp16, [2, 640, 1, 1024]> var_9202_cast = conv(bias = up_blocks_2_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16, dilations = var_9200, groups = var_8627, pad = var_9202_pad_0, pad_type = var_9202_pad_type_0, strides = var_9198, weight = up_blocks_2_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16, x = input_385_cast);
            tensor<fp16, [2, 640, 1, 1024]> inputs_65_cast = add(x = var_9202_cast, y = inputs_63_cast);
            tensor<int32, [1]> var_9206 = const()[name = tensor<string, []>("op_9206"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> channels_mean_65_cast = reduce_mean(axes = var_9206, keep_dims = var_8622, x = inputs_65_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_65_cast = sub(x = inputs_65_cast, y = channels_mean_65_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_sq_65_cast = mul(x = zero_mean_65_cast, y = zero_mean_65_cast);
            tensor<int32, [1]> var_9210 = const()[name = tensor<string, []>("op_9210"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> var_9211_cast = reduce_mean(axes = var_9210, keep_dims = var_8622, x = zero_mean_sq_65_cast);
            tensor<fp16, []> var_9212_to_fp16 = const()[name = tensor<string, []>("op_9212_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 1024]> var_9213_cast = add(x = var_9211_cast, y = var_9212_to_fp16);
            tensor<fp16, []> denom_65_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_65_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 1024]> denom_65_cast = rsqrt(epsilon = denom_65_epsilon_0_to_fp16, x = var_9213_cast);
            tensor<fp16, [2, 640, 1, 1024]> out_65_cast = mul(x = zero_mean_65_cast, y = denom_65_cast);
            tensor<fp16, [1, 640, 1, 1]> var_9217_to_fp16 = const()[name = tensor<string, []>("op_9217_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(697042624)))];
            tensor<fp16, [2, 640, 1, 1024]> var_9218_cast = add(x = out_65_cast, y = var_9217_to_fp16);
            tensor<fp16, [1, 640, 1, 1]> var_9220_to_fp16 = const()[name = tensor<string, []>("op_9220_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(697043968)))];
            tensor<fp16, [2, 640, 1, 1024]> input_387_cast = mul(x = var_9218_cast, y = var_9220_to_fp16);
            tensor<int32, [2]> var_9228 = const()[name = tensor<string, []>("op_9228"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9230 = const()[name = tensor<string, []>("op_9230"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_9232_pad_type_0 = const()[name = tensor<string, []>("op_9232_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_9232_pad_0 = const()[name = tensor<string, []>("op_9232_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [5120, 640, 1, 1]> up_blocks_2_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16"), val = tensor<fp16, [5120, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(697045312)))];
            tensor<fp16, [5120]> up_blocks_2_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16"), val = tensor<fp16, [5120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(703598976)))];
            tensor<fp16, [2, 5120, 1, 1024]> var_9232_cast = conv(bias = up_blocks_2_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16, dilations = var_9230, groups = var_8627, pad = var_9232_pad_0, pad_type = var_9232_pad_type_0, strides = var_9228, weight = up_blocks_2_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16, x = input_387_cast);
            tensor<int32, [2]> var_9233_split_sizes_0 = const()[name = tensor<string, []>("op_9233_split_sizes_0"), val = tensor<int32, [2]>([2560, 2560])];
            tensor<int32, []> var_9233_axis_0 = const()[name = tensor<string, []>("op_9233_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [2, 2560, 1, 1024]> var_9233_cast_0, tensor<fp16, [2, 2560, 1, 1024]> var_9233_cast_1 = split(axis = var_9233_axis_0, split_sizes = var_9233_split_sizes_0, x = var_9232_cast);
            tensor<string, []> var_9235_mode_0 = const()[name = tensor<string, []>("op_9235_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [2, 2560, 1, 1024]> var_9235_cast = gelu(mode = var_9235_mode_0, x = var_9233_cast_1);
            tensor<fp16, [2, 2560, 1, 1024]> input_389_cast = mul(x = var_9233_cast_0, y = var_9235_cast);
            tensor<int32, [2]> var_9239 = const()[name = tensor<string, []>("op_9239"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9241 = const()[name = tensor<string, []>("op_9241"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_9243_pad_type_0 = const()[name = tensor<string, []>("op_9243_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_9243_pad_0 = const()[name = tensor<string, []>("op_9243_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 2560, 1, 1]> up_blocks_2_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16"), val = tensor<fp16, [640, 2560, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(703609280)))];
            tensor<fp16, [640]> up_blocks_2_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(706886144)))];
            tensor<fp16, [2, 640, 1, 1024]> var_9243_cast = conv(bias = up_blocks_2_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16, dilations = var_9241, groups = var_8627, pad = var_9243_pad_0, pad_type = var_9243_pad_type_0, strides = var_9239, weight = up_blocks_2_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16, x = input_389_cast);
            tensor<fp16, [2, 640, 1, 1024]> hidden_states_233_cast = add(x = var_9243_cast, y = inputs_65_cast);
            tensor<int32, [4]> var_9245 = const()[name = tensor<string, []>("op_9245"), val = tensor<int32, [4]>([2, 640, 32, 32])];
            tensor<fp16, [2, 640, 32, 32]> input_391_cast = reshape(shape = var_9245, x = hidden_states_233_cast);
            tensor<int32, [2]> var_9249 = const()[name = tensor<string, []>("op_9249"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9251 = const()[name = tensor<string, []>("op_9251"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_235_pad_type_0 = const()[name = tensor<string, []>("hidden_states_235_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_235_pad_0 = const()[name = tensor<string, []>("hidden_states_235_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_0_proj_out_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_proj_out_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(706887488)))];
            tensor<fp16, [640]> up_blocks_2_attentions_0_proj_out_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_proj_out_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(707706752)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_235_cast = conv(bias = up_blocks_2_attentions_0_proj_out_bias_to_fp16, dilations = var_9251, groups = var_8627, pad = hidden_states_235_pad_0, pad_type = hidden_states_235_pad_type_0, strides = var_9249, weight = up_blocks_2_attentions_0_proj_out_weight_to_fp16, x = input_391_cast);
            tensor<fp16, [2, 640, 32, 32]> hidden_states_237_cast = add(x = hidden_states_235_cast, y = hidden_states_223_cast);
            tensor<bool, []> input_393_interleave_0 = const()[name = tensor<string, []>("input_393_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 640, 32, 32]> cast_8 = cast(dtype = cast_9_dtype_0, x = input_89_cast);
            tensor<fp16, [2, 1280, 32, 32]> input_393_cast = concat(axis = var_8627, interleave = input_393_interleave_0, values = (hidden_states_237_cast, cast_8));
            tensor<int32, [5]> reshape_180_shape_0 = const()[name = tensor<string, []>("reshape_180_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 32, 32])];
            tensor<fp16, [2, 32, 40, 32, 32]> reshape_180_cast = reshape(shape = reshape_180_shape_0, x = input_393_cast);
            tensor<int32, [3]> reduce_mean_135_axes_0 = const()[name = tensor<string, []>("reduce_mean_135_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_135_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_135_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_135_cast = reduce_mean(axes = reduce_mean_135_axes_0, keep_dims = reduce_mean_135_keep_dims_0, x = reshape_180_cast);
            tensor<fp16, [2, 32, 40, 32, 32]> sub_90_cast = sub(x = reshape_180_cast, y = reduce_mean_135_cast);
            tensor<fp16, [2, 32, 40, 32, 32]> square_45_cast = square(x = sub_90_cast);
            tensor<int32, [3]> reduce_mean_137_axes_0 = const()[name = tensor<string, []>("reduce_mean_137_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_137_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_137_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_137_cast = reduce_mean(axes = reduce_mean_137_axes_0, keep_dims = reduce_mean_137_keep_dims_0, x = square_45_cast);
            tensor<fp16, []> add_90_y_0_to_fp16 = const()[name = tensor<string, []>("add_90_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_90_cast = add(x = reduce_mean_137_cast, y = add_90_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_45_cast = sqrt(x = add_90_cast);
            tensor<fp16, [2, 32, 40, 32, 32]> real_div_45_cast = real_div(x = sub_90_cast, y = sqrt_45_cast);
            tensor<int32, [4]> reshape_181_shape_0 = const()[name = tensor<string, []>("reshape_181_shape_0"), val = tensor<int32, [4]>([2, 1280, 32, 32])];
            tensor<fp16, [2, 1280, 32, 32]> reshape_181_cast = reshape(shape = reshape_181_shape_0, x = real_div_45_cast);
            tensor<fp16, [1280]> add_91_mean_0_to_fp16 = const()[name = tensor<string, []>("add_91_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(707708096)))];
            tensor<fp16, [1280]> add_91_variance_0_to_fp16 = const()[name = tensor<string, []>("add_91_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(707710720)))];
            tensor<fp16, [1280]> add_91_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_91_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(707713344)))];
            tensor<fp16, [1280]> add_91_beta_0_to_fp16 = const()[name = tensor<string, []>("add_91_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(707715968)))];
            tensor<fp16, []> add_91_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_91_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 32, 32]> add_91_cast = batch_norm(beta = add_91_beta_0_to_fp16, epsilon = add_91_epsilon_0_to_fp16, gamma = add_91_gamma_0_to_fp16, mean = add_91_mean_0_to_fp16, variance = add_91_variance_0_to_fp16, x = reshape_181_cast);
            tensor<fp16, [2, 1280, 32, 32]> input_397_cast = silu(x = add_91_cast);
            tensor<int32, [2]> var_9269 = const()[name = tensor<string, []>("op_9269"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9271 = const()[name = tensor<string, []>("op_9271"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_239_pad_type_0 = const()[name = tensor<string, []>("hidden_states_239_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_239_pad_0 = const()[name = tensor<string, []>("hidden_states_239_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [640, 1280, 3, 3]> up_blocks_2_resnets_1_conv1_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_1_conv1_weight_to_fp16"), val = tensor<fp16, [640, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(707718592)))];
            tensor<fp16, [640]> up_blocks_2_resnets_1_conv1_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_1_conv1_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(722464256)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_239_cast = conv(bias = up_blocks_2_resnets_1_conv1_bias_to_fp16, dilations = var_9271, groups = var_8627, pad = hidden_states_239_pad_0, pad_type = hidden_states_239_pad_type_0, strides = var_9269, weight = up_blocks_2_resnets_1_conv1_weight_to_fp16, x = input_397_cast);
            tensor<int32, [2]> var_9277 = const()[name = tensor<string, []>("op_9277"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9279 = const()[name = tensor<string, []>("op_9279"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_35_pad_type_0 = const()[name = tensor<string, []>("temb_35_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_35_pad_0 = const()[name = tensor<string, []>("temb_35_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 1280, 1, 1]> up_blocks_2_resnets_1_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_1_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [640, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(722465600)))];
            tensor<fp16, [640]> up_blocks_2_resnets_1_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_1_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(724104064)))];
            tensor<fp16, [2, 640, 1, 1]> temb_35_cast = conv(bias = up_blocks_2_resnets_1_time_emb_proj_bias_to_fp16, dilations = var_9279, groups = var_8627, pad = temb_35_pad_0, pad_type = temb_35_pad_type_0, strides = var_9277, weight = up_blocks_2_resnets_1_time_emb_proj_weight_to_fp16, x = cast_12);
            tensor<fp16, [2, 640, 32, 32]> input_401_cast = add(x = hidden_states_239_cast, y = temb_35_cast);
            tensor<int32, [5]> reshape_184_shape_0 = const()[name = tensor<string, []>("reshape_184_shape_0"), val = tensor<int32, [5]>([2, 32, 20, 32, 32])];
            tensor<fp16, [2, 32, 20, 32, 32]> reshape_184_cast = reshape(shape = reshape_184_shape_0, x = input_401_cast);
            tensor<int32, [3]> reduce_mean_138_axes_0 = const()[name = tensor<string, []>("reduce_mean_138_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_138_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_138_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_138_cast = reduce_mean(axes = reduce_mean_138_axes_0, keep_dims = reduce_mean_138_keep_dims_0, x = reshape_184_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> sub_92_cast = sub(x = reshape_184_cast, y = reduce_mean_138_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> square_46_cast = square(x = sub_92_cast);
            tensor<int32, [3]> reduce_mean_140_axes_0 = const()[name = tensor<string, []>("reduce_mean_140_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_140_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_140_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_140_cast = reduce_mean(axes = reduce_mean_140_axes_0, keep_dims = reduce_mean_140_keep_dims_0, x = square_46_cast);
            tensor<fp16, []> add_92_y_0_to_fp16 = const()[name = tensor<string, []>("add_92_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_92_cast = add(x = reduce_mean_140_cast, y = add_92_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_46_cast = sqrt(x = add_92_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> real_div_46_cast = real_div(x = sub_92_cast, y = sqrt_46_cast);
            tensor<int32, [4]> reshape_185_shape_0 = const()[name = tensor<string, []>("reshape_185_shape_0"), val = tensor<int32, [4]>([2, 640, 32, 32])];
            tensor<fp16, [2, 640, 32, 32]> reshape_185_cast = reshape(shape = reshape_185_shape_0, x = real_div_46_cast);
            tensor<fp16, [640]> add_93_mean_0_to_fp16 = const()[name = tensor<string, []>("add_93_mean_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(724105408)))];
            tensor<fp16, [640]> add_93_variance_0_to_fp16 = const()[name = tensor<string, []>("add_93_variance_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(724106752)))];
            tensor<fp16, [640]> add_93_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_93_gamma_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(724108096)))];
            tensor<fp16, [640]> add_93_beta_0_to_fp16 = const()[name = tensor<string, []>("add_93_beta_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(724109440)))];
            tensor<fp16, []> add_93_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_93_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 640, 32, 32]> add_93_cast = batch_norm(beta = add_93_beta_0_to_fp16, epsilon = add_93_epsilon_0_to_fp16, gamma = add_93_gamma_0_to_fp16, mean = add_93_mean_0_to_fp16, variance = add_93_variance_0_to_fp16, x = reshape_185_cast);
            tensor<fp16, [2, 640, 32, 32]> input_405_cast = silu(x = add_93_cast);
            tensor<int32, [2]> var_9289 = const()[name = tensor<string, []>("op_9289"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9291 = const()[name = tensor<string, []>("op_9291"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_241_pad_type_0 = const()[name = tensor<string, []>("hidden_states_241_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_241_pad_0 = const()[name = tensor<string, []>("hidden_states_241_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [640, 640, 3, 3]> up_blocks_2_resnets_1_conv2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_1_conv2_weight_to_fp16"), val = tensor<fp16, [640, 640, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(724110784)))];
            tensor<fp16, [640]> up_blocks_2_resnets_1_conv2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_1_conv2_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(731483648)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_241_cast = conv(bias = up_blocks_2_resnets_1_conv2_bias_to_fp16, dilations = var_9291, groups = var_8627, pad = hidden_states_241_pad_0, pad_type = hidden_states_241_pad_type_0, strides = var_9289, weight = up_blocks_2_resnets_1_conv2_weight_to_fp16, x = input_405_cast);
            tensor<int32, [2]> var_9296 = const()[name = tensor<string, []>("op_9296"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9298 = const()[name = tensor<string, []>("op_9298"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_19_pad_type_0 = const()[name = tensor<string, []>("x_19_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_19_pad_0 = const()[name = tensor<string, []>("x_19_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 1280, 1, 1]> up_blocks_2_resnets_1_conv_shortcut_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_1_conv_shortcut_weight_to_fp16"), val = tensor<fp16, [640, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(731484992)))];
            tensor<fp16, [640]> up_blocks_2_resnets_1_conv_shortcut_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_1_conv_shortcut_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(733123456)))];
            tensor<fp16, [2, 640, 32, 32]> x_19_cast = conv(bias = up_blocks_2_resnets_1_conv_shortcut_bias_to_fp16, dilations = var_9298, groups = var_8627, pad = x_19_pad_0, pad_type = x_19_pad_type_0, strides = var_9296, weight = up_blocks_2_resnets_1_conv_shortcut_weight_to_fp16, x = input_393_cast);
            tensor<fp16, [2, 640, 32, 32]> hidden_states_243_cast = add(x = x_19_cast, y = hidden_states_241_cast);
            tensor<int32, [5]> reshape_188_shape_0 = const()[name = tensor<string, []>("reshape_188_shape_0"), val = tensor<int32, [5]>([2, 32, 20, 32, 32])];
            tensor<fp16, [2, 32, 20, 32, 32]> reshape_188_cast = reshape(shape = reshape_188_shape_0, x = hidden_states_243_cast);
            tensor<int32, [3]> reduce_mean_141_axes_0 = const()[name = tensor<string, []>("reduce_mean_141_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_141_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_141_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_141_cast = reduce_mean(axes = reduce_mean_141_axes_0, keep_dims = reduce_mean_141_keep_dims_0, x = reshape_188_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> sub_94_cast = sub(x = reshape_188_cast, y = reduce_mean_141_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> square_47_cast = square(x = sub_94_cast);
            tensor<int32, [3]> reduce_mean_143_axes_0 = const()[name = tensor<string, []>("reduce_mean_143_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_143_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_143_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_143_cast = reduce_mean(axes = reduce_mean_143_axes_0, keep_dims = reduce_mean_143_keep_dims_0, x = square_47_cast);
            tensor<fp16, []> add_94_y_0_to_fp16 = const()[name = tensor<string, []>("add_94_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_94_cast = add(x = reduce_mean_143_cast, y = add_94_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_47_cast = sqrt(x = add_94_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> real_div_47_cast = real_div(x = sub_94_cast, y = sqrt_47_cast);
            tensor<int32, [4]> reshape_189_shape_0 = const()[name = tensor<string, []>("reshape_189_shape_0"), val = tensor<int32, [4]>([2, 640, 32, 32])];
            tensor<fp16, [2, 640, 32, 32]> reshape_189_cast = reshape(shape = reshape_189_shape_0, x = real_div_47_cast);
            tensor<fp16, [640]> add_95_mean_0_to_fp16 = const()[name = tensor<string, []>("add_95_mean_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(733124800)))];
            tensor<fp16, [640]> add_95_variance_0_to_fp16 = const()[name = tensor<string, []>("add_95_variance_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(733126144)))];
            tensor<fp16, [640]> add_95_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_95_gamma_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(733127488)))];
            tensor<fp16, [640]> add_95_beta_0_to_fp16 = const()[name = tensor<string, []>("add_95_beta_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(733128832)))];
            tensor<fp16, []> add_95_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_95_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 640, 32, 32]> add_95_cast = batch_norm(beta = add_95_beta_0_to_fp16, epsilon = add_95_epsilon_0_to_fp16, gamma = add_95_gamma_0_to_fp16, mean = add_95_mean_0_to_fp16, variance = add_95_variance_0_to_fp16, x = reshape_189_cast);
            tensor<int32, [2]> var_9318 = const()[name = tensor<string, []>("op_9318"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9320 = const()[name = tensor<string, []>("op_9320"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_245_pad_type_0 = const()[name = tensor<string, []>("hidden_states_245_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_245_pad_0 = const()[name = tensor<string, []>("hidden_states_245_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_1_proj_in_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_proj_in_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(733130176)))];
            tensor<fp16, [640]> up_blocks_2_attentions_1_proj_in_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_proj_in_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(733949440)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_245_cast = conv(bias = up_blocks_2_attentions_1_proj_in_bias_to_fp16, dilations = var_9320, groups = var_8627, pad = hidden_states_245_pad_0, pad_type = hidden_states_245_pad_type_0, strides = var_9318, weight = up_blocks_2_attentions_1_proj_in_weight_to_fp16, x = add_95_cast);
            tensor<int32, [4]> var_9325 = const()[name = tensor<string, []>("op_9325"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<fp16, [2, 640, 1, 1024]> inputs_67_cast = reshape(shape = var_9325, x = hidden_states_245_cast);
            tensor<int32, [1]> var_9335 = const()[name = tensor<string, []>("op_9335"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> channels_mean_67_cast = reduce_mean(axes = var_9335, keep_dims = var_8622, x = inputs_67_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_67_cast = sub(x = inputs_67_cast, y = channels_mean_67_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_sq_67_cast = mul(x = zero_mean_67_cast, y = zero_mean_67_cast);
            tensor<int32, [1]> var_9339 = const()[name = tensor<string, []>("op_9339"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> var_9340_cast = reduce_mean(axes = var_9339, keep_dims = var_8622, x = zero_mean_sq_67_cast);
            tensor<fp16, []> var_9341_to_fp16 = const()[name = tensor<string, []>("op_9341_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 1024]> var_9342_cast = add(x = var_9340_cast, y = var_9341_to_fp16);
            tensor<fp16, []> denom_67_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_67_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 1024]> denom_67_cast = rsqrt(epsilon = denom_67_epsilon_0_to_fp16, x = var_9342_cast);
            tensor<fp16, [2, 640, 1, 1024]> out_67_cast = mul(x = zero_mean_67_cast, y = denom_67_cast);
            tensor<fp16, [1, 640, 1, 1]> var_9346_to_fp16 = const()[name = tensor<string, []>("op_9346_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(733950784)))];
            tensor<fp16, [2, 640, 1, 1024]> var_9347_cast = add(x = out_67_cast, y = var_9346_to_fp16);
            tensor<fp16, [1, 640, 1, 1]> var_9349_to_fp16 = const()[name = tensor<string, []>("op_9349_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(733952128)))];
            tensor<fp16, [2, 640, 1, 1024]> hidden_states_247_cast = mul(x = var_9347_cast, y = var_9349_to_fp16);
            tensor<int32, [2]> var_9356 = const()[name = tensor<string, []>("op_9356"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9358 = const()[name = tensor<string, []>("op_9358"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_45_pad_type_0 = const()[name = tensor<string, []>("q_45_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_45_pad_0 = const()[name = tensor<string, []>("q_45_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(733953472)))];
            tensor<fp16, [2, 640, 1, 1024]> q_45_cast = conv(dilations = var_9358, groups = var_8627, pad = q_45_pad_0, pad_type = q_45_pad_type_0, strides = var_9356, weight = up_blocks_2_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16, x = hidden_states_247_cast);
            tensor<int32, [2]> var_9362 = const()[name = tensor<string, []>("op_9362"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9364 = const()[name = tensor<string, []>("op_9364"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_89_pad_type_0 = const()[name = tensor<string, []>("k_89_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_89_pad_0 = const()[name = tensor<string, []>("k_89_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(734772736)))];
            tensor<fp16, [2, 640, 1, 1024]> k_89_cast = conv(dilations = var_9364, groups = var_8627, pad = k_89_pad_0, pad_type = k_89_pad_type_0, strides = var_9362, weight = up_blocks_2_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16, x = hidden_states_247_cast);
            tensor<int32, [2]> var_9368 = const()[name = tensor<string, []>("op_9368"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9370 = const()[name = tensor<string, []>("op_9370"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_45_pad_type_0 = const()[name = tensor<string, []>("v_45_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_45_pad_0 = const()[name = tensor<string, []>("v_45_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(735592000)))];
            tensor<fp16, [2, 640, 1, 1024]> v_45_cast = conv(dilations = var_9370, groups = var_8627, pad = v_45_pad_0, pad_type = v_45_pad_type_0, strides = var_9368, weight = up_blocks_2_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16, x = hidden_states_247_cast);
            tensor<int32, [4]> var_9374_begin_0 = const()[name = tensor<string, []>("op_9374_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_9374_end_0 = const()[name = tensor<string, []>("op_9374_end_0"), val = tensor<int32, [4]>([2, 64, 1, 1024])];
            tensor<bool, [4]> var_9374_end_mask_0 = const()[name = tensor<string, []>("op_9374_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_9374_cast = slice_by_index(begin = var_9374_begin_0, end = var_9374_end_0, end_mask = var_9374_end_mask_0, x = q_45_cast);
            tensor<int32, [4]> var_9378_begin_0 = const()[name = tensor<string, []>("op_9378_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_9378_end_0 = const()[name = tensor<string, []>("op_9378_end_0"), val = tensor<int32, [4]>([2, 128, 1, 1024])];
            tensor<bool, [4]> var_9378_end_mask_0 = const()[name = tensor<string, []>("op_9378_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_9378_cast = slice_by_index(begin = var_9378_begin_0, end = var_9378_end_0, end_mask = var_9378_end_mask_0, x = q_45_cast);
            tensor<int32, [4]> var_9382_begin_0 = const()[name = tensor<string, []>("op_9382_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_9382_end_0 = const()[name = tensor<string, []>("op_9382_end_0"), val = tensor<int32, [4]>([2, 192, 1, 1024])];
            tensor<bool, [4]> var_9382_end_mask_0 = const()[name = tensor<string, []>("op_9382_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_9382_cast = slice_by_index(begin = var_9382_begin_0, end = var_9382_end_0, end_mask = var_9382_end_mask_0, x = q_45_cast);
            tensor<int32, [4]> var_9386_begin_0 = const()[name = tensor<string, []>("op_9386_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_9386_end_0 = const()[name = tensor<string, []>("op_9386_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1024])];
            tensor<bool, [4]> var_9386_end_mask_0 = const()[name = tensor<string, []>("op_9386_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_9386_cast = slice_by_index(begin = var_9386_begin_0, end = var_9386_end_0, end_mask = var_9386_end_mask_0, x = q_45_cast);
            tensor<int32, [4]> var_9390_begin_0 = const()[name = tensor<string, []>("op_9390_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_9390_end_0 = const()[name = tensor<string, []>("op_9390_end_0"), val = tensor<int32, [4]>([2, 320, 1, 1024])];
            tensor<bool, [4]> var_9390_end_mask_0 = const()[name = tensor<string, []>("op_9390_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_9390_cast = slice_by_index(begin = var_9390_begin_0, end = var_9390_end_0, end_mask = var_9390_end_mask_0, x = q_45_cast);
            tensor<int32, [4]> var_9394_begin_0 = const()[name = tensor<string, []>("op_9394_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_9394_end_0 = const()[name = tensor<string, []>("op_9394_end_0"), val = tensor<int32, [4]>([2, 384, 1, 1024])];
            tensor<bool, [4]> var_9394_end_mask_0 = const()[name = tensor<string, []>("op_9394_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_9394_cast = slice_by_index(begin = var_9394_begin_0, end = var_9394_end_0, end_mask = var_9394_end_mask_0, x = q_45_cast);
            tensor<int32, [4]> var_9398_begin_0 = const()[name = tensor<string, []>("op_9398_begin_0"), val = tensor<int32, [4]>([0, 384, 0, 0])];
            tensor<int32, [4]> var_9398_end_0 = const()[name = tensor<string, []>("op_9398_end_0"), val = tensor<int32, [4]>([2, 448, 1, 1024])];
            tensor<bool, [4]> var_9398_end_mask_0 = const()[name = tensor<string, []>("op_9398_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_9398_cast = slice_by_index(begin = var_9398_begin_0, end = var_9398_end_0, end_mask = var_9398_end_mask_0, x = q_45_cast);
            tensor<int32, [4]> var_9402_begin_0 = const()[name = tensor<string, []>("op_9402_begin_0"), val = tensor<int32, [4]>([0, 448, 0, 0])];
            tensor<int32, [4]> var_9402_end_0 = const()[name = tensor<string, []>("op_9402_end_0"), val = tensor<int32, [4]>([2, 512, 1, 1024])];
            tensor<bool, [4]> var_9402_end_mask_0 = const()[name = tensor<string, []>("op_9402_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_9402_cast = slice_by_index(begin = var_9402_begin_0, end = var_9402_end_0, end_mask = var_9402_end_mask_0, x = q_45_cast);
            tensor<int32, [4]> var_9406_begin_0 = const()[name = tensor<string, []>("op_9406_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_9406_end_0 = const()[name = tensor<string, []>("op_9406_end_0"), val = tensor<int32, [4]>([2, 576, 1, 1024])];
            tensor<bool, [4]> var_9406_end_mask_0 = const()[name = tensor<string, []>("op_9406_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_9406_cast = slice_by_index(begin = var_9406_begin_0, end = var_9406_end_0, end_mask = var_9406_end_mask_0, x = q_45_cast);
            tensor<int32, [4]> var_9410_begin_0 = const()[name = tensor<string, []>("op_9410_begin_0"), val = tensor<int32, [4]>([0, 576, 0, 0])];
            tensor<int32, [4]> var_9410_end_0 = const()[name = tensor<string, []>("op_9410_end_0"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<bool, [4]> var_9410_end_mask_0 = const()[name = tensor<string, []>("op_9410_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_9410_cast = slice_by_index(begin = var_9410_begin_0, end = var_9410_end_0, end_mask = var_9410_end_mask_0, x = q_45_cast);
            tensor<int32, [4]> k_91_perm_0 = const()[name = tensor<string, []>("k_91_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_9417_begin_0 = const()[name = tensor<string, []>("op_9417_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_9417_end_0 = const()[name = tensor<string, []>("op_9417_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 64])];
            tensor<bool, [4]> var_9417_end_mask_0 = const()[name = tensor<string, []>("op_9417_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 640]> transpose_9 = transpose(perm = k_91_perm_0, x = k_89_cast);
            tensor<fp16, [2, 1024, 1, 64]> var_9417_cast = slice_by_index(begin = var_9417_begin_0, end = var_9417_end_0, end_mask = var_9417_end_mask_0, x = transpose_9);
            tensor<int32, [4]> var_9421_begin_0 = const()[name = tensor<string, []>("op_9421_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 64])];
            tensor<int32, [4]> var_9421_end_0 = const()[name = tensor<string, []>("op_9421_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 128])];
            tensor<bool, [4]> var_9421_end_mask_0 = const()[name = tensor<string, []>("op_9421_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 64]> var_9421_cast = slice_by_index(begin = var_9421_begin_0, end = var_9421_end_0, end_mask = var_9421_end_mask_0, x = transpose_9);
            tensor<int32, [4]> var_9425_begin_0 = const()[name = tensor<string, []>("op_9425_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 128])];
            tensor<int32, [4]> var_9425_end_0 = const()[name = tensor<string, []>("op_9425_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 192])];
            tensor<bool, [4]> var_9425_end_mask_0 = const()[name = tensor<string, []>("op_9425_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 64]> var_9425_cast = slice_by_index(begin = var_9425_begin_0, end = var_9425_end_0, end_mask = var_9425_end_mask_0, x = transpose_9);
            tensor<int32, [4]> var_9429_begin_0 = const()[name = tensor<string, []>("op_9429_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 192])];
            tensor<int32, [4]> var_9429_end_0 = const()[name = tensor<string, []>("op_9429_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 256])];
            tensor<bool, [4]> var_9429_end_mask_0 = const()[name = tensor<string, []>("op_9429_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 64]> var_9429_cast = slice_by_index(begin = var_9429_begin_0, end = var_9429_end_0, end_mask = var_9429_end_mask_0, x = transpose_9);
            tensor<int32, [4]> var_9433_begin_0 = const()[name = tensor<string, []>("op_9433_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 256])];
            tensor<int32, [4]> var_9433_end_0 = const()[name = tensor<string, []>("op_9433_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 320])];
            tensor<bool, [4]> var_9433_end_mask_0 = const()[name = tensor<string, []>("op_9433_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 64]> var_9433_cast = slice_by_index(begin = var_9433_begin_0, end = var_9433_end_0, end_mask = var_9433_end_mask_0, x = transpose_9);
            tensor<int32, [4]> var_9437_begin_0 = const()[name = tensor<string, []>("op_9437_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_9437_end_0 = const()[name = tensor<string, []>("op_9437_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 384])];
            tensor<bool, [4]> var_9437_end_mask_0 = const()[name = tensor<string, []>("op_9437_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 64]> var_9437_cast = slice_by_index(begin = var_9437_begin_0, end = var_9437_end_0, end_mask = var_9437_end_mask_0, x = transpose_9);
            tensor<int32, [4]> var_9441_begin_0 = const()[name = tensor<string, []>("op_9441_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 384])];
            tensor<int32, [4]> var_9441_end_0 = const()[name = tensor<string, []>("op_9441_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 448])];
            tensor<bool, [4]> var_9441_end_mask_0 = const()[name = tensor<string, []>("op_9441_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 64]> var_9441_cast = slice_by_index(begin = var_9441_begin_0, end = var_9441_end_0, end_mask = var_9441_end_mask_0, x = transpose_9);
            tensor<int32, [4]> var_9445_begin_0 = const()[name = tensor<string, []>("op_9445_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 448])];
            tensor<int32, [4]> var_9445_end_0 = const()[name = tensor<string, []>("op_9445_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 512])];
            tensor<bool, [4]> var_9445_end_mask_0 = const()[name = tensor<string, []>("op_9445_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 64]> var_9445_cast = slice_by_index(begin = var_9445_begin_0, end = var_9445_end_0, end_mask = var_9445_end_mask_0, x = transpose_9);
            tensor<int32, [4]> var_9449_begin_0 = const()[name = tensor<string, []>("op_9449_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 512])];
            tensor<int32, [4]> var_9449_end_0 = const()[name = tensor<string, []>("op_9449_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 576])];
            tensor<bool, [4]> var_9449_end_mask_0 = const()[name = tensor<string, []>("op_9449_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 64]> var_9449_cast = slice_by_index(begin = var_9449_begin_0, end = var_9449_end_0, end_mask = var_9449_end_mask_0, x = transpose_9);
            tensor<int32, [4]> var_9453_begin_0 = const()[name = tensor<string, []>("op_9453_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 576])];
            tensor<int32, [4]> var_9453_end_0 = const()[name = tensor<string, []>("op_9453_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 640])];
            tensor<bool, [4]> var_9453_end_mask_0 = const()[name = tensor<string, []>("op_9453_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 64]> var_9453_cast = slice_by_index(begin = var_9453_begin_0, end = var_9453_end_0, end_mask = var_9453_end_mask_0, x = transpose_9);
            tensor<int32, [4]> var_9455_begin_0 = const()[name = tensor<string, []>("op_9455_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_9455_end_0 = const()[name = tensor<string, []>("op_9455_end_0"), val = tensor<int32, [4]>([2, 64, 1, 1024])];
            tensor<bool, [4]> var_9455_end_mask_0 = const()[name = tensor<string, []>("op_9455_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_9455_cast = slice_by_index(begin = var_9455_begin_0, end = var_9455_end_0, end_mask = var_9455_end_mask_0, x = v_45_cast);
            tensor<int32, [4]> var_9459_begin_0 = const()[name = tensor<string, []>("op_9459_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_9459_end_0 = const()[name = tensor<string, []>("op_9459_end_0"), val = tensor<int32, [4]>([2, 128, 1, 1024])];
            tensor<bool, [4]> var_9459_end_mask_0 = const()[name = tensor<string, []>("op_9459_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_9459_cast = slice_by_index(begin = var_9459_begin_0, end = var_9459_end_0, end_mask = var_9459_end_mask_0, x = v_45_cast);
            tensor<int32, [4]> var_9463_begin_0 = const()[name = tensor<string, []>("op_9463_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_9463_end_0 = const()[name = tensor<string, []>("op_9463_end_0"), val = tensor<int32, [4]>([2, 192, 1, 1024])];
            tensor<bool, [4]> var_9463_end_mask_0 = const()[name = tensor<string, []>("op_9463_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_9463_cast = slice_by_index(begin = var_9463_begin_0, end = var_9463_end_0, end_mask = var_9463_end_mask_0, x = v_45_cast);
            tensor<int32, [4]> var_9467_begin_0 = const()[name = tensor<string, []>("op_9467_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_9467_end_0 = const()[name = tensor<string, []>("op_9467_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1024])];
            tensor<bool, [4]> var_9467_end_mask_0 = const()[name = tensor<string, []>("op_9467_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_9467_cast = slice_by_index(begin = var_9467_begin_0, end = var_9467_end_0, end_mask = var_9467_end_mask_0, x = v_45_cast);
            tensor<int32, [4]> var_9471_begin_0 = const()[name = tensor<string, []>("op_9471_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_9471_end_0 = const()[name = tensor<string, []>("op_9471_end_0"), val = tensor<int32, [4]>([2, 320, 1, 1024])];
            tensor<bool, [4]> var_9471_end_mask_0 = const()[name = tensor<string, []>("op_9471_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_9471_cast = slice_by_index(begin = var_9471_begin_0, end = var_9471_end_0, end_mask = var_9471_end_mask_0, x = v_45_cast);
            tensor<int32, [4]> var_9475_begin_0 = const()[name = tensor<string, []>("op_9475_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_9475_end_0 = const()[name = tensor<string, []>("op_9475_end_0"), val = tensor<int32, [4]>([2, 384, 1, 1024])];
            tensor<bool, [4]> var_9475_end_mask_0 = const()[name = tensor<string, []>("op_9475_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_9475_cast = slice_by_index(begin = var_9475_begin_0, end = var_9475_end_0, end_mask = var_9475_end_mask_0, x = v_45_cast);
            tensor<int32, [4]> var_9479_begin_0 = const()[name = tensor<string, []>("op_9479_begin_0"), val = tensor<int32, [4]>([0, 384, 0, 0])];
            tensor<int32, [4]> var_9479_end_0 = const()[name = tensor<string, []>("op_9479_end_0"), val = tensor<int32, [4]>([2, 448, 1, 1024])];
            tensor<bool, [4]> var_9479_end_mask_0 = const()[name = tensor<string, []>("op_9479_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_9479_cast = slice_by_index(begin = var_9479_begin_0, end = var_9479_end_0, end_mask = var_9479_end_mask_0, x = v_45_cast);
            tensor<int32, [4]> var_9483_begin_0 = const()[name = tensor<string, []>("op_9483_begin_0"), val = tensor<int32, [4]>([0, 448, 0, 0])];
            tensor<int32, [4]> var_9483_end_0 = const()[name = tensor<string, []>("op_9483_end_0"), val = tensor<int32, [4]>([2, 512, 1, 1024])];
            tensor<bool, [4]> var_9483_end_mask_0 = const()[name = tensor<string, []>("op_9483_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_9483_cast = slice_by_index(begin = var_9483_begin_0, end = var_9483_end_0, end_mask = var_9483_end_mask_0, x = v_45_cast);
            tensor<int32, [4]> var_9487_begin_0 = const()[name = tensor<string, []>("op_9487_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_9487_end_0 = const()[name = tensor<string, []>("op_9487_end_0"), val = tensor<int32, [4]>([2, 576, 1, 1024])];
            tensor<bool, [4]> var_9487_end_mask_0 = const()[name = tensor<string, []>("op_9487_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_9487_cast = slice_by_index(begin = var_9487_begin_0, end = var_9487_end_0, end_mask = var_9487_end_mask_0, x = v_45_cast);
            tensor<int32, [4]> var_9491_begin_0 = const()[name = tensor<string, []>("op_9491_begin_0"), val = tensor<int32, [4]>([0, 576, 0, 0])];
            tensor<int32, [4]> var_9491_end_0 = const()[name = tensor<string, []>("op_9491_end_0"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<bool, [4]> var_9491_end_mask_0 = const()[name = tensor<string, []>("op_9491_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_9491_cast = slice_by_index(begin = var_9491_begin_0, end = var_9491_end_0, end_mask = var_9491_end_mask_0, x = v_45_cast);
            tensor<string, []> var_9495_equation_0 = const()[name = tensor<string, []>("op_9495_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_9495_cast = einsum(equation = var_9495_equation_0, values = (var_9417_cast, var_9374_cast));
            tensor<fp16, []> var_9496_to_fp16 = const()[name = tensor<string, []>("op_9496_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_641_cast = mul(x = var_9495_cast, y = var_9496_to_fp16);
            tensor<string, []> var_9499_equation_0 = const()[name = tensor<string, []>("op_9499_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_9499_cast = einsum(equation = var_9499_equation_0, values = (var_9421_cast, var_9378_cast));
            tensor<fp16, []> var_9500_to_fp16 = const()[name = tensor<string, []>("op_9500_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_643_cast = mul(x = var_9499_cast, y = var_9500_to_fp16);
            tensor<string, []> var_9503_equation_0 = const()[name = tensor<string, []>("op_9503_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_9503_cast = einsum(equation = var_9503_equation_0, values = (var_9425_cast, var_9382_cast));
            tensor<fp16, []> var_9504_to_fp16 = const()[name = tensor<string, []>("op_9504_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_645_cast = mul(x = var_9503_cast, y = var_9504_to_fp16);
            tensor<string, []> var_9507_equation_0 = const()[name = tensor<string, []>("op_9507_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_9507_cast = einsum(equation = var_9507_equation_0, values = (var_9429_cast, var_9386_cast));
            tensor<fp16, []> var_9508_to_fp16 = const()[name = tensor<string, []>("op_9508_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_647_cast = mul(x = var_9507_cast, y = var_9508_to_fp16);
            tensor<string, []> var_9511_equation_0 = const()[name = tensor<string, []>("op_9511_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_9511_cast = einsum(equation = var_9511_equation_0, values = (var_9433_cast, var_9390_cast));
            tensor<fp16, []> var_9512_to_fp16 = const()[name = tensor<string, []>("op_9512_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_649_cast = mul(x = var_9511_cast, y = var_9512_to_fp16);
            tensor<string, []> var_9515_equation_0 = const()[name = tensor<string, []>("op_9515_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_9515_cast = einsum(equation = var_9515_equation_0, values = (var_9437_cast, var_9394_cast));
            tensor<fp16, []> var_9516_to_fp16 = const()[name = tensor<string, []>("op_9516_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_651_cast = mul(x = var_9515_cast, y = var_9516_to_fp16);
            tensor<string, []> var_9519_equation_0 = const()[name = tensor<string, []>("op_9519_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_9519_cast = einsum(equation = var_9519_equation_0, values = (var_9441_cast, var_9398_cast));
            tensor<fp16, []> var_9520_to_fp16 = const()[name = tensor<string, []>("op_9520_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_653_cast = mul(x = var_9519_cast, y = var_9520_to_fp16);
            tensor<string, []> var_9523_equation_0 = const()[name = tensor<string, []>("op_9523_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_9523_cast = einsum(equation = var_9523_equation_0, values = (var_9445_cast, var_9402_cast));
            tensor<fp16, []> var_9524_to_fp16 = const()[name = tensor<string, []>("op_9524_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_655_cast = mul(x = var_9523_cast, y = var_9524_to_fp16);
            tensor<string, []> var_9527_equation_0 = const()[name = tensor<string, []>("op_9527_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_9527_cast = einsum(equation = var_9527_equation_0, values = (var_9449_cast, var_9406_cast));
            tensor<fp16, []> var_9528_to_fp16 = const()[name = tensor<string, []>("op_9528_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_657_cast = mul(x = var_9527_cast, y = var_9528_to_fp16);
            tensor<string, []> var_9531_equation_0 = const()[name = tensor<string, []>("op_9531_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_9531_cast = einsum(equation = var_9531_equation_0, values = (var_9453_cast, var_9410_cast));
            tensor<fp16, []> var_9532_to_fp16 = const()[name = tensor<string, []>("op_9532_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_659_cast = mul(x = var_9531_cast, y = var_9532_to_fp16);
            tensor<fp16, [2, 1024, 1, 1024]> var_9534_cast = softmax(axis = var_8627, x = aw_641_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_9535_cast = softmax(axis = var_8627, x = aw_643_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_9536_cast = softmax(axis = var_8627, x = aw_645_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_9537_cast = softmax(axis = var_8627, x = aw_647_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_9538_cast = softmax(axis = var_8627, x = aw_649_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_9539_cast = softmax(axis = var_8627, x = aw_651_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_9540_cast = softmax(axis = var_8627, x = aw_653_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_9541_cast = softmax(axis = var_8627, x = aw_655_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_9542_cast = softmax(axis = var_8627, x = aw_657_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_9543_cast = softmax(axis = var_8627, x = aw_659_cast);
            tensor<string, []> var_9545_equation_0 = const()[name = tensor<string, []>("op_9545_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_9545_cast = einsum(equation = var_9545_equation_0, values = (var_9455_cast, var_9534_cast));
            tensor<string, []> var_9547_equation_0 = const()[name = tensor<string, []>("op_9547_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_9547_cast = einsum(equation = var_9547_equation_0, values = (var_9459_cast, var_9535_cast));
            tensor<string, []> var_9549_equation_0 = const()[name = tensor<string, []>("op_9549_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_9549_cast = einsum(equation = var_9549_equation_0, values = (var_9463_cast, var_9536_cast));
            tensor<string, []> var_9551_equation_0 = const()[name = tensor<string, []>("op_9551_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_9551_cast = einsum(equation = var_9551_equation_0, values = (var_9467_cast, var_9537_cast));
            tensor<string, []> var_9553_equation_0 = const()[name = tensor<string, []>("op_9553_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_9553_cast = einsum(equation = var_9553_equation_0, values = (var_9471_cast, var_9538_cast));
            tensor<string, []> var_9555_equation_0 = const()[name = tensor<string, []>("op_9555_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_9555_cast = einsum(equation = var_9555_equation_0, values = (var_9475_cast, var_9539_cast));
            tensor<string, []> var_9557_equation_0 = const()[name = tensor<string, []>("op_9557_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_9557_cast = einsum(equation = var_9557_equation_0, values = (var_9479_cast, var_9540_cast));
            tensor<string, []> var_9559_equation_0 = const()[name = tensor<string, []>("op_9559_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_9559_cast = einsum(equation = var_9559_equation_0, values = (var_9483_cast, var_9541_cast));
            tensor<string, []> var_9561_equation_0 = const()[name = tensor<string, []>("op_9561_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_9561_cast = einsum(equation = var_9561_equation_0, values = (var_9487_cast, var_9542_cast));
            tensor<string, []> var_9563_equation_0 = const()[name = tensor<string, []>("op_9563_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_9563_cast = einsum(equation = var_9563_equation_0, values = (var_9491_cast, var_9543_cast));
            tensor<bool, []> input_409_interleave_0 = const()[name = tensor<string, []>("input_409_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 640, 1, 1024]> input_409_cast = concat(axis = var_8627, interleave = input_409_interleave_0, values = (var_9545_cast, var_9547_cast, var_9549_cast, var_9551_cast, var_9553_cast, var_9555_cast, var_9557_cast, var_9559_cast, var_9561_cast, var_9563_cast));
            tensor<int32, [2]> var_9569 = const()[name = tensor<string, []>("op_9569"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9571 = const()[name = tensor<string, []>("op_9571"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_9573_pad_type_0 = const()[name = tensor<string, []>("op_9573_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_9573_pad_0 = const()[name = tensor<string, []>("op_9573_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(736411264)))];
            tensor<fp16, [640]> up_blocks_2_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(737230528)))];
            tensor<fp16, [2, 640, 1, 1024]> var_9573_cast = conv(bias = up_blocks_2_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16, dilations = var_9571, groups = var_8627, pad = var_9573_pad_0, pad_type = var_9573_pad_type_0, strides = var_9569, weight = up_blocks_2_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16, x = input_409_cast);
            tensor<fp16, [2, 640, 1, 1024]> inputs_69_cast = add(x = var_9573_cast, y = inputs_67_cast);
            tensor<int32, [1]> var_9577 = const()[name = tensor<string, []>("op_9577"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> channels_mean_69_cast = reduce_mean(axes = var_9577, keep_dims = var_8622, x = inputs_69_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_69_cast = sub(x = inputs_69_cast, y = channels_mean_69_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_sq_69_cast = mul(x = zero_mean_69_cast, y = zero_mean_69_cast);
            tensor<int32, [1]> var_9581 = const()[name = tensor<string, []>("op_9581"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> var_9582_cast = reduce_mean(axes = var_9581, keep_dims = var_8622, x = zero_mean_sq_69_cast);
            tensor<fp16, []> var_9583_to_fp16 = const()[name = tensor<string, []>("op_9583_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 1024]> var_9584_cast = add(x = var_9582_cast, y = var_9583_to_fp16);
            tensor<fp16, []> denom_69_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_69_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 1024]> denom_69_cast = rsqrt(epsilon = denom_69_epsilon_0_to_fp16, x = var_9584_cast);
            tensor<fp16, [2, 640, 1, 1024]> out_69_cast = mul(x = zero_mean_69_cast, y = denom_69_cast);
            tensor<fp16, [1, 640, 1, 1]> var_9588_to_fp16 = const()[name = tensor<string, []>("op_9588_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(737231872)))];
            tensor<fp16, [2, 640, 1, 1024]> var_9589_cast = add(x = out_69_cast, y = var_9588_to_fp16);
            tensor<fp16, [1, 640, 1, 1]> var_9591_to_fp16 = const()[name = tensor<string, []>("op_9591_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(737233216)))];
            tensor<fp16, [2, 640, 1, 1024]> hidden_states_249_cast = mul(x = var_9589_cast, y = var_9591_to_fp16);
            tensor<int32, [2]> var_9598 = const()[name = tensor<string, []>("op_9598"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9600 = const()[name = tensor<string, []>("op_9600"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_47_pad_type_0 = const()[name = tensor<string, []>("q_47_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_47_pad_0 = const()[name = tensor<string, []>("q_47_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(737234560)))];
            tensor<fp16, [2, 640, 1, 1024]> q_47_cast = conv(dilations = var_9600, groups = var_8627, pad = q_47_pad_0, pad_type = q_47_pad_type_0, strides = var_9598, weight = up_blocks_2_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16, x = hidden_states_249_cast);
            tensor<int32, [2]> var_9604 = const()[name = tensor<string, []>("op_9604"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9606 = const()[name = tensor<string, []>("op_9606"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_93_pad_type_0 = const()[name = tensor<string, []>("k_93_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_93_pad_0 = const()[name = tensor<string, []>("k_93_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 1024, 1, 1]> up_blocks_2_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16"), val = tensor<fp16, [640, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(738053824)))];
            tensor<fp16, [2, 640, 1, 77]> k_93_cast = conv(dilations = var_9606, groups = var_8627, pad = k_93_pad_0, pad_type = k_93_pad_type_0, strides = var_9604, weight = up_blocks_2_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [2]> var_9610 = const()[name = tensor<string, []>("op_9610"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9612 = const()[name = tensor<string, []>("op_9612"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_47_pad_type_0 = const()[name = tensor<string, []>("v_47_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_47_pad_0 = const()[name = tensor<string, []>("v_47_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 1024, 1, 1]> up_blocks_2_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16"), val = tensor<fp16, [640, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(739364608)))];
            tensor<fp16, [2, 640, 1, 77]> v_47_cast = conv(dilations = var_9612, groups = var_8627, pad = v_47_pad_0, pad_type = v_47_pad_type_0, strides = var_9610, weight = up_blocks_2_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [4]> var_9616_begin_0 = const()[name = tensor<string, []>("op_9616_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_9616_end_0 = const()[name = tensor<string, []>("op_9616_end_0"), val = tensor<int32, [4]>([2, 64, 1, 1024])];
            tensor<bool, [4]> var_9616_end_mask_0 = const()[name = tensor<string, []>("op_9616_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_9616_cast = slice_by_index(begin = var_9616_begin_0, end = var_9616_end_0, end_mask = var_9616_end_mask_0, x = q_47_cast);
            tensor<int32, [4]> var_9620_begin_0 = const()[name = tensor<string, []>("op_9620_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_9620_end_0 = const()[name = tensor<string, []>("op_9620_end_0"), val = tensor<int32, [4]>([2, 128, 1, 1024])];
            tensor<bool, [4]> var_9620_end_mask_0 = const()[name = tensor<string, []>("op_9620_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_9620_cast = slice_by_index(begin = var_9620_begin_0, end = var_9620_end_0, end_mask = var_9620_end_mask_0, x = q_47_cast);
            tensor<int32, [4]> var_9624_begin_0 = const()[name = tensor<string, []>("op_9624_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_9624_end_0 = const()[name = tensor<string, []>("op_9624_end_0"), val = tensor<int32, [4]>([2, 192, 1, 1024])];
            tensor<bool, [4]> var_9624_end_mask_0 = const()[name = tensor<string, []>("op_9624_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_9624_cast = slice_by_index(begin = var_9624_begin_0, end = var_9624_end_0, end_mask = var_9624_end_mask_0, x = q_47_cast);
            tensor<int32, [4]> var_9628_begin_0 = const()[name = tensor<string, []>("op_9628_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_9628_end_0 = const()[name = tensor<string, []>("op_9628_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1024])];
            tensor<bool, [4]> var_9628_end_mask_0 = const()[name = tensor<string, []>("op_9628_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_9628_cast = slice_by_index(begin = var_9628_begin_0, end = var_9628_end_0, end_mask = var_9628_end_mask_0, x = q_47_cast);
            tensor<int32, [4]> var_9632_begin_0 = const()[name = tensor<string, []>("op_9632_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_9632_end_0 = const()[name = tensor<string, []>("op_9632_end_0"), val = tensor<int32, [4]>([2, 320, 1, 1024])];
            tensor<bool, [4]> var_9632_end_mask_0 = const()[name = tensor<string, []>("op_9632_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_9632_cast = slice_by_index(begin = var_9632_begin_0, end = var_9632_end_0, end_mask = var_9632_end_mask_0, x = q_47_cast);
            tensor<int32, [4]> var_9636_begin_0 = const()[name = tensor<string, []>("op_9636_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_9636_end_0 = const()[name = tensor<string, []>("op_9636_end_0"), val = tensor<int32, [4]>([2, 384, 1, 1024])];
            tensor<bool, [4]> var_9636_end_mask_0 = const()[name = tensor<string, []>("op_9636_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_9636_cast = slice_by_index(begin = var_9636_begin_0, end = var_9636_end_0, end_mask = var_9636_end_mask_0, x = q_47_cast);
            tensor<int32, [4]> var_9640_begin_0 = const()[name = tensor<string, []>("op_9640_begin_0"), val = tensor<int32, [4]>([0, 384, 0, 0])];
            tensor<int32, [4]> var_9640_end_0 = const()[name = tensor<string, []>("op_9640_end_0"), val = tensor<int32, [4]>([2, 448, 1, 1024])];
            tensor<bool, [4]> var_9640_end_mask_0 = const()[name = tensor<string, []>("op_9640_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_9640_cast = slice_by_index(begin = var_9640_begin_0, end = var_9640_end_0, end_mask = var_9640_end_mask_0, x = q_47_cast);
            tensor<int32, [4]> var_9644_begin_0 = const()[name = tensor<string, []>("op_9644_begin_0"), val = tensor<int32, [4]>([0, 448, 0, 0])];
            tensor<int32, [4]> var_9644_end_0 = const()[name = tensor<string, []>("op_9644_end_0"), val = tensor<int32, [4]>([2, 512, 1, 1024])];
            tensor<bool, [4]> var_9644_end_mask_0 = const()[name = tensor<string, []>("op_9644_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_9644_cast = slice_by_index(begin = var_9644_begin_0, end = var_9644_end_0, end_mask = var_9644_end_mask_0, x = q_47_cast);
            tensor<int32, [4]> var_9648_begin_0 = const()[name = tensor<string, []>("op_9648_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_9648_end_0 = const()[name = tensor<string, []>("op_9648_end_0"), val = tensor<int32, [4]>([2, 576, 1, 1024])];
            tensor<bool, [4]> var_9648_end_mask_0 = const()[name = tensor<string, []>("op_9648_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_9648_cast = slice_by_index(begin = var_9648_begin_0, end = var_9648_end_0, end_mask = var_9648_end_mask_0, x = q_47_cast);
            tensor<int32, [4]> var_9652_begin_0 = const()[name = tensor<string, []>("op_9652_begin_0"), val = tensor<int32, [4]>([0, 576, 0, 0])];
            tensor<int32, [4]> var_9652_end_0 = const()[name = tensor<string, []>("op_9652_end_0"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<bool, [4]> var_9652_end_mask_0 = const()[name = tensor<string, []>("op_9652_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_9652_cast = slice_by_index(begin = var_9652_begin_0, end = var_9652_end_0, end_mask = var_9652_end_mask_0, x = q_47_cast);
            tensor<int32, [4]> k_95_perm_0 = const()[name = tensor<string, []>("k_95_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_9659_begin_0 = const()[name = tensor<string, []>("op_9659_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_9659_end_0 = const()[name = tensor<string, []>("op_9659_end_0"), val = tensor<int32, [4]>([2, 77, 1, 64])];
            tensor<bool, [4]> var_9659_end_mask_0 = const()[name = tensor<string, []>("op_9659_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 640]> transpose_8 = transpose(perm = k_95_perm_0, x = k_93_cast);
            tensor<fp16, [2, 77, 1, 64]> var_9659_cast = slice_by_index(begin = var_9659_begin_0, end = var_9659_end_0, end_mask = var_9659_end_mask_0, x = transpose_8);
            tensor<int32, [4]> var_9663_begin_0 = const()[name = tensor<string, []>("op_9663_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 64])];
            tensor<int32, [4]> var_9663_end_0 = const()[name = tensor<string, []>("op_9663_end_0"), val = tensor<int32, [4]>([2, 77, 1, 128])];
            tensor<bool, [4]> var_9663_end_mask_0 = const()[name = tensor<string, []>("op_9663_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_9663_cast = slice_by_index(begin = var_9663_begin_0, end = var_9663_end_0, end_mask = var_9663_end_mask_0, x = transpose_8);
            tensor<int32, [4]> var_9667_begin_0 = const()[name = tensor<string, []>("op_9667_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 128])];
            tensor<int32, [4]> var_9667_end_0 = const()[name = tensor<string, []>("op_9667_end_0"), val = tensor<int32, [4]>([2, 77, 1, 192])];
            tensor<bool, [4]> var_9667_end_mask_0 = const()[name = tensor<string, []>("op_9667_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_9667_cast = slice_by_index(begin = var_9667_begin_0, end = var_9667_end_0, end_mask = var_9667_end_mask_0, x = transpose_8);
            tensor<int32, [4]> var_9671_begin_0 = const()[name = tensor<string, []>("op_9671_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 192])];
            tensor<int32, [4]> var_9671_end_0 = const()[name = tensor<string, []>("op_9671_end_0"), val = tensor<int32, [4]>([2, 77, 1, 256])];
            tensor<bool, [4]> var_9671_end_mask_0 = const()[name = tensor<string, []>("op_9671_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_9671_cast = slice_by_index(begin = var_9671_begin_0, end = var_9671_end_0, end_mask = var_9671_end_mask_0, x = transpose_8);
            tensor<int32, [4]> var_9675_begin_0 = const()[name = tensor<string, []>("op_9675_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 256])];
            tensor<int32, [4]> var_9675_end_0 = const()[name = tensor<string, []>("op_9675_end_0"), val = tensor<int32, [4]>([2, 77, 1, 320])];
            tensor<bool, [4]> var_9675_end_mask_0 = const()[name = tensor<string, []>("op_9675_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_9675_cast = slice_by_index(begin = var_9675_begin_0, end = var_9675_end_0, end_mask = var_9675_end_mask_0, x = transpose_8);
            tensor<int32, [4]> var_9679_begin_0 = const()[name = tensor<string, []>("op_9679_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_9679_end_0 = const()[name = tensor<string, []>("op_9679_end_0"), val = tensor<int32, [4]>([2, 77, 1, 384])];
            tensor<bool, [4]> var_9679_end_mask_0 = const()[name = tensor<string, []>("op_9679_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_9679_cast = slice_by_index(begin = var_9679_begin_0, end = var_9679_end_0, end_mask = var_9679_end_mask_0, x = transpose_8);
            tensor<int32, [4]> var_9683_begin_0 = const()[name = tensor<string, []>("op_9683_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 384])];
            tensor<int32, [4]> var_9683_end_0 = const()[name = tensor<string, []>("op_9683_end_0"), val = tensor<int32, [4]>([2, 77, 1, 448])];
            tensor<bool, [4]> var_9683_end_mask_0 = const()[name = tensor<string, []>("op_9683_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_9683_cast = slice_by_index(begin = var_9683_begin_0, end = var_9683_end_0, end_mask = var_9683_end_mask_0, x = transpose_8);
            tensor<int32, [4]> var_9687_begin_0 = const()[name = tensor<string, []>("op_9687_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 448])];
            tensor<int32, [4]> var_9687_end_0 = const()[name = tensor<string, []>("op_9687_end_0"), val = tensor<int32, [4]>([2, 77, 1, 512])];
            tensor<bool, [4]> var_9687_end_mask_0 = const()[name = tensor<string, []>("op_9687_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_9687_cast = slice_by_index(begin = var_9687_begin_0, end = var_9687_end_0, end_mask = var_9687_end_mask_0, x = transpose_8);
            tensor<int32, [4]> var_9691_begin_0 = const()[name = tensor<string, []>("op_9691_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 512])];
            tensor<int32, [4]> var_9691_end_0 = const()[name = tensor<string, []>("op_9691_end_0"), val = tensor<int32, [4]>([2, 77, 1, 576])];
            tensor<bool, [4]> var_9691_end_mask_0 = const()[name = tensor<string, []>("op_9691_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_9691_cast = slice_by_index(begin = var_9691_begin_0, end = var_9691_end_0, end_mask = var_9691_end_mask_0, x = transpose_8);
            tensor<int32, [4]> var_9695_begin_0 = const()[name = tensor<string, []>("op_9695_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 576])];
            tensor<int32, [4]> var_9695_end_0 = const()[name = tensor<string, []>("op_9695_end_0"), val = tensor<int32, [4]>([2, 77, 1, 640])];
            tensor<bool, [4]> var_9695_end_mask_0 = const()[name = tensor<string, []>("op_9695_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_9695_cast = slice_by_index(begin = var_9695_begin_0, end = var_9695_end_0, end_mask = var_9695_end_mask_0, x = transpose_8);
            tensor<int32, [4]> var_9697_begin_0 = const()[name = tensor<string, []>("op_9697_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_9697_end_0 = const()[name = tensor<string, []>("op_9697_end_0"), val = tensor<int32, [4]>([2, 64, 1, 77])];
            tensor<bool, [4]> var_9697_end_mask_0 = const()[name = tensor<string, []>("op_9697_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_9697_cast = slice_by_index(begin = var_9697_begin_0, end = var_9697_end_0, end_mask = var_9697_end_mask_0, x = v_47_cast);
            tensor<int32, [4]> var_9701_begin_0 = const()[name = tensor<string, []>("op_9701_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_9701_end_0 = const()[name = tensor<string, []>("op_9701_end_0"), val = tensor<int32, [4]>([2, 128, 1, 77])];
            tensor<bool, [4]> var_9701_end_mask_0 = const()[name = tensor<string, []>("op_9701_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_9701_cast = slice_by_index(begin = var_9701_begin_0, end = var_9701_end_0, end_mask = var_9701_end_mask_0, x = v_47_cast);
            tensor<int32, [4]> var_9705_begin_0 = const()[name = tensor<string, []>("op_9705_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_9705_end_0 = const()[name = tensor<string, []>("op_9705_end_0"), val = tensor<int32, [4]>([2, 192, 1, 77])];
            tensor<bool, [4]> var_9705_end_mask_0 = const()[name = tensor<string, []>("op_9705_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_9705_cast = slice_by_index(begin = var_9705_begin_0, end = var_9705_end_0, end_mask = var_9705_end_mask_0, x = v_47_cast);
            tensor<int32, [4]> var_9709_begin_0 = const()[name = tensor<string, []>("op_9709_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_9709_end_0 = const()[name = tensor<string, []>("op_9709_end_0"), val = tensor<int32, [4]>([2, 256, 1, 77])];
            tensor<bool, [4]> var_9709_end_mask_0 = const()[name = tensor<string, []>("op_9709_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_9709_cast = slice_by_index(begin = var_9709_begin_0, end = var_9709_end_0, end_mask = var_9709_end_mask_0, x = v_47_cast);
            tensor<int32, [4]> var_9713_begin_0 = const()[name = tensor<string, []>("op_9713_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_9713_end_0 = const()[name = tensor<string, []>("op_9713_end_0"), val = tensor<int32, [4]>([2, 320, 1, 77])];
            tensor<bool, [4]> var_9713_end_mask_0 = const()[name = tensor<string, []>("op_9713_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_9713_cast = slice_by_index(begin = var_9713_begin_0, end = var_9713_end_0, end_mask = var_9713_end_mask_0, x = v_47_cast);
            tensor<int32, [4]> var_9717_begin_0 = const()[name = tensor<string, []>("op_9717_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_9717_end_0 = const()[name = tensor<string, []>("op_9717_end_0"), val = tensor<int32, [4]>([2, 384, 1, 77])];
            tensor<bool, [4]> var_9717_end_mask_0 = const()[name = tensor<string, []>("op_9717_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_9717_cast = slice_by_index(begin = var_9717_begin_0, end = var_9717_end_0, end_mask = var_9717_end_mask_0, x = v_47_cast);
            tensor<int32, [4]> var_9721_begin_0 = const()[name = tensor<string, []>("op_9721_begin_0"), val = tensor<int32, [4]>([0, 384, 0, 0])];
            tensor<int32, [4]> var_9721_end_0 = const()[name = tensor<string, []>("op_9721_end_0"), val = tensor<int32, [4]>([2, 448, 1, 77])];
            tensor<bool, [4]> var_9721_end_mask_0 = const()[name = tensor<string, []>("op_9721_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_9721_cast = slice_by_index(begin = var_9721_begin_0, end = var_9721_end_0, end_mask = var_9721_end_mask_0, x = v_47_cast);
            tensor<int32, [4]> var_9725_begin_0 = const()[name = tensor<string, []>("op_9725_begin_0"), val = tensor<int32, [4]>([0, 448, 0, 0])];
            tensor<int32, [4]> var_9725_end_0 = const()[name = tensor<string, []>("op_9725_end_0"), val = tensor<int32, [4]>([2, 512, 1, 77])];
            tensor<bool, [4]> var_9725_end_mask_0 = const()[name = tensor<string, []>("op_9725_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_9725_cast = slice_by_index(begin = var_9725_begin_0, end = var_9725_end_0, end_mask = var_9725_end_mask_0, x = v_47_cast);
            tensor<int32, [4]> var_9729_begin_0 = const()[name = tensor<string, []>("op_9729_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_9729_end_0 = const()[name = tensor<string, []>("op_9729_end_0"), val = tensor<int32, [4]>([2, 576, 1, 77])];
            tensor<bool, [4]> var_9729_end_mask_0 = const()[name = tensor<string, []>("op_9729_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_9729_cast = slice_by_index(begin = var_9729_begin_0, end = var_9729_end_0, end_mask = var_9729_end_mask_0, x = v_47_cast);
            tensor<int32, [4]> var_9733_begin_0 = const()[name = tensor<string, []>("op_9733_begin_0"), val = tensor<int32, [4]>([0, 576, 0, 0])];
            tensor<int32, [4]> var_9733_end_0 = const()[name = tensor<string, []>("op_9733_end_0"), val = tensor<int32, [4]>([2, 640, 1, 77])];
            tensor<bool, [4]> var_9733_end_mask_0 = const()[name = tensor<string, []>("op_9733_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_9733_cast = slice_by_index(begin = var_9733_begin_0, end = var_9733_end_0, end_mask = var_9733_end_mask_0, x = v_47_cast);
            tensor<string, []> var_9737_equation_0 = const()[name = tensor<string, []>("op_9737_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_9737_cast = einsum(equation = var_9737_equation_0, values = (var_9659_cast, var_9616_cast));
            tensor<fp16, []> var_9738_to_fp16 = const()[name = tensor<string, []>("op_9738_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_661_cast = mul(x = var_9737_cast, y = var_9738_to_fp16);
            tensor<string, []> var_9741_equation_0 = const()[name = tensor<string, []>("op_9741_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_9741_cast = einsum(equation = var_9741_equation_0, values = (var_9663_cast, var_9620_cast));
            tensor<fp16, []> var_9742_to_fp16 = const()[name = tensor<string, []>("op_9742_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_663_cast = mul(x = var_9741_cast, y = var_9742_to_fp16);
            tensor<string, []> var_9745_equation_0 = const()[name = tensor<string, []>("op_9745_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_9745_cast = einsum(equation = var_9745_equation_0, values = (var_9667_cast, var_9624_cast));
            tensor<fp16, []> var_9746_to_fp16 = const()[name = tensor<string, []>("op_9746_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_665_cast = mul(x = var_9745_cast, y = var_9746_to_fp16);
            tensor<string, []> var_9749_equation_0 = const()[name = tensor<string, []>("op_9749_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_9749_cast = einsum(equation = var_9749_equation_0, values = (var_9671_cast, var_9628_cast));
            tensor<fp16, []> var_9750_to_fp16 = const()[name = tensor<string, []>("op_9750_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_667_cast = mul(x = var_9749_cast, y = var_9750_to_fp16);
            tensor<string, []> var_9753_equation_0 = const()[name = tensor<string, []>("op_9753_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_9753_cast = einsum(equation = var_9753_equation_0, values = (var_9675_cast, var_9632_cast));
            tensor<fp16, []> var_9754_to_fp16 = const()[name = tensor<string, []>("op_9754_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_669_cast = mul(x = var_9753_cast, y = var_9754_to_fp16);
            tensor<string, []> var_9757_equation_0 = const()[name = tensor<string, []>("op_9757_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_9757_cast = einsum(equation = var_9757_equation_0, values = (var_9679_cast, var_9636_cast));
            tensor<fp16, []> var_9758_to_fp16 = const()[name = tensor<string, []>("op_9758_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_671_cast = mul(x = var_9757_cast, y = var_9758_to_fp16);
            tensor<string, []> var_9761_equation_0 = const()[name = tensor<string, []>("op_9761_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_9761_cast = einsum(equation = var_9761_equation_0, values = (var_9683_cast, var_9640_cast));
            tensor<fp16, []> var_9762_to_fp16 = const()[name = tensor<string, []>("op_9762_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_673_cast = mul(x = var_9761_cast, y = var_9762_to_fp16);
            tensor<string, []> var_9765_equation_0 = const()[name = tensor<string, []>("op_9765_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_9765_cast = einsum(equation = var_9765_equation_0, values = (var_9687_cast, var_9644_cast));
            tensor<fp16, []> var_9766_to_fp16 = const()[name = tensor<string, []>("op_9766_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_675_cast = mul(x = var_9765_cast, y = var_9766_to_fp16);
            tensor<string, []> var_9769_equation_0 = const()[name = tensor<string, []>("op_9769_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_9769_cast = einsum(equation = var_9769_equation_0, values = (var_9691_cast, var_9648_cast));
            tensor<fp16, []> var_9770_to_fp16 = const()[name = tensor<string, []>("op_9770_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_677_cast = mul(x = var_9769_cast, y = var_9770_to_fp16);
            tensor<string, []> var_9773_equation_0 = const()[name = tensor<string, []>("op_9773_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_9773_cast = einsum(equation = var_9773_equation_0, values = (var_9695_cast, var_9652_cast));
            tensor<fp16, []> var_9774_to_fp16 = const()[name = tensor<string, []>("op_9774_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_679_cast = mul(x = var_9773_cast, y = var_9774_to_fp16);
            tensor<fp16, [2, 77, 1, 1024]> var_9776_cast = softmax(axis = var_8627, x = aw_661_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_9777_cast = softmax(axis = var_8627, x = aw_663_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_9778_cast = softmax(axis = var_8627, x = aw_665_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_9779_cast = softmax(axis = var_8627, x = aw_667_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_9780_cast = softmax(axis = var_8627, x = aw_669_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_9781_cast = softmax(axis = var_8627, x = aw_671_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_9782_cast = softmax(axis = var_8627, x = aw_673_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_9783_cast = softmax(axis = var_8627, x = aw_675_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_9784_cast = softmax(axis = var_8627, x = aw_677_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_9785_cast = softmax(axis = var_8627, x = aw_679_cast);
            tensor<string, []> var_9787_equation_0 = const()[name = tensor<string, []>("op_9787_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_9787_cast = einsum(equation = var_9787_equation_0, values = (var_9697_cast, var_9776_cast));
            tensor<string, []> var_9789_equation_0 = const()[name = tensor<string, []>("op_9789_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_9789_cast = einsum(equation = var_9789_equation_0, values = (var_9701_cast, var_9777_cast));
            tensor<string, []> var_9791_equation_0 = const()[name = tensor<string, []>("op_9791_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_9791_cast = einsum(equation = var_9791_equation_0, values = (var_9705_cast, var_9778_cast));
            tensor<string, []> var_9793_equation_0 = const()[name = tensor<string, []>("op_9793_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_9793_cast = einsum(equation = var_9793_equation_0, values = (var_9709_cast, var_9779_cast));
            tensor<string, []> var_9795_equation_0 = const()[name = tensor<string, []>("op_9795_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_9795_cast = einsum(equation = var_9795_equation_0, values = (var_9713_cast, var_9780_cast));
            tensor<string, []> var_9797_equation_0 = const()[name = tensor<string, []>("op_9797_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_9797_cast = einsum(equation = var_9797_equation_0, values = (var_9717_cast, var_9781_cast));
            tensor<string, []> var_9799_equation_0 = const()[name = tensor<string, []>("op_9799_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_9799_cast = einsum(equation = var_9799_equation_0, values = (var_9721_cast, var_9782_cast));
            tensor<string, []> var_9801_equation_0 = const()[name = tensor<string, []>("op_9801_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_9801_cast = einsum(equation = var_9801_equation_0, values = (var_9725_cast, var_9783_cast));
            tensor<string, []> var_9803_equation_0 = const()[name = tensor<string, []>("op_9803_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_9803_cast = einsum(equation = var_9803_equation_0, values = (var_9729_cast, var_9784_cast));
            tensor<string, []> var_9805_equation_0 = const()[name = tensor<string, []>("op_9805_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_9805_cast = einsum(equation = var_9805_equation_0, values = (var_9733_cast, var_9785_cast));
            tensor<bool, []> input_411_interleave_0 = const()[name = tensor<string, []>("input_411_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 640, 1, 1024]> input_411_cast = concat(axis = var_8627, interleave = input_411_interleave_0, values = (var_9787_cast, var_9789_cast, var_9791_cast, var_9793_cast, var_9795_cast, var_9797_cast, var_9799_cast, var_9801_cast, var_9803_cast, var_9805_cast));
            tensor<int32, [2]> var_9811 = const()[name = tensor<string, []>("op_9811"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9813 = const()[name = tensor<string, []>("op_9813"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_9815_pad_type_0 = const()[name = tensor<string, []>("op_9815_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_9815_pad_0 = const()[name = tensor<string, []>("op_9815_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(740675392)))];
            tensor<fp16, [640]> up_blocks_2_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(741494656)))];
            tensor<fp16, [2, 640, 1, 1024]> var_9815_cast = conv(bias = up_blocks_2_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16, dilations = var_9813, groups = var_8627, pad = var_9815_pad_0, pad_type = var_9815_pad_type_0, strides = var_9811, weight = up_blocks_2_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16, x = input_411_cast);
            tensor<fp16, [2, 640, 1, 1024]> inputs_71_cast = add(x = var_9815_cast, y = inputs_69_cast);
            tensor<int32, [1]> var_9819 = const()[name = tensor<string, []>("op_9819"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> channels_mean_71_cast = reduce_mean(axes = var_9819, keep_dims = var_8622, x = inputs_71_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_71_cast = sub(x = inputs_71_cast, y = channels_mean_71_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_sq_71_cast = mul(x = zero_mean_71_cast, y = zero_mean_71_cast);
            tensor<int32, [1]> var_9823 = const()[name = tensor<string, []>("op_9823"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> var_9824_cast = reduce_mean(axes = var_9823, keep_dims = var_8622, x = zero_mean_sq_71_cast);
            tensor<fp16, []> var_9825_to_fp16 = const()[name = tensor<string, []>("op_9825_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 1024]> var_9826_cast = add(x = var_9824_cast, y = var_9825_to_fp16);
            tensor<fp16, []> denom_71_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_71_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 1024]> denom_71_cast = rsqrt(epsilon = denom_71_epsilon_0_to_fp16, x = var_9826_cast);
            tensor<fp16, [2, 640, 1, 1024]> out_71_cast = mul(x = zero_mean_71_cast, y = denom_71_cast);
            tensor<fp16, [1, 640, 1, 1]> var_9830_to_fp16 = const()[name = tensor<string, []>("op_9830_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(741496000)))];
            tensor<fp16, [2, 640, 1, 1024]> var_9831_cast = add(x = out_71_cast, y = var_9830_to_fp16);
            tensor<fp16, [1, 640, 1, 1]> var_9833_to_fp16 = const()[name = tensor<string, []>("op_9833_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(741497344)))];
            tensor<fp16, [2, 640, 1, 1024]> input_413_cast = mul(x = var_9831_cast, y = var_9833_to_fp16);
            tensor<int32, [2]> var_9841 = const()[name = tensor<string, []>("op_9841"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9843 = const()[name = tensor<string, []>("op_9843"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_9845_pad_type_0 = const()[name = tensor<string, []>("op_9845_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_9845_pad_0 = const()[name = tensor<string, []>("op_9845_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [5120, 640, 1, 1]> up_blocks_2_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16"), val = tensor<fp16, [5120, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(741498688)))];
            tensor<fp16, [5120]> up_blocks_2_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16"), val = tensor<fp16, [5120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(748052352)))];
            tensor<fp16, [2, 5120, 1, 1024]> var_9845_cast = conv(bias = up_blocks_2_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16, dilations = var_9843, groups = var_8627, pad = var_9845_pad_0, pad_type = var_9845_pad_type_0, strides = var_9841, weight = up_blocks_2_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16, x = input_413_cast);
            tensor<int32, [2]> var_9846_split_sizes_0 = const()[name = tensor<string, []>("op_9846_split_sizes_0"), val = tensor<int32, [2]>([2560, 2560])];
            tensor<int32, []> var_9846_axis_0 = const()[name = tensor<string, []>("op_9846_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [2, 2560, 1, 1024]> var_9846_cast_0, tensor<fp16, [2, 2560, 1, 1024]> var_9846_cast_1 = split(axis = var_9846_axis_0, split_sizes = var_9846_split_sizes_0, x = var_9845_cast);
            tensor<string, []> var_9848_mode_0 = const()[name = tensor<string, []>("op_9848_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [2, 2560, 1, 1024]> var_9848_cast = gelu(mode = var_9848_mode_0, x = var_9846_cast_1);
            tensor<fp16, [2, 2560, 1, 1024]> input_415_cast = mul(x = var_9846_cast_0, y = var_9848_cast);
            tensor<int32, [2]> var_9852 = const()[name = tensor<string, []>("op_9852"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9854 = const()[name = tensor<string, []>("op_9854"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_9856_pad_type_0 = const()[name = tensor<string, []>("op_9856_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_9856_pad_0 = const()[name = tensor<string, []>("op_9856_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 2560, 1, 1]> up_blocks_2_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16"), val = tensor<fp16, [640, 2560, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(748062656)))];
            tensor<fp16, [640]> up_blocks_2_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(751339520)))];
            tensor<fp16, [2, 640, 1, 1024]> var_9856_cast = conv(bias = up_blocks_2_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16, dilations = var_9854, groups = var_8627, pad = var_9856_pad_0, pad_type = var_9856_pad_type_0, strides = var_9852, weight = up_blocks_2_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16, x = input_415_cast);
            tensor<fp16, [2, 640, 1, 1024]> hidden_states_253_cast = add(x = var_9856_cast, y = inputs_71_cast);
            tensor<int32, [4]> var_9858 = const()[name = tensor<string, []>("op_9858"), val = tensor<int32, [4]>([2, 640, 32, 32])];
            tensor<fp16, [2, 640, 32, 32]> input_417_cast = reshape(shape = var_9858, x = hidden_states_253_cast);
            tensor<int32, [2]> var_9862 = const()[name = tensor<string, []>("op_9862"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9864 = const()[name = tensor<string, []>("op_9864"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_255_pad_type_0 = const()[name = tensor<string, []>("hidden_states_255_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_255_pad_0 = const()[name = tensor<string, []>("hidden_states_255_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_1_proj_out_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_proj_out_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(751340864)))];
            tensor<fp16, [640]> up_blocks_2_attentions_1_proj_out_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_proj_out_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(752160128)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_255_cast = conv(bias = up_blocks_2_attentions_1_proj_out_bias_to_fp16, dilations = var_9864, groups = var_8627, pad = hidden_states_255_pad_0, pad_type = hidden_states_255_pad_type_0, strides = var_9862, weight = up_blocks_2_attentions_1_proj_out_weight_to_fp16, x = input_417_cast);
            tensor<fp16, [2, 640, 32, 32]> hidden_states_257_cast = add(x = hidden_states_255_cast, y = hidden_states_243_cast);
            tensor<bool, []> input_419_interleave_0 = const()[name = tensor<string, []>("input_419_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 320, 32, 32]> cast_9 = cast(dtype = cast_7_dtype_0, x = input_63_cast);
            tensor<fp16, [2, 960, 32, 32]> input_419_cast = concat(axis = var_8627, interleave = input_419_interleave_0, values = (hidden_states_257_cast, cast_9));
            tensor<int32, [5]> reshape_192_shape_0 = const()[name = tensor<string, []>("reshape_192_shape_0"), val = tensor<int32, [5]>([2, 32, 30, 32, 32])];
            tensor<fp16, [2, 32, 30, 32, 32]> reshape_192_cast = reshape(shape = reshape_192_shape_0, x = input_419_cast);
            tensor<int32, [3]> reduce_mean_144_axes_0 = const()[name = tensor<string, []>("reduce_mean_144_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_144_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_144_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_144_cast = reduce_mean(axes = reduce_mean_144_axes_0, keep_dims = reduce_mean_144_keep_dims_0, x = reshape_192_cast);
            tensor<fp16, [2, 32, 30, 32, 32]> sub_96_cast = sub(x = reshape_192_cast, y = reduce_mean_144_cast);
            tensor<fp16, [2, 32, 30, 32, 32]> square_48_cast = square(x = sub_96_cast);
            tensor<int32, [3]> reduce_mean_146_axes_0 = const()[name = tensor<string, []>("reduce_mean_146_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_146_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_146_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_146_cast = reduce_mean(axes = reduce_mean_146_axes_0, keep_dims = reduce_mean_146_keep_dims_0, x = square_48_cast);
            tensor<fp16, []> add_96_y_0_to_fp16 = const()[name = tensor<string, []>("add_96_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_96_cast = add(x = reduce_mean_146_cast, y = add_96_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_48_cast = sqrt(x = add_96_cast);
            tensor<fp16, [2, 32, 30, 32, 32]> real_div_48_cast = real_div(x = sub_96_cast, y = sqrt_48_cast);
            tensor<int32, [4]> reshape_193_shape_0 = const()[name = tensor<string, []>("reshape_193_shape_0"), val = tensor<int32, [4]>([2, 960, 32, 32])];
            tensor<fp16, [2, 960, 32, 32]> reshape_193_cast = reshape(shape = reshape_193_shape_0, x = real_div_48_cast);
            tensor<fp16, [960]> add_97_mean_0_to_fp16 = const()[name = tensor<string, []>("add_97_mean_0_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(752161472)))];
            tensor<fp16, [960]> add_97_variance_0_to_fp16 = const()[name = tensor<string, []>("add_97_variance_0_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(752163456)))];
            tensor<fp16, [960]> add_97_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_97_gamma_0_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(752165440)))];
            tensor<fp16, [960]> add_97_beta_0_to_fp16 = const()[name = tensor<string, []>("add_97_beta_0_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(752167424)))];
            tensor<fp16, []> add_97_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_97_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 960, 32, 32]> add_97_cast = batch_norm(beta = add_97_beta_0_to_fp16, epsilon = add_97_epsilon_0_to_fp16, gamma = add_97_gamma_0_to_fp16, mean = add_97_mean_0_to_fp16, variance = add_97_variance_0_to_fp16, x = reshape_193_cast);
            tensor<fp16, [2, 960, 32, 32]> input_423_cast = silu(x = add_97_cast);
            tensor<int32, [2]> var_9882 = const()[name = tensor<string, []>("op_9882"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9884 = const()[name = tensor<string, []>("op_9884"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_259_pad_type_0 = const()[name = tensor<string, []>("hidden_states_259_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_259_pad_0 = const()[name = tensor<string, []>("hidden_states_259_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [640, 960, 3, 3]> up_blocks_2_resnets_2_conv1_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_2_conv1_weight_to_fp16"), val = tensor<fp16, [640, 960, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(752169408)))];
            tensor<fp16, [640]> up_blocks_2_resnets_2_conv1_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_2_conv1_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(763228672)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_259_cast = conv(bias = up_blocks_2_resnets_2_conv1_bias_to_fp16, dilations = var_9884, groups = var_8627, pad = hidden_states_259_pad_0, pad_type = hidden_states_259_pad_type_0, strides = var_9882, weight = up_blocks_2_resnets_2_conv1_weight_to_fp16, x = input_423_cast);
            tensor<int32, [2]> var_9890 = const()[name = tensor<string, []>("op_9890"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9892 = const()[name = tensor<string, []>("op_9892"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_37_pad_type_0 = const()[name = tensor<string, []>("temb_37_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_37_pad_0 = const()[name = tensor<string, []>("temb_37_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 1280, 1, 1]> up_blocks_2_resnets_2_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_2_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [640, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(763230016)))];
            tensor<fp16, [640]> up_blocks_2_resnets_2_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_2_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(764868480)))];
            tensor<fp16, [2, 640, 1, 1]> temb_37_cast = conv(bias = up_blocks_2_resnets_2_time_emb_proj_bias_to_fp16, dilations = var_9892, groups = var_8627, pad = temb_37_pad_0, pad_type = temb_37_pad_type_0, strides = var_9890, weight = up_blocks_2_resnets_2_time_emb_proj_weight_to_fp16, x = cast_12);
            tensor<fp16, [2, 640, 32, 32]> input_427_cast = add(x = hidden_states_259_cast, y = temb_37_cast);
            tensor<int32, [5]> reshape_196_shape_0 = const()[name = tensor<string, []>("reshape_196_shape_0"), val = tensor<int32, [5]>([2, 32, 20, 32, 32])];
            tensor<fp16, [2, 32, 20, 32, 32]> reshape_196_cast = reshape(shape = reshape_196_shape_0, x = input_427_cast);
            tensor<int32, [3]> reduce_mean_147_axes_0 = const()[name = tensor<string, []>("reduce_mean_147_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_147_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_147_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_147_cast = reduce_mean(axes = reduce_mean_147_axes_0, keep_dims = reduce_mean_147_keep_dims_0, x = reshape_196_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> sub_98_cast = sub(x = reshape_196_cast, y = reduce_mean_147_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> square_49_cast = square(x = sub_98_cast);
            tensor<int32, [3]> reduce_mean_149_axes_0 = const()[name = tensor<string, []>("reduce_mean_149_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_149_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_149_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_149_cast = reduce_mean(axes = reduce_mean_149_axes_0, keep_dims = reduce_mean_149_keep_dims_0, x = square_49_cast);
            tensor<fp16, []> add_98_y_0_to_fp16 = const()[name = tensor<string, []>("add_98_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_98_cast = add(x = reduce_mean_149_cast, y = add_98_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_49_cast = sqrt(x = add_98_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> real_div_49_cast = real_div(x = sub_98_cast, y = sqrt_49_cast);
            tensor<int32, [4]> reshape_197_shape_0 = const()[name = tensor<string, []>("reshape_197_shape_0"), val = tensor<int32, [4]>([2, 640, 32, 32])];
            tensor<fp16, [2, 640, 32, 32]> reshape_197_cast = reshape(shape = reshape_197_shape_0, x = real_div_49_cast);
            tensor<fp16, [640]> add_99_mean_0_to_fp16 = const()[name = tensor<string, []>("add_99_mean_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(764869824)))];
            tensor<fp16, [640]> add_99_variance_0_to_fp16 = const()[name = tensor<string, []>("add_99_variance_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(764871168)))];
            tensor<fp16, [640]> add_99_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_99_gamma_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(764872512)))];
            tensor<fp16, [640]> add_99_beta_0_to_fp16 = const()[name = tensor<string, []>("add_99_beta_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(764873856)))];
            tensor<fp16, []> add_99_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_99_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 640, 32, 32]> add_99_cast = batch_norm(beta = add_99_beta_0_to_fp16, epsilon = add_99_epsilon_0_to_fp16, gamma = add_99_gamma_0_to_fp16, mean = add_99_mean_0_to_fp16, variance = add_99_variance_0_to_fp16, x = reshape_197_cast);
            tensor<fp16, [2, 640, 32, 32]> input_431_cast = silu(x = add_99_cast);
            tensor<int32, [2]> var_9902 = const()[name = tensor<string, []>("op_9902"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9904 = const()[name = tensor<string, []>("op_9904"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_261_pad_type_0 = const()[name = tensor<string, []>("hidden_states_261_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_261_pad_0 = const()[name = tensor<string, []>("hidden_states_261_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [640, 640, 3, 3]> up_blocks_2_resnets_2_conv2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_2_conv2_weight_to_fp16"), val = tensor<fp16, [640, 640, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(764875200)))];
            tensor<fp16, [640]> up_blocks_2_resnets_2_conv2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_2_conv2_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(772248064)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_261_cast = conv(bias = up_blocks_2_resnets_2_conv2_bias_to_fp16, dilations = var_9904, groups = var_8627, pad = hidden_states_261_pad_0, pad_type = hidden_states_261_pad_type_0, strides = var_9902, weight = up_blocks_2_resnets_2_conv2_weight_to_fp16, x = input_431_cast);
            tensor<int32, [2]> var_9909 = const()[name = tensor<string, []>("op_9909"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9911 = const()[name = tensor<string, []>("op_9911"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_21_pad_type_0 = const()[name = tensor<string, []>("x_21_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_21_pad_0 = const()[name = tensor<string, []>("x_21_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 960, 1, 1]> up_blocks_2_resnets_2_conv_shortcut_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_2_conv_shortcut_weight_to_fp16"), val = tensor<fp16, [640, 960, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(772249408)))];
            tensor<fp16, [640]> up_blocks_2_resnets_2_conv_shortcut_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_2_conv_shortcut_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(773478272)))];
            tensor<fp16, [2, 640, 32, 32]> x_21_cast = conv(bias = up_blocks_2_resnets_2_conv_shortcut_bias_to_fp16, dilations = var_9911, groups = var_8627, pad = x_21_pad_0, pad_type = x_21_pad_type_0, strides = var_9909, weight = up_blocks_2_resnets_2_conv_shortcut_weight_to_fp16, x = input_419_cast);
            tensor<fp16, [2, 640, 32, 32]> hidden_states_263_cast = add(x = x_21_cast, y = hidden_states_261_cast);
            tensor<int32, [5]> reshape_200_shape_0 = const()[name = tensor<string, []>("reshape_200_shape_0"), val = tensor<int32, [5]>([2, 32, 20, 32, 32])];
            tensor<fp16, [2, 32, 20, 32, 32]> reshape_200_cast = reshape(shape = reshape_200_shape_0, x = hidden_states_263_cast);
            tensor<int32, [3]> reduce_mean_150_axes_0 = const()[name = tensor<string, []>("reduce_mean_150_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_150_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_150_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_150_cast = reduce_mean(axes = reduce_mean_150_axes_0, keep_dims = reduce_mean_150_keep_dims_0, x = reshape_200_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> sub_100_cast = sub(x = reshape_200_cast, y = reduce_mean_150_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> square_50_cast = square(x = sub_100_cast);
            tensor<int32, [3]> reduce_mean_152_axes_0 = const()[name = tensor<string, []>("reduce_mean_152_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_152_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_152_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_152_cast = reduce_mean(axes = reduce_mean_152_axes_0, keep_dims = reduce_mean_152_keep_dims_0, x = square_50_cast);
            tensor<fp16, []> add_100_y_0_to_fp16 = const()[name = tensor<string, []>("add_100_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_100_cast = add(x = reduce_mean_152_cast, y = add_100_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_50_cast = sqrt(x = add_100_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> real_div_50_cast = real_div(x = sub_100_cast, y = sqrt_50_cast);
            tensor<int32, [4]> reshape_201_shape_0 = const()[name = tensor<string, []>("reshape_201_shape_0"), val = tensor<int32, [4]>([2, 640, 32, 32])];
            tensor<fp16, [2, 640, 32, 32]> reshape_201_cast = reshape(shape = reshape_201_shape_0, x = real_div_50_cast);
            tensor<fp16, [640]> add_101_mean_0_to_fp16 = const()[name = tensor<string, []>("add_101_mean_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(773479616)))];
            tensor<fp16, [640]> add_101_variance_0_to_fp16 = const()[name = tensor<string, []>("add_101_variance_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(773480960)))];
            tensor<fp16, [640]> add_101_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_101_gamma_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(773482304)))];
            tensor<fp16, [640]> add_101_beta_0_to_fp16 = const()[name = tensor<string, []>("add_101_beta_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(773483648)))];
            tensor<fp16, []> add_101_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_101_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 640, 32, 32]> add_101_cast = batch_norm(beta = add_101_beta_0_to_fp16, epsilon = add_101_epsilon_0_to_fp16, gamma = add_101_gamma_0_to_fp16, mean = add_101_mean_0_to_fp16, variance = add_101_variance_0_to_fp16, x = reshape_201_cast);
            tensor<int32, [2]> var_9931 = const()[name = tensor<string, []>("op_9931"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9933 = const()[name = tensor<string, []>("op_9933"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_265_pad_type_0 = const()[name = tensor<string, []>("hidden_states_265_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_265_pad_0 = const()[name = tensor<string, []>("hidden_states_265_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_2_proj_in_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_proj_in_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(773484992)))];
            tensor<fp16, [640]> up_blocks_2_attentions_2_proj_in_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_proj_in_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(774304256)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_265_cast = conv(bias = up_blocks_2_attentions_2_proj_in_bias_to_fp16, dilations = var_9933, groups = var_8627, pad = hidden_states_265_pad_0, pad_type = hidden_states_265_pad_type_0, strides = var_9931, weight = up_blocks_2_attentions_2_proj_in_weight_to_fp16, x = add_101_cast);
            tensor<int32, [4]> var_9938 = const()[name = tensor<string, []>("op_9938"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<fp16, [2, 640, 1, 1024]> inputs_73_cast = reshape(shape = var_9938, x = hidden_states_265_cast);
            tensor<int32, [1]> var_9948 = const()[name = tensor<string, []>("op_9948"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> channels_mean_73_cast = reduce_mean(axes = var_9948, keep_dims = var_8622, x = inputs_73_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_73_cast = sub(x = inputs_73_cast, y = channels_mean_73_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_sq_73_cast = mul(x = zero_mean_73_cast, y = zero_mean_73_cast);
            tensor<int32, [1]> var_9952 = const()[name = tensor<string, []>("op_9952"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> var_9953_cast = reduce_mean(axes = var_9952, keep_dims = var_8622, x = zero_mean_sq_73_cast);
            tensor<fp16, []> var_9954_to_fp16 = const()[name = tensor<string, []>("op_9954_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 1024]> var_9955_cast = add(x = var_9953_cast, y = var_9954_to_fp16);
            tensor<fp16, []> denom_73_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_73_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 1024]> denom_73_cast = rsqrt(epsilon = denom_73_epsilon_0_to_fp16, x = var_9955_cast);
            tensor<fp16, [2, 640, 1, 1024]> out_73_cast = mul(x = zero_mean_73_cast, y = denom_73_cast);
            tensor<fp16, [1, 640, 1, 1]> var_9959_to_fp16 = const()[name = tensor<string, []>("op_9959_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(774305600)))];
            tensor<fp16, [2, 640, 1, 1024]> var_9960_cast = add(x = out_73_cast, y = var_9959_to_fp16);
            tensor<fp16, [1, 640, 1, 1]> var_9962_to_fp16 = const()[name = tensor<string, []>("op_9962_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(774306944)))];
            tensor<fp16, [2, 640, 1, 1024]> hidden_states_267_cast = mul(x = var_9960_cast, y = var_9962_to_fp16);
            tensor<int32, [2]> var_9969 = const()[name = tensor<string, []>("op_9969"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9971 = const()[name = tensor<string, []>("op_9971"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_49_pad_type_0 = const()[name = tensor<string, []>("q_49_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_49_pad_0 = const()[name = tensor<string, []>("q_49_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_2_transformer_blocks_0_attn1_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_transformer_blocks_0_attn1_to_q_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(774308288)))];
            tensor<fp16, [2, 640, 1, 1024]> q_49_cast = conv(dilations = var_9971, groups = var_8627, pad = q_49_pad_0, pad_type = q_49_pad_type_0, strides = var_9969, weight = up_blocks_2_attentions_2_transformer_blocks_0_attn1_to_q_weight_to_fp16, x = hidden_states_267_cast);
            tensor<int32, [2]> var_9975 = const()[name = tensor<string, []>("op_9975"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9977 = const()[name = tensor<string, []>("op_9977"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_97_pad_type_0 = const()[name = tensor<string, []>("k_97_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_97_pad_0 = const()[name = tensor<string, []>("k_97_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_2_transformer_blocks_0_attn1_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_transformer_blocks_0_attn1_to_k_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(775127552)))];
            tensor<fp16, [2, 640, 1, 1024]> k_97_cast = conv(dilations = var_9977, groups = var_8627, pad = k_97_pad_0, pad_type = k_97_pad_type_0, strides = var_9975, weight = up_blocks_2_attentions_2_transformer_blocks_0_attn1_to_k_weight_to_fp16, x = hidden_states_267_cast);
            tensor<int32, [2]> var_9981 = const()[name = tensor<string, []>("op_9981"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9983 = const()[name = tensor<string, []>("op_9983"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_49_pad_type_0 = const()[name = tensor<string, []>("v_49_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_49_pad_0 = const()[name = tensor<string, []>("v_49_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_2_transformer_blocks_0_attn1_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_transformer_blocks_0_attn1_to_v_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(775946816)))];
            tensor<fp16, [2, 640, 1, 1024]> v_49_cast = conv(dilations = var_9983, groups = var_8627, pad = v_49_pad_0, pad_type = v_49_pad_type_0, strides = var_9981, weight = up_blocks_2_attentions_2_transformer_blocks_0_attn1_to_v_weight_to_fp16, x = hidden_states_267_cast);
            tensor<int32, [4]> var_9987_begin_0 = const()[name = tensor<string, []>("op_9987_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_9987_end_0 = const()[name = tensor<string, []>("op_9987_end_0"), val = tensor<int32, [4]>([2, 64, 1, 1024])];
            tensor<bool, [4]> var_9987_end_mask_0 = const()[name = tensor<string, []>("op_9987_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_9987_cast = slice_by_index(begin = var_9987_begin_0, end = var_9987_end_0, end_mask = var_9987_end_mask_0, x = q_49_cast);
            tensor<int32, [4]> var_9991_begin_0 = const()[name = tensor<string, []>("op_9991_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_9991_end_0 = const()[name = tensor<string, []>("op_9991_end_0"), val = tensor<int32, [4]>([2, 128, 1, 1024])];
            tensor<bool, [4]> var_9991_end_mask_0 = const()[name = tensor<string, []>("op_9991_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_9991_cast = slice_by_index(begin = var_9991_begin_0, end = var_9991_end_0, end_mask = var_9991_end_mask_0, x = q_49_cast);
            tensor<int32, [4]> var_9995_begin_0 = const()[name = tensor<string, []>("op_9995_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_9995_end_0 = const()[name = tensor<string, []>("op_9995_end_0"), val = tensor<int32, [4]>([2, 192, 1, 1024])];
            tensor<bool, [4]> var_9995_end_mask_0 = const()[name = tensor<string, []>("op_9995_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_9995_cast = slice_by_index(begin = var_9995_begin_0, end = var_9995_end_0, end_mask = var_9995_end_mask_0, x = q_49_cast);
            tensor<int32, [4]> var_9999_begin_0 = const()[name = tensor<string, []>("op_9999_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_9999_end_0 = const()[name = tensor<string, []>("op_9999_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1024])];
            tensor<bool, [4]> var_9999_end_mask_0 = const()[name = tensor<string, []>("op_9999_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_9999_cast = slice_by_index(begin = var_9999_begin_0, end = var_9999_end_0, end_mask = var_9999_end_mask_0, x = q_49_cast);
            tensor<int32, [4]> var_10003_begin_0 = const()[name = tensor<string, []>("op_10003_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_10003_end_0 = const()[name = tensor<string, []>("op_10003_end_0"), val = tensor<int32, [4]>([2, 320, 1, 1024])];
            tensor<bool, [4]> var_10003_end_mask_0 = const()[name = tensor<string, []>("op_10003_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_10003_cast = slice_by_index(begin = var_10003_begin_0, end = var_10003_end_0, end_mask = var_10003_end_mask_0, x = q_49_cast);
            tensor<int32, [4]> var_10007_begin_0 = const()[name = tensor<string, []>("op_10007_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_10007_end_0 = const()[name = tensor<string, []>("op_10007_end_0"), val = tensor<int32, [4]>([2, 384, 1, 1024])];
            tensor<bool, [4]> var_10007_end_mask_0 = const()[name = tensor<string, []>("op_10007_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_10007_cast = slice_by_index(begin = var_10007_begin_0, end = var_10007_end_0, end_mask = var_10007_end_mask_0, x = q_49_cast);
            tensor<int32, [4]> var_10011_begin_0 = const()[name = tensor<string, []>("op_10011_begin_0"), val = tensor<int32, [4]>([0, 384, 0, 0])];
            tensor<int32, [4]> var_10011_end_0 = const()[name = tensor<string, []>("op_10011_end_0"), val = tensor<int32, [4]>([2, 448, 1, 1024])];
            tensor<bool, [4]> var_10011_end_mask_0 = const()[name = tensor<string, []>("op_10011_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_10011_cast = slice_by_index(begin = var_10011_begin_0, end = var_10011_end_0, end_mask = var_10011_end_mask_0, x = q_49_cast);
            tensor<int32, [4]> var_10015_begin_0 = const()[name = tensor<string, []>("op_10015_begin_0"), val = tensor<int32, [4]>([0, 448, 0, 0])];
            tensor<int32, [4]> var_10015_end_0 = const()[name = tensor<string, []>("op_10015_end_0"), val = tensor<int32, [4]>([2, 512, 1, 1024])];
            tensor<bool, [4]> var_10015_end_mask_0 = const()[name = tensor<string, []>("op_10015_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_10015_cast = slice_by_index(begin = var_10015_begin_0, end = var_10015_end_0, end_mask = var_10015_end_mask_0, x = q_49_cast);
            tensor<int32, [4]> var_10019_begin_0 = const()[name = tensor<string, []>("op_10019_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_10019_end_0 = const()[name = tensor<string, []>("op_10019_end_0"), val = tensor<int32, [4]>([2, 576, 1, 1024])];
            tensor<bool, [4]> var_10019_end_mask_0 = const()[name = tensor<string, []>("op_10019_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_10019_cast = slice_by_index(begin = var_10019_begin_0, end = var_10019_end_0, end_mask = var_10019_end_mask_0, x = q_49_cast);
            tensor<int32, [4]> var_10023_begin_0 = const()[name = tensor<string, []>("op_10023_begin_0"), val = tensor<int32, [4]>([0, 576, 0, 0])];
            tensor<int32, [4]> var_10023_end_0 = const()[name = tensor<string, []>("op_10023_end_0"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<bool, [4]> var_10023_end_mask_0 = const()[name = tensor<string, []>("op_10023_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_10023_cast = slice_by_index(begin = var_10023_begin_0, end = var_10023_end_0, end_mask = var_10023_end_mask_0, x = q_49_cast);
            tensor<int32, [4]> k_99_perm_0 = const()[name = tensor<string, []>("k_99_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_10030_begin_0 = const()[name = tensor<string, []>("op_10030_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_10030_end_0 = const()[name = tensor<string, []>("op_10030_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 64])];
            tensor<bool, [4]> var_10030_end_mask_0 = const()[name = tensor<string, []>("op_10030_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 640]> transpose_7 = transpose(perm = k_99_perm_0, x = k_97_cast);
            tensor<fp16, [2, 1024, 1, 64]> var_10030_cast = slice_by_index(begin = var_10030_begin_0, end = var_10030_end_0, end_mask = var_10030_end_mask_0, x = transpose_7);
            tensor<int32, [4]> var_10034_begin_0 = const()[name = tensor<string, []>("op_10034_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 64])];
            tensor<int32, [4]> var_10034_end_0 = const()[name = tensor<string, []>("op_10034_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 128])];
            tensor<bool, [4]> var_10034_end_mask_0 = const()[name = tensor<string, []>("op_10034_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 64]> var_10034_cast = slice_by_index(begin = var_10034_begin_0, end = var_10034_end_0, end_mask = var_10034_end_mask_0, x = transpose_7);
            tensor<int32, [4]> var_10038_begin_0 = const()[name = tensor<string, []>("op_10038_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 128])];
            tensor<int32, [4]> var_10038_end_0 = const()[name = tensor<string, []>("op_10038_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 192])];
            tensor<bool, [4]> var_10038_end_mask_0 = const()[name = tensor<string, []>("op_10038_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 64]> var_10038_cast = slice_by_index(begin = var_10038_begin_0, end = var_10038_end_0, end_mask = var_10038_end_mask_0, x = transpose_7);
            tensor<int32, [4]> var_10042_begin_0 = const()[name = tensor<string, []>("op_10042_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 192])];
            tensor<int32, [4]> var_10042_end_0 = const()[name = tensor<string, []>("op_10042_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 256])];
            tensor<bool, [4]> var_10042_end_mask_0 = const()[name = tensor<string, []>("op_10042_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 64]> var_10042_cast = slice_by_index(begin = var_10042_begin_0, end = var_10042_end_0, end_mask = var_10042_end_mask_0, x = transpose_7);
            tensor<int32, [4]> var_10046_begin_0 = const()[name = tensor<string, []>("op_10046_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 256])];
            tensor<int32, [4]> var_10046_end_0 = const()[name = tensor<string, []>("op_10046_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 320])];
            tensor<bool, [4]> var_10046_end_mask_0 = const()[name = tensor<string, []>("op_10046_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 64]> var_10046_cast = slice_by_index(begin = var_10046_begin_0, end = var_10046_end_0, end_mask = var_10046_end_mask_0, x = transpose_7);
            tensor<int32, [4]> var_10050_begin_0 = const()[name = tensor<string, []>("op_10050_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_10050_end_0 = const()[name = tensor<string, []>("op_10050_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 384])];
            tensor<bool, [4]> var_10050_end_mask_0 = const()[name = tensor<string, []>("op_10050_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 64]> var_10050_cast = slice_by_index(begin = var_10050_begin_0, end = var_10050_end_0, end_mask = var_10050_end_mask_0, x = transpose_7);
            tensor<int32, [4]> var_10054_begin_0 = const()[name = tensor<string, []>("op_10054_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 384])];
            tensor<int32, [4]> var_10054_end_0 = const()[name = tensor<string, []>("op_10054_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 448])];
            tensor<bool, [4]> var_10054_end_mask_0 = const()[name = tensor<string, []>("op_10054_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 64]> var_10054_cast = slice_by_index(begin = var_10054_begin_0, end = var_10054_end_0, end_mask = var_10054_end_mask_0, x = transpose_7);
            tensor<int32, [4]> var_10058_begin_0 = const()[name = tensor<string, []>("op_10058_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 448])];
            tensor<int32, [4]> var_10058_end_0 = const()[name = tensor<string, []>("op_10058_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 512])];
            tensor<bool, [4]> var_10058_end_mask_0 = const()[name = tensor<string, []>("op_10058_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 64]> var_10058_cast = slice_by_index(begin = var_10058_begin_0, end = var_10058_end_0, end_mask = var_10058_end_mask_0, x = transpose_7);
            tensor<int32, [4]> var_10062_begin_0 = const()[name = tensor<string, []>("op_10062_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 512])];
            tensor<int32, [4]> var_10062_end_0 = const()[name = tensor<string, []>("op_10062_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 576])];
            tensor<bool, [4]> var_10062_end_mask_0 = const()[name = tensor<string, []>("op_10062_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 64]> var_10062_cast = slice_by_index(begin = var_10062_begin_0, end = var_10062_end_0, end_mask = var_10062_end_mask_0, x = transpose_7);
            tensor<int32, [4]> var_10066_begin_0 = const()[name = tensor<string, []>("op_10066_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 576])];
            tensor<int32, [4]> var_10066_end_0 = const()[name = tensor<string, []>("op_10066_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 640])];
            tensor<bool, [4]> var_10066_end_mask_0 = const()[name = tensor<string, []>("op_10066_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 64]> var_10066_cast = slice_by_index(begin = var_10066_begin_0, end = var_10066_end_0, end_mask = var_10066_end_mask_0, x = transpose_7);
            tensor<int32, [4]> var_10068_begin_0 = const()[name = tensor<string, []>("op_10068_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_10068_end_0 = const()[name = tensor<string, []>("op_10068_end_0"), val = tensor<int32, [4]>([2, 64, 1, 1024])];
            tensor<bool, [4]> var_10068_end_mask_0 = const()[name = tensor<string, []>("op_10068_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_10068_cast = slice_by_index(begin = var_10068_begin_0, end = var_10068_end_0, end_mask = var_10068_end_mask_0, x = v_49_cast);
            tensor<int32, [4]> var_10072_begin_0 = const()[name = tensor<string, []>("op_10072_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_10072_end_0 = const()[name = tensor<string, []>("op_10072_end_0"), val = tensor<int32, [4]>([2, 128, 1, 1024])];
            tensor<bool, [4]> var_10072_end_mask_0 = const()[name = tensor<string, []>("op_10072_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_10072_cast = slice_by_index(begin = var_10072_begin_0, end = var_10072_end_0, end_mask = var_10072_end_mask_0, x = v_49_cast);
            tensor<int32, [4]> var_10076_begin_0 = const()[name = tensor<string, []>("op_10076_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_10076_end_0 = const()[name = tensor<string, []>("op_10076_end_0"), val = tensor<int32, [4]>([2, 192, 1, 1024])];
            tensor<bool, [4]> var_10076_end_mask_0 = const()[name = tensor<string, []>("op_10076_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_10076_cast = slice_by_index(begin = var_10076_begin_0, end = var_10076_end_0, end_mask = var_10076_end_mask_0, x = v_49_cast);
            tensor<int32, [4]> var_10080_begin_0 = const()[name = tensor<string, []>("op_10080_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_10080_end_0 = const()[name = tensor<string, []>("op_10080_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1024])];
            tensor<bool, [4]> var_10080_end_mask_0 = const()[name = tensor<string, []>("op_10080_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_10080_cast = slice_by_index(begin = var_10080_begin_0, end = var_10080_end_0, end_mask = var_10080_end_mask_0, x = v_49_cast);
            tensor<int32, [4]> var_10084_begin_0 = const()[name = tensor<string, []>("op_10084_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_10084_end_0 = const()[name = tensor<string, []>("op_10084_end_0"), val = tensor<int32, [4]>([2, 320, 1, 1024])];
            tensor<bool, [4]> var_10084_end_mask_0 = const()[name = tensor<string, []>("op_10084_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_10084_cast = slice_by_index(begin = var_10084_begin_0, end = var_10084_end_0, end_mask = var_10084_end_mask_0, x = v_49_cast);
            tensor<int32, [4]> var_10088_begin_0 = const()[name = tensor<string, []>("op_10088_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_10088_end_0 = const()[name = tensor<string, []>("op_10088_end_0"), val = tensor<int32, [4]>([2, 384, 1, 1024])];
            tensor<bool, [4]> var_10088_end_mask_0 = const()[name = tensor<string, []>("op_10088_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_10088_cast = slice_by_index(begin = var_10088_begin_0, end = var_10088_end_0, end_mask = var_10088_end_mask_0, x = v_49_cast);
            tensor<int32, [4]> var_10092_begin_0 = const()[name = tensor<string, []>("op_10092_begin_0"), val = tensor<int32, [4]>([0, 384, 0, 0])];
            tensor<int32, [4]> var_10092_end_0 = const()[name = tensor<string, []>("op_10092_end_0"), val = tensor<int32, [4]>([2, 448, 1, 1024])];
            tensor<bool, [4]> var_10092_end_mask_0 = const()[name = tensor<string, []>("op_10092_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_10092_cast = slice_by_index(begin = var_10092_begin_0, end = var_10092_end_0, end_mask = var_10092_end_mask_0, x = v_49_cast);
            tensor<int32, [4]> var_10096_begin_0 = const()[name = tensor<string, []>("op_10096_begin_0"), val = tensor<int32, [4]>([0, 448, 0, 0])];
            tensor<int32, [4]> var_10096_end_0 = const()[name = tensor<string, []>("op_10096_end_0"), val = tensor<int32, [4]>([2, 512, 1, 1024])];
            tensor<bool, [4]> var_10096_end_mask_0 = const()[name = tensor<string, []>("op_10096_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_10096_cast = slice_by_index(begin = var_10096_begin_0, end = var_10096_end_0, end_mask = var_10096_end_mask_0, x = v_49_cast);
            tensor<int32, [4]> var_10100_begin_0 = const()[name = tensor<string, []>("op_10100_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_10100_end_0 = const()[name = tensor<string, []>("op_10100_end_0"), val = tensor<int32, [4]>([2, 576, 1, 1024])];
            tensor<bool, [4]> var_10100_end_mask_0 = const()[name = tensor<string, []>("op_10100_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_10100_cast = slice_by_index(begin = var_10100_begin_0, end = var_10100_end_0, end_mask = var_10100_end_mask_0, x = v_49_cast);
            tensor<int32, [4]> var_10104_begin_0 = const()[name = tensor<string, []>("op_10104_begin_0"), val = tensor<int32, [4]>([0, 576, 0, 0])];
            tensor<int32, [4]> var_10104_end_0 = const()[name = tensor<string, []>("op_10104_end_0"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<bool, [4]> var_10104_end_mask_0 = const()[name = tensor<string, []>("op_10104_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_10104_cast = slice_by_index(begin = var_10104_begin_0, end = var_10104_end_0, end_mask = var_10104_end_mask_0, x = v_49_cast);
            tensor<string, []> var_10108_equation_0 = const()[name = tensor<string, []>("op_10108_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_10108_cast = einsum(equation = var_10108_equation_0, values = (var_10030_cast, var_9987_cast));
            tensor<fp16, []> var_10109_to_fp16 = const()[name = tensor<string, []>("op_10109_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_681_cast = mul(x = var_10108_cast, y = var_10109_to_fp16);
            tensor<string, []> var_10112_equation_0 = const()[name = tensor<string, []>("op_10112_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_10112_cast = einsum(equation = var_10112_equation_0, values = (var_10034_cast, var_9991_cast));
            tensor<fp16, []> var_10113_to_fp16 = const()[name = tensor<string, []>("op_10113_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_683_cast = mul(x = var_10112_cast, y = var_10113_to_fp16);
            tensor<string, []> var_10116_equation_0 = const()[name = tensor<string, []>("op_10116_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_10116_cast = einsum(equation = var_10116_equation_0, values = (var_10038_cast, var_9995_cast));
            tensor<fp16, []> var_10117_to_fp16 = const()[name = tensor<string, []>("op_10117_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_685_cast = mul(x = var_10116_cast, y = var_10117_to_fp16);
            tensor<string, []> var_10120_equation_0 = const()[name = tensor<string, []>("op_10120_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_10120_cast = einsum(equation = var_10120_equation_0, values = (var_10042_cast, var_9999_cast));
            tensor<fp16, []> var_10121_to_fp16 = const()[name = tensor<string, []>("op_10121_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_687_cast = mul(x = var_10120_cast, y = var_10121_to_fp16);
            tensor<string, []> var_10124_equation_0 = const()[name = tensor<string, []>("op_10124_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_10124_cast = einsum(equation = var_10124_equation_0, values = (var_10046_cast, var_10003_cast));
            tensor<fp16, []> var_10125_to_fp16 = const()[name = tensor<string, []>("op_10125_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_689_cast = mul(x = var_10124_cast, y = var_10125_to_fp16);
            tensor<string, []> var_10128_equation_0 = const()[name = tensor<string, []>("op_10128_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_10128_cast = einsum(equation = var_10128_equation_0, values = (var_10050_cast, var_10007_cast));
            tensor<fp16, []> var_10129_to_fp16 = const()[name = tensor<string, []>("op_10129_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_691_cast = mul(x = var_10128_cast, y = var_10129_to_fp16);
            tensor<string, []> var_10132_equation_0 = const()[name = tensor<string, []>("op_10132_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_10132_cast = einsum(equation = var_10132_equation_0, values = (var_10054_cast, var_10011_cast));
            tensor<fp16, []> var_10133_to_fp16 = const()[name = tensor<string, []>("op_10133_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_693_cast = mul(x = var_10132_cast, y = var_10133_to_fp16);
            tensor<string, []> var_10136_equation_0 = const()[name = tensor<string, []>("op_10136_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_10136_cast = einsum(equation = var_10136_equation_0, values = (var_10058_cast, var_10015_cast));
            tensor<fp16, []> var_10137_to_fp16 = const()[name = tensor<string, []>("op_10137_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_695_cast = mul(x = var_10136_cast, y = var_10137_to_fp16);
            tensor<string, []> var_10140_equation_0 = const()[name = tensor<string, []>("op_10140_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_10140_cast = einsum(equation = var_10140_equation_0, values = (var_10062_cast, var_10019_cast));
            tensor<fp16, []> var_10141_to_fp16 = const()[name = tensor<string, []>("op_10141_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_697_cast = mul(x = var_10140_cast, y = var_10141_to_fp16);
            tensor<string, []> var_10144_equation_0 = const()[name = tensor<string, []>("op_10144_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_10144_cast = einsum(equation = var_10144_equation_0, values = (var_10066_cast, var_10023_cast));
            tensor<fp16, []> var_10145_to_fp16 = const()[name = tensor<string, []>("op_10145_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_699_cast = mul(x = var_10144_cast, y = var_10145_to_fp16);
            tensor<fp16, [2, 1024, 1, 1024]> var_10147_cast = softmax(axis = var_8627, x = aw_681_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_10148_cast = softmax(axis = var_8627, x = aw_683_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_10149_cast = softmax(axis = var_8627, x = aw_685_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_10150_cast = softmax(axis = var_8627, x = aw_687_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_10151_cast = softmax(axis = var_8627, x = aw_689_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_10152_cast = softmax(axis = var_8627, x = aw_691_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_10153_cast = softmax(axis = var_8627, x = aw_693_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_10154_cast = softmax(axis = var_8627, x = aw_695_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_10155_cast = softmax(axis = var_8627, x = aw_697_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_10156_cast = softmax(axis = var_8627, x = aw_699_cast);
            tensor<string, []> var_10158_equation_0 = const()[name = tensor<string, []>("op_10158_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_10158_cast = einsum(equation = var_10158_equation_0, values = (var_10068_cast, var_10147_cast));
            tensor<string, []> var_10160_equation_0 = const()[name = tensor<string, []>("op_10160_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_10160_cast = einsum(equation = var_10160_equation_0, values = (var_10072_cast, var_10148_cast));
            tensor<string, []> var_10162_equation_0 = const()[name = tensor<string, []>("op_10162_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_10162_cast = einsum(equation = var_10162_equation_0, values = (var_10076_cast, var_10149_cast));
            tensor<string, []> var_10164_equation_0 = const()[name = tensor<string, []>("op_10164_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_10164_cast = einsum(equation = var_10164_equation_0, values = (var_10080_cast, var_10150_cast));
            tensor<string, []> var_10166_equation_0 = const()[name = tensor<string, []>("op_10166_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_10166_cast = einsum(equation = var_10166_equation_0, values = (var_10084_cast, var_10151_cast));
            tensor<string, []> var_10168_equation_0 = const()[name = tensor<string, []>("op_10168_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_10168_cast = einsum(equation = var_10168_equation_0, values = (var_10088_cast, var_10152_cast));
            tensor<string, []> var_10170_equation_0 = const()[name = tensor<string, []>("op_10170_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_10170_cast = einsum(equation = var_10170_equation_0, values = (var_10092_cast, var_10153_cast));
            tensor<string, []> var_10172_equation_0 = const()[name = tensor<string, []>("op_10172_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_10172_cast = einsum(equation = var_10172_equation_0, values = (var_10096_cast, var_10154_cast));
            tensor<string, []> var_10174_equation_0 = const()[name = tensor<string, []>("op_10174_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_10174_cast = einsum(equation = var_10174_equation_0, values = (var_10100_cast, var_10155_cast));
            tensor<string, []> var_10176_equation_0 = const()[name = tensor<string, []>("op_10176_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_10176_cast = einsum(equation = var_10176_equation_0, values = (var_10104_cast, var_10156_cast));
            tensor<bool, []> input_435_interleave_0 = const()[name = tensor<string, []>("input_435_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 640, 1, 1024]> input_435_cast = concat(axis = var_8627, interleave = input_435_interleave_0, values = (var_10158_cast, var_10160_cast, var_10162_cast, var_10164_cast, var_10166_cast, var_10168_cast, var_10170_cast, var_10172_cast, var_10174_cast, var_10176_cast));
            tensor<int32, [2]> var_10182 = const()[name = tensor<string, []>("op_10182"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_10184 = const()[name = tensor<string, []>("op_10184"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_10186_pad_type_0 = const()[name = tensor<string, []>("op_10186_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_10186_pad_0 = const()[name = tensor<string, []>("op_10186_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_2_transformer_blocks_0_attn1_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_transformer_blocks_0_attn1_to_out_0_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(776766080)))];
            tensor<fp16, [640]> up_blocks_2_attentions_2_transformer_blocks_0_attn1_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_transformer_blocks_0_attn1_to_out_0_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(777585344)))];
            tensor<fp16, [2, 640, 1, 1024]> var_10186_cast = conv(bias = up_blocks_2_attentions_2_transformer_blocks_0_attn1_to_out_0_bias_to_fp16, dilations = var_10184, groups = var_8627, pad = var_10186_pad_0, pad_type = var_10186_pad_type_0, strides = var_10182, weight = up_blocks_2_attentions_2_transformer_blocks_0_attn1_to_out_0_weight_to_fp16, x = input_435_cast);
            tensor<fp16, [2, 640, 1, 1024]> inputs_75_cast = add(x = var_10186_cast, y = inputs_73_cast);
            tensor<int32, [1]> var_10190 = const()[name = tensor<string, []>("op_10190"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> channels_mean_75_cast = reduce_mean(axes = var_10190, keep_dims = var_8622, x = inputs_75_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_75_cast = sub(x = inputs_75_cast, y = channels_mean_75_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_sq_75_cast = mul(x = zero_mean_75_cast, y = zero_mean_75_cast);
            tensor<int32, [1]> var_10194 = const()[name = tensor<string, []>("op_10194"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> var_10195_cast = reduce_mean(axes = var_10194, keep_dims = var_8622, x = zero_mean_sq_75_cast);
            tensor<fp16, []> var_10196_to_fp16 = const()[name = tensor<string, []>("op_10196_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 1024]> var_10197_cast = add(x = var_10195_cast, y = var_10196_to_fp16);
            tensor<fp16, []> denom_75_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_75_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 1024]> denom_75_cast = rsqrt(epsilon = denom_75_epsilon_0_to_fp16, x = var_10197_cast);
            tensor<fp16, [2, 640, 1, 1024]> out_75_cast = mul(x = zero_mean_75_cast, y = denom_75_cast);
            tensor<fp16, [1, 640, 1, 1]> var_10201_to_fp16 = const()[name = tensor<string, []>("op_10201_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(777586688)))];
            tensor<fp16, [2, 640, 1, 1024]> var_10202_cast = add(x = out_75_cast, y = var_10201_to_fp16);
            tensor<fp16, [1, 640, 1, 1]> var_10204_to_fp16 = const()[name = tensor<string, []>("op_10204_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(777588032)))];
            tensor<fp16, [2, 640, 1, 1024]> hidden_states_269_cast = mul(x = var_10202_cast, y = var_10204_to_fp16);
            tensor<int32, [2]> var_10211 = const()[name = tensor<string, []>("op_10211"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_10213 = const()[name = tensor<string, []>("op_10213"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_51_pad_type_0 = const()[name = tensor<string, []>("q_51_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_51_pad_0 = const()[name = tensor<string, []>("q_51_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_2_transformer_blocks_0_attn2_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_transformer_blocks_0_attn2_to_q_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(777589376)))];
            tensor<fp16, [2, 640, 1, 1024]> q_51_cast = conv(dilations = var_10213, groups = var_8627, pad = q_51_pad_0, pad_type = q_51_pad_type_0, strides = var_10211, weight = up_blocks_2_attentions_2_transformer_blocks_0_attn2_to_q_weight_to_fp16, x = hidden_states_269_cast);
            tensor<int32, [2]> var_10217 = const()[name = tensor<string, []>("op_10217"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_10219 = const()[name = tensor<string, []>("op_10219"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_101_pad_type_0 = const()[name = tensor<string, []>("k_101_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_101_pad_0 = const()[name = tensor<string, []>("k_101_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 1024, 1, 1]> up_blocks_2_attentions_2_transformer_blocks_0_attn2_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_transformer_blocks_0_attn2_to_k_weight_to_fp16"), val = tensor<fp16, [640, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(778408640)))];
            tensor<fp16, [2, 640, 1, 77]> k_101_cast = conv(dilations = var_10219, groups = var_8627, pad = k_101_pad_0, pad_type = k_101_pad_type_0, strides = var_10217, weight = up_blocks_2_attentions_2_transformer_blocks_0_attn2_to_k_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [2]> var_10223 = const()[name = tensor<string, []>("op_10223"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_10225 = const()[name = tensor<string, []>("op_10225"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_51_pad_type_0 = const()[name = tensor<string, []>("v_51_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_51_pad_0 = const()[name = tensor<string, []>("v_51_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 1024, 1, 1]> up_blocks_2_attentions_2_transformer_blocks_0_attn2_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_transformer_blocks_0_attn2_to_v_weight_to_fp16"), val = tensor<fp16, [640, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(779719424)))];
            tensor<fp16, [2, 640, 1, 77]> v_51_cast = conv(dilations = var_10225, groups = var_8627, pad = v_51_pad_0, pad_type = v_51_pad_type_0, strides = var_10223, weight = up_blocks_2_attentions_2_transformer_blocks_0_attn2_to_v_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [4]> var_10229_begin_0 = const()[name = tensor<string, []>("op_10229_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_10229_end_0 = const()[name = tensor<string, []>("op_10229_end_0"), val = tensor<int32, [4]>([2, 64, 1, 1024])];
            tensor<bool, [4]> var_10229_end_mask_0 = const()[name = tensor<string, []>("op_10229_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_10229_cast = slice_by_index(begin = var_10229_begin_0, end = var_10229_end_0, end_mask = var_10229_end_mask_0, x = q_51_cast);
            tensor<int32, [4]> var_10233_begin_0 = const()[name = tensor<string, []>("op_10233_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_10233_end_0 = const()[name = tensor<string, []>("op_10233_end_0"), val = tensor<int32, [4]>([2, 128, 1, 1024])];
            tensor<bool, [4]> var_10233_end_mask_0 = const()[name = tensor<string, []>("op_10233_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_10233_cast = slice_by_index(begin = var_10233_begin_0, end = var_10233_end_0, end_mask = var_10233_end_mask_0, x = q_51_cast);
            tensor<int32, [4]> var_10237_begin_0 = const()[name = tensor<string, []>("op_10237_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_10237_end_0 = const()[name = tensor<string, []>("op_10237_end_0"), val = tensor<int32, [4]>([2, 192, 1, 1024])];
            tensor<bool, [4]> var_10237_end_mask_0 = const()[name = tensor<string, []>("op_10237_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_10237_cast = slice_by_index(begin = var_10237_begin_0, end = var_10237_end_0, end_mask = var_10237_end_mask_0, x = q_51_cast);
            tensor<int32, [4]> var_10241_begin_0 = const()[name = tensor<string, []>("op_10241_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_10241_end_0 = const()[name = tensor<string, []>("op_10241_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1024])];
            tensor<bool, [4]> var_10241_end_mask_0 = const()[name = tensor<string, []>("op_10241_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_10241_cast = slice_by_index(begin = var_10241_begin_0, end = var_10241_end_0, end_mask = var_10241_end_mask_0, x = q_51_cast);
            tensor<int32, [4]> var_10245_begin_0 = const()[name = tensor<string, []>("op_10245_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_10245_end_0 = const()[name = tensor<string, []>("op_10245_end_0"), val = tensor<int32, [4]>([2, 320, 1, 1024])];
            tensor<bool, [4]> var_10245_end_mask_0 = const()[name = tensor<string, []>("op_10245_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_10245_cast = slice_by_index(begin = var_10245_begin_0, end = var_10245_end_0, end_mask = var_10245_end_mask_0, x = q_51_cast);
            tensor<int32, [4]> var_10249_begin_0 = const()[name = tensor<string, []>("op_10249_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_10249_end_0 = const()[name = tensor<string, []>("op_10249_end_0"), val = tensor<int32, [4]>([2, 384, 1, 1024])];
            tensor<bool, [4]> var_10249_end_mask_0 = const()[name = tensor<string, []>("op_10249_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_10249_cast = slice_by_index(begin = var_10249_begin_0, end = var_10249_end_0, end_mask = var_10249_end_mask_0, x = q_51_cast);
            tensor<int32, [4]> var_10253_begin_0 = const()[name = tensor<string, []>("op_10253_begin_0"), val = tensor<int32, [4]>([0, 384, 0, 0])];
            tensor<int32, [4]> var_10253_end_0 = const()[name = tensor<string, []>("op_10253_end_0"), val = tensor<int32, [4]>([2, 448, 1, 1024])];
            tensor<bool, [4]> var_10253_end_mask_0 = const()[name = tensor<string, []>("op_10253_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_10253_cast = slice_by_index(begin = var_10253_begin_0, end = var_10253_end_0, end_mask = var_10253_end_mask_0, x = q_51_cast);
            tensor<int32, [4]> var_10257_begin_0 = const()[name = tensor<string, []>("op_10257_begin_0"), val = tensor<int32, [4]>([0, 448, 0, 0])];
            tensor<int32, [4]> var_10257_end_0 = const()[name = tensor<string, []>("op_10257_end_0"), val = tensor<int32, [4]>([2, 512, 1, 1024])];
            tensor<bool, [4]> var_10257_end_mask_0 = const()[name = tensor<string, []>("op_10257_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_10257_cast = slice_by_index(begin = var_10257_begin_0, end = var_10257_end_0, end_mask = var_10257_end_mask_0, x = q_51_cast);
            tensor<int32, [4]> var_10261_begin_0 = const()[name = tensor<string, []>("op_10261_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_10261_end_0 = const()[name = tensor<string, []>("op_10261_end_0"), val = tensor<int32, [4]>([2, 576, 1, 1024])];
            tensor<bool, [4]> var_10261_end_mask_0 = const()[name = tensor<string, []>("op_10261_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_10261_cast = slice_by_index(begin = var_10261_begin_0, end = var_10261_end_0, end_mask = var_10261_end_mask_0, x = q_51_cast);
            tensor<int32, [4]> var_10265_begin_0 = const()[name = tensor<string, []>("op_10265_begin_0"), val = tensor<int32, [4]>([0, 576, 0, 0])];
            tensor<int32, [4]> var_10265_end_0 = const()[name = tensor<string, []>("op_10265_end_0"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<bool, [4]> var_10265_end_mask_0 = const()[name = tensor<string, []>("op_10265_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 1024]> var_10265_cast = slice_by_index(begin = var_10265_begin_0, end = var_10265_end_0, end_mask = var_10265_end_mask_0, x = q_51_cast);
            tensor<int32, [4]> k_103_perm_0 = const()[name = tensor<string, []>("k_103_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_10272_begin_0 = const()[name = tensor<string, []>("op_10272_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_10272_end_0 = const()[name = tensor<string, []>("op_10272_end_0"), val = tensor<int32, [4]>([2, 77, 1, 64])];
            tensor<bool, [4]> var_10272_end_mask_0 = const()[name = tensor<string, []>("op_10272_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 640]> transpose_6 = transpose(perm = k_103_perm_0, x = k_101_cast);
            tensor<fp16, [2, 77, 1, 64]> var_10272_cast = slice_by_index(begin = var_10272_begin_0, end = var_10272_end_0, end_mask = var_10272_end_mask_0, x = transpose_6);
            tensor<int32, [4]> var_10276_begin_0 = const()[name = tensor<string, []>("op_10276_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 64])];
            tensor<int32, [4]> var_10276_end_0 = const()[name = tensor<string, []>("op_10276_end_0"), val = tensor<int32, [4]>([2, 77, 1, 128])];
            tensor<bool, [4]> var_10276_end_mask_0 = const()[name = tensor<string, []>("op_10276_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_10276_cast = slice_by_index(begin = var_10276_begin_0, end = var_10276_end_0, end_mask = var_10276_end_mask_0, x = transpose_6);
            tensor<int32, [4]> var_10280_begin_0 = const()[name = tensor<string, []>("op_10280_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 128])];
            tensor<int32, [4]> var_10280_end_0 = const()[name = tensor<string, []>("op_10280_end_0"), val = tensor<int32, [4]>([2, 77, 1, 192])];
            tensor<bool, [4]> var_10280_end_mask_0 = const()[name = tensor<string, []>("op_10280_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_10280_cast = slice_by_index(begin = var_10280_begin_0, end = var_10280_end_0, end_mask = var_10280_end_mask_0, x = transpose_6);
            tensor<int32, [4]> var_10284_begin_0 = const()[name = tensor<string, []>("op_10284_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 192])];
            tensor<int32, [4]> var_10284_end_0 = const()[name = tensor<string, []>("op_10284_end_0"), val = tensor<int32, [4]>([2, 77, 1, 256])];
            tensor<bool, [4]> var_10284_end_mask_0 = const()[name = tensor<string, []>("op_10284_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_10284_cast = slice_by_index(begin = var_10284_begin_0, end = var_10284_end_0, end_mask = var_10284_end_mask_0, x = transpose_6);
            tensor<int32, [4]> var_10288_begin_0 = const()[name = tensor<string, []>("op_10288_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 256])];
            tensor<int32, [4]> var_10288_end_0 = const()[name = tensor<string, []>("op_10288_end_0"), val = tensor<int32, [4]>([2, 77, 1, 320])];
            tensor<bool, [4]> var_10288_end_mask_0 = const()[name = tensor<string, []>("op_10288_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_10288_cast = slice_by_index(begin = var_10288_begin_0, end = var_10288_end_0, end_mask = var_10288_end_mask_0, x = transpose_6);
            tensor<int32, [4]> var_10292_begin_0 = const()[name = tensor<string, []>("op_10292_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_10292_end_0 = const()[name = tensor<string, []>("op_10292_end_0"), val = tensor<int32, [4]>([2, 77, 1, 384])];
            tensor<bool, [4]> var_10292_end_mask_0 = const()[name = tensor<string, []>("op_10292_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_10292_cast = slice_by_index(begin = var_10292_begin_0, end = var_10292_end_0, end_mask = var_10292_end_mask_0, x = transpose_6);
            tensor<int32, [4]> var_10296_begin_0 = const()[name = tensor<string, []>("op_10296_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 384])];
            tensor<int32, [4]> var_10296_end_0 = const()[name = tensor<string, []>("op_10296_end_0"), val = tensor<int32, [4]>([2, 77, 1, 448])];
            tensor<bool, [4]> var_10296_end_mask_0 = const()[name = tensor<string, []>("op_10296_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_10296_cast = slice_by_index(begin = var_10296_begin_0, end = var_10296_end_0, end_mask = var_10296_end_mask_0, x = transpose_6);
            tensor<int32, [4]> var_10300_begin_0 = const()[name = tensor<string, []>("op_10300_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 448])];
            tensor<int32, [4]> var_10300_end_0 = const()[name = tensor<string, []>("op_10300_end_0"), val = tensor<int32, [4]>([2, 77, 1, 512])];
            tensor<bool, [4]> var_10300_end_mask_0 = const()[name = tensor<string, []>("op_10300_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_10300_cast = slice_by_index(begin = var_10300_begin_0, end = var_10300_end_0, end_mask = var_10300_end_mask_0, x = transpose_6);
            tensor<int32, [4]> var_10304_begin_0 = const()[name = tensor<string, []>("op_10304_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 512])];
            tensor<int32, [4]> var_10304_end_0 = const()[name = tensor<string, []>("op_10304_end_0"), val = tensor<int32, [4]>([2, 77, 1, 576])];
            tensor<bool, [4]> var_10304_end_mask_0 = const()[name = tensor<string, []>("op_10304_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_10304_cast = slice_by_index(begin = var_10304_begin_0, end = var_10304_end_0, end_mask = var_10304_end_mask_0, x = transpose_6);
            tensor<int32, [4]> var_10308_begin_0 = const()[name = tensor<string, []>("op_10308_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 576])];
            tensor<int32, [4]> var_10308_end_0 = const()[name = tensor<string, []>("op_10308_end_0"), val = tensor<int32, [4]>([2, 77, 1, 640])];
            tensor<bool, [4]> var_10308_end_mask_0 = const()[name = tensor<string, []>("op_10308_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_10308_cast = slice_by_index(begin = var_10308_begin_0, end = var_10308_end_0, end_mask = var_10308_end_mask_0, x = transpose_6);
            tensor<int32, [4]> var_10310_begin_0 = const()[name = tensor<string, []>("op_10310_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_10310_end_0 = const()[name = tensor<string, []>("op_10310_end_0"), val = tensor<int32, [4]>([2, 64, 1, 77])];
            tensor<bool, [4]> var_10310_end_mask_0 = const()[name = tensor<string, []>("op_10310_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_10310_cast = slice_by_index(begin = var_10310_begin_0, end = var_10310_end_0, end_mask = var_10310_end_mask_0, x = v_51_cast);
            tensor<int32, [4]> var_10314_begin_0 = const()[name = tensor<string, []>("op_10314_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_10314_end_0 = const()[name = tensor<string, []>("op_10314_end_0"), val = tensor<int32, [4]>([2, 128, 1, 77])];
            tensor<bool, [4]> var_10314_end_mask_0 = const()[name = tensor<string, []>("op_10314_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_10314_cast = slice_by_index(begin = var_10314_begin_0, end = var_10314_end_0, end_mask = var_10314_end_mask_0, x = v_51_cast);
            tensor<int32, [4]> var_10318_begin_0 = const()[name = tensor<string, []>("op_10318_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_10318_end_0 = const()[name = tensor<string, []>("op_10318_end_0"), val = tensor<int32, [4]>([2, 192, 1, 77])];
            tensor<bool, [4]> var_10318_end_mask_0 = const()[name = tensor<string, []>("op_10318_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_10318_cast = slice_by_index(begin = var_10318_begin_0, end = var_10318_end_0, end_mask = var_10318_end_mask_0, x = v_51_cast);
            tensor<int32, [4]> var_10322_begin_0 = const()[name = tensor<string, []>("op_10322_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_10322_end_0 = const()[name = tensor<string, []>("op_10322_end_0"), val = tensor<int32, [4]>([2, 256, 1, 77])];
            tensor<bool, [4]> var_10322_end_mask_0 = const()[name = tensor<string, []>("op_10322_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_10322_cast = slice_by_index(begin = var_10322_begin_0, end = var_10322_end_0, end_mask = var_10322_end_mask_0, x = v_51_cast);
            tensor<int32, [4]> var_10326_begin_0 = const()[name = tensor<string, []>("op_10326_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_10326_end_0 = const()[name = tensor<string, []>("op_10326_end_0"), val = tensor<int32, [4]>([2, 320, 1, 77])];
            tensor<bool, [4]> var_10326_end_mask_0 = const()[name = tensor<string, []>("op_10326_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_10326_cast = slice_by_index(begin = var_10326_begin_0, end = var_10326_end_0, end_mask = var_10326_end_mask_0, x = v_51_cast);
            tensor<int32, [4]> var_10330_begin_0 = const()[name = tensor<string, []>("op_10330_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_10330_end_0 = const()[name = tensor<string, []>("op_10330_end_0"), val = tensor<int32, [4]>([2, 384, 1, 77])];
            tensor<bool, [4]> var_10330_end_mask_0 = const()[name = tensor<string, []>("op_10330_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_10330_cast = slice_by_index(begin = var_10330_begin_0, end = var_10330_end_0, end_mask = var_10330_end_mask_0, x = v_51_cast);
            tensor<int32, [4]> var_10334_begin_0 = const()[name = tensor<string, []>("op_10334_begin_0"), val = tensor<int32, [4]>([0, 384, 0, 0])];
            tensor<int32, [4]> var_10334_end_0 = const()[name = tensor<string, []>("op_10334_end_0"), val = tensor<int32, [4]>([2, 448, 1, 77])];
            tensor<bool, [4]> var_10334_end_mask_0 = const()[name = tensor<string, []>("op_10334_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_10334_cast = slice_by_index(begin = var_10334_begin_0, end = var_10334_end_0, end_mask = var_10334_end_mask_0, x = v_51_cast);
            tensor<int32, [4]> var_10338_begin_0 = const()[name = tensor<string, []>("op_10338_begin_0"), val = tensor<int32, [4]>([0, 448, 0, 0])];
            tensor<int32, [4]> var_10338_end_0 = const()[name = tensor<string, []>("op_10338_end_0"), val = tensor<int32, [4]>([2, 512, 1, 77])];
            tensor<bool, [4]> var_10338_end_mask_0 = const()[name = tensor<string, []>("op_10338_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_10338_cast = slice_by_index(begin = var_10338_begin_0, end = var_10338_end_0, end_mask = var_10338_end_mask_0, x = v_51_cast);
            tensor<int32, [4]> var_10342_begin_0 = const()[name = tensor<string, []>("op_10342_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_10342_end_0 = const()[name = tensor<string, []>("op_10342_end_0"), val = tensor<int32, [4]>([2, 576, 1, 77])];
            tensor<bool, [4]> var_10342_end_mask_0 = const()[name = tensor<string, []>("op_10342_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_10342_cast = slice_by_index(begin = var_10342_begin_0, end = var_10342_end_0, end_mask = var_10342_end_mask_0, x = v_51_cast);
            tensor<int32, [4]> var_10346_begin_0 = const()[name = tensor<string, []>("op_10346_begin_0"), val = tensor<int32, [4]>([0, 576, 0, 0])];
            tensor<int32, [4]> var_10346_end_0 = const()[name = tensor<string, []>("op_10346_end_0"), val = tensor<int32, [4]>([2, 640, 1, 77])];
            tensor<bool, [4]> var_10346_end_mask_0 = const()[name = tensor<string, []>("op_10346_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_10346_cast = slice_by_index(begin = var_10346_begin_0, end = var_10346_end_0, end_mask = var_10346_end_mask_0, x = v_51_cast);
            tensor<string, []> var_10350_equation_0 = const()[name = tensor<string, []>("op_10350_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_10350_cast = einsum(equation = var_10350_equation_0, values = (var_10272_cast, var_10229_cast));
            tensor<fp16, []> var_10351_to_fp16 = const()[name = tensor<string, []>("op_10351_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_701_cast = mul(x = var_10350_cast, y = var_10351_to_fp16);
            tensor<string, []> var_10354_equation_0 = const()[name = tensor<string, []>("op_10354_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_10354_cast = einsum(equation = var_10354_equation_0, values = (var_10276_cast, var_10233_cast));
            tensor<fp16, []> var_10355_to_fp16 = const()[name = tensor<string, []>("op_10355_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_703_cast = mul(x = var_10354_cast, y = var_10355_to_fp16);
            tensor<string, []> var_10358_equation_0 = const()[name = tensor<string, []>("op_10358_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_10358_cast = einsum(equation = var_10358_equation_0, values = (var_10280_cast, var_10237_cast));
            tensor<fp16, []> var_10359_to_fp16 = const()[name = tensor<string, []>("op_10359_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_705_cast = mul(x = var_10358_cast, y = var_10359_to_fp16);
            tensor<string, []> var_10362_equation_0 = const()[name = tensor<string, []>("op_10362_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_10362_cast = einsum(equation = var_10362_equation_0, values = (var_10284_cast, var_10241_cast));
            tensor<fp16, []> var_10363_to_fp16 = const()[name = tensor<string, []>("op_10363_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_707_cast = mul(x = var_10362_cast, y = var_10363_to_fp16);
            tensor<string, []> var_10366_equation_0 = const()[name = tensor<string, []>("op_10366_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_10366_cast = einsum(equation = var_10366_equation_0, values = (var_10288_cast, var_10245_cast));
            tensor<fp16, []> var_10367_to_fp16 = const()[name = tensor<string, []>("op_10367_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_709_cast = mul(x = var_10366_cast, y = var_10367_to_fp16);
            tensor<string, []> var_10370_equation_0 = const()[name = tensor<string, []>("op_10370_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_10370_cast = einsum(equation = var_10370_equation_0, values = (var_10292_cast, var_10249_cast));
            tensor<fp16, []> var_10371_to_fp16 = const()[name = tensor<string, []>("op_10371_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_711_cast = mul(x = var_10370_cast, y = var_10371_to_fp16);
            tensor<string, []> var_10374_equation_0 = const()[name = tensor<string, []>("op_10374_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_10374_cast = einsum(equation = var_10374_equation_0, values = (var_10296_cast, var_10253_cast));
            tensor<fp16, []> var_10375_to_fp16 = const()[name = tensor<string, []>("op_10375_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_713_cast = mul(x = var_10374_cast, y = var_10375_to_fp16);
            tensor<string, []> var_10378_equation_0 = const()[name = tensor<string, []>("op_10378_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_10378_cast = einsum(equation = var_10378_equation_0, values = (var_10300_cast, var_10257_cast));
            tensor<fp16, []> var_10379_to_fp16 = const()[name = tensor<string, []>("op_10379_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_715_cast = mul(x = var_10378_cast, y = var_10379_to_fp16);
            tensor<string, []> var_10382_equation_0 = const()[name = tensor<string, []>("op_10382_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_10382_cast = einsum(equation = var_10382_equation_0, values = (var_10304_cast, var_10261_cast));
            tensor<fp16, []> var_10383_to_fp16 = const()[name = tensor<string, []>("op_10383_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_717_cast = mul(x = var_10382_cast, y = var_10383_to_fp16);
            tensor<string, []> var_10386_equation_0 = const()[name = tensor<string, []>("op_10386_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_10386_cast = einsum(equation = var_10386_equation_0, values = (var_10308_cast, var_10265_cast));
            tensor<fp16, []> var_10387_to_fp16 = const()[name = tensor<string, []>("op_10387_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 1024]> aw_719_cast = mul(x = var_10386_cast, y = var_10387_to_fp16);
            tensor<fp16, [2, 77, 1, 1024]> var_10389_cast = softmax(axis = var_8627, x = aw_701_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_10390_cast = softmax(axis = var_8627, x = aw_703_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_10391_cast = softmax(axis = var_8627, x = aw_705_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_10392_cast = softmax(axis = var_8627, x = aw_707_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_10393_cast = softmax(axis = var_8627, x = aw_709_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_10394_cast = softmax(axis = var_8627, x = aw_711_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_10395_cast = softmax(axis = var_8627, x = aw_713_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_10396_cast = softmax(axis = var_8627, x = aw_715_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_10397_cast = softmax(axis = var_8627, x = aw_717_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_10398_cast = softmax(axis = var_8627, x = aw_719_cast);
            tensor<string, []> var_10400_equation_0 = const()[name = tensor<string, []>("op_10400_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_10400_cast = einsum(equation = var_10400_equation_0, values = (var_10310_cast, var_10389_cast));
            tensor<string, []> var_10402_equation_0 = const()[name = tensor<string, []>("op_10402_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_10402_cast = einsum(equation = var_10402_equation_0, values = (var_10314_cast, var_10390_cast));
            tensor<string, []> var_10404_equation_0 = const()[name = tensor<string, []>("op_10404_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_10404_cast = einsum(equation = var_10404_equation_0, values = (var_10318_cast, var_10391_cast));
            tensor<string, []> var_10406_equation_0 = const()[name = tensor<string, []>("op_10406_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_10406_cast = einsum(equation = var_10406_equation_0, values = (var_10322_cast, var_10392_cast));
            tensor<string, []> var_10408_equation_0 = const()[name = tensor<string, []>("op_10408_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_10408_cast = einsum(equation = var_10408_equation_0, values = (var_10326_cast, var_10393_cast));
            tensor<string, []> var_10410_equation_0 = const()[name = tensor<string, []>("op_10410_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_10410_cast = einsum(equation = var_10410_equation_0, values = (var_10330_cast, var_10394_cast));
            tensor<string, []> var_10412_equation_0 = const()[name = tensor<string, []>("op_10412_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_10412_cast = einsum(equation = var_10412_equation_0, values = (var_10334_cast, var_10395_cast));
            tensor<string, []> var_10414_equation_0 = const()[name = tensor<string, []>("op_10414_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_10414_cast = einsum(equation = var_10414_equation_0, values = (var_10338_cast, var_10396_cast));
            tensor<string, []> var_10416_equation_0 = const()[name = tensor<string, []>("op_10416_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_10416_cast = einsum(equation = var_10416_equation_0, values = (var_10342_cast, var_10397_cast));
            tensor<string, []> var_10418_equation_0 = const()[name = tensor<string, []>("op_10418_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 1024]> var_10418_cast = einsum(equation = var_10418_equation_0, values = (var_10346_cast, var_10398_cast));
            tensor<bool, []> input_437_interleave_0 = const()[name = tensor<string, []>("input_437_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 640, 1, 1024]> input_437_cast = concat(axis = var_8627, interleave = input_437_interleave_0, values = (var_10400_cast, var_10402_cast, var_10404_cast, var_10406_cast, var_10408_cast, var_10410_cast, var_10412_cast, var_10414_cast, var_10416_cast, var_10418_cast));
            tensor<int32, [2]> var_10424 = const()[name = tensor<string, []>("op_10424"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_10426 = const()[name = tensor<string, []>("op_10426"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_10428_pad_type_0 = const()[name = tensor<string, []>("op_10428_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_10428_pad_0 = const()[name = tensor<string, []>("op_10428_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_2_transformer_blocks_0_attn2_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_transformer_blocks_0_attn2_to_out_0_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(781030208)))];
            tensor<fp16, [640]> up_blocks_2_attentions_2_transformer_blocks_0_attn2_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_transformer_blocks_0_attn2_to_out_0_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(781849472)))];
            tensor<fp16, [2, 640, 1, 1024]> var_10428_cast = conv(bias = up_blocks_2_attentions_2_transformer_blocks_0_attn2_to_out_0_bias_to_fp16, dilations = var_10426, groups = var_8627, pad = var_10428_pad_0, pad_type = var_10428_pad_type_0, strides = var_10424, weight = up_blocks_2_attentions_2_transformer_blocks_0_attn2_to_out_0_weight_to_fp16, x = input_437_cast);
            tensor<fp16, [2, 640, 1, 1024]> inputs_77_cast = add(x = var_10428_cast, y = inputs_75_cast);
            tensor<int32, [1]> var_10432 = const()[name = tensor<string, []>("op_10432"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> channels_mean_77_cast = reduce_mean(axes = var_10432, keep_dims = var_8622, x = inputs_77_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_77_cast = sub(x = inputs_77_cast, y = channels_mean_77_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_sq_77_cast = mul(x = zero_mean_77_cast, y = zero_mean_77_cast);
            tensor<int32, [1]> var_10436 = const()[name = tensor<string, []>("op_10436"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> var_10437_cast = reduce_mean(axes = var_10436, keep_dims = var_8622, x = zero_mean_sq_77_cast);
            tensor<fp16, []> var_10438_to_fp16 = const()[name = tensor<string, []>("op_10438_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 1024]> var_10439_cast = add(x = var_10437_cast, y = var_10438_to_fp16);
            tensor<fp16, []> denom_77_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_77_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 1024]> denom_77_cast = rsqrt(epsilon = denom_77_epsilon_0_to_fp16, x = var_10439_cast);
            tensor<fp16, [2, 640, 1, 1024]> out_77_cast = mul(x = zero_mean_77_cast, y = denom_77_cast);
            tensor<fp16, [1, 640, 1, 1]> var_10443_to_fp16 = const()[name = tensor<string, []>("op_10443_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(781850816)))];
            tensor<fp16, [2, 640, 1, 1024]> var_10444_cast = add(x = out_77_cast, y = var_10443_to_fp16);
            tensor<fp16, [1, 640, 1, 1]> var_10446_to_fp16 = const()[name = tensor<string, []>("op_10446_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(781852160)))];
            tensor<fp16, [2, 640, 1, 1024]> input_439_cast = mul(x = var_10444_cast, y = var_10446_to_fp16);
            tensor<int32, [2]> var_10454 = const()[name = tensor<string, []>("op_10454"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_10456 = const()[name = tensor<string, []>("op_10456"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_10458_pad_type_0 = const()[name = tensor<string, []>("op_10458_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_10458_pad_0 = const()[name = tensor<string, []>("op_10458_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [5120, 640, 1, 1]> up_blocks_2_attentions_2_transformer_blocks_0_ff_net_0_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_transformer_blocks_0_ff_net_0_proj_weight_to_fp16"), val = tensor<fp16, [5120, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(781853504)))];
            tensor<fp16, [5120]> up_blocks_2_attentions_2_transformer_blocks_0_ff_net_0_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_transformer_blocks_0_ff_net_0_proj_bias_to_fp16"), val = tensor<fp16, [5120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(788407168)))];
            tensor<fp16, [2, 5120, 1, 1024]> var_10458_cast = conv(bias = up_blocks_2_attentions_2_transformer_blocks_0_ff_net_0_proj_bias_to_fp16, dilations = var_10456, groups = var_8627, pad = var_10458_pad_0, pad_type = var_10458_pad_type_0, strides = var_10454, weight = up_blocks_2_attentions_2_transformer_blocks_0_ff_net_0_proj_weight_to_fp16, x = input_439_cast);
            tensor<int32, [2]> var_10459_split_sizes_0 = const()[name = tensor<string, []>("op_10459_split_sizes_0"), val = tensor<int32, [2]>([2560, 2560])];
            tensor<int32, []> var_10459_axis_0 = const()[name = tensor<string, []>("op_10459_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [2, 2560, 1, 1024]> var_10459_cast_0, tensor<fp16, [2, 2560, 1, 1024]> var_10459_cast_1 = split(axis = var_10459_axis_0, split_sizes = var_10459_split_sizes_0, x = var_10458_cast);
            tensor<string, []> var_10461_mode_0 = const()[name = tensor<string, []>("op_10461_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [2, 2560, 1, 1024]> var_10461_cast = gelu(mode = var_10461_mode_0, x = var_10459_cast_1);
            tensor<fp16, [2, 2560, 1, 1024]> input_441_cast = mul(x = var_10459_cast_0, y = var_10461_cast);
            tensor<int32, [2]> var_10465 = const()[name = tensor<string, []>("op_10465"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_10467 = const()[name = tensor<string, []>("op_10467"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_10469_pad_type_0 = const()[name = tensor<string, []>("op_10469_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_10469_pad_0 = const()[name = tensor<string, []>("op_10469_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 2560, 1, 1]> up_blocks_2_attentions_2_transformer_blocks_0_ff_net_2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_transformer_blocks_0_ff_net_2_weight_to_fp16"), val = tensor<fp16, [640, 2560, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(788417472)))];
            tensor<fp16, [640]> up_blocks_2_attentions_2_transformer_blocks_0_ff_net_2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_transformer_blocks_0_ff_net_2_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(791694336)))];
            tensor<fp16, [2, 640, 1, 1024]> var_10469_cast = conv(bias = up_blocks_2_attentions_2_transformer_blocks_0_ff_net_2_bias_to_fp16, dilations = var_10467, groups = var_8627, pad = var_10469_pad_0, pad_type = var_10469_pad_type_0, strides = var_10465, weight = up_blocks_2_attentions_2_transformer_blocks_0_ff_net_2_weight_to_fp16, x = input_441_cast);
            tensor<fp16, [2, 640, 1, 1024]> hidden_states_273_cast = add(x = var_10469_cast, y = inputs_77_cast);
            tensor<int32, [4]> var_10471 = const()[name = tensor<string, []>("op_10471"), val = tensor<int32, [4]>([2, 640, 32, 32])];
            tensor<fp16, [2, 640, 32, 32]> input_443_cast = reshape(shape = var_10471, x = hidden_states_273_cast);
            tensor<int32, [2]> var_10475 = const()[name = tensor<string, []>("op_10475"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_10477 = const()[name = tensor<string, []>("op_10477"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_275_pad_type_0 = const()[name = tensor<string, []>("hidden_states_275_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_275_pad_0 = const()[name = tensor<string, []>("hidden_states_275_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_2_proj_out_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_proj_out_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(791695680)))];
            tensor<fp16, [640]> up_blocks_2_attentions_2_proj_out_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_proj_out_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(792514944)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_275_cast = conv(bias = up_blocks_2_attentions_2_proj_out_bias_to_fp16, dilations = var_10477, groups = var_8627, pad = hidden_states_275_pad_0, pad_type = hidden_states_275_pad_type_0, strides = var_10475, weight = up_blocks_2_attentions_2_proj_out_weight_to_fp16, x = input_443_cast);
            tensor<fp16, [2, 640, 32, 32]> input_445_cast = add(x = hidden_states_275_cast, y = hidden_states_263_cast);
            tensor<fp32, []> input_447_scale_factor_height_0 = const()[name = tensor<string, []>("input_447_scale_factor_height_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp32, []> input_447_scale_factor_width_0 = const()[name = tensor<string, []>("input_447_scale_factor_width_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp16, [2, 640, 64, 64]> input_447_cast = upsample_nearest_neighbor(scale_factor_height = input_447_scale_factor_height_0, scale_factor_width = input_447_scale_factor_width_0, x = input_445_cast);
            tensor<int32, [2]> var_10486 = const()[name = tensor<string, []>("op_10486"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_10488 = const()[name = tensor<string, []>("op_10488"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_277_pad_type_0 = const()[name = tensor<string, []>("hidden_states_277_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_277_pad_0 = const()[name = tensor<string, []>("hidden_states_277_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [640, 640, 3, 3]> up_blocks_2_upsamplers_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_upsamplers_0_conv_weight_to_fp16"), val = tensor<fp16, [640, 640, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(792516288)))];
            tensor<fp16, [640]> up_blocks_2_upsamplers_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_upsamplers_0_conv_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(799889152)))];
            tensor<fp16, [2, 640, 64, 64]> hidden_states_277_cast = conv(bias = up_blocks_2_upsamplers_0_conv_bias_to_fp16, dilations = var_10488, groups = var_8627, pad = hidden_states_277_pad_0, pad_type = hidden_states_277_pad_type_0, strides = var_10486, weight = up_blocks_2_upsamplers_0_conv_weight_to_fp16, x = input_447_cast);
            tensor<bool, []> var_10504 = const()[name = tensor<string, []>("op_10504"), val = tensor<bool, []>(true)];
            tensor<int32, []> var_10509 = const()[name = tensor<string, []>("op_10509"), val = tensor<int32, []>(1)];
            tensor<bool, []> input_449_interleave_0 = const()[name = tensor<string, []>("input_449_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 320, 64, 64]> cast_10 = cast(dtype = cast_14_dtype_0, x = input_61_cast);
            tensor<fp16, [2, 960, 64, 64]> input_449_cast = concat(axis = var_10509, interleave = input_449_interleave_0, values = (hidden_states_277_cast, cast_10));
            tensor<int32, [5]> reshape_204_shape_0 = const()[name = tensor<string, []>("reshape_204_shape_0"), val = tensor<int32, [5]>([2, 32, 30, 64, 64])];
            tensor<fp16, [2, 32, 30, 64, 64]> reshape_204_cast = reshape(shape = reshape_204_shape_0, x = input_449_cast);
            tensor<int32, [3]> reduce_mean_153_axes_0 = const()[name = tensor<string, []>("reduce_mean_153_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_153_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_153_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_153_cast = reduce_mean(axes = reduce_mean_153_axes_0, keep_dims = reduce_mean_153_keep_dims_0, x = reshape_204_cast);
            tensor<fp16, [2, 32, 30, 64, 64]> sub_102_cast = sub(x = reshape_204_cast, y = reduce_mean_153_cast);
            tensor<fp16, [2, 32, 30, 64, 64]> square_51_cast = square(x = sub_102_cast);
            tensor<int32, [3]> reduce_mean_155_axes_0 = const()[name = tensor<string, []>("reduce_mean_155_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_155_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_155_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_155_cast = reduce_mean(axes = reduce_mean_155_axes_0, keep_dims = reduce_mean_155_keep_dims_0, x = square_51_cast);
            tensor<fp16, []> add_102_y_0_to_fp16 = const()[name = tensor<string, []>("add_102_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_102_cast = add(x = reduce_mean_155_cast, y = add_102_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_51_cast = sqrt(x = add_102_cast);
            tensor<fp16, [2, 32, 30, 64, 64]> real_div_51_cast = real_div(x = sub_102_cast, y = sqrt_51_cast);
            tensor<int32, [4]> reshape_205_shape_0 = const()[name = tensor<string, []>("reshape_205_shape_0"), val = tensor<int32, [4]>([2, 960, 64, 64])];
            tensor<fp16, [2, 960, 64, 64]> reshape_205_cast = reshape(shape = reshape_205_shape_0, x = real_div_51_cast);
            tensor<fp16, [960]> add_103_mean_0_to_fp16 = const()[name = tensor<string, []>("add_103_mean_0_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(799890496)))];
            tensor<fp16, [960]> add_103_variance_0_to_fp16 = const()[name = tensor<string, []>("add_103_variance_0_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(799892480)))];
            tensor<fp16, [960]> add_103_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_103_gamma_0_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(799894464)))];
            tensor<fp16, [960]> add_103_beta_0_to_fp16 = const()[name = tensor<string, []>("add_103_beta_0_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(799896448)))];
            tensor<fp16, []> add_103_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_103_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 960, 64, 64]> add_103_cast = batch_norm(beta = add_103_beta_0_to_fp16, epsilon = add_103_epsilon_0_to_fp16, gamma = add_103_gamma_0_to_fp16, mean = add_103_mean_0_to_fp16, variance = add_103_variance_0_to_fp16, x = reshape_205_cast);
            tensor<fp16, [2, 960, 64, 64]> input_453_cast = silu(x = add_103_cast);
            tensor<int32, [2]> var_10536 = const()[name = tensor<string, []>("op_10536"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_10538 = const()[name = tensor<string, []>("op_10538"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_279_pad_type_0 = const()[name = tensor<string, []>("hidden_states_279_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_279_pad_0 = const()[name = tensor<string, []>("hidden_states_279_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [320, 960, 3, 3]> up_blocks_3_resnets_0_conv1_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_0_conv1_weight_to_fp16"), val = tensor<fp16, [320, 960, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(799898432)))];
            tensor<fp16, [320]> up_blocks_3_resnets_0_conv1_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_0_conv1_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(805428096)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_279_cast = conv(bias = up_blocks_3_resnets_0_conv1_bias_to_fp16, dilations = var_10538, groups = var_10509, pad = hidden_states_279_pad_0, pad_type = hidden_states_279_pad_type_0, strides = var_10536, weight = up_blocks_3_resnets_0_conv1_weight_to_fp16, x = input_453_cast);
            tensor<int32, [2]> var_10544 = const()[name = tensor<string, []>("op_10544"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_10546 = const()[name = tensor<string, []>("op_10546"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_39_pad_type_0 = const()[name = tensor<string, []>("temb_39_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_39_pad_0 = const()[name = tensor<string, []>("temb_39_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 1280, 1, 1]> up_blocks_3_resnets_0_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_0_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [320, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(805428800)))];
            tensor<fp16, [320]> up_blocks_3_resnets_0_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_0_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(806248064)))];
            tensor<fp16, [2, 320, 1, 1]> temb_39_cast = conv(bias = up_blocks_3_resnets_0_time_emb_proj_bias_to_fp16, dilations = var_10546, groups = var_10509, pad = temb_39_pad_0, pad_type = temb_39_pad_type_0, strides = var_10544, weight = up_blocks_3_resnets_0_time_emb_proj_weight_to_fp16, x = cast_12);
            tensor<fp16, [2, 320, 64, 64]> input_457_cast = add(x = hidden_states_279_cast, y = temb_39_cast);
            tensor<int32, [5]> reshape_208_shape_0 = const()[name = tensor<string, []>("reshape_208_shape_0"), val = tensor<int32, [5]>([2, 32, 10, 64, 64])];
            tensor<fp16, [2, 32, 10, 64, 64]> reshape_208_cast = reshape(shape = reshape_208_shape_0, x = input_457_cast);
            tensor<int32, [3]> reduce_mean_156_axes_0 = const()[name = tensor<string, []>("reduce_mean_156_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_156_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_156_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_156_cast = reduce_mean(axes = reduce_mean_156_axes_0, keep_dims = reduce_mean_156_keep_dims_0, x = reshape_208_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> sub_104_cast = sub(x = reshape_208_cast, y = reduce_mean_156_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> square_52_cast = square(x = sub_104_cast);
            tensor<int32, [3]> reduce_mean_158_axes_0 = const()[name = tensor<string, []>("reduce_mean_158_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_158_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_158_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_158_cast = reduce_mean(axes = reduce_mean_158_axes_0, keep_dims = reduce_mean_158_keep_dims_0, x = square_52_cast);
            tensor<fp16, []> add_104_y_0_to_fp16 = const()[name = tensor<string, []>("add_104_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_104_cast = add(x = reduce_mean_158_cast, y = add_104_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_52_cast = sqrt(x = add_104_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> real_div_52_cast = real_div(x = sub_104_cast, y = sqrt_52_cast);
            tensor<int32, [4]> reshape_209_shape_0 = const()[name = tensor<string, []>("reshape_209_shape_0"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> reshape_209_cast = reshape(shape = reshape_209_shape_0, x = real_div_52_cast);
            tensor<fp16, [320]> add_105_mean_0_to_fp16 = const()[name = tensor<string, []>("add_105_mean_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(806248768)))];
            tensor<fp16, [320]> add_105_variance_0_to_fp16 = const()[name = tensor<string, []>("add_105_variance_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(806249472)))];
            tensor<fp16, [320]> add_105_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_105_gamma_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(806250176)))];
            tensor<fp16, [320]> add_105_beta_0_to_fp16 = const()[name = tensor<string, []>("add_105_beta_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(806250880)))];
            tensor<fp16, []> add_105_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_105_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 320, 64, 64]> add_105_cast = batch_norm(beta = add_105_beta_0_to_fp16, epsilon = add_105_epsilon_0_to_fp16, gamma = add_105_gamma_0_to_fp16, mean = add_105_mean_0_to_fp16, variance = add_105_variance_0_to_fp16, x = reshape_209_cast);
            tensor<fp16, [2, 320, 64, 64]> input_461_cast = silu(x = add_105_cast);
            tensor<int32, [2]> var_10556 = const()[name = tensor<string, []>("op_10556"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_10558 = const()[name = tensor<string, []>("op_10558"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_281_pad_type_0 = const()[name = tensor<string, []>("hidden_states_281_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_281_pad_0 = const()[name = tensor<string, []>("hidden_states_281_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [320, 320, 3, 3]> up_blocks_3_resnets_0_conv2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_0_conv2_weight_to_fp16"), val = tensor<fp16, [320, 320, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(806251584)))];
            tensor<fp16, [320]> up_blocks_3_resnets_0_conv2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_0_conv2_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(808094848)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_281_cast = conv(bias = up_blocks_3_resnets_0_conv2_bias_to_fp16, dilations = var_10558, groups = var_10509, pad = hidden_states_281_pad_0, pad_type = hidden_states_281_pad_type_0, strides = var_10556, weight = up_blocks_3_resnets_0_conv2_weight_to_fp16, x = input_461_cast);
            tensor<int32, [2]> var_10563 = const()[name = tensor<string, []>("op_10563"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_10565 = const()[name = tensor<string, []>("op_10565"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_23_pad_type_0 = const()[name = tensor<string, []>("x_23_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_23_pad_0 = const()[name = tensor<string, []>("x_23_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 960, 1, 1]> up_blocks_3_resnets_0_conv_shortcut_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_0_conv_shortcut_weight_to_fp16"), val = tensor<fp16, [320, 960, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(808095552)))];
            tensor<fp16, [320]> up_blocks_3_resnets_0_conv_shortcut_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_0_conv_shortcut_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(808710016)))];
            tensor<fp16, [2, 320, 64, 64]> x_23_cast = conv(bias = up_blocks_3_resnets_0_conv_shortcut_bias_to_fp16, dilations = var_10565, groups = var_10509, pad = x_23_pad_0, pad_type = x_23_pad_type_0, strides = var_10563, weight = up_blocks_3_resnets_0_conv_shortcut_weight_to_fp16, x = input_449_cast);
            tensor<fp16, [2, 320, 64, 64]> hidden_states_283_cast = add(x = x_23_cast, y = hidden_states_281_cast);
            tensor<int32, [5]> reshape_212_shape_0 = const()[name = tensor<string, []>("reshape_212_shape_0"), val = tensor<int32, [5]>([2, 32, 10, 64, 64])];
            tensor<fp16, [2, 32, 10, 64, 64]> reshape_212_cast = reshape(shape = reshape_212_shape_0, x = hidden_states_283_cast);
            tensor<int32, [3]> reduce_mean_159_axes_0 = const()[name = tensor<string, []>("reduce_mean_159_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_159_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_159_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_159_cast = reduce_mean(axes = reduce_mean_159_axes_0, keep_dims = reduce_mean_159_keep_dims_0, x = reshape_212_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> sub_106_cast = sub(x = reshape_212_cast, y = reduce_mean_159_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> square_53_cast = square(x = sub_106_cast);
            tensor<int32, [3]> reduce_mean_161_axes_0 = const()[name = tensor<string, []>("reduce_mean_161_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_161_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_161_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_161_cast = reduce_mean(axes = reduce_mean_161_axes_0, keep_dims = reduce_mean_161_keep_dims_0, x = square_53_cast);
            tensor<fp16, []> add_106_y_0_to_fp16 = const()[name = tensor<string, []>("add_106_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_106_cast = add(x = reduce_mean_161_cast, y = add_106_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_53_cast = sqrt(x = add_106_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> real_div_53_cast = real_div(x = sub_106_cast, y = sqrt_53_cast);
            tensor<int32, [4]> reshape_213_shape_0 = const()[name = tensor<string, []>("reshape_213_shape_0"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> reshape_213_cast = reshape(shape = reshape_213_shape_0, x = real_div_53_cast);
            tensor<fp16, [320]> add_107_mean_0_to_fp16 = const()[name = tensor<string, []>("add_107_mean_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(808710720)))];
            tensor<fp16, [320]> add_107_variance_0_to_fp16 = const()[name = tensor<string, []>("add_107_variance_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(808711424)))];
            tensor<fp16, [320]> add_107_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_107_gamma_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(808712128)))];
            tensor<fp16, [320]> add_107_beta_0_to_fp16 = const()[name = tensor<string, []>("add_107_beta_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(808712832)))];
            tensor<fp16, []> add_107_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_107_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 320, 64, 64]> add_107_cast = batch_norm(beta = add_107_beta_0_to_fp16, epsilon = add_107_epsilon_0_to_fp16, gamma = add_107_gamma_0_to_fp16, mean = add_107_mean_0_to_fp16, variance = add_107_variance_0_to_fp16, x = reshape_213_cast);
            tensor<int32, [2]> var_10585 = const()[name = tensor<string, []>("op_10585"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_10587 = const()[name = tensor<string, []>("op_10587"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_285_pad_type_0 = const()[name = tensor<string, []>("hidden_states_285_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_285_pad_0 = const()[name = tensor<string, []>("hidden_states_285_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_0_proj_in_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_proj_in_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(808713536)))];
            tensor<fp16, [320]> up_blocks_3_attentions_0_proj_in_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_proj_in_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(808918400)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_285_cast = conv(bias = up_blocks_3_attentions_0_proj_in_bias_to_fp16, dilations = var_10587, groups = var_10509, pad = hidden_states_285_pad_0, pad_type = hidden_states_285_pad_type_0, strides = var_10585, weight = up_blocks_3_attentions_0_proj_in_weight_to_fp16, x = add_107_cast);
            tensor<int32, [4]> var_10592 = const()[name = tensor<string, []>("op_10592"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<fp16, [2, 320, 1, 4096]> inputs_79_cast = reshape(shape = var_10592, x = hidden_states_285_cast);
            tensor<int32, [1]> var_10602 = const()[name = tensor<string, []>("op_10602"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> channels_mean_79_cast = reduce_mean(axes = var_10602, keep_dims = var_10504, x = inputs_79_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_79_cast = sub(x = inputs_79_cast, y = channels_mean_79_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_sq_79_cast = mul(x = zero_mean_79_cast, y = zero_mean_79_cast);
            tensor<int32, [1]> var_10606 = const()[name = tensor<string, []>("op_10606"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> var_10607_cast = reduce_mean(axes = var_10606, keep_dims = var_10504, x = zero_mean_sq_79_cast);
            tensor<fp16, []> var_10608_to_fp16 = const()[name = tensor<string, []>("op_10608_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 4096]> var_10609_cast = add(x = var_10607_cast, y = var_10608_to_fp16);
            tensor<fp16, []> denom_79_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_79_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 4096]> denom_79_cast = rsqrt(epsilon = denom_79_epsilon_0_to_fp16, x = var_10609_cast);
            tensor<fp16, [2, 320, 1, 4096]> out_79_cast = mul(x = zero_mean_79_cast, y = denom_79_cast);
            tensor<fp16, [1, 320, 1, 1]> var_10613_to_fp16 = const()[name = tensor<string, []>("op_10613_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(808919104)))];
            tensor<fp16, [2, 320, 1, 4096]> var_10614_cast = add(x = out_79_cast, y = var_10613_to_fp16);
            tensor<fp16, [1, 320, 1, 1]> var_10616_to_fp16 = const()[name = tensor<string, []>("op_10616_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(808919808)))];
            tensor<fp16, [2, 320, 1, 4096]> hidden_states_287_cast = mul(x = var_10614_cast, y = var_10616_to_fp16);
            tensor<int32, [2]> var_10623 = const()[name = tensor<string, []>("op_10623"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_10625 = const()[name = tensor<string, []>("op_10625"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_53_pad_type_0 = const()[name = tensor<string, []>("q_53_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_53_pad_0 = const()[name = tensor<string, []>("q_53_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(808920512)))];
            tensor<fp16, [2, 320, 1, 4096]> q_53_cast = conv(dilations = var_10625, groups = var_10509, pad = q_53_pad_0, pad_type = q_53_pad_type_0, strides = var_10623, weight = up_blocks_3_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16, x = hidden_states_287_cast);
            tensor<int32, [2]> var_10629 = const()[name = tensor<string, []>("op_10629"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_10631 = const()[name = tensor<string, []>("op_10631"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_105_pad_type_0 = const()[name = tensor<string, []>("k_105_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_105_pad_0 = const()[name = tensor<string, []>("k_105_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(809125376)))];
            tensor<fp16, [2, 320, 1, 4096]> k_105_cast = conv(dilations = var_10631, groups = var_10509, pad = k_105_pad_0, pad_type = k_105_pad_type_0, strides = var_10629, weight = up_blocks_3_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16, x = hidden_states_287_cast);
            tensor<int32, [2]> var_10635 = const()[name = tensor<string, []>("op_10635"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_10637 = const()[name = tensor<string, []>("op_10637"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_53_pad_type_0 = const()[name = tensor<string, []>("v_53_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_53_pad_0 = const()[name = tensor<string, []>("v_53_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(809330240)))];
            tensor<fp16, [2, 320, 1, 4096]> v_53_cast = conv(dilations = var_10637, groups = var_10509, pad = v_53_pad_0, pad_type = v_53_pad_type_0, strides = var_10635, weight = up_blocks_3_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16, x = hidden_states_287_cast);
            tensor<int32, [4]> var_10641_begin_0 = const()[name = tensor<string, []>("op_10641_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_10641_end_0 = const()[name = tensor<string, []>("op_10641_end_0"), val = tensor<int32, [4]>([2, 64, 1, 4096])];
            tensor<bool, [4]> var_10641_end_mask_0 = const()[name = tensor<string, []>("op_10641_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_10641_cast = slice_by_index(begin = var_10641_begin_0, end = var_10641_end_0, end_mask = var_10641_end_mask_0, x = q_53_cast);
            tensor<int32, [4]> var_10645_begin_0 = const()[name = tensor<string, []>("op_10645_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_10645_end_0 = const()[name = tensor<string, []>("op_10645_end_0"), val = tensor<int32, [4]>([2, 128, 1, 4096])];
            tensor<bool, [4]> var_10645_end_mask_0 = const()[name = tensor<string, []>("op_10645_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_10645_cast = slice_by_index(begin = var_10645_begin_0, end = var_10645_end_0, end_mask = var_10645_end_mask_0, x = q_53_cast);
            tensor<int32, [4]> var_10649_begin_0 = const()[name = tensor<string, []>("op_10649_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_10649_end_0 = const()[name = tensor<string, []>("op_10649_end_0"), val = tensor<int32, [4]>([2, 192, 1, 4096])];
            tensor<bool, [4]> var_10649_end_mask_0 = const()[name = tensor<string, []>("op_10649_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_10649_cast = slice_by_index(begin = var_10649_begin_0, end = var_10649_end_0, end_mask = var_10649_end_mask_0, x = q_53_cast);
            tensor<int32, [4]> var_10653_begin_0 = const()[name = tensor<string, []>("op_10653_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_10653_end_0 = const()[name = tensor<string, []>("op_10653_end_0"), val = tensor<int32, [4]>([2, 256, 1, 4096])];
            tensor<bool, [4]> var_10653_end_mask_0 = const()[name = tensor<string, []>("op_10653_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_10653_cast = slice_by_index(begin = var_10653_begin_0, end = var_10653_end_0, end_mask = var_10653_end_mask_0, x = q_53_cast);
            tensor<int32, [4]> var_10657_begin_0 = const()[name = tensor<string, []>("op_10657_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_10657_end_0 = const()[name = tensor<string, []>("op_10657_end_0"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<bool, [4]> var_10657_end_mask_0 = const()[name = tensor<string, []>("op_10657_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_10657_cast = slice_by_index(begin = var_10657_begin_0, end = var_10657_end_0, end_mask = var_10657_end_mask_0, x = q_53_cast);
            tensor<int32, [4]> k_107_perm_0 = const()[name = tensor<string, []>("k_107_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_10664_begin_0 = const()[name = tensor<string, []>("op_10664_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_10664_end_0 = const()[name = tensor<string, []>("op_10664_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 64])];
            tensor<bool, [4]> var_10664_end_mask_0 = const()[name = tensor<string, []>("op_10664_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 320]> transpose_5 = transpose(perm = k_107_perm_0, x = k_105_cast);
            tensor<fp16, [2, 4096, 1, 64]> var_10664_cast = slice_by_index(begin = var_10664_begin_0, end = var_10664_end_0, end_mask = var_10664_end_mask_0, x = transpose_5);
            tensor<int32, [4]> var_10668_begin_0 = const()[name = tensor<string, []>("op_10668_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 64])];
            tensor<int32, [4]> var_10668_end_0 = const()[name = tensor<string, []>("op_10668_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 128])];
            tensor<bool, [4]> var_10668_end_mask_0 = const()[name = tensor<string, []>("op_10668_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 64]> var_10668_cast = slice_by_index(begin = var_10668_begin_0, end = var_10668_end_0, end_mask = var_10668_end_mask_0, x = transpose_5);
            tensor<int32, [4]> var_10672_begin_0 = const()[name = tensor<string, []>("op_10672_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 128])];
            tensor<int32, [4]> var_10672_end_0 = const()[name = tensor<string, []>("op_10672_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 192])];
            tensor<bool, [4]> var_10672_end_mask_0 = const()[name = tensor<string, []>("op_10672_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 64]> var_10672_cast = slice_by_index(begin = var_10672_begin_0, end = var_10672_end_0, end_mask = var_10672_end_mask_0, x = transpose_5);
            tensor<int32, [4]> var_10676_begin_0 = const()[name = tensor<string, []>("op_10676_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 192])];
            tensor<int32, [4]> var_10676_end_0 = const()[name = tensor<string, []>("op_10676_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 256])];
            tensor<bool, [4]> var_10676_end_mask_0 = const()[name = tensor<string, []>("op_10676_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 64]> var_10676_cast = slice_by_index(begin = var_10676_begin_0, end = var_10676_end_0, end_mask = var_10676_end_mask_0, x = transpose_5);
            tensor<int32, [4]> var_10680_begin_0 = const()[name = tensor<string, []>("op_10680_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 256])];
            tensor<int32, [4]> var_10680_end_0 = const()[name = tensor<string, []>("op_10680_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 320])];
            tensor<bool, [4]> var_10680_end_mask_0 = const()[name = tensor<string, []>("op_10680_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 64]> var_10680_cast = slice_by_index(begin = var_10680_begin_0, end = var_10680_end_0, end_mask = var_10680_end_mask_0, x = transpose_5);
            tensor<int32, [4]> var_10682_begin_0 = const()[name = tensor<string, []>("op_10682_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_10682_end_0 = const()[name = tensor<string, []>("op_10682_end_0"), val = tensor<int32, [4]>([2, 64, 1, 4096])];
            tensor<bool, [4]> var_10682_end_mask_0 = const()[name = tensor<string, []>("op_10682_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_10682_cast = slice_by_index(begin = var_10682_begin_0, end = var_10682_end_0, end_mask = var_10682_end_mask_0, x = v_53_cast);
            tensor<int32, [4]> var_10686_begin_0 = const()[name = tensor<string, []>("op_10686_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_10686_end_0 = const()[name = tensor<string, []>("op_10686_end_0"), val = tensor<int32, [4]>([2, 128, 1, 4096])];
            tensor<bool, [4]> var_10686_end_mask_0 = const()[name = tensor<string, []>("op_10686_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_10686_cast = slice_by_index(begin = var_10686_begin_0, end = var_10686_end_0, end_mask = var_10686_end_mask_0, x = v_53_cast);
            tensor<int32, [4]> var_10690_begin_0 = const()[name = tensor<string, []>("op_10690_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_10690_end_0 = const()[name = tensor<string, []>("op_10690_end_0"), val = tensor<int32, [4]>([2, 192, 1, 4096])];
            tensor<bool, [4]> var_10690_end_mask_0 = const()[name = tensor<string, []>("op_10690_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_10690_cast = slice_by_index(begin = var_10690_begin_0, end = var_10690_end_0, end_mask = var_10690_end_mask_0, x = v_53_cast);
            tensor<int32, [4]> var_10694_begin_0 = const()[name = tensor<string, []>("op_10694_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_10694_end_0 = const()[name = tensor<string, []>("op_10694_end_0"), val = tensor<int32, [4]>([2, 256, 1, 4096])];
            tensor<bool, [4]> var_10694_end_mask_0 = const()[name = tensor<string, []>("op_10694_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_10694_cast = slice_by_index(begin = var_10694_begin_0, end = var_10694_end_0, end_mask = var_10694_end_mask_0, x = v_53_cast);
            tensor<int32, [4]> var_10698_begin_0 = const()[name = tensor<string, []>("op_10698_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_10698_end_0 = const()[name = tensor<string, []>("op_10698_end_0"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<bool, [4]> var_10698_end_mask_0 = const()[name = tensor<string, []>("op_10698_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_10698_cast = slice_by_index(begin = var_10698_begin_0, end = var_10698_end_0, end_mask = var_10698_end_mask_0, x = v_53_cast);
            tensor<string, []> var_10702_equation_0 = const()[name = tensor<string, []>("op_10702_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_10702_cast = einsum(equation = var_10702_equation_0, values = (var_10664_cast, var_10641_cast));
            tensor<fp16, []> var_10703_to_fp16 = const()[name = tensor<string, []>("op_10703_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_721_cast = mul(x = var_10702_cast, y = var_10703_to_fp16);
            tensor<string, []> var_10706_equation_0 = const()[name = tensor<string, []>("op_10706_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_10706_cast = einsum(equation = var_10706_equation_0, values = (var_10668_cast, var_10645_cast));
            tensor<fp16, []> var_10707_to_fp16 = const()[name = tensor<string, []>("op_10707_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_723_cast = mul(x = var_10706_cast, y = var_10707_to_fp16);
            tensor<string, []> var_10710_equation_0 = const()[name = tensor<string, []>("op_10710_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_10710_cast = einsum(equation = var_10710_equation_0, values = (var_10672_cast, var_10649_cast));
            tensor<fp16, []> var_10711_to_fp16 = const()[name = tensor<string, []>("op_10711_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_725_cast = mul(x = var_10710_cast, y = var_10711_to_fp16);
            tensor<string, []> var_10714_equation_0 = const()[name = tensor<string, []>("op_10714_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_10714_cast = einsum(equation = var_10714_equation_0, values = (var_10676_cast, var_10653_cast));
            tensor<fp16, []> var_10715_to_fp16 = const()[name = tensor<string, []>("op_10715_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_727_cast = mul(x = var_10714_cast, y = var_10715_to_fp16);
            tensor<string, []> var_10718_equation_0 = const()[name = tensor<string, []>("op_10718_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_10718_cast = einsum(equation = var_10718_equation_0, values = (var_10680_cast, var_10657_cast));
            tensor<fp16, []> var_10719_to_fp16 = const()[name = tensor<string, []>("op_10719_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_729_cast = mul(x = var_10718_cast, y = var_10719_to_fp16);
            tensor<fp16, [2, 4096, 1, 4096]> var_10721_cast = softmax(axis = var_10509, x = aw_721_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_10722_cast = softmax(axis = var_10509, x = aw_723_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_10723_cast = softmax(axis = var_10509, x = aw_725_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_10724_cast = softmax(axis = var_10509, x = aw_727_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_10725_cast = softmax(axis = var_10509, x = aw_729_cast);
            tensor<string, []> var_10727_equation_0 = const()[name = tensor<string, []>("op_10727_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_10727_cast = einsum(equation = var_10727_equation_0, values = (var_10682_cast, var_10721_cast));
            tensor<string, []> var_10729_equation_0 = const()[name = tensor<string, []>("op_10729_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_10729_cast = einsum(equation = var_10729_equation_0, values = (var_10686_cast, var_10722_cast));
            tensor<string, []> var_10731_equation_0 = const()[name = tensor<string, []>("op_10731_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_10731_cast = einsum(equation = var_10731_equation_0, values = (var_10690_cast, var_10723_cast));
            tensor<string, []> var_10733_equation_0 = const()[name = tensor<string, []>("op_10733_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_10733_cast = einsum(equation = var_10733_equation_0, values = (var_10694_cast, var_10724_cast));
            tensor<string, []> var_10735_equation_0 = const()[name = tensor<string, []>("op_10735_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_10735_cast = einsum(equation = var_10735_equation_0, values = (var_10698_cast, var_10725_cast));
            tensor<bool, []> input_465_interleave_0 = const()[name = tensor<string, []>("input_465_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 320, 1, 4096]> input_465_cast = concat(axis = var_10509, interleave = input_465_interleave_0, values = (var_10727_cast, var_10729_cast, var_10731_cast, var_10733_cast, var_10735_cast));
            tensor<int32, [2]> var_10741 = const()[name = tensor<string, []>("op_10741"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_10743 = const()[name = tensor<string, []>("op_10743"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_10745_pad_type_0 = const()[name = tensor<string, []>("op_10745_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_10745_pad_0 = const()[name = tensor<string, []>("op_10745_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(809535104)))];
            tensor<fp16, [320]> up_blocks_3_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(809739968)))];
            tensor<fp16, [2, 320, 1, 4096]> var_10745_cast = conv(bias = up_blocks_3_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16, dilations = var_10743, groups = var_10509, pad = var_10745_pad_0, pad_type = var_10745_pad_type_0, strides = var_10741, weight = up_blocks_3_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16, x = input_465_cast);
            tensor<fp16, [2, 320, 1, 4096]> inputs_81_cast = add(x = var_10745_cast, y = inputs_79_cast);
            tensor<int32, [1]> var_10749 = const()[name = tensor<string, []>("op_10749"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> channels_mean_81_cast = reduce_mean(axes = var_10749, keep_dims = var_10504, x = inputs_81_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_81_cast = sub(x = inputs_81_cast, y = channels_mean_81_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_sq_81_cast = mul(x = zero_mean_81_cast, y = zero_mean_81_cast);
            tensor<int32, [1]> var_10753 = const()[name = tensor<string, []>("op_10753"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> var_10754_cast = reduce_mean(axes = var_10753, keep_dims = var_10504, x = zero_mean_sq_81_cast);
            tensor<fp16, []> var_10755_to_fp16 = const()[name = tensor<string, []>("op_10755_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 4096]> var_10756_cast = add(x = var_10754_cast, y = var_10755_to_fp16);
            tensor<fp16, []> denom_81_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_81_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 4096]> denom_81_cast = rsqrt(epsilon = denom_81_epsilon_0_to_fp16, x = var_10756_cast);
            tensor<fp16, [2, 320, 1, 4096]> out_81_cast = mul(x = zero_mean_81_cast, y = denom_81_cast);
            tensor<fp16, [1, 320, 1, 1]> var_10760_to_fp16 = const()[name = tensor<string, []>("op_10760_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(809740672)))];
            tensor<fp16, [2, 320, 1, 4096]> var_10761_cast = add(x = out_81_cast, y = var_10760_to_fp16);
            tensor<fp16, [1, 320, 1, 1]> var_10763_to_fp16 = const()[name = tensor<string, []>("op_10763_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(809741376)))];
            tensor<fp16, [2, 320, 1, 4096]> hidden_states_289_cast = mul(x = var_10761_cast, y = var_10763_to_fp16);
            tensor<int32, [2]> var_10770 = const()[name = tensor<string, []>("op_10770"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_10772 = const()[name = tensor<string, []>("op_10772"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_55_pad_type_0 = const()[name = tensor<string, []>("q_55_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_55_pad_0 = const()[name = tensor<string, []>("q_55_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(809742080)))];
            tensor<fp16, [2, 320, 1, 4096]> q_55_cast = conv(dilations = var_10772, groups = var_10509, pad = q_55_pad_0, pad_type = q_55_pad_type_0, strides = var_10770, weight = up_blocks_3_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16, x = hidden_states_289_cast);
            tensor<int32, [2]> var_10776 = const()[name = tensor<string, []>("op_10776"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_10778 = const()[name = tensor<string, []>("op_10778"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_109_pad_type_0 = const()[name = tensor<string, []>("k_109_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_109_pad_0 = const()[name = tensor<string, []>("k_109_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 1024, 1, 1]> up_blocks_3_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16"), val = tensor<fp16, [320, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(809946944)))];
            tensor<fp16, [2, 320, 1, 77]> k_109_cast = conv(dilations = var_10778, groups = var_10509, pad = k_109_pad_0, pad_type = k_109_pad_type_0, strides = var_10776, weight = up_blocks_3_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [2]> var_10782 = const()[name = tensor<string, []>("op_10782"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_10784 = const()[name = tensor<string, []>("op_10784"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_55_pad_type_0 = const()[name = tensor<string, []>("v_55_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_55_pad_0 = const()[name = tensor<string, []>("v_55_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 1024, 1, 1]> up_blocks_3_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16"), val = tensor<fp16, [320, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(810602368)))];
            tensor<fp16, [2, 320, 1, 77]> v_55_cast = conv(dilations = var_10784, groups = var_10509, pad = v_55_pad_0, pad_type = v_55_pad_type_0, strides = var_10782, weight = up_blocks_3_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [4]> var_10788_begin_0 = const()[name = tensor<string, []>("op_10788_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_10788_end_0 = const()[name = tensor<string, []>("op_10788_end_0"), val = tensor<int32, [4]>([2, 64, 1, 4096])];
            tensor<bool, [4]> var_10788_end_mask_0 = const()[name = tensor<string, []>("op_10788_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_10788_cast = slice_by_index(begin = var_10788_begin_0, end = var_10788_end_0, end_mask = var_10788_end_mask_0, x = q_55_cast);
            tensor<int32, [4]> var_10792_begin_0 = const()[name = tensor<string, []>("op_10792_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_10792_end_0 = const()[name = tensor<string, []>("op_10792_end_0"), val = tensor<int32, [4]>([2, 128, 1, 4096])];
            tensor<bool, [4]> var_10792_end_mask_0 = const()[name = tensor<string, []>("op_10792_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_10792_cast = slice_by_index(begin = var_10792_begin_0, end = var_10792_end_0, end_mask = var_10792_end_mask_0, x = q_55_cast);
            tensor<int32, [4]> var_10796_begin_0 = const()[name = tensor<string, []>("op_10796_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_10796_end_0 = const()[name = tensor<string, []>("op_10796_end_0"), val = tensor<int32, [4]>([2, 192, 1, 4096])];
            tensor<bool, [4]> var_10796_end_mask_0 = const()[name = tensor<string, []>("op_10796_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_10796_cast = slice_by_index(begin = var_10796_begin_0, end = var_10796_end_0, end_mask = var_10796_end_mask_0, x = q_55_cast);
            tensor<int32, [4]> var_10800_begin_0 = const()[name = tensor<string, []>("op_10800_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_10800_end_0 = const()[name = tensor<string, []>("op_10800_end_0"), val = tensor<int32, [4]>([2, 256, 1, 4096])];
            tensor<bool, [4]> var_10800_end_mask_0 = const()[name = tensor<string, []>("op_10800_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_10800_cast = slice_by_index(begin = var_10800_begin_0, end = var_10800_end_0, end_mask = var_10800_end_mask_0, x = q_55_cast);
            tensor<int32, [4]> var_10804_begin_0 = const()[name = tensor<string, []>("op_10804_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_10804_end_0 = const()[name = tensor<string, []>("op_10804_end_0"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<bool, [4]> var_10804_end_mask_0 = const()[name = tensor<string, []>("op_10804_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_10804_cast = slice_by_index(begin = var_10804_begin_0, end = var_10804_end_0, end_mask = var_10804_end_mask_0, x = q_55_cast);
            tensor<int32, [4]> k_111_perm_0 = const()[name = tensor<string, []>("k_111_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_10811_begin_0 = const()[name = tensor<string, []>("op_10811_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_10811_end_0 = const()[name = tensor<string, []>("op_10811_end_0"), val = tensor<int32, [4]>([2, 77, 1, 64])];
            tensor<bool, [4]> var_10811_end_mask_0 = const()[name = tensor<string, []>("op_10811_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 320]> transpose_4 = transpose(perm = k_111_perm_0, x = k_109_cast);
            tensor<fp16, [2, 77, 1, 64]> var_10811_cast = slice_by_index(begin = var_10811_begin_0, end = var_10811_end_0, end_mask = var_10811_end_mask_0, x = transpose_4);
            tensor<int32, [4]> var_10815_begin_0 = const()[name = tensor<string, []>("op_10815_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 64])];
            tensor<int32, [4]> var_10815_end_0 = const()[name = tensor<string, []>("op_10815_end_0"), val = tensor<int32, [4]>([2, 77, 1, 128])];
            tensor<bool, [4]> var_10815_end_mask_0 = const()[name = tensor<string, []>("op_10815_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_10815_cast = slice_by_index(begin = var_10815_begin_0, end = var_10815_end_0, end_mask = var_10815_end_mask_0, x = transpose_4);
            tensor<int32, [4]> var_10819_begin_0 = const()[name = tensor<string, []>("op_10819_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 128])];
            tensor<int32, [4]> var_10819_end_0 = const()[name = tensor<string, []>("op_10819_end_0"), val = tensor<int32, [4]>([2, 77, 1, 192])];
            tensor<bool, [4]> var_10819_end_mask_0 = const()[name = tensor<string, []>("op_10819_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_10819_cast = slice_by_index(begin = var_10819_begin_0, end = var_10819_end_0, end_mask = var_10819_end_mask_0, x = transpose_4);
            tensor<int32, [4]> var_10823_begin_0 = const()[name = tensor<string, []>("op_10823_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 192])];
            tensor<int32, [4]> var_10823_end_0 = const()[name = tensor<string, []>("op_10823_end_0"), val = tensor<int32, [4]>([2, 77, 1, 256])];
            tensor<bool, [4]> var_10823_end_mask_0 = const()[name = tensor<string, []>("op_10823_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_10823_cast = slice_by_index(begin = var_10823_begin_0, end = var_10823_end_0, end_mask = var_10823_end_mask_0, x = transpose_4);
            tensor<int32, [4]> var_10827_begin_0 = const()[name = tensor<string, []>("op_10827_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 256])];
            tensor<int32, [4]> var_10827_end_0 = const()[name = tensor<string, []>("op_10827_end_0"), val = tensor<int32, [4]>([2, 77, 1, 320])];
            tensor<bool, [4]> var_10827_end_mask_0 = const()[name = tensor<string, []>("op_10827_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_10827_cast = slice_by_index(begin = var_10827_begin_0, end = var_10827_end_0, end_mask = var_10827_end_mask_0, x = transpose_4);
            tensor<int32, [4]> var_10829_begin_0 = const()[name = tensor<string, []>("op_10829_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_10829_end_0 = const()[name = tensor<string, []>("op_10829_end_0"), val = tensor<int32, [4]>([2, 64, 1, 77])];
            tensor<bool, [4]> var_10829_end_mask_0 = const()[name = tensor<string, []>("op_10829_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_10829_cast = slice_by_index(begin = var_10829_begin_0, end = var_10829_end_0, end_mask = var_10829_end_mask_0, x = v_55_cast);
            tensor<int32, [4]> var_10833_begin_0 = const()[name = tensor<string, []>("op_10833_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_10833_end_0 = const()[name = tensor<string, []>("op_10833_end_0"), val = tensor<int32, [4]>([2, 128, 1, 77])];
            tensor<bool, [4]> var_10833_end_mask_0 = const()[name = tensor<string, []>("op_10833_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_10833_cast = slice_by_index(begin = var_10833_begin_0, end = var_10833_end_0, end_mask = var_10833_end_mask_0, x = v_55_cast);
            tensor<int32, [4]> var_10837_begin_0 = const()[name = tensor<string, []>("op_10837_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_10837_end_0 = const()[name = tensor<string, []>("op_10837_end_0"), val = tensor<int32, [4]>([2, 192, 1, 77])];
            tensor<bool, [4]> var_10837_end_mask_0 = const()[name = tensor<string, []>("op_10837_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_10837_cast = slice_by_index(begin = var_10837_begin_0, end = var_10837_end_0, end_mask = var_10837_end_mask_0, x = v_55_cast);
            tensor<int32, [4]> var_10841_begin_0 = const()[name = tensor<string, []>("op_10841_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_10841_end_0 = const()[name = tensor<string, []>("op_10841_end_0"), val = tensor<int32, [4]>([2, 256, 1, 77])];
            tensor<bool, [4]> var_10841_end_mask_0 = const()[name = tensor<string, []>("op_10841_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_10841_cast = slice_by_index(begin = var_10841_begin_0, end = var_10841_end_0, end_mask = var_10841_end_mask_0, x = v_55_cast);
            tensor<int32, [4]> var_10845_begin_0 = const()[name = tensor<string, []>("op_10845_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_10845_end_0 = const()[name = tensor<string, []>("op_10845_end_0"), val = tensor<int32, [4]>([2, 320, 1, 77])];
            tensor<bool, [4]> var_10845_end_mask_0 = const()[name = tensor<string, []>("op_10845_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_10845_cast = slice_by_index(begin = var_10845_begin_0, end = var_10845_end_0, end_mask = var_10845_end_mask_0, x = v_55_cast);
            tensor<string, []> var_10849_equation_0 = const()[name = tensor<string, []>("op_10849_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_10849_cast = einsum(equation = var_10849_equation_0, values = (var_10811_cast, var_10788_cast));
            tensor<fp16, []> var_10850_to_fp16 = const()[name = tensor<string, []>("op_10850_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_731_cast = mul(x = var_10849_cast, y = var_10850_to_fp16);
            tensor<string, []> var_10853_equation_0 = const()[name = tensor<string, []>("op_10853_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_10853_cast = einsum(equation = var_10853_equation_0, values = (var_10815_cast, var_10792_cast));
            tensor<fp16, []> var_10854_to_fp16 = const()[name = tensor<string, []>("op_10854_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_733_cast = mul(x = var_10853_cast, y = var_10854_to_fp16);
            tensor<string, []> var_10857_equation_0 = const()[name = tensor<string, []>("op_10857_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_10857_cast = einsum(equation = var_10857_equation_0, values = (var_10819_cast, var_10796_cast));
            tensor<fp16, []> var_10858_to_fp16 = const()[name = tensor<string, []>("op_10858_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_735_cast = mul(x = var_10857_cast, y = var_10858_to_fp16);
            tensor<string, []> var_10861_equation_0 = const()[name = tensor<string, []>("op_10861_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_10861_cast = einsum(equation = var_10861_equation_0, values = (var_10823_cast, var_10800_cast));
            tensor<fp16, []> var_10862_to_fp16 = const()[name = tensor<string, []>("op_10862_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_737_cast = mul(x = var_10861_cast, y = var_10862_to_fp16);
            tensor<string, []> var_10865_equation_0 = const()[name = tensor<string, []>("op_10865_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_10865_cast = einsum(equation = var_10865_equation_0, values = (var_10827_cast, var_10804_cast));
            tensor<fp16, []> var_10866_to_fp16 = const()[name = tensor<string, []>("op_10866_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_739_cast = mul(x = var_10865_cast, y = var_10866_to_fp16);
            tensor<fp16, [2, 77, 1, 4096]> var_10868_cast = softmax(axis = var_10509, x = aw_731_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_10869_cast = softmax(axis = var_10509, x = aw_733_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_10870_cast = softmax(axis = var_10509, x = aw_735_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_10871_cast = softmax(axis = var_10509, x = aw_737_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_10872_cast = softmax(axis = var_10509, x = aw_739_cast);
            tensor<string, []> var_10874_equation_0 = const()[name = tensor<string, []>("op_10874_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_10874_cast = einsum(equation = var_10874_equation_0, values = (var_10829_cast, var_10868_cast));
            tensor<string, []> var_10876_equation_0 = const()[name = tensor<string, []>("op_10876_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_10876_cast = einsum(equation = var_10876_equation_0, values = (var_10833_cast, var_10869_cast));
            tensor<string, []> var_10878_equation_0 = const()[name = tensor<string, []>("op_10878_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_10878_cast = einsum(equation = var_10878_equation_0, values = (var_10837_cast, var_10870_cast));
            tensor<string, []> var_10880_equation_0 = const()[name = tensor<string, []>("op_10880_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_10880_cast = einsum(equation = var_10880_equation_0, values = (var_10841_cast, var_10871_cast));
            tensor<string, []> var_10882_equation_0 = const()[name = tensor<string, []>("op_10882_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_10882_cast = einsum(equation = var_10882_equation_0, values = (var_10845_cast, var_10872_cast));
            tensor<bool, []> input_467_interleave_0 = const()[name = tensor<string, []>("input_467_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 320, 1, 4096]> input_467_cast = concat(axis = var_10509, interleave = input_467_interleave_0, values = (var_10874_cast, var_10876_cast, var_10878_cast, var_10880_cast, var_10882_cast));
            tensor<int32, [2]> var_10888 = const()[name = tensor<string, []>("op_10888"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_10890 = const()[name = tensor<string, []>("op_10890"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_10892_pad_type_0 = const()[name = tensor<string, []>("op_10892_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_10892_pad_0 = const()[name = tensor<string, []>("op_10892_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(811257792)))];
            tensor<fp16, [320]> up_blocks_3_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(811462656)))];
            tensor<fp16, [2, 320, 1, 4096]> var_10892_cast = conv(bias = up_blocks_3_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16, dilations = var_10890, groups = var_10509, pad = var_10892_pad_0, pad_type = var_10892_pad_type_0, strides = var_10888, weight = up_blocks_3_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16, x = input_467_cast);
            tensor<fp16, [2, 320, 1, 4096]> inputs_83_cast = add(x = var_10892_cast, y = inputs_81_cast);
            tensor<int32, [1]> var_10896 = const()[name = tensor<string, []>("op_10896"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> channels_mean_83_cast = reduce_mean(axes = var_10896, keep_dims = var_10504, x = inputs_83_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_83_cast = sub(x = inputs_83_cast, y = channels_mean_83_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_sq_83_cast = mul(x = zero_mean_83_cast, y = zero_mean_83_cast);
            tensor<int32, [1]> var_10900 = const()[name = tensor<string, []>("op_10900"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> var_10901_cast = reduce_mean(axes = var_10900, keep_dims = var_10504, x = zero_mean_sq_83_cast);
            tensor<fp16, []> var_10902_to_fp16 = const()[name = tensor<string, []>("op_10902_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 4096]> var_10903_cast = add(x = var_10901_cast, y = var_10902_to_fp16);
            tensor<fp16, []> denom_83_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_83_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 4096]> denom_83_cast = rsqrt(epsilon = denom_83_epsilon_0_to_fp16, x = var_10903_cast);
            tensor<fp16, [2, 320, 1, 4096]> out_83_cast = mul(x = zero_mean_83_cast, y = denom_83_cast);
            tensor<fp16, [1, 320, 1, 1]> var_10907_to_fp16 = const()[name = tensor<string, []>("op_10907_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(811463360)))];
            tensor<fp16, [2, 320, 1, 4096]> var_10908_cast = add(x = out_83_cast, y = var_10907_to_fp16);
            tensor<fp16, [1, 320, 1, 1]> var_10910_to_fp16 = const()[name = tensor<string, []>("op_10910_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(811464064)))];
            tensor<fp16, [2, 320, 1, 4096]> input_469_cast = mul(x = var_10908_cast, y = var_10910_to_fp16);
            tensor<int32, [2]> var_10918 = const()[name = tensor<string, []>("op_10918"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_10920 = const()[name = tensor<string, []>("op_10920"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_10922_pad_type_0 = const()[name = tensor<string, []>("op_10922_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_10922_pad_0 = const()[name = tensor<string, []>("op_10922_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [2560, 320, 1, 1]> up_blocks_3_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16"), val = tensor<fp16, [2560, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(811464768)))];
            tensor<fp16, [2560]> up_blocks_3_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(813103232)))];
            tensor<fp16, [2, 2560, 1, 4096]> var_10922_cast = conv(bias = up_blocks_3_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16, dilations = var_10920, groups = var_10509, pad = var_10922_pad_0, pad_type = var_10922_pad_type_0, strides = var_10918, weight = up_blocks_3_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16, x = input_469_cast);
            tensor<int32, [2]> var_10923_split_sizes_0 = const()[name = tensor<string, []>("op_10923_split_sizes_0"), val = tensor<int32, [2]>([1280, 1280])];
            tensor<int32, []> var_10923_axis_0 = const()[name = tensor<string, []>("op_10923_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [2, 1280, 1, 4096]> var_10923_cast_0, tensor<fp16, [2, 1280, 1, 4096]> var_10923_cast_1 = split(axis = var_10923_axis_0, split_sizes = var_10923_split_sizes_0, x = var_10922_cast);
            tensor<string, []> var_10925_mode_0 = const()[name = tensor<string, []>("op_10925_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [2, 1280, 1, 4096]> var_10925_cast = gelu(mode = var_10925_mode_0, x = var_10923_cast_1);
            tensor<fp16, [2, 1280, 1, 4096]> input_471_cast = mul(x = var_10923_cast_0, y = var_10925_cast);
            tensor<int32, [2]> var_10929 = const()[name = tensor<string, []>("op_10929"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_10931 = const()[name = tensor<string, []>("op_10931"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_10933_pad_type_0 = const()[name = tensor<string, []>("op_10933_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_10933_pad_0 = const()[name = tensor<string, []>("op_10933_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 1280, 1, 1]> up_blocks_3_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16"), val = tensor<fp16, [320, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(813108416)))];
            tensor<fp16, [320]> up_blocks_3_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(813927680)))];
            tensor<fp16, [2, 320, 1, 4096]> var_10933_cast = conv(bias = up_blocks_3_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16, dilations = var_10931, groups = var_10509, pad = var_10933_pad_0, pad_type = var_10933_pad_type_0, strides = var_10929, weight = up_blocks_3_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16, x = input_471_cast);
            tensor<fp16, [2, 320, 1, 4096]> hidden_states_293_cast = add(x = var_10933_cast, y = inputs_83_cast);
            tensor<int32, [4]> var_10935 = const()[name = tensor<string, []>("op_10935"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> input_473_cast = reshape(shape = var_10935, x = hidden_states_293_cast);
            tensor<int32, [2]> var_10939 = const()[name = tensor<string, []>("op_10939"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_10941 = const()[name = tensor<string, []>("op_10941"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_295_pad_type_0 = const()[name = tensor<string, []>("hidden_states_295_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_295_pad_0 = const()[name = tensor<string, []>("hidden_states_295_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_0_proj_out_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_proj_out_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(813928384)))];
            tensor<fp16, [320]> up_blocks_3_attentions_0_proj_out_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_proj_out_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(814133248)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_295_cast = conv(bias = up_blocks_3_attentions_0_proj_out_bias_to_fp16, dilations = var_10941, groups = var_10509, pad = hidden_states_295_pad_0, pad_type = hidden_states_295_pad_type_0, strides = var_10939, weight = up_blocks_3_attentions_0_proj_out_weight_to_fp16, x = input_473_cast);
            tensor<fp16, [2, 320, 64, 64]> hidden_states_297_cast = add(x = hidden_states_295_cast, y = hidden_states_283_cast);
            tensor<bool, []> input_475_interleave_0 = const()[name = tensor<string, []>("input_475_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 320, 64, 64]> cast_11 = cast(dtype = cast_5_dtype_0, x = input_35_cast);
            tensor<fp16, [2, 640, 64, 64]> input_475_cast = concat(axis = var_10509, interleave = input_475_interleave_0, values = (hidden_states_297_cast, cast_11));
            tensor<int32, [5]> reshape_216_shape_0 = const()[name = tensor<string, []>("reshape_216_shape_0"), val = tensor<int32, [5]>([2, 32, 20, 64, 64])];
            tensor<fp16, [2, 32, 20, 64, 64]> reshape_216_cast = reshape(shape = reshape_216_shape_0, x = input_475_cast);
            tensor<int32, [3]> reduce_mean_162_axes_0 = const()[name = tensor<string, []>("reduce_mean_162_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_162_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_162_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_162_cast = reduce_mean(axes = reduce_mean_162_axes_0, keep_dims = reduce_mean_162_keep_dims_0, x = reshape_216_cast);
            tensor<fp16, [2, 32, 20, 64, 64]> sub_108_cast = sub(x = reshape_216_cast, y = reduce_mean_162_cast);
            tensor<fp16, [2, 32, 20, 64, 64]> square_54_cast = square(x = sub_108_cast);
            tensor<int32, [3]> reduce_mean_164_axes_0 = const()[name = tensor<string, []>("reduce_mean_164_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_164_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_164_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_164_cast = reduce_mean(axes = reduce_mean_164_axes_0, keep_dims = reduce_mean_164_keep_dims_0, x = square_54_cast);
            tensor<fp16, []> add_108_y_0_to_fp16 = const()[name = tensor<string, []>("add_108_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_108_cast = add(x = reduce_mean_164_cast, y = add_108_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_54_cast = sqrt(x = add_108_cast);
            tensor<fp16, [2, 32, 20, 64, 64]> real_div_54_cast = real_div(x = sub_108_cast, y = sqrt_54_cast);
            tensor<int32, [4]> reshape_217_shape_0 = const()[name = tensor<string, []>("reshape_217_shape_0"), val = tensor<int32, [4]>([2, 640, 64, 64])];
            tensor<fp16, [2, 640, 64, 64]> reshape_217_cast = reshape(shape = reshape_217_shape_0, x = real_div_54_cast);
            tensor<fp16, [640]> add_109_mean_0_to_fp16 = const()[name = tensor<string, []>("add_109_mean_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(814133952)))];
            tensor<fp16, [640]> add_109_variance_0_to_fp16 = const()[name = tensor<string, []>("add_109_variance_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(814135296)))];
            tensor<fp16, [640]> add_109_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_109_gamma_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(814136640)))];
            tensor<fp16, [640]> add_109_beta_0_to_fp16 = const()[name = tensor<string, []>("add_109_beta_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(814137984)))];
            tensor<fp16, []> add_109_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_109_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 640, 64, 64]> add_109_cast = batch_norm(beta = add_109_beta_0_to_fp16, epsilon = add_109_epsilon_0_to_fp16, gamma = add_109_gamma_0_to_fp16, mean = add_109_mean_0_to_fp16, variance = add_109_variance_0_to_fp16, x = reshape_217_cast);
            tensor<fp16, [2, 640, 64, 64]> input_479_cast = silu(x = add_109_cast);
            tensor<int32, [2]> var_10959 = const()[name = tensor<string, []>("op_10959"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_10961 = const()[name = tensor<string, []>("op_10961"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_299_pad_type_0 = const()[name = tensor<string, []>("hidden_states_299_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_299_pad_0 = const()[name = tensor<string, []>("hidden_states_299_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [320, 640, 3, 3]> up_blocks_3_resnets_1_conv1_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_1_conv1_weight_to_fp16"), val = tensor<fp16, [320, 640, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(814139328)))];
            tensor<fp16, [320]> up_blocks_3_resnets_1_conv1_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_1_conv1_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(817825792)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_299_cast = conv(bias = up_blocks_3_resnets_1_conv1_bias_to_fp16, dilations = var_10961, groups = var_10509, pad = hidden_states_299_pad_0, pad_type = hidden_states_299_pad_type_0, strides = var_10959, weight = up_blocks_3_resnets_1_conv1_weight_to_fp16, x = input_479_cast);
            tensor<int32, [2]> var_10967 = const()[name = tensor<string, []>("op_10967"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_10969 = const()[name = tensor<string, []>("op_10969"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_41_pad_type_0 = const()[name = tensor<string, []>("temb_41_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_41_pad_0 = const()[name = tensor<string, []>("temb_41_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 1280, 1, 1]> up_blocks_3_resnets_1_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_1_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [320, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(817826496)))];
            tensor<fp16, [320]> up_blocks_3_resnets_1_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_1_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(818645760)))];
            tensor<fp16, [2, 320, 1, 1]> temb_41_cast = conv(bias = up_blocks_3_resnets_1_time_emb_proj_bias_to_fp16, dilations = var_10969, groups = var_10509, pad = temb_41_pad_0, pad_type = temb_41_pad_type_0, strides = var_10967, weight = up_blocks_3_resnets_1_time_emb_proj_weight_to_fp16, x = cast_12);
            tensor<fp16, [2, 320, 64, 64]> input_483_cast = add(x = hidden_states_299_cast, y = temb_41_cast);
            tensor<int32, [5]> reshape_220_shape_0 = const()[name = tensor<string, []>("reshape_220_shape_0"), val = tensor<int32, [5]>([2, 32, 10, 64, 64])];
            tensor<fp16, [2, 32, 10, 64, 64]> reshape_220_cast = reshape(shape = reshape_220_shape_0, x = input_483_cast);
            tensor<int32, [3]> reduce_mean_165_axes_0 = const()[name = tensor<string, []>("reduce_mean_165_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_165_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_165_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_165_cast = reduce_mean(axes = reduce_mean_165_axes_0, keep_dims = reduce_mean_165_keep_dims_0, x = reshape_220_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> sub_110_cast = sub(x = reshape_220_cast, y = reduce_mean_165_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> square_55_cast = square(x = sub_110_cast);
            tensor<int32, [3]> reduce_mean_167_axes_0 = const()[name = tensor<string, []>("reduce_mean_167_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_167_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_167_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_167_cast = reduce_mean(axes = reduce_mean_167_axes_0, keep_dims = reduce_mean_167_keep_dims_0, x = square_55_cast);
            tensor<fp16, []> add_110_y_0_to_fp16 = const()[name = tensor<string, []>("add_110_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_110_cast = add(x = reduce_mean_167_cast, y = add_110_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_55_cast = sqrt(x = add_110_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> real_div_55_cast = real_div(x = sub_110_cast, y = sqrt_55_cast);
            tensor<int32, [4]> reshape_221_shape_0 = const()[name = tensor<string, []>("reshape_221_shape_0"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> reshape_221_cast = reshape(shape = reshape_221_shape_0, x = real_div_55_cast);
            tensor<fp16, [320]> add_111_mean_0_to_fp16 = const()[name = tensor<string, []>("add_111_mean_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(818646464)))];
            tensor<fp16, [320]> add_111_variance_0_to_fp16 = const()[name = tensor<string, []>("add_111_variance_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(818647168)))];
            tensor<fp16, [320]> add_111_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_111_gamma_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(818647872)))];
            tensor<fp16, [320]> add_111_beta_0_to_fp16 = const()[name = tensor<string, []>("add_111_beta_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(818648576)))];
            tensor<fp16, []> add_111_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_111_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 320, 64, 64]> add_111_cast = batch_norm(beta = add_111_beta_0_to_fp16, epsilon = add_111_epsilon_0_to_fp16, gamma = add_111_gamma_0_to_fp16, mean = add_111_mean_0_to_fp16, variance = add_111_variance_0_to_fp16, x = reshape_221_cast);
            tensor<fp16, [2, 320, 64, 64]> input_487_cast = silu(x = add_111_cast);
            tensor<int32, [2]> var_10979 = const()[name = tensor<string, []>("op_10979"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_10981 = const()[name = tensor<string, []>("op_10981"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_301_pad_type_0 = const()[name = tensor<string, []>("hidden_states_301_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_301_pad_0 = const()[name = tensor<string, []>("hidden_states_301_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [320, 320, 3, 3]> up_blocks_3_resnets_1_conv2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_1_conv2_weight_to_fp16"), val = tensor<fp16, [320, 320, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(818649280)))];
            tensor<fp16, [320]> up_blocks_3_resnets_1_conv2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_1_conv2_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(820492544)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_301_cast = conv(bias = up_blocks_3_resnets_1_conv2_bias_to_fp16, dilations = var_10981, groups = var_10509, pad = hidden_states_301_pad_0, pad_type = hidden_states_301_pad_type_0, strides = var_10979, weight = up_blocks_3_resnets_1_conv2_weight_to_fp16, x = input_487_cast);
            tensor<int32, [2]> var_10986 = const()[name = tensor<string, []>("op_10986"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_10988 = const()[name = tensor<string, []>("op_10988"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_25_pad_type_0 = const()[name = tensor<string, []>("x_25_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_25_pad_0 = const()[name = tensor<string, []>("x_25_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 640, 1, 1]> up_blocks_3_resnets_1_conv_shortcut_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_1_conv_shortcut_weight_to_fp16"), val = tensor<fp16, [320, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(820493248)))];
            tensor<fp16, [320]> up_blocks_3_resnets_1_conv_shortcut_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_1_conv_shortcut_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(820902912)))];
            tensor<fp16, [2, 320, 64, 64]> x_25_cast = conv(bias = up_blocks_3_resnets_1_conv_shortcut_bias_to_fp16, dilations = var_10988, groups = var_10509, pad = x_25_pad_0, pad_type = x_25_pad_type_0, strides = var_10986, weight = up_blocks_3_resnets_1_conv_shortcut_weight_to_fp16, x = input_475_cast);
            tensor<fp16, [2, 320, 64, 64]> hidden_states_303_cast = add(x = x_25_cast, y = hidden_states_301_cast);
            tensor<int32, [5]> reshape_224_shape_0 = const()[name = tensor<string, []>("reshape_224_shape_0"), val = tensor<int32, [5]>([2, 32, 10, 64, 64])];
            tensor<fp16, [2, 32, 10, 64, 64]> reshape_224_cast = reshape(shape = reshape_224_shape_0, x = hidden_states_303_cast);
            tensor<int32, [3]> reduce_mean_168_axes_0 = const()[name = tensor<string, []>("reduce_mean_168_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_168_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_168_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_168_cast = reduce_mean(axes = reduce_mean_168_axes_0, keep_dims = reduce_mean_168_keep_dims_0, x = reshape_224_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> sub_112_cast = sub(x = reshape_224_cast, y = reduce_mean_168_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> square_56_cast = square(x = sub_112_cast);
            tensor<int32, [3]> reduce_mean_170_axes_0 = const()[name = tensor<string, []>("reduce_mean_170_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_170_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_170_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_170_cast = reduce_mean(axes = reduce_mean_170_axes_0, keep_dims = reduce_mean_170_keep_dims_0, x = square_56_cast);
            tensor<fp16, []> add_112_y_0_to_fp16 = const()[name = tensor<string, []>("add_112_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_112_cast = add(x = reduce_mean_170_cast, y = add_112_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_56_cast = sqrt(x = add_112_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> real_div_56_cast = real_div(x = sub_112_cast, y = sqrt_56_cast);
            tensor<int32, [4]> reshape_225_shape_0 = const()[name = tensor<string, []>("reshape_225_shape_0"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> reshape_225_cast = reshape(shape = reshape_225_shape_0, x = real_div_56_cast);
            tensor<fp16, [320]> add_113_mean_0_to_fp16 = const()[name = tensor<string, []>("add_113_mean_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(820903616)))];
            tensor<fp16, [320]> add_113_variance_0_to_fp16 = const()[name = tensor<string, []>("add_113_variance_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(820904320)))];
            tensor<fp16, [320]> add_113_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_113_gamma_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(820905024)))];
            tensor<fp16, [320]> add_113_beta_0_to_fp16 = const()[name = tensor<string, []>("add_113_beta_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(820905728)))];
            tensor<fp16, []> add_113_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_113_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 320, 64, 64]> add_113_cast = batch_norm(beta = add_113_beta_0_to_fp16, epsilon = add_113_epsilon_0_to_fp16, gamma = add_113_gamma_0_to_fp16, mean = add_113_mean_0_to_fp16, variance = add_113_variance_0_to_fp16, x = reshape_225_cast);
            tensor<int32, [2]> var_11008 = const()[name = tensor<string, []>("op_11008"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_11010 = const()[name = tensor<string, []>("op_11010"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_305_pad_type_0 = const()[name = tensor<string, []>("hidden_states_305_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_305_pad_0 = const()[name = tensor<string, []>("hidden_states_305_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_1_proj_in_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_proj_in_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(820906432)))];
            tensor<fp16, [320]> up_blocks_3_attentions_1_proj_in_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_proj_in_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(821111296)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_305_cast = conv(bias = up_blocks_3_attentions_1_proj_in_bias_to_fp16, dilations = var_11010, groups = var_10509, pad = hidden_states_305_pad_0, pad_type = hidden_states_305_pad_type_0, strides = var_11008, weight = up_blocks_3_attentions_1_proj_in_weight_to_fp16, x = add_113_cast);
            tensor<int32, [4]> var_11015 = const()[name = tensor<string, []>("op_11015"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<fp16, [2, 320, 1, 4096]> inputs_85_cast = reshape(shape = var_11015, x = hidden_states_305_cast);
            tensor<int32, [1]> var_11025 = const()[name = tensor<string, []>("op_11025"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> channels_mean_85_cast = reduce_mean(axes = var_11025, keep_dims = var_10504, x = inputs_85_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_85_cast = sub(x = inputs_85_cast, y = channels_mean_85_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_sq_85_cast = mul(x = zero_mean_85_cast, y = zero_mean_85_cast);
            tensor<int32, [1]> var_11029 = const()[name = tensor<string, []>("op_11029"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> var_11030_cast = reduce_mean(axes = var_11029, keep_dims = var_10504, x = zero_mean_sq_85_cast);
            tensor<fp16, []> var_11031_to_fp16 = const()[name = tensor<string, []>("op_11031_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 4096]> var_11032_cast = add(x = var_11030_cast, y = var_11031_to_fp16);
            tensor<fp16, []> denom_85_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_85_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 4096]> denom_85_cast = rsqrt(epsilon = denom_85_epsilon_0_to_fp16, x = var_11032_cast);
            tensor<fp16, [2, 320, 1, 4096]> out_85_cast = mul(x = zero_mean_85_cast, y = denom_85_cast);
            tensor<fp16, [1, 320, 1, 1]> var_11036_to_fp16 = const()[name = tensor<string, []>("op_11036_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(821112000)))];
            tensor<fp16, [2, 320, 1, 4096]> var_11037_cast = add(x = out_85_cast, y = var_11036_to_fp16);
            tensor<fp16, [1, 320, 1, 1]> var_11039_to_fp16 = const()[name = tensor<string, []>("op_11039_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(821112704)))];
            tensor<fp16, [2, 320, 1, 4096]> hidden_states_307_cast = mul(x = var_11037_cast, y = var_11039_to_fp16);
            tensor<int32, [2]> var_11046 = const()[name = tensor<string, []>("op_11046"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_11048 = const()[name = tensor<string, []>("op_11048"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_57_pad_type_0 = const()[name = tensor<string, []>("q_57_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_57_pad_0 = const()[name = tensor<string, []>("q_57_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(821113408)))];
            tensor<fp16, [2, 320, 1, 4096]> q_57_cast = conv(dilations = var_11048, groups = var_10509, pad = q_57_pad_0, pad_type = q_57_pad_type_0, strides = var_11046, weight = up_blocks_3_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16, x = hidden_states_307_cast);
            tensor<int32, [2]> var_11052 = const()[name = tensor<string, []>("op_11052"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_11054 = const()[name = tensor<string, []>("op_11054"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_113_pad_type_0 = const()[name = tensor<string, []>("k_113_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_113_pad_0 = const()[name = tensor<string, []>("k_113_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(821318272)))];
            tensor<fp16, [2, 320, 1, 4096]> k_113_cast = conv(dilations = var_11054, groups = var_10509, pad = k_113_pad_0, pad_type = k_113_pad_type_0, strides = var_11052, weight = up_blocks_3_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16, x = hidden_states_307_cast);
            tensor<int32, [2]> var_11058 = const()[name = tensor<string, []>("op_11058"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_11060 = const()[name = tensor<string, []>("op_11060"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_57_pad_type_0 = const()[name = tensor<string, []>("v_57_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_57_pad_0 = const()[name = tensor<string, []>("v_57_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(821523136)))];
            tensor<fp16, [2, 320, 1, 4096]> v_57_cast = conv(dilations = var_11060, groups = var_10509, pad = v_57_pad_0, pad_type = v_57_pad_type_0, strides = var_11058, weight = up_blocks_3_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16, x = hidden_states_307_cast);
            tensor<int32, [4]> var_11064_begin_0 = const()[name = tensor<string, []>("op_11064_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_11064_end_0 = const()[name = tensor<string, []>("op_11064_end_0"), val = tensor<int32, [4]>([2, 64, 1, 4096])];
            tensor<bool, [4]> var_11064_end_mask_0 = const()[name = tensor<string, []>("op_11064_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_11064_cast = slice_by_index(begin = var_11064_begin_0, end = var_11064_end_0, end_mask = var_11064_end_mask_0, x = q_57_cast);
            tensor<int32, [4]> var_11068_begin_0 = const()[name = tensor<string, []>("op_11068_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_11068_end_0 = const()[name = tensor<string, []>("op_11068_end_0"), val = tensor<int32, [4]>([2, 128, 1, 4096])];
            tensor<bool, [4]> var_11068_end_mask_0 = const()[name = tensor<string, []>("op_11068_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_11068_cast = slice_by_index(begin = var_11068_begin_0, end = var_11068_end_0, end_mask = var_11068_end_mask_0, x = q_57_cast);
            tensor<int32, [4]> var_11072_begin_0 = const()[name = tensor<string, []>("op_11072_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_11072_end_0 = const()[name = tensor<string, []>("op_11072_end_0"), val = tensor<int32, [4]>([2, 192, 1, 4096])];
            tensor<bool, [4]> var_11072_end_mask_0 = const()[name = tensor<string, []>("op_11072_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_11072_cast = slice_by_index(begin = var_11072_begin_0, end = var_11072_end_0, end_mask = var_11072_end_mask_0, x = q_57_cast);
            tensor<int32, [4]> var_11076_begin_0 = const()[name = tensor<string, []>("op_11076_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_11076_end_0 = const()[name = tensor<string, []>("op_11076_end_0"), val = tensor<int32, [4]>([2, 256, 1, 4096])];
            tensor<bool, [4]> var_11076_end_mask_0 = const()[name = tensor<string, []>("op_11076_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_11076_cast = slice_by_index(begin = var_11076_begin_0, end = var_11076_end_0, end_mask = var_11076_end_mask_0, x = q_57_cast);
            tensor<int32, [4]> var_11080_begin_0 = const()[name = tensor<string, []>("op_11080_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_11080_end_0 = const()[name = tensor<string, []>("op_11080_end_0"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<bool, [4]> var_11080_end_mask_0 = const()[name = tensor<string, []>("op_11080_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_11080_cast = slice_by_index(begin = var_11080_begin_0, end = var_11080_end_0, end_mask = var_11080_end_mask_0, x = q_57_cast);
            tensor<int32, [4]> k_115_perm_0 = const()[name = tensor<string, []>("k_115_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_11087_begin_0 = const()[name = tensor<string, []>("op_11087_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_11087_end_0 = const()[name = tensor<string, []>("op_11087_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 64])];
            tensor<bool, [4]> var_11087_end_mask_0 = const()[name = tensor<string, []>("op_11087_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 320]> transpose_3 = transpose(perm = k_115_perm_0, x = k_113_cast);
            tensor<fp16, [2, 4096, 1, 64]> var_11087_cast = slice_by_index(begin = var_11087_begin_0, end = var_11087_end_0, end_mask = var_11087_end_mask_0, x = transpose_3);
            tensor<int32, [4]> var_11091_begin_0 = const()[name = tensor<string, []>("op_11091_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 64])];
            tensor<int32, [4]> var_11091_end_0 = const()[name = tensor<string, []>("op_11091_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 128])];
            tensor<bool, [4]> var_11091_end_mask_0 = const()[name = tensor<string, []>("op_11091_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 64]> var_11091_cast = slice_by_index(begin = var_11091_begin_0, end = var_11091_end_0, end_mask = var_11091_end_mask_0, x = transpose_3);
            tensor<int32, [4]> var_11095_begin_0 = const()[name = tensor<string, []>("op_11095_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 128])];
            tensor<int32, [4]> var_11095_end_0 = const()[name = tensor<string, []>("op_11095_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 192])];
            tensor<bool, [4]> var_11095_end_mask_0 = const()[name = tensor<string, []>("op_11095_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 64]> var_11095_cast = slice_by_index(begin = var_11095_begin_0, end = var_11095_end_0, end_mask = var_11095_end_mask_0, x = transpose_3);
            tensor<int32, [4]> var_11099_begin_0 = const()[name = tensor<string, []>("op_11099_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 192])];
            tensor<int32, [4]> var_11099_end_0 = const()[name = tensor<string, []>("op_11099_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 256])];
            tensor<bool, [4]> var_11099_end_mask_0 = const()[name = tensor<string, []>("op_11099_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 64]> var_11099_cast = slice_by_index(begin = var_11099_begin_0, end = var_11099_end_0, end_mask = var_11099_end_mask_0, x = transpose_3);
            tensor<int32, [4]> var_11103_begin_0 = const()[name = tensor<string, []>("op_11103_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 256])];
            tensor<int32, [4]> var_11103_end_0 = const()[name = tensor<string, []>("op_11103_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 320])];
            tensor<bool, [4]> var_11103_end_mask_0 = const()[name = tensor<string, []>("op_11103_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 64]> var_11103_cast = slice_by_index(begin = var_11103_begin_0, end = var_11103_end_0, end_mask = var_11103_end_mask_0, x = transpose_3);
            tensor<int32, [4]> var_11105_begin_0 = const()[name = tensor<string, []>("op_11105_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_11105_end_0 = const()[name = tensor<string, []>("op_11105_end_0"), val = tensor<int32, [4]>([2, 64, 1, 4096])];
            tensor<bool, [4]> var_11105_end_mask_0 = const()[name = tensor<string, []>("op_11105_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_11105_cast = slice_by_index(begin = var_11105_begin_0, end = var_11105_end_0, end_mask = var_11105_end_mask_0, x = v_57_cast);
            tensor<int32, [4]> var_11109_begin_0 = const()[name = tensor<string, []>("op_11109_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_11109_end_0 = const()[name = tensor<string, []>("op_11109_end_0"), val = tensor<int32, [4]>([2, 128, 1, 4096])];
            tensor<bool, [4]> var_11109_end_mask_0 = const()[name = tensor<string, []>("op_11109_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_11109_cast = slice_by_index(begin = var_11109_begin_0, end = var_11109_end_0, end_mask = var_11109_end_mask_0, x = v_57_cast);
            tensor<int32, [4]> var_11113_begin_0 = const()[name = tensor<string, []>("op_11113_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_11113_end_0 = const()[name = tensor<string, []>("op_11113_end_0"), val = tensor<int32, [4]>([2, 192, 1, 4096])];
            tensor<bool, [4]> var_11113_end_mask_0 = const()[name = tensor<string, []>("op_11113_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_11113_cast = slice_by_index(begin = var_11113_begin_0, end = var_11113_end_0, end_mask = var_11113_end_mask_0, x = v_57_cast);
            tensor<int32, [4]> var_11117_begin_0 = const()[name = tensor<string, []>("op_11117_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_11117_end_0 = const()[name = tensor<string, []>("op_11117_end_0"), val = tensor<int32, [4]>([2, 256, 1, 4096])];
            tensor<bool, [4]> var_11117_end_mask_0 = const()[name = tensor<string, []>("op_11117_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_11117_cast = slice_by_index(begin = var_11117_begin_0, end = var_11117_end_0, end_mask = var_11117_end_mask_0, x = v_57_cast);
            tensor<int32, [4]> var_11121_begin_0 = const()[name = tensor<string, []>("op_11121_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_11121_end_0 = const()[name = tensor<string, []>("op_11121_end_0"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<bool, [4]> var_11121_end_mask_0 = const()[name = tensor<string, []>("op_11121_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_11121_cast = slice_by_index(begin = var_11121_begin_0, end = var_11121_end_0, end_mask = var_11121_end_mask_0, x = v_57_cast);
            tensor<string, []> var_11125_equation_0 = const()[name = tensor<string, []>("op_11125_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_11125_cast = einsum(equation = var_11125_equation_0, values = (var_11087_cast, var_11064_cast));
            tensor<fp16, []> var_11126_to_fp16 = const()[name = tensor<string, []>("op_11126_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_741_cast = mul(x = var_11125_cast, y = var_11126_to_fp16);
            tensor<string, []> var_11129_equation_0 = const()[name = tensor<string, []>("op_11129_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_11129_cast = einsum(equation = var_11129_equation_0, values = (var_11091_cast, var_11068_cast));
            tensor<fp16, []> var_11130_to_fp16 = const()[name = tensor<string, []>("op_11130_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_743_cast = mul(x = var_11129_cast, y = var_11130_to_fp16);
            tensor<string, []> var_11133_equation_0 = const()[name = tensor<string, []>("op_11133_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_11133_cast = einsum(equation = var_11133_equation_0, values = (var_11095_cast, var_11072_cast));
            tensor<fp16, []> var_11134_to_fp16 = const()[name = tensor<string, []>("op_11134_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_745_cast = mul(x = var_11133_cast, y = var_11134_to_fp16);
            tensor<string, []> var_11137_equation_0 = const()[name = tensor<string, []>("op_11137_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_11137_cast = einsum(equation = var_11137_equation_0, values = (var_11099_cast, var_11076_cast));
            tensor<fp16, []> var_11138_to_fp16 = const()[name = tensor<string, []>("op_11138_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_747_cast = mul(x = var_11137_cast, y = var_11138_to_fp16);
            tensor<string, []> var_11141_equation_0 = const()[name = tensor<string, []>("op_11141_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_11141_cast = einsum(equation = var_11141_equation_0, values = (var_11103_cast, var_11080_cast));
            tensor<fp16, []> var_11142_to_fp16 = const()[name = tensor<string, []>("op_11142_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_749_cast = mul(x = var_11141_cast, y = var_11142_to_fp16);
            tensor<fp16, [2, 4096, 1, 4096]> var_11144_cast = softmax(axis = var_10509, x = aw_741_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_11145_cast = softmax(axis = var_10509, x = aw_743_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_11146_cast = softmax(axis = var_10509, x = aw_745_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_11147_cast = softmax(axis = var_10509, x = aw_747_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_11148_cast = softmax(axis = var_10509, x = aw_749_cast);
            tensor<string, []> var_11150_equation_0 = const()[name = tensor<string, []>("op_11150_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_11150_cast = einsum(equation = var_11150_equation_0, values = (var_11105_cast, var_11144_cast));
            tensor<string, []> var_11152_equation_0 = const()[name = tensor<string, []>("op_11152_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_11152_cast = einsum(equation = var_11152_equation_0, values = (var_11109_cast, var_11145_cast));
            tensor<string, []> var_11154_equation_0 = const()[name = tensor<string, []>("op_11154_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_11154_cast = einsum(equation = var_11154_equation_0, values = (var_11113_cast, var_11146_cast));
            tensor<string, []> var_11156_equation_0 = const()[name = tensor<string, []>("op_11156_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_11156_cast = einsum(equation = var_11156_equation_0, values = (var_11117_cast, var_11147_cast));
            tensor<string, []> var_11158_equation_0 = const()[name = tensor<string, []>("op_11158_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_11158_cast = einsum(equation = var_11158_equation_0, values = (var_11121_cast, var_11148_cast));
            tensor<bool, []> input_491_interleave_0 = const()[name = tensor<string, []>("input_491_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 320, 1, 4096]> input_491_cast = concat(axis = var_10509, interleave = input_491_interleave_0, values = (var_11150_cast, var_11152_cast, var_11154_cast, var_11156_cast, var_11158_cast));
            tensor<int32, [2]> var_11164 = const()[name = tensor<string, []>("op_11164"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_11166 = const()[name = tensor<string, []>("op_11166"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_11168_pad_type_0 = const()[name = tensor<string, []>("op_11168_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_11168_pad_0 = const()[name = tensor<string, []>("op_11168_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(821728000)))];
            tensor<fp16, [320]> up_blocks_3_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(821932864)))];
            tensor<fp16, [2, 320, 1, 4096]> var_11168_cast = conv(bias = up_blocks_3_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16, dilations = var_11166, groups = var_10509, pad = var_11168_pad_0, pad_type = var_11168_pad_type_0, strides = var_11164, weight = up_blocks_3_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16, x = input_491_cast);
            tensor<fp16, [2, 320, 1, 4096]> inputs_87_cast = add(x = var_11168_cast, y = inputs_85_cast);
            tensor<int32, [1]> var_11172 = const()[name = tensor<string, []>("op_11172"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> channels_mean_87_cast = reduce_mean(axes = var_11172, keep_dims = var_10504, x = inputs_87_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_87_cast = sub(x = inputs_87_cast, y = channels_mean_87_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_sq_87_cast = mul(x = zero_mean_87_cast, y = zero_mean_87_cast);
            tensor<int32, [1]> var_11176 = const()[name = tensor<string, []>("op_11176"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> var_11177_cast = reduce_mean(axes = var_11176, keep_dims = var_10504, x = zero_mean_sq_87_cast);
            tensor<fp16, []> var_11178_to_fp16 = const()[name = tensor<string, []>("op_11178_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 4096]> var_11179_cast = add(x = var_11177_cast, y = var_11178_to_fp16);
            tensor<fp16, []> denom_87_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_87_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 4096]> denom_87_cast = rsqrt(epsilon = denom_87_epsilon_0_to_fp16, x = var_11179_cast);
            tensor<fp16, [2, 320, 1, 4096]> out_87_cast = mul(x = zero_mean_87_cast, y = denom_87_cast);
            tensor<fp16, [1, 320, 1, 1]> var_11183_to_fp16 = const()[name = tensor<string, []>("op_11183_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(821933568)))];
            tensor<fp16, [2, 320, 1, 4096]> var_11184_cast = add(x = out_87_cast, y = var_11183_to_fp16);
            tensor<fp16, [1, 320, 1, 1]> var_11186_to_fp16 = const()[name = tensor<string, []>("op_11186_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(821934272)))];
            tensor<fp16, [2, 320, 1, 4096]> hidden_states_309_cast = mul(x = var_11184_cast, y = var_11186_to_fp16);
            tensor<int32, [2]> var_11193 = const()[name = tensor<string, []>("op_11193"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_11195 = const()[name = tensor<string, []>("op_11195"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_59_pad_type_0 = const()[name = tensor<string, []>("q_59_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_59_pad_0 = const()[name = tensor<string, []>("q_59_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(821934976)))];
            tensor<fp16, [2, 320, 1, 4096]> q_59_cast = conv(dilations = var_11195, groups = var_10509, pad = q_59_pad_0, pad_type = q_59_pad_type_0, strides = var_11193, weight = up_blocks_3_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16, x = hidden_states_309_cast);
            tensor<int32, [2]> var_11199 = const()[name = tensor<string, []>("op_11199"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_11201 = const()[name = tensor<string, []>("op_11201"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_117_pad_type_0 = const()[name = tensor<string, []>("k_117_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_117_pad_0 = const()[name = tensor<string, []>("k_117_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 1024, 1, 1]> up_blocks_3_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16"), val = tensor<fp16, [320, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(822139840)))];
            tensor<fp16, [2, 320, 1, 77]> k_117_cast = conv(dilations = var_11201, groups = var_10509, pad = k_117_pad_0, pad_type = k_117_pad_type_0, strides = var_11199, weight = up_blocks_3_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [2]> var_11205 = const()[name = tensor<string, []>("op_11205"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_11207 = const()[name = tensor<string, []>("op_11207"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_59_pad_type_0 = const()[name = tensor<string, []>("v_59_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_59_pad_0 = const()[name = tensor<string, []>("v_59_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 1024, 1, 1]> up_blocks_3_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16"), val = tensor<fp16, [320, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(822795264)))];
            tensor<fp16, [2, 320, 1, 77]> v_59_cast = conv(dilations = var_11207, groups = var_10509, pad = v_59_pad_0, pad_type = v_59_pad_type_0, strides = var_11205, weight = up_blocks_3_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [4]> var_11211_begin_0 = const()[name = tensor<string, []>("op_11211_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_11211_end_0 = const()[name = tensor<string, []>("op_11211_end_0"), val = tensor<int32, [4]>([2, 64, 1, 4096])];
            tensor<bool, [4]> var_11211_end_mask_0 = const()[name = tensor<string, []>("op_11211_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_11211_cast = slice_by_index(begin = var_11211_begin_0, end = var_11211_end_0, end_mask = var_11211_end_mask_0, x = q_59_cast);
            tensor<int32, [4]> var_11215_begin_0 = const()[name = tensor<string, []>("op_11215_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_11215_end_0 = const()[name = tensor<string, []>("op_11215_end_0"), val = tensor<int32, [4]>([2, 128, 1, 4096])];
            tensor<bool, [4]> var_11215_end_mask_0 = const()[name = tensor<string, []>("op_11215_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_11215_cast = slice_by_index(begin = var_11215_begin_0, end = var_11215_end_0, end_mask = var_11215_end_mask_0, x = q_59_cast);
            tensor<int32, [4]> var_11219_begin_0 = const()[name = tensor<string, []>("op_11219_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_11219_end_0 = const()[name = tensor<string, []>("op_11219_end_0"), val = tensor<int32, [4]>([2, 192, 1, 4096])];
            tensor<bool, [4]> var_11219_end_mask_0 = const()[name = tensor<string, []>("op_11219_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_11219_cast = slice_by_index(begin = var_11219_begin_0, end = var_11219_end_0, end_mask = var_11219_end_mask_0, x = q_59_cast);
            tensor<int32, [4]> var_11223_begin_0 = const()[name = tensor<string, []>("op_11223_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_11223_end_0 = const()[name = tensor<string, []>("op_11223_end_0"), val = tensor<int32, [4]>([2, 256, 1, 4096])];
            tensor<bool, [4]> var_11223_end_mask_0 = const()[name = tensor<string, []>("op_11223_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_11223_cast = slice_by_index(begin = var_11223_begin_0, end = var_11223_end_0, end_mask = var_11223_end_mask_0, x = q_59_cast);
            tensor<int32, [4]> var_11227_begin_0 = const()[name = tensor<string, []>("op_11227_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_11227_end_0 = const()[name = tensor<string, []>("op_11227_end_0"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<bool, [4]> var_11227_end_mask_0 = const()[name = tensor<string, []>("op_11227_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_11227_cast = slice_by_index(begin = var_11227_begin_0, end = var_11227_end_0, end_mask = var_11227_end_mask_0, x = q_59_cast);
            tensor<int32, [4]> k_119_perm_0 = const()[name = tensor<string, []>("k_119_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_11234_begin_0 = const()[name = tensor<string, []>("op_11234_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_11234_end_0 = const()[name = tensor<string, []>("op_11234_end_0"), val = tensor<int32, [4]>([2, 77, 1, 64])];
            tensor<bool, [4]> var_11234_end_mask_0 = const()[name = tensor<string, []>("op_11234_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 320]> transpose_2 = transpose(perm = k_119_perm_0, x = k_117_cast);
            tensor<fp16, [2, 77, 1, 64]> var_11234_cast = slice_by_index(begin = var_11234_begin_0, end = var_11234_end_0, end_mask = var_11234_end_mask_0, x = transpose_2);
            tensor<int32, [4]> var_11238_begin_0 = const()[name = tensor<string, []>("op_11238_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 64])];
            tensor<int32, [4]> var_11238_end_0 = const()[name = tensor<string, []>("op_11238_end_0"), val = tensor<int32, [4]>([2, 77, 1, 128])];
            tensor<bool, [4]> var_11238_end_mask_0 = const()[name = tensor<string, []>("op_11238_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_11238_cast = slice_by_index(begin = var_11238_begin_0, end = var_11238_end_0, end_mask = var_11238_end_mask_0, x = transpose_2);
            tensor<int32, [4]> var_11242_begin_0 = const()[name = tensor<string, []>("op_11242_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 128])];
            tensor<int32, [4]> var_11242_end_0 = const()[name = tensor<string, []>("op_11242_end_0"), val = tensor<int32, [4]>([2, 77, 1, 192])];
            tensor<bool, [4]> var_11242_end_mask_0 = const()[name = tensor<string, []>("op_11242_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_11242_cast = slice_by_index(begin = var_11242_begin_0, end = var_11242_end_0, end_mask = var_11242_end_mask_0, x = transpose_2);
            tensor<int32, [4]> var_11246_begin_0 = const()[name = tensor<string, []>("op_11246_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 192])];
            tensor<int32, [4]> var_11246_end_0 = const()[name = tensor<string, []>("op_11246_end_0"), val = tensor<int32, [4]>([2, 77, 1, 256])];
            tensor<bool, [4]> var_11246_end_mask_0 = const()[name = tensor<string, []>("op_11246_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_11246_cast = slice_by_index(begin = var_11246_begin_0, end = var_11246_end_0, end_mask = var_11246_end_mask_0, x = transpose_2);
            tensor<int32, [4]> var_11250_begin_0 = const()[name = tensor<string, []>("op_11250_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 256])];
            tensor<int32, [4]> var_11250_end_0 = const()[name = tensor<string, []>("op_11250_end_0"), val = tensor<int32, [4]>([2, 77, 1, 320])];
            tensor<bool, [4]> var_11250_end_mask_0 = const()[name = tensor<string, []>("op_11250_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_11250_cast = slice_by_index(begin = var_11250_begin_0, end = var_11250_end_0, end_mask = var_11250_end_mask_0, x = transpose_2);
            tensor<int32, [4]> var_11252_begin_0 = const()[name = tensor<string, []>("op_11252_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_11252_end_0 = const()[name = tensor<string, []>("op_11252_end_0"), val = tensor<int32, [4]>([2, 64, 1, 77])];
            tensor<bool, [4]> var_11252_end_mask_0 = const()[name = tensor<string, []>("op_11252_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_11252_cast = slice_by_index(begin = var_11252_begin_0, end = var_11252_end_0, end_mask = var_11252_end_mask_0, x = v_59_cast);
            tensor<int32, [4]> var_11256_begin_0 = const()[name = tensor<string, []>("op_11256_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_11256_end_0 = const()[name = tensor<string, []>("op_11256_end_0"), val = tensor<int32, [4]>([2, 128, 1, 77])];
            tensor<bool, [4]> var_11256_end_mask_0 = const()[name = tensor<string, []>("op_11256_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_11256_cast = slice_by_index(begin = var_11256_begin_0, end = var_11256_end_0, end_mask = var_11256_end_mask_0, x = v_59_cast);
            tensor<int32, [4]> var_11260_begin_0 = const()[name = tensor<string, []>("op_11260_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_11260_end_0 = const()[name = tensor<string, []>("op_11260_end_0"), val = tensor<int32, [4]>([2, 192, 1, 77])];
            tensor<bool, [4]> var_11260_end_mask_0 = const()[name = tensor<string, []>("op_11260_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_11260_cast = slice_by_index(begin = var_11260_begin_0, end = var_11260_end_0, end_mask = var_11260_end_mask_0, x = v_59_cast);
            tensor<int32, [4]> var_11264_begin_0 = const()[name = tensor<string, []>("op_11264_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_11264_end_0 = const()[name = tensor<string, []>("op_11264_end_0"), val = tensor<int32, [4]>([2, 256, 1, 77])];
            tensor<bool, [4]> var_11264_end_mask_0 = const()[name = tensor<string, []>("op_11264_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_11264_cast = slice_by_index(begin = var_11264_begin_0, end = var_11264_end_0, end_mask = var_11264_end_mask_0, x = v_59_cast);
            tensor<int32, [4]> var_11268_begin_0 = const()[name = tensor<string, []>("op_11268_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_11268_end_0 = const()[name = tensor<string, []>("op_11268_end_0"), val = tensor<int32, [4]>([2, 320, 1, 77])];
            tensor<bool, [4]> var_11268_end_mask_0 = const()[name = tensor<string, []>("op_11268_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_11268_cast = slice_by_index(begin = var_11268_begin_0, end = var_11268_end_0, end_mask = var_11268_end_mask_0, x = v_59_cast);
            tensor<string, []> var_11272_equation_0 = const()[name = tensor<string, []>("op_11272_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_11272_cast = einsum(equation = var_11272_equation_0, values = (var_11234_cast, var_11211_cast));
            tensor<fp16, []> var_11273_to_fp16 = const()[name = tensor<string, []>("op_11273_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_751_cast = mul(x = var_11272_cast, y = var_11273_to_fp16);
            tensor<string, []> var_11276_equation_0 = const()[name = tensor<string, []>("op_11276_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_11276_cast = einsum(equation = var_11276_equation_0, values = (var_11238_cast, var_11215_cast));
            tensor<fp16, []> var_11277_to_fp16 = const()[name = tensor<string, []>("op_11277_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_753_cast = mul(x = var_11276_cast, y = var_11277_to_fp16);
            tensor<string, []> var_11280_equation_0 = const()[name = tensor<string, []>("op_11280_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_11280_cast = einsum(equation = var_11280_equation_0, values = (var_11242_cast, var_11219_cast));
            tensor<fp16, []> var_11281_to_fp16 = const()[name = tensor<string, []>("op_11281_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_755_cast = mul(x = var_11280_cast, y = var_11281_to_fp16);
            tensor<string, []> var_11284_equation_0 = const()[name = tensor<string, []>("op_11284_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_11284_cast = einsum(equation = var_11284_equation_0, values = (var_11246_cast, var_11223_cast));
            tensor<fp16, []> var_11285_to_fp16 = const()[name = tensor<string, []>("op_11285_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_757_cast = mul(x = var_11284_cast, y = var_11285_to_fp16);
            tensor<string, []> var_11288_equation_0 = const()[name = tensor<string, []>("op_11288_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_11288_cast = einsum(equation = var_11288_equation_0, values = (var_11250_cast, var_11227_cast));
            tensor<fp16, []> var_11289_to_fp16 = const()[name = tensor<string, []>("op_11289_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_759_cast = mul(x = var_11288_cast, y = var_11289_to_fp16);
            tensor<fp16, [2, 77, 1, 4096]> var_11291_cast = softmax(axis = var_10509, x = aw_751_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_11292_cast = softmax(axis = var_10509, x = aw_753_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_11293_cast = softmax(axis = var_10509, x = aw_755_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_11294_cast = softmax(axis = var_10509, x = aw_757_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_11295_cast = softmax(axis = var_10509, x = aw_759_cast);
            tensor<string, []> var_11297_equation_0 = const()[name = tensor<string, []>("op_11297_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_11297_cast = einsum(equation = var_11297_equation_0, values = (var_11252_cast, var_11291_cast));
            tensor<string, []> var_11299_equation_0 = const()[name = tensor<string, []>("op_11299_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_11299_cast = einsum(equation = var_11299_equation_0, values = (var_11256_cast, var_11292_cast));
            tensor<string, []> var_11301_equation_0 = const()[name = tensor<string, []>("op_11301_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_11301_cast = einsum(equation = var_11301_equation_0, values = (var_11260_cast, var_11293_cast));
            tensor<string, []> var_11303_equation_0 = const()[name = tensor<string, []>("op_11303_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_11303_cast = einsum(equation = var_11303_equation_0, values = (var_11264_cast, var_11294_cast));
            tensor<string, []> var_11305_equation_0 = const()[name = tensor<string, []>("op_11305_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_11305_cast = einsum(equation = var_11305_equation_0, values = (var_11268_cast, var_11295_cast));
            tensor<bool, []> input_493_interleave_0 = const()[name = tensor<string, []>("input_493_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 320, 1, 4096]> input_493_cast = concat(axis = var_10509, interleave = input_493_interleave_0, values = (var_11297_cast, var_11299_cast, var_11301_cast, var_11303_cast, var_11305_cast));
            tensor<int32, [2]> var_11311 = const()[name = tensor<string, []>("op_11311"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_11313 = const()[name = tensor<string, []>("op_11313"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_11315_pad_type_0 = const()[name = tensor<string, []>("op_11315_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_11315_pad_0 = const()[name = tensor<string, []>("op_11315_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(823450688)))];
            tensor<fp16, [320]> up_blocks_3_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(823655552)))];
            tensor<fp16, [2, 320, 1, 4096]> var_11315_cast = conv(bias = up_blocks_3_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16, dilations = var_11313, groups = var_10509, pad = var_11315_pad_0, pad_type = var_11315_pad_type_0, strides = var_11311, weight = up_blocks_3_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16, x = input_493_cast);
            tensor<fp16, [2, 320, 1, 4096]> inputs_89_cast = add(x = var_11315_cast, y = inputs_87_cast);
            tensor<int32, [1]> var_11319 = const()[name = tensor<string, []>("op_11319"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> channels_mean_89_cast = reduce_mean(axes = var_11319, keep_dims = var_10504, x = inputs_89_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_89_cast = sub(x = inputs_89_cast, y = channels_mean_89_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_sq_89_cast = mul(x = zero_mean_89_cast, y = zero_mean_89_cast);
            tensor<int32, [1]> var_11323 = const()[name = tensor<string, []>("op_11323"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> var_11324_cast = reduce_mean(axes = var_11323, keep_dims = var_10504, x = zero_mean_sq_89_cast);
            tensor<fp16, []> var_11325_to_fp16 = const()[name = tensor<string, []>("op_11325_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 4096]> var_11326_cast = add(x = var_11324_cast, y = var_11325_to_fp16);
            tensor<fp16, []> denom_89_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_89_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 4096]> denom_89_cast = rsqrt(epsilon = denom_89_epsilon_0_to_fp16, x = var_11326_cast);
            tensor<fp16, [2, 320, 1, 4096]> out_89_cast = mul(x = zero_mean_89_cast, y = denom_89_cast);
            tensor<fp16, [1, 320, 1, 1]> var_11330_to_fp16 = const()[name = tensor<string, []>("op_11330_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(823656256)))];
            tensor<fp16, [2, 320, 1, 4096]> var_11331_cast = add(x = out_89_cast, y = var_11330_to_fp16);
            tensor<fp16, [1, 320, 1, 1]> var_11333_to_fp16 = const()[name = tensor<string, []>("op_11333_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(823656960)))];
            tensor<fp16, [2, 320, 1, 4096]> input_495_cast = mul(x = var_11331_cast, y = var_11333_to_fp16);
            tensor<int32, [2]> var_11341 = const()[name = tensor<string, []>("op_11341"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_11343 = const()[name = tensor<string, []>("op_11343"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_11345_pad_type_0 = const()[name = tensor<string, []>("op_11345_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_11345_pad_0 = const()[name = tensor<string, []>("op_11345_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [2560, 320, 1, 1]> up_blocks_3_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16"), val = tensor<fp16, [2560, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(823657664)))];
            tensor<fp16, [2560]> up_blocks_3_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(825296128)))];
            tensor<fp16, [2, 2560, 1, 4096]> var_11345_cast = conv(bias = up_blocks_3_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16, dilations = var_11343, groups = var_10509, pad = var_11345_pad_0, pad_type = var_11345_pad_type_0, strides = var_11341, weight = up_blocks_3_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16, x = input_495_cast);
            tensor<int32, [2]> var_11346_split_sizes_0 = const()[name = tensor<string, []>("op_11346_split_sizes_0"), val = tensor<int32, [2]>([1280, 1280])];
            tensor<int32, []> var_11346_axis_0 = const()[name = tensor<string, []>("op_11346_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [2, 1280, 1, 4096]> var_11346_cast_0, tensor<fp16, [2, 1280, 1, 4096]> var_11346_cast_1 = split(axis = var_11346_axis_0, split_sizes = var_11346_split_sizes_0, x = var_11345_cast);
            tensor<string, []> var_11348_mode_0 = const()[name = tensor<string, []>("op_11348_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [2, 1280, 1, 4096]> var_11348_cast = gelu(mode = var_11348_mode_0, x = var_11346_cast_1);
            tensor<fp16, [2, 1280, 1, 4096]> input_497_cast = mul(x = var_11346_cast_0, y = var_11348_cast);
            tensor<int32, [2]> var_11352 = const()[name = tensor<string, []>("op_11352"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_11354 = const()[name = tensor<string, []>("op_11354"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_11356_pad_type_0 = const()[name = tensor<string, []>("op_11356_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_11356_pad_0 = const()[name = tensor<string, []>("op_11356_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 1280, 1, 1]> up_blocks_3_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16"), val = tensor<fp16, [320, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(825301312)))];
            tensor<fp16, [320]> up_blocks_3_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(826120576)))];
            tensor<fp16, [2, 320, 1, 4096]> var_11356_cast = conv(bias = up_blocks_3_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16, dilations = var_11354, groups = var_10509, pad = var_11356_pad_0, pad_type = var_11356_pad_type_0, strides = var_11352, weight = up_blocks_3_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16, x = input_497_cast);
            tensor<fp16, [2, 320, 1, 4096]> hidden_states_313_cast = add(x = var_11356_cast, y = inputs_89_cast);
            tensor<int32, [4]> var_11358 = const()[name = tensor<string, []>("op_11358"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> input_499_cast = reshape(shape = var_11358, x = hidden_states_313_cast);
            tensor<int32, [2]> var_11362 = const()[name = tensor<string, []>("op_11362"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_11364 = const()[name = tensor<string, []>("op_11364"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_315_pad_type_0 = const()[name = tensor<string, []>("hidden_states_315_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_315_pad_0 = const()[name = tensor<string, []>("hidden_states_315_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_1_proj_out_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_proj_out_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(826121280)))];
            tensor<fp16, [320]> up_blocks_3_attentions_1_proj_out_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_proj_out_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(826326144)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_315_cast = conv(bias = up_blocks_3_attentions_1_proj_out_bias_to_fp16, dilations = var_11364, groups = var_10509, pad = hidden_states_315_pad_0, pad_type = hidden_states_315_pad_type_0, strides = var_11362, weight = up_blocks_3_attentions_1_proj_out_weight_to_fp16, x = input_499_cast);
            tensor<fp16, [2, 320, 64, 64]> hidden_states_317_cast = add(x = hidden_states_315_cast, y = hidden_states_303_cast);
            tensor<bool, []> input_501_interleave_0 = const()[name = tensor<string, []>("input_501_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 320, 64, 64]> cast_13 = cast(dtype = cast_10_dtype_0, x = input_7_cast);
            tensor<fp16, [2, 640, 64, 64]> input_501_cast = concat(axis = var_10509, interleave = input_501_interleave_0, values = (hidden_states_317_cast, cast_13));
            tensor<int32, [5]> reshape_228_shape_0 = const()[name = tensor<string, []>("reshape_228_shape_0"), val = tensor<int32, [5]>([2, 32, 20, 64, 64])];
            tensor<fp16, [2, 32, 20, 64, 64]> reshape_228_cast = reshape(shape = reshape_228_shape_0, x = input_501_cast);
            tensor<int32, [3]> reduce_mean_171_axes_0 = const()[name = tensor<string, []>("reduce_mean_171_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_171_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_171_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_171_cast = reduce_mean(axes = reduce_mean_171_axes_0, keep_dims = reduce_mean_171_keep_dims_0, x = reshape_228_cast);
            tensor<fp16, [2, 32, 20, 64, 64]> sub_114_cast = sub(x = reshape_228_cast, y = reduce_mean_171_cast);
            tensor<fp16, [2, 32, 20, 64, 64]> square_57_cast = square(x = sub_114_cast);
            tensor<int32, [3]> reduce_mean_173_axes_0 = const()[name = tensor<string, []>("reduce_mean_173_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_173_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_173_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_173_cast = reduce_mean(axes = reduce_mean_173_axes_0, keep_dims = reduce_mean_173_keep_dims_0, x = square_57_cast);
            tensor<fp16, []> add_114_y_0_to_fp16 = const()[name = tensor<string, []>("add_114_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_114_cast = add(x = reduce_mean_173_cast, y = add_114_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_57_cast = sqrt(x = add_114_cast);
            tensor<fp16, [2, 32, 20, 64, 64]> real_div_57_cast = real_div(x = sub_114_cast, y = sqrt_57_cast);
            tensor<int32, [4]> reshape_229_shape_0 = const()[name = tensor<string, []>("reshape_229_shape_0"), val = tensor<int32, [4]>([2, 640, 64, 64])];
            tensor<fp16, [2, 640, 64, 64]> reshape_229_cast = reshape(shape = reshape_229_shape_0, x = real_div_57_cast);
            tensor<fp16, [640]> add_115_mean_0_to_fp16 = const()[name = tensor<string, []>("add_115_mean_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(826326848)))];
            tensor<fp16, [640]> add_115_variance_0_to_fp16 = const()[name = tensor<string, []>("add_115_variance_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(826328192)))];
            tensor<fp16, [640]> add_115_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_115_gamma_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(826329536)))];
            tensor<fp16, [640]> add_115_beta_0_to_fp16 = const()[name = tensor<string, []>("add_115_beta_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(826330880)))];
            tensor<fp16, []> add_115_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_115_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 640, 64, 64]> add_115_cast = batch_norm(beta = add_115_beta_0_to_fp16, epsilon = add_115_epsilon_0_to_fp16, gamma = add_115_gamma_0_to_fp16, mean = add_115_mean_0_to_fp16, variance = add_115_variance_0_to_fp16, x = reshape_229_cast);
            tensor<fp16, [2, 640, 64, 64]> input_505_cast = silu(x = add_115_cast);
            tensor<int32, [2]> var_11382 = const()[name = tensor<string, []>("op_11382"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_11384 = const()[name = tensor<string, []>("op_11384"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_319_pad_type_0 = const()[name = tensor<string, []>("hidden_states_319_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_319_pad_0 = const()[name = tensor<string, []>("hidden_states_319_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [320, 640, 3, 3]> up_blocks_3_resnets_2_conv1_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_2_conv1_weight_to_fp16"), val = tensor<fp16, [320, 640, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(826332224)))];
            tensor<fp16, [320]> up_blocks_3_resnets_2_conv1_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_2_conv1_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(830018688)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_319_cast = conv(bias = up_blocks_3_resnets_2_conv1_bias_to_fp16, dilations = var_11384, groups = var_10509, pad = hidden_states_319_pad_0, pad_type = hidden_states_319_pad_type_0, strides = var_11382, weight = up_blocks_3_resnets_2_conv1_weight_to_fp16, x = input_505_cast);
            tensor<int32, [2]> var_11390 = const()[name = tensor<string, []>("op_11390"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_11392 = const()[name = tensor<string, []>("op_11392"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_pad_type_0 = const()[name = tensor<string, []>("temb_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_pad_0 = const()[name = tensor<string, []>("temb_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 1280, 1, 1]> up_blocks_3_resnets_2_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_2_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [320, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(830019392)))];
            tensor<fp16, [320]> up_blocks_3_resnets_2_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_2_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(830838656)))];
            tensor<fp16, [2, 320, 1, 1]> temb_cast = conv(bias = up_blocks_3_resnets_2_time_emb_proj_bias_to_fp16, dilations = var_11392, groups = var_10509, pad = temb_pad_0, pad_type = temb_pad_type_0, strides = var_11390, weight = up_blocks_3_resnets_2_time_emb_proj_weight_to_fp16, x = cast_12);
            tensor<fp16, [2, 320, 64, 64]> input_509_cast = add(x = hidden_states_319_cast, y = temb_cast);
            tensor<int32, [5]> reshape_232_shape_0 = const()[name = tensor<string, []>("reshape_232_shape_0"), val = tensor<int32, [5]>([2, 32, 10, 64, 64])];
            tensor<fp16, [2, 32, 10, 64, 64]> reshape_232_cast = reshape(shape = reshape_232_shape_0, x = input_509_cast);
            tensor<int32, [3]> reduce_mean_174_axes_0 = const()[name = tensor<string, []>("reduce_mean_174_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_174_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_174_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_174_cast = reduce_mean(axes = reduce_mean_174_axes_0, keep_dims = reduce_mean_174_keep_dims_0, x = reshape_232_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> sub_116_cast = sub(x = reshape_232_cast, y = reduce_mean_174_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> square_58_cast = square(x = sub_116_cast);
            tensor<int32, [3]> reduce_mean_176_axes_0 = const()[name = tensor<string, []>("reduce_mean_176_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_176_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_176_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_176_cast = reduce_mean(axes = reduce_mean_176_axes_0, keep_dims = reduce_mean_176_keep_dims_0, x = square_58_cast);
            tensor<fp16, []> add_116_y_0_to_fp16 = const()[name = tensor<string, []>("add_116_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_116_cast = add(x = reduce_mean_176_cast, y = add_116_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_58_cast = sqrt(x = add_116_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> real_div_58_cast = real_div(x = sub_116_cast, y = sqrt_58_cast);
            tensor<int32, [4]> reshape_233_shape_0 = const()[name = tensor<string, []>("reshape_233_shape_0"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> reshape_233_cast = reshape(shape = reshape_233_shape_0, x = real_div_58_cast);
            tensor<fp16, [320]> add_117_mean_0_to_fp16 = const()[name = tensor<string, []>("add_117_mean_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(830839360)))];
            tensor<fp16, [320]> add_117_variance_0_to_fp16 = const()[name = tensor<string, []>("add_117_variance_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(830840064)))];
            tensor<fp16, [320]> add_117_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_117_gamma_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(830840768)))];
            tensor<fp16, [320]> add_117_beta_0_to_fp16 = const()[name = tensor<string, []>("add_117_beta_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(830841472)))];
            tensor<fp16, []> add_117_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_117_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 320, 64, 64]> add_117_cast = batch_norm(beta = add_117_beta_0_to_fp16, epsilon = add_117_epsilon_0_to_fp16, gamma = add_117_gamma_0_to_fp16, mean = add_117_mean_0_to_fp16, variance = add_117_variance_0_to_fp16, x = reshape_233_cast);
            tensor<fp16, [2, 320, 64, 64]> input_513_cast = silu(x = add_117_cast);
            tensor<int32, [2]> var_11402 = const()[name = tensor<string, []>("op_11402"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_11404 = const()[name = tensor<string, []>("op_11404"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_321_pad_type_0 = const()[name = tensor<string, []>("hidden_states_321_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_321_pad_0 = const()[name = tensor<string, []>("hidden_states_321_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [320, 320, 3, 3]> up_blocks_3_resnets_2_conv2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_2_conv2_weight_to_fp16"), val = tensor<fp16, [320, 320, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(830842176)))];
            tensor<fp16, [320]> up_blocks_3_resnets_2_conv2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_2_conv2_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(832685440)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_321_cast = conv(bias = up_blocks_3_resnets_2_conv2_bias_to_fp16, dilations = var_11404, groups = var_10509, pad = hidden_states_321_pad_0, pad_type = hidden_states_321_pad_type_0, strides = var_11402, weight = up_blocks_3_resnets_2_conv2_weight_to_fp16, x = input_513_cast);
            tensor<int32, [2]> var_11409 = const()[name = tensor<string, []>("op_11409"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_11411 = const()[name = tensor<string, []>("op_11411"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_pad_type_0 = const()[name = tensor<string, []>("x_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_pad_0 = const()[name = tensor<string, []>("x_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 640, 1, 1]> up_blocks_3_resnets_2_conv_shortcut_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_2_conv_shortcut_weight_to_fp16"), val = tensor<fp16, [320, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(832686144)))];
            tensor<fp16, [320]> up_blocks_3_resnets_2_conv_shortcut_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_2_conv_shortcut_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(833095808)))];
            tensor<fp16, [2, 320, 64, 64]> x_cast = conv(bias = up_blocks_3_resnets_2_conv_shortcut_bias_to_fp16, dilations = var_11411, groups = var_10509, pad = x_pad_0, pad_type = x_pad_type_0, strides = var_11409, weight = up_blocks_3_resnets_2_conv_shortcut_weight_to_fp16, x = input_501_cast);
            tensor<fp16, [2, 320, 64, 64]> hidden_states_323_cast = add(x = x_cast, y = hidden_states_321_cast);
            tensor<int32, [5]> reshape_236_shape_0 = const()[name = tensor<string, []>("reshape_236_shape_0"), val = tensor<int32, [5]>([2, 32, 10, 64, 64])];
            tensor<fp16, [2, 32, 10, 64, 64]> reshape_236_cast = reshape(shape = reshape_236_shape_0, x = hidden_states_323_cast);
            tensor<int32, [3]> reduce_mean_177_axes_0 = const()[name = tensor<string, []>("reduce_mean_177_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_177_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_177_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_177_cast = reduce_mean(axes = reduce_mean_177_axes_0, keep_dims = reduce_mean_177_keep_dims_0, x = reshape_236_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> sub_118_cast = sub(x = reshape_236_cast, y = reduce_mean_177_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> square_59_cast = square(x = sub_118_cast);
            tensor<int32, [3]> reduce_mean_179_axes_0 = const()[name = tensor<string, []>("reduce_mean_179_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_179_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_179_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_179_cast = reduce_mean(axes = reduce_mean_179_axes_0, keep_dims = reduce_mean_179_keep_dims_0, x = square_59_cast);
            tensor<fp16, []> add_118_y_0_to_fp16 = const()[name = tensor<string, []>("add_118_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_118_cast = add(x = reduce_mean_179_cast, y = add_118_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_59_cast = sqrt(x = add_118_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> real_div_59_cast = real_div(x = sub_118_cast, y = sqrt_59_cast);
            tensor<int32, [4]> reshape_237_shape_0 = const()[name = tensor<string, []>("reshape_237_shape_0"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> reshape_237_cast = reshape(shape = reshape_237_shape_0, x = real_div_59_cast);
            tensor<fp16, [320]> add_119_mean_0_to_fp16 = const()[name = tensor<string, []>("add_119_mean_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(833096512)))];
            tensor<fp16, [320]> add_119_variance_0_to_fp16 = const()[name = tensor<string, []>("add_119_variance_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(833097216)))];
            tensor<fp16, [320]> add_119_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_119_gamma_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(833097920)))];
            tensor<fp16, [320]> add_119_beta_0_to_fp16 = const()[name = tensor<string, []>("add_119_beta_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(833098624)))];
            tensor<fp16, []> add_119_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_119_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 320, 64, 64]> add_119_cast = batch_norm(beta = add_119_beta_0_to_fp16, epsilon = add_119_epsilon_0_to_fp16, gamma = add_119_gamma_0_to_fp16, mean = add_119_mean_0_to_fp16, variance = add_119_variance_0_to_fp16, x = reshape_237_cast);
            tensor<int32, [2]> var_11431 = const()[name = tensor<string, []>("op_11431"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_11433 = const()[name = tensor<string, []>("op_11433"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_325_pad_type_0 = const()[name = tensor<string, []>("hidden_states_325_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_325_pad_0 = const()[name = tensor<string, []>("hidden_states_325_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_2_proj_in_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_proj_in_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(833099328)))];
            tensor<fp16, [320]> up_blocks_3_attentions_2_proj_in_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_proj_in_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(833304192)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_325_cast = conv(bias = up_blocks_3_attentions_2_proj_in_bias_to_fp16, dilations = var_11433, groups = var_10509, pad = hidden_states_325_pad_0, pad_type = hidden_states_325_pad_type_0, strides = var_11431, weight = up_blocks_3_attentions_2_proj_in_weight_to_fp16, x = add_119_cast);
            tensor<int32, [4]> var_11438 = const()[name = tensor<string, []>("op_11438"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<fp16, [2, 320, 1, 4096]> inputs_91_cast = reshape(shape = var_11438, x = hidden_states_325_cast);
            tensor<int32, [1]> var_11448 = const()[name = tensor<string, []>("op_11448"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> channels_mean_91_cast = reduce_mean(axes = var_11448, keep_dims = var_10504, x = inputs_91_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_91_cast = sub(x = inputs_91_cast, y = channels_mean_91_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_sq_91_cast = mul(x = zero_mean_91_cast, y = zero_mean_91_cast);
            tensor<int32, [1]> var_11452 = const()[name = tensor<string, []>("op_11452"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> var_11453_cast = reduce_mean(axes = var_11452, keep_dims = var_10504, x = zero_mean_sq_91_cast);
            tensor<fp16, []> var_11454_to_fp16 = const()[name = tensor<string, []>("op_11454_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 4096]> var_11455_cast = add(x = var_11453_cast, y = var_11454_to_fp16);
            tensor<fp16, []> denom_91_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_91_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 4096]> denom_91_cast = rsqrt(epsilon = denom_91_epsilon_0_to_fp16, x = var_11455_cast);
            tensor<fp16, [2, 320, 1, 4096]> out_91_cast = mul(x = zero_mean_91_cast, y = denom_91_cast);
            tensor<fp16, [1, 320, 1, 1]> var_11459_to_fp16 = const()[name = tensor<string, []>("op_11459_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(833304896)))];
            tensor<fp16, [2, 320, 1, 4096]> var_11460_cast = add(x = out_91_cast, y = var_11459_to_fp16);
            tensor<fp16, [1, 320, 1, 1]> var_11462_to_fp16 = const()[name = tensor<string, []>("op_11462_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(833305600)))];
            tensor<fp16, [2, 320, 1, 4096]> hidden_states_327_cast = mul(x = var_11460_cast, y = var_11462_to_fp16);
            tensor<int32, [2]> var_11469 = const()[name = tensor<string, []>("op_11469"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_11471 = const()[name = tensor<string, []>("op_11471"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_61_pad_type_0 = const()[name = tensor<string, []>("q_61_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_61_pad_0 = const()[name = tensor<string, []>("q_61_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_2_transformer_blocks_0_attn1_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_transformer_blocks_0_attn1_to_q_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(833306304)))];
            tensor<fp16, [2, 320, 1, 4096]> q_61_cast = conv(dilations = var_11471, groups = var_10509, pad = q_61_pad_0, pad_type = q_61_pad_type_0, strides = var_11469, weight = up_blocks_3_attentions_2_transformer_blocks_0_attn1_to_q_weight_to_fp16, x = hidden_states_327_cast);
            tensor<int32, [2]> var_11475 = const()[name = tensor<string, []>("op_11475"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_11477 = const()[name = tensor<string, []>("op_11477"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_121_pad_type_0 = const()[name = tensor<string, []>("k_121_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_121_pad_0 = const()[name = tensor<string, []>("k_121_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_2_transformer_blocks_0_attn1_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_transformer_blocks_0_attn1_to_k_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(833511168)))];
            tensor<fp16, [2, 320, 1, 4096]> k_121_cast = conv(dilations = var_11477, groups = var_10509, pad = k_121_pad_0, pad_type = k_121_pad_type_0, strides = var_11475, weight = up_blocks_3_attentions_2_transformer_blocks_0_attn1_to_k_weight_to_fp16, x = hidden_states_327_cast);
            tensor<int32, [2]> var_11481 = const()[name = tensor<string, []>("op_11481"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_11483 = const()[name = tensor<string, []>("op_11483"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_61_pad_type_0 = const()[name = tensor<string, []>("v_61_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_61_pad_0 = const()[name = tensor<string, []>("v_61_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_2_transformer_blocks_0_attn1_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_transformer_blocks_0_attn1_to_v_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(833716032)))];
            tensor<fp16, [2, 320, 1, 4096]> v_61_cast = conv(dilations = var_11483, groups = var_10509, pad = v_61_pad_0, pad_type = v_61_pad_type_0, strides = var_11481, weight = up_blocks_3_attentions_2_transformer_blocks_0_attn1_to_v_weight_to_fp16, x = hidden_states_327_cast);
            tensor<int32, [4]> var_11487_begin_0 = const()[name = tensor<string, []>("op_11487_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_11487_end_0 = const()[name = tensor<string, []>("op_11487_end_0"), val = tensor<int32, [4]>([2, 64, 1, 4096])];
            tensor<bool, [4]> var_11487_end_mask_0 = const()[name = tensor<string, []>("op_11487_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_11487_cast = slice_by_index(begin = var_11487_begin_0, end = var_11487_end_0, end_mask = var_11487_end_mask_0, x = q_61_cast);
            tensor<int32, [4]> var_11491_begin_0 = const()[name = tensor<string, []>("op_11491_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_11491_end_0 = const()[name = tensor<string, []>("op_11491_end_0"), val = tensor<int32, [4]>([2, 128, 1, 4096])];
            tensor<bool, [4]> var_11491_end_mask_0 = const()[name = tensor<string, []>("op_11491_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_11491_cast = slice_by_index(begin = var_11491_begin_0, end = var_11491_end_0, end_mask = var_11491_end_mask_0, x = q_61_cast);
            tensor<int32, [4]> var_11495_begin_0 = const()[name = tensor<string, []>("op_11495_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_11495_end_0 = const()[name = tensor<string, []>("op_11495_end_0"), val = tensor<int32, [4]>([2, 192, 1, 4096])];
            tensor<bool, [4]> var_11495_end_mask_0 = const()[name = tensor<string, []>("op_11495_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_11495_cast = slice_by_index(begin = var_11495_begin_0, end = var_11495_end_0, end_mask = var_11495_end_mask_0, x = q_61_cast);
            tensor<int32, [4]> var_11499_begin_0 = const()[name = tensor<string, []>("op_11499_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_11499_end_0 = const()[name = tensor<string, []>("op_11499_end_0"), val = tensor<int32, [4]>([2, 256, 1, 4096])];
            tensor<bool, [4]> var_11499_end_mask_0 = const()[name = tensor<string, []>("op_11499_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_11499_cast = slice_by_index(begin = var_11499_begin_0, end = var_11499_end_0, end_mask = var_11499_end_mask_0, x = q_61_cast);
            tensor<int32, [4]> var_11503_begin_0 = const()[name = tensor<string, []>("op_11503_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_11503_end_0 = const()[name = tensor<string, []>("op_11503_end_0"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<bool, [4]> var_11503_end_mask_0 = const()[name = tensor<string, []>("op_11503_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_11503_cast = slice_by_index(begin = var_11503_begin_0, end = var_11503_end_0, end_mask = var_11503_end_mask_0, x = q_61_cast);
            tensor<int32, [4]> k_123_perm_0 = const()[name = tensor<string, []>("k_123_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_11510_begin_0 = const()[name = tensor<string, []>("op_11510_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_11510_end_0 = const()[name = tensor<string, []>("op_11510_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 64])];
            tensor<bool, [4]> var_11510_end_mask_0 = const()[name = tensor<string, []>("op_11510_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 320]> transpose_1 = transpose(perm = k_123_perm_0, x = k_121_cast);
            tensor<fp16, [2, 4096, 1, 64]> var_11510_cast = slice_by_index(begin = var_11510_begin_0, end = var_11510_end_0, end_mask = var_11510_end_mask_0, x = transpose_1);
            tensor<int32, [4]> var_11514_begin_0 = const()[name = tensor<string, []>("op_11514_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 64])];
            tensor<int32, [4]> var_11514_end_0 = const()[name = tensor<string, []>("op_11514_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 128])];
            tensor<bool, [4]> var_11514_end_mask_0 = const()[name = tensor<string, []>("op_11514_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 64]> var_11514_cast = slice_by_index(begin = var_11514_begin_0, end = var_11514_end_0, end_mask = var_11514_end_mask_0, x = transpose_1);
            tensor<int32, [4]> var_11518_begin_0 = const()[name = tensor<string, []>("op_11518_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 128])];
            tensor<int32, [4]> var_11518_end_0 = const()[name = tensor<string, []>("op_11518_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 192])];
            tensor<bool, [4]> var_11518_end_mask_0 = const()[name = tensor<string, []>("op_11518_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 64]> var_11518_cast = slice_by_index(begin = var_11518_begin_0, end = var_11518_end_0, end_mask = var_11518_end_mask_0, x = transpose_1);
            tensor<int32, [4]> var_11522_begin_0 = const()[name = tensor<string, []>("op_11522_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 192])];
            tensor<int32, [4]> var_11522_end_0 = const()[name = tensor<string, []>("op_11522_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 256])];
            tensor<bool, [4]> var_11522_end_mask_0 = const()[name = tensor<string, []>("op_11522_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 64]> var_11522_cast = slice_by_index(begin = var_11522_begin_0, end = var_11522_end_0, end_mask = var_11522_end_mask_0, x = transpose_1);
            tensor<int32, [4]> var_11526_begin_0 = const()[name = tensor<string, []>("op_11526_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 256])];
            tensor<int32, [4]> var_11526_end_0 = const()[name = tensor<string, []>("op_11526_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 320])];
            tensor<bool, [4]> var_11526_end_mask_0 = const()[name = tensor<string, []>("op_11526_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 64]> var_11526_cast = slice_by_index(begin = var_11526_begin_0, end = var_11526_end_0, end_mask = var_11526_end_mask_0, x = transpose_1);
            tensor<int32, [4]> var_11528_begin_0 = const()[name = tensor<string, []>("op_11528_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_11528_end_0 = const()[name = tensor<string, []>("op_11528_end_0"), val = tensor<int32, [4]>([2, 64, 1, 4096])];
            tensor<bool, [4]> var_11528_end_mask_0 = const()[name = tensor<string, []>("op_11528_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_11528_cast = slice_by_index(begin = var_11528_begin_0, end = var_11528_end_0, end_mask = var_11528_end_mask_0, x = v_61_cast);
            tensor<int32, [4]> var_11532_begin_0 = const()[name = tensor<string, []>("op_11532_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_11532_end_0 = const()[name = tensor<string, []>("op_11532_end_0"), val = tensor<int32, [4]>([2, 128, 1, 4096])];
            tensor<bool, [4]> var_11532_end_mask_0 = const()[name = tensor<string, []>("op_11532_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_11532_cast = slice_by_index(begin = var_11532_begin_0, end = var_11532_end_0, end_mask = var_11532_end_mask_0, x = v_61_cast);
            tensor<int32, [4]> var_11536_begin_0 = const()[name = tensor<string, []>("op_11536_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_11536_end_0 = const()[name = tensor<string, []>("op_11536_end_0"), val = tensor<int32, [4]>([2, 192, 1, 4096])];
            tensor<bool, [4]> var_11536_end_mask_0 = const()[name = tensor<string, []>("op_11536_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_11536_cast = slice_by_index(begin = var_11536_begin_0, end = var_11536_end_0, end_mask = var_11536_end_mask_0, x = v_61_cast);
            tensor<int32, [4]> var_11540_begin_0 = const()[name = tensor<string, []>("op_11540_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_11540_end_0 = const()[name = tensor<string, []>("op_11540_end_0"), val = tensor<int32, [4]>([2, 256, 1, 4096])];
            tensor<bool, [4]> var_11540_end_mask_0 = const()[name = tensor<string, []>("op_11540_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_11540_cast = slice_by_index(begin = var_11540_begin_0, end = var_11540_end_0, end_mask = var_11540_end_mask_0, x = v_61_cast);
            tensor<int32, [4]> var_11544_begin_0 = const()[name = tensor<string, []>("op_11544_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_11544_end_0 = const()[name = tensor<string, []>("op_11544_end_0"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<bool, [4]> var_11544_end_mask_0 = const()[name = tensor<string, []>("op_11544_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_11544_cast = slice_by_index(begin = var_11544_begin_0, end = var_11544_end_0, end_mask = var_11544_end_mask_0, x = v_61_cast);
            tensor<string, []> var_11548_equation_0 = const()[name = tensor<string, []>("op_11548_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_11548_cast = einsum(equation = var_11548_equation_0, values = (var_11510_cast, var_11487_cast));
            tensor<fp16, []> var_11549_to_fp16 = const()[name = tensor<string, []>("op_11549_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_761_cast = mul(x = var_11548_cast, y = var_11549_to_fp16);
            tensor<string, []> var_11552_equation_0 = const()[name = tensor<string, []>("op_11552_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_11552_cast = einsum(equation = var_11552_equation_0, values = (var_11514_cast, var_11491_cast));
            tensor<fp16, []> var_11553_to_fp16 = const()[name = tensor<string, []>("op_11553_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_763_cast = mul(x = var_11552_cast, y = var_11553_to_fp16);
            tensor<string, []> var_11556_equation_0 = const()[name = tensor<string, []>("op_11556_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_11556_cast = einsum(equation = var_11556_equation_0, values = (var_11518_cast, var_11495_cast));
            tensor<fp16, []> var_11557_to_fp16 = const()[name = tensor<string, []>("op_11557_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_765_cast = mul(x = var_11556_cast, y = var_11557_to_fp16);
            tensor<string, []> var_11560_equation_0 = const()[name = tensor<string, []>("op_11560_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_11560_cast = einsum(equation = var_11560_equation_0, values = (var_11522_cast, var_11499_cast));
            tensor<fp16, []> var_11561_to_fp16 = const()[name = tensor<string, []>("op_11561_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_767_cast = mul(x = var_11560_cast, y = var_11561_to_fp16);
            tensor<string, []> var_11564_equation_0 = const()[name = tensor<string, []>("op_11564_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_11564_cast = einsum(equation = var_11564_equation_0, values = (var_11526_cast, var_11503_cast));
            tensor<fp16, []> var_11565_to_fp16 = const()[name = tensor<string, []>("op_11565_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_769_cast = mul(x = var_11564_cast, y = var_11565_to_fp16);
            tensor<fp16, [2, 4096, 1, 4096]> var_11567_cast = softmax(axis = var_10509, x = aw_761_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_11568_cast = softmax(axis = var_10509, x = aw_763_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_11569_cast = softmax(axis = var_10509, x = aw_765_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_11570_cast = softmax(axis = var_10509, x = aw_767_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_11571_cast = softmax(axis = var_10509, x = aw_769_cast);
            tensor<string, []> var_11573_equation_0 = const()[name = tensor<string, []>("op_11573_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_11573_cast = einsum(equation = var_11573_equation_0, values = (var_11528_cast, var_11567_cast));
            tensor<string, []> var_11575_equation_0 = const()[name = tensor<string, []>("op_11575_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_11575_cast = einsum(equation = var_11575_equation_0, values = (var_11532_cast, var_11568_cast));
            tensor<string, []> var_11577_equation_0 = const()[name = tensor<string, []>("op_11577_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_11577_cast = einsum(equation = var_11577_equation_0, values = (var_11536_cast, var_11569_cast));
            tensor<string, []> var_11579_equation_0 = const()[name = tensor<string, []>("op_11579_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_11579_cast = einsum(equation = var_11579_equation_0, values = (var_11540_cast, var_11570_cast));
            tensor<string, []> var_11581_equation_0 = const()[name = tensor<string, []>("op_11581_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_11581_cast = einsum(equation = var_11581_equation_0, values = (var_11544_cast, var_11571_cast));
            tensor<bool, []> input_517_interleave_0 = const()[name = tensor<string, []>("input_517_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 320, 1, 4096]> input_517_cast = concat(axis = var_10509, interleave = input_517_interleave_0, values = (var_11573_cast, var_11575_cast, var_11577_cast, var_11579_cast, var_11581_cast));
            tensor<int32, [2]> var_11587 = const()[name = tensor<string, []>("op_11587"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_11589 = const()[name = tensor<string, []>("op_11589"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_11591_pad_type_0 = const()[name = tensor<string, []>("op_11591_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_11591_pad_0 = const()[name = tensor<string, []>("op_11591_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_2_transformer_blocks_0_attn1_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_transformer_blocks_0_attn1_to_out_0_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(833920896)))];
            tensor<fp16, [320]> up_blocks_3_attentions_2_transformer_blocks_0_attn1_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_transformer_blocks_0_attn1_to_out_0_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(834125760)))];
            tensor<fp16, [2, 320, 1, 4096]> var_11591_cast = conv(bias = up_blocks_3_attentions_2_transformer_blocks_0_attn1_to_out_0_bias_to_fp16, dilations = var_11589, groups = var_10509, pad = var_11591_pad_0, pad_type = var_11591_pad_type_0, strides = var_11587, weight = up_blocks_3_attentions_2_transformer_blocks_0_attn1_to_out_0_weight_to_fp16, x = input_517_cast);
            tensor<fp16, [2, 320, 1, 4096]> inputs_93_cast = add(x = var_11591_cast, y = inputs_91_cast);
            tensor<int32, [1]> var_11595 = const()[name = tensor<string, []>("op_11595"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> channels_mean_93_cast = reduce_mean(axes = var_11595, keep_dims = var_10504, x = inputs_93_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_93_cast = sub(x = inputs_93_cast, y = channels_mean_93_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_sq_93_cast = mul(x = zero_mean_93_cast, y = zero_mean_93_cast);
            tensor<int32, [1]> var_11599 = const()[name = tensor<string, []>("op_11599"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> var_11600_cast = reduce_mean(axes = var_11599, keep_dims = var_10504, x = zero_mean_sq_93_cast);
            tensor<fp16, []> var_11601_to_fp16 = const()[name = tensor<string, []>("op_11601_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 4096]> var_11602_cast = add(x = var_11600_cast, y = var_11601_to_fp16);
            tensor<fp16, []> denom_93_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_93_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 4096]> denom_93_cast = rsqrt(epsilon = denom_93_epsilon_0_to_fp16, x = var_11602_cast);
            tensor<fp16, [2, 320, 1, 4096]> out_93_cast = mul(x = zero_mean_93_cast, y = denom_93_cast);
            tensor<fp16, [1, 320, 1, 1]> var_11606_to_fp16 = const()[name = tensor<string, []>("op_11606_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(834126464)))];
            tensor<fp16, [2, 320, 1, 4096]> var_11607_cast = add(x = out_93_cast, y = var_11606_to_fp16);
            tensor<fp16, [1, 320, 1, 1]> var_11609_to_fp16 = const()[name = tensor<string, []>("op_11609_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(834127168)))];
            tensor<fp16, [2, 320, 1, 4096]> hidden_states_329_cast = mul(x = var_11607_cast, y = var_11609_to_fp16);
            tensor<int32, [2]> var_11616 = const()[name = tensor<string, []>("op_11616"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_11618 = const()[name = tensor<string, []>("op_11618"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_pad_type_0 = const()[name = tensor<string, []>("q_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_pad_0 = const()[name = tensor<string, []>("q_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_2_transformer_blocks_0_attn2_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_transformer_blocks_0_attn2_to_q_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(834127872)))];
            tensor<fp16, [2, 320, 1, 4096]> q_cast = conv(dilations = var_11618, groups = var_10509, pad = q_pad_0, pad_type = q_pad_type_0, strides = var_11616, weight = up_blocks_3_attentions_2_transformer_blocks_0_attn2_to_q_weight_to_fp16, x = hidden_states_329_cast);
            tensor<int32, [2]> var_11622 = const()[name = tensor<string, []>("op_11622"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_11624 = const()[name = tensor<string, []>("op_11624"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_125_pad_type_0 = const()[name = tensor<string, []>("k_125_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_125_pad_0 = const()[name = tensor<string, []>("k_125_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 1024, 1, 1]> up_blocks_3_attentions_2_transformer_blocks_0_attn2_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_transformer_blocks_0_attn2_to_k_weight_to_fp16"), val = tensor<fp16, [320, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(834332736)))];
            tensor<fp16, [2, 320, 1, 77]> k_125_cast = conv(dilations = var_11624, groups = var_10509, pad = k_125_pad_0, pad_type = k_125_pad_type_0, strides = var_11622, weight = up_blocks_3_attentions_2_transformer_blocks_0_attn2_to_k_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [2]> var_11628 = const()[name = tensor<string, []>("op_11628"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_11630 = const()[name = tensor<string, []>("op_11630"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_pad_type_0 = const()[name = tensor<string, []>("v_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_pad_0 = const()[name = tensor<string, []>("v_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 1024, 1, 1]> up_blocks_3_attentions_2_transformer_blocks_0_attn2_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_transformer_blocks_0_attn2_to_v_weight_to_fp16"), val = tensor<fp16, [320, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(834988160)))];
            tensor<fp16, [2, 320, 1, 77]> v_cast = conv(dilations = var_11630, groups = var_10509, pad = v_pad_0, pad_type = v_pad_type_0, strides = var_11628, weight = up_blocks_3_attentions_2_transformer_blocks_0_attn2_to_v_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [4]> var_11634_begin_0 = const()[name = tensor<string, []>("op_11634_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_11634_end_0 = const()[name = tensor<string, []>("op_11634_end_0"), val = tensor<int32, [4]>([2, 64, 1, 4096])];
            tensor<bool, [4]> var_11634_end_mask_0 = const()[name = tensor<string, []>("op_11634_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_11634_cast = slice_by_index(begin = var_11634_begin_0, end = var_11634_end_0, end_mask = var_11634_end_mask_0, x = q_cast);
            tensor<int32, [4]> var_11638_begin_0 = const()[name = tensor<string, []>("op_11638_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_11638_end_0 = const()[name = tensor<string, []>("op_11638_end_0"), val = tensor<int32, [4]>([2, 128, 1, 4096])];
            tensor<bool, [4]> var_11638_end_mask_0 = const()[name = tensor<string, []>("op_11638_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_11638_cast = slice_by_index(begin = var_11638_begin_0, end = var_11638_end_0, end_mask = var_11638_end_mask_0, x = q_cast);
            tensor<int32, [4]> var_11642_begin_0 = const()[name = tensor<string, []>("op_11642_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_11642_end_0 = const()[name = tensor<string, []>("op_11642_end_0"), val = tensor<int32, [4]>([2, 192, 1, 4096])];
            tensor<bool, [4]> var_11642_end_mask_0 = const()[name = tensor<string, []>("op_11642_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_11642_cast = slice_by_index(begin = var_11642_begin_0, end = var_11642_end_0, end_mask = var_11642_end_mask_0, x = q_cast);
            tensor<int32, [4]> var_11646_begin_0 = const()[name = tensor<string, []>("op_11646_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_11646_end_0 = const()[name = tensor<string, []>("op_11646_end_0"), val = tensor<int32, [4]>([2, 256, 1, 4096])];
            tensor<bool, [4]> var_11646_end_mask_0 = const()[name = tensor<string, []>("op_11646_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_11646_cast = slice_by_index(begin = var_11646_begin_0, end = var_11646_end_0, end_mask = var_11646_end_mask_0, x = q_cast);
            tensor<int32, [4]> var_11650_begin_0 = const()[name = tensor<string, []>("op_11650_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_11650_end_0 = const()[name = tensor<string, []>("op_11650_end_0"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<bool, [4]> var_11650_end_mask_0 = const()[name = tensor<string, []>("op_11650_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 4096]> var_11650_cast = slice_by_index(begin = var_11650_begin_0, end = var_11650_end_0, end_mask = var_11650_end_mask_0, x = q_cast);
            tensor<int32, [4]> k_perm_0 = const()[name = tensor<string, []>("k_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_11657_begin_0 = const()[name = tensor<string, []>("op_11657_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_11657_end_0 = const()[name = tensor<string, []>("op_11657_end_0"), val = tensor<int32, [4]>([2, 77, 1, 64])];
            tensor<bool, [4]> var_11657_end_mask_0 = const()[name = tensor<string, []>("op_11657_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 320]> transpose_0 = transpose(perm = k_perm_0, x = k_125_cast);
            tensor<fp16, [2, 77, 1, 64]> var_11657_cast = slice_by_index(begin = var_11657_begin_0, end = var_11657_end_0, end_mask = var_11657_end_mask_0, x = transpose_0);
            tensor<int32, [4]> var_11661_begin_0 = const()[name = tensor<string, []>("op_11661_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 64])];
            tensor<int32, [4]> var_11661_end_0 = const()[name = tensor<string, []>("op_11661_end_0"), val = tensor<int32, [4]>([2, 77, 1, 128])];
            tensor<bool, [4]> var_11661_end_mask_0 = const()[name = tensor<string, []>("op_11661_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_11661_cast = slice_by_index(begin = var_11661_begin_0, end = var_11661_end_0, end_mask = var_11661_end_mask_0, x = transpose_0);
            tensor<int32, [4]> var_11665_begin_0 = const()[name = tensor<string, []>("op_11665_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 128])];
            tensor<int32, [4]> var_11665_end_0 = const()[name = tensor<string, []>("op_11665_end_0"), val = tensor<int32, [4]>([2, 77, 1, 192])];
            tensor<bool, [4]> var_11665_end_mask_0 = const()[name = tensor<string, []>("op_11665_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_11665_cast = slice_by_index(begin = var_11665_begin_0, end = var_11665_end_0, end_mask = var_11665_end_mask_0, x = transpose_0);
            tensor<int32, [4]> var_11669_begin_0 = const()[name = tensor<string, []>("op_11669_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 192])];
            tensor<int32, [4]> var_11669_end_0 = const()[name = tensor<string, []>("op_11669_end_0"), val = tensor<int32, [4]>([2, 77, 1, 256])];
            tensor<bool, [4]> var_11669_end_mask_0 = const()[name = tensor<string, []>("op_11669_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_11669_cast = slice_by_index(begin = var_11669_begin_0, end = var_11669_end_0, end_mask = var_11669_end_mask_0, x = transpose_0);
            tensor<int32, [4]> var_11673_begin_0 = const()[name = tensor<string, []>("op_11673_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 256])];
            tensor<int32, [4]> var_11673_end_0 = const()[name = tensor<string, []>("op_11673_end_0"), val = tensor<int32, [4]>([2, 77, 1, 320])];
            tensor<bool, [4]> var_11673_end_mask_0 = const()[name = tensor<string, []>("op_11673_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 64]> var_11673_cast = slice_by_index(begin = var_11673_begin_0, end = var_11673_end_0, end_mask = var_11673_end_mask_0, x = transpose_0);
            tensor<int32, [4]> var_11675_begin_0 = const()[name = tensor<string, []>("op_11675_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_11675_end_0 = const()[name = tensor<string, []>("op_11675_end_0"), val = tensor<int32, [4]>([2, 64, 1, 77])];
            tensor<bool, [4]> var_11675_end_mask_0 = const()[name = tensor<string, []>("op_11675_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_11675_cast = slice_by_index(begin = var_11675_begin_0, end = var_11675_end_0, end_mask = var_11675_end_mask_0, x = v_cast);
            tensor<int32, [4]> var_11679_begin_0 = const()[name = tensor<string, []>("op_11679_begin_0"), val = tensor<int32, [4]>([0, 64, 0, 0])];
            tensor<int32, [4]> var_11679_end_0 = const()[name = tensor<string, []>("op_11679_end_0"), val = tensor<int32, [4]>([2, 128, 1, 77])];
            tensor<bool, [4]> var_11679_end_mask_0 = const()[name = tensor<string, []>("op_11679_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_11679_cast = slice_by_index(begin = var_11679_begin_0, end = var_11679_end_0, end_mask = var_11679_end_mask_0, x = v_cast);
            tensor<int32, [4]> var_11683_begin_0 = const()[name = tensor<string, []>("op_11683_begin_0"), val = tensor<int32, [4]>([0, 128, 0, 0])];
            tensor<int32, [4]> var_11683_end_0 = const()[name = tensor<string, []>("op_11683_end_0"), val = tensor<int32, [4]>([2, 192, 1, 77])];
            tensor<bool, [4]> var_11683_end_mask_0 = const()[name = tensor<string, []>("op_11683_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_11683_cast = slice_by_index(begin = var_11683_begin_0, end = var_11683_end_0, end_mask = var_11683_end_mask_0, x = v_cast);
            tensor<int32, [4]> var_11687_begin_0 = const()[name = tensor<string, []>("op_11687_begin_0"), val = tensor<int32, [4]>([0, 192, 0, 0])];
            tensor<int32, [4]> var_11687_end_0 = const()[name = tensor<string, []>("op_11687_end_0"), val = tensor<int32, [4]>([2, 256, 1, 77])];
            tensor<bool, [4]> var_11687_end_mask_0 = const()[name = tensor<string, []>("op_11687_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_11687_cast = slice_by_index(begin = var_11687_begin_0, end = var_11687_end_0, end_mask = var_11687_end_mask_0, x = v_cast);
            tensor<int32, [4]> var_11691_begin_0 = const()[name = tensor<string, []>("op_11691_begin_0"), val = tensor<int32, [4]>([0, 256, 0, 0])];
            tensor<int32, [4]> var_11691_end_0 = const()[name = tensor<string, []>("op_11691_end_0"), val = tensor<int32, [4]>([2, 320, 1, 77])];
            tensor<bool, [4]> var_11691_end_mask_0 = const()[name = tensor<string, []>("op_11691_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 64, 1, 77]> var_11691_cast = slice_by_index(begin = var_11691_begin_0, end = var_11691_end_0, end_mask = var_11691_end_mask_0, x = v_cast);
            tensor<string, []> var_11695_equation_0 = const()[name = tensor<string, []>("op_11695_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_11695_cast = einsum(equation = var_11695_equation_0, values = (var_11657_cast, var_11634_cast));
            tensor<fp16, []> var_11696_to_fp16 = const()[name = tensor<string, []>("op_11696_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_771_cast = mul(x = var_11695_cast, y = var_11696_to_fp16);
            tensor<string, []> var_11699_equation_0 = const()[name = tensor<string, []>("op_11699_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_11699_cast = einsum(equation = var_11699_equation_0, values = (var_11661_cast, var_11638_cast));
            tensor<fp16, []> var_11700_to_fp16 = const()[name = tensor<string, []>("op_11700_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_773_cast = mul(x = var_11699_cast, y = var_11700_to_fp16);
            tensor<string, []> var_11703_equation_0 = const()[name = tensor<string, []>("op_11703_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_11703_cast = einsum(equation = var_11703_equation_0, values = (var_11665_cast, var_11642_cast));
            tensor<fp16, []> var_11704_to_fp16 = const()[name = tensor<string, []>("op_11704_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_775_cast = mul(x = var_11703_cast, y = var_11704_to_fp16);
            tensor<string, []> var_11707_equation_0 = const()[name = tensor<string, []>("op_11707_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_11707_cast = einsum(equation = var_11707_equation_0, values = (var_11669_cast, var_11646_cast));
            tensor<fp16, []> var_11708_to_fp16 = const()[name = tensor<string, []>("op_11708_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_777_cast = mul(x = var_11707_cast, y = var_11708_to_fp16);
            tensor<string, []> var_11711_equation_0 = const()[name = tensor<string, []>("op_11711_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_11711_cast = einsum(equation = var_11711_equation_0, values = (var_11673_cast, var_11650_cast));
            tensor<fp16, []> var_11712_to_fp16 = const()[name = tensor<string, []>("op_11712_to_fp16"), val = tensor<fp16, []>(0x1p-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_cast = mul(x = var_11711_cast, y = var_11712_to_fp16);
            tensor<fp16, [2, 77, 1, 4096]> var_11714_cast = softmax(axis = var_10509, x = aw_771_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_11715_cast = softmax(axis = var_10509, x = aw_773_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_11716_cast = softmax(axis = var_10509, x = aw_775_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_11717_cast = softmax(axis = var_10509, x = aw_777_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_11718_cast = softmax(axis = var_10509, x = aw_cast);
            tensor<string, []> var_11720_equation_0 = const()[name = tensor<string, []>("op_11720_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_11720_cast = einsum(equation = var_11720_equation_0, values = (var_11675_cast, var_11714_cast));
            tensor<string, []> var_11722_equation_0 = const()[name = tensor<string, []>("op_11722_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_11722_cast = einsum(equation = var_11722_equation_0, values = (var_11679_cast, var_11715_cast));
            tensor<string, []> var_11724_equation_0 = const()[name = tensor<string, []>("op_11724_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_11724_cast = einsum(equation = var_11724_equation_0, values = (var_11683_cast, var_11716_cast));
            tensor<string, []> var_11726_equation_0 = const()[name = tensor<string, []>("op_11726_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_11726_cast = einsum(equation = var_11726_equation_0, values = (var_11687_cast, var_11717_cast));
            tensor<string, []> var_11728_equation_0 = const()[name = tensor<string, []>("op_11728_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 64, 1, 4096]> var_11728_cast = einsum(equation = var_11728_equation_0, values = (var_11691_cast, var_11718_cast));
            tensor<bool, []> input_519_interleave_0 = const()[name = tensor<string, []>("input_519_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 320, 1, 4096]> input_519_cast = concat(axis = var_10509, interleave = input_519_interleave_0, values = (var_11720_cast, var_11722_cast, var_11724_cast, var_11726_cast, var_11728_cast));
            tensor<int32, [2]> var_11734 = const()[name = tensor<string, []>("op_11734"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_11736 = const()[name = tensor<string, []>("op_11736"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_11738_pad_type_0 = const()[name = tensor<string, []>("op_11738_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_11738_pad_0 = const()[name = tensor<string, []>("op_11738_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_2_transformer_blocks_0_attn2_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_transformer_blocks_0_attn2_to_out_0_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(835643584)))];
            tensor<fp16, [320]> up_blocks_3_attentions_2_transformer_blocks_0_attn2_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_transformer_blocks_0_attn2_to_out_0_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(835848448)))];
            tensor<fp16, [2, 320, 1, 4096]> var_11738_cast = conv(bias = up_blocks_3_attentions_2_transformer_blocks_0_attn2_to_out_0_bias_to_fp16, dilations = var_11736, groups = var_10509, pad = var_11738_pad_0, pad_type = var_11738_pad_type_0, strides = var_11734, weight = up_blocks_3_attentions_2_transformer_blocks_0_attn2_to_out_0_weight_to_fp16, x = input_519_cast);
            tensor<fp16, [2, 320, 1, 4096]> inputs_cast = add(x = var_11738_cast, y = inputs_93_cast);
            tensor<int32, [1]> var_11742 = const()[name = tensor<string, []>("op_11742"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> channels_mean_cast = reduce_mean(axes = var_11742, keep_dims = var_10504, x = inputs_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_cast = sub(x = inputs_cast, y = channels_mean_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_sq_cast = mul(x = zero_mean_cast, y = zero_mean_cast);
            tensor<int32, [1]> var_11746 = const()[name = tensor<string, []>("op_11746"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> var_11747_cast = reduce_mean(axes = var_11746, keep_dims = var_10504, x = zero_mean_sq_cast);
            tensor<fp16, []> var_11748_to_fp16 = const()[name = tensor<string, []>("op_11748_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 4096]> var_11749_cast = add(x = var_11747_cast, y = var_11748_to_fp16);
            tensor<fp16, []> denom_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 4096]> denom_cast = rsqrt(epsilon = denom_epsilon_0_to_fp16, x = var_11749_cast);
            tensor<fp16, [2, 320, 1, 4096]> out_cast = mul(x = zero_mean_cast, y = denom_cast);
            tensor<fp16, [1, 320, 1, 1]> var_11753_to_fp16 = const()[name = tensor<string, []>("op_11753_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(835849152)))];
            tensor<fp16, [2, 320, 1, 4096]> var_11754_cast = add(x = out_cast, y = var_11753_to_fp16);
            tensor<fp16, [1, 320, 1, 1]> var_11756_to_fp16 = const()[name = tensor<string, []>("op_11756_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(835849856)))];
            tensor<fp16, [2, 320, 1, 4096]> input_521_cast = mul(x = var_11754_cast, y = var_11756_to_fp16);
            tensor<int32, [2]> var_11764 = const()[name = tensor<string, []>("op_11764"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_11766 = const()[name = tensor<string, []>("op_11766"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_11768_pad_type_0 = const()[name = tensor<string, []>("op_11768_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_11768_pad_0 = const()[name = tensor<string, []>("op_11768_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [2560, 320, 1, 1]> up_blocks_3_attentions_2_transformer_blocks_0_ff_net_0_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_transformer_blocks_0_ff_net_0_proj_weight_to_fp16"), val = tensor<fp16, [2560, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(835850560)))];
            tensor<fp16, [2560]> up_blocks_3_attentions_2_transformer_blocks_0_ff_net_0_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_transformer_blocks_0_ff_net_0_proj_bias_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(837489024)))];
            tensor<fp16, [2, 2560, 1, 4096]> var_11768_cast = conv(bias = up_blocks_3_attentions_2_transformer_blocks_0_ff_net_0_proj_bias_to_fp16, dilations = var_11766, groups = var_10509, pad = var_11768_pad_0, pad_type = var_11768_pad_type_0, strides = var_11764, weight = up_blocks_3_attentions_2_transformer_blocks_0_ff_net_0_proj_weight_to_fp16, x = input_521_cast);
            tensor<int32, [2]> var_11769_split_sizes_0 = const()[name = tensor<string, []>("op_11769_split_sizes_0"), val = tensor<int32, [2]>([1280, 1280])];
            tensor<int32, []> var_11769_axis_0 = const()[name = tensor<string, []>("op_11769_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [2, 1280, 1, 4096]> var_11769_cast_0, tensor<fp16, [2, 1280, 1, 4096]> var_11769_cast_1 = split(axis = var_11769_axis_0, split_sizes = var_11769_split_sizes_0, x = var_11768_cast);
            tensor<string, []> var_11771_mode_0 = const()[name = tensor<string, []>("op_11771_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [2, 1280, 1, 4096]> var_11771_cast = gelu(mode = var_11771_mode_0, x = var_11769_cast_1);
            tensor<fp16, [2, 1280, 1, 4096]> input_523_cast = mul(x = var_11769_cast_0, y = var_11771_cast);
            tensor<int32, [2]> var_11775 = const()[name = tensor<string, []>("op_11775"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_11777 = const()[name = tensor<string, []>("op_11777"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_11779_pad_type_0 = const()[name = tensor<string, []>("op_11779_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_11779_pad_0 = const()[name = tensor<string, []>("op_11779_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 1280, 1, 1]> up_blocks_3_attentions_2_transformer_blocks_0_ff_net_2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_transformer_blocks_0_ff_net_2_weight_to_fp16"), val = tensor<fp16, [320, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(837494208)))];
            tensor<fp16, [320]> up_blocks_3_attentions_2_transformer_blocks_0_ff_net_2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_transformer_blocks_0_ff_net_2_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(838313472)))];
            tensor<fp16, [2, 320, 1, 4096]> var_11779_cast = conv(bias = up_blocks_3_attentions_2_transformer_blocks_0_ff_net_2_bias_to_fp16, dilations = var_11777, groups = var_10509, pad = var_11779_pad_0, pad_type = var_11779_pad_type_0, strides = var_11775, weight = up_blocks_3_attentions_2_transformer_blocks_0_ff_net_2_weight_to_fp16, x = input_523_cast);
            tensor<fp16, [2, 320, 1, 4096]> hidden_states_333_cast = add(x = var_11779_cast, y = inputs_cast);
            tensor<int32, [4]> var_11781 = const()[name = tensor<string, []>("op_11781"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> input_525_cast = reshape(shape = var_11781, x = hidden_states_333_cast);
            tensor<int32, [2]> var_11785 = const()[name = tensor<string, []>("op_11785"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_11787 = const()[name = tensor<string, []>("op_11787"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_pad_type_0 = const()[name = tensor<string, []>("hidden_states_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_pad_0 = const()[name = tensor<string, []>("hidden_states_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_2_proj_out_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_proj_out_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(838314176)))];
            tensor<fp16, [320]> up_blocks_3_attentions_2_proj_out_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_proj_out_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(838519040)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_cast = conv(bias = up_blocks_3_attentions_2_proj_out_bias_to_fp16, dilations = var_11787, groups = var_10509, pad = hidden_states_pad_0, pad_type = hidden_states_pad_type_0, strides = var_11785, weight = up_blocks_3_attentions_2_proj_out_weight_to_fp16, x = input_525_cast);
            tensor<fp16, [2, 320, 64, 64]> input_527_cast = add(x = hidden_states_cast, y = hidden_states_323_cast);
            tensor<int32, [5]> reshape_240_shape_0 = const()[name = tensor<string, []>("reshape_240_shape_0"), val = tensor<int32, [5]>([2, 32, 10, 64, 64])];
            tensor<fp16, [2, 32, 10, 64, 64]> reshape_240_cast = reshape(shape = reshape_240_shape_0, x = input_527_cast);
            tensor<int32, [3]> reduce_mean_180_axes_0 = const()[name = tensor<string, []>("reduce_mean_180_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_180_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_180_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_180_cast = reduce_mean(axes = reduce_mean_180_axes_0, keep_dims = reduce_mean_180_keep_dims_0, x = reshape_240_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> sub_120_cast = sub(x = reshape_240_cast, y = reduce_mean_180_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> square_60_cast = square(x = sub_120_cast);
            tensor<int32, [3]> reduce_mean_182_axes_0 = const()[name = tensor<string, []>("reduce_mean_182_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_182_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_182_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_182_cast = reduce_mean(axes = reduce_mean_182_axes_0, keep_dims = reduce_mean_182_keep_dims_0, x = square_60_cast);
            tensor<fp16, []> add_120_y_0_to_fp16 = const()[name = tensor<string, []>("add_120_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_120_cast = add(x = reduce_mean_182_cast, y = add_120_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_60_cast = sqrt(x = add_120_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> real_div_60_cast = real_div(x = sub_120_cast, y = sqrt_60_cast);
            tensor<int32, [4]> reshape_241_shape_0 = const()[name = tensor<string, []>("reshape_241_shape_0"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> reshape_241_cast = reshape(shape = reshape_241_shape_0, x = real_div_60_cast);
            tensor<fp16, [320]> add_121_mean_0_to_fp16 = const()[name = tensor<string, []>("add_121_mean_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(838519744)))];
            tensor<fp16, [320]> add_121_variance_0_to_fp16 = const()[name = tensor<string, []>("add_121_variance_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(838520448)))];
            tensor<fp16, [320]> add_121_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_121_gamma_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(838521152)))];
            tensor<fp16, [320]> add_121_beta_0_to_fp16 = const()[name = tensor<string, []>("add_121_beta_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(838521856)))];
            tensor<fp16, []> add_121_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_121_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 320, 64, 64]> add_121_cast = batch_norm(beta = add_121_beta_0_to_fp16, epsilon = add_121_epsilon_0_to_fp16, gamma = add_121_gamma_0_to_fp16, mean = add_121_mean_0_to_fp16, variance = add_121_variance_0_to_fp16, x = reshape_241_cast);
            tensor<fp16, [2, 320, 64, 64]> input_cast = silu(x = add_121_cast);
            tensor<int32, []> var_11801 = const()[name = tensor<string, []>("op_11801"), val = tensor<int32, []>(1)];
            tensor<int32, [2]> var_11804 = const()[name = tensor<string, []>("op_11804"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_11806 = const()[name = tensor<string, []>("op_11806"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_11808_pad_type_0 = const()[name = tensor<string, []>("op_11808_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_11808_pad_0 = const()[name = tensor<string, []>("op_11808_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [4, 320, 3, 3]> conv_out_weight_to_fp16 = const()[name = tensor<string, []>("conv_out_weight_to_fp16"), val = tensor<fp16, [4, 320, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(838522560)))];
            tensor<fp16, [4]> conv_out_bias_to_fp16 = const()[name = tensor<string, []>("conv_out_bias_to_fp16"), val = tensor<fp16, [4]>([-0x1.498p-9, 0x1.e34p-10, 0x1.694p-12, 0x1.b84p-10])];
            tensor<fp16, [2, 4, 64, 64]> var_11808_cast = conv(bias = conv_out_bias_to_fp16, dilations = var_11806, groups = var_11801, pad = var_11808_pad_0, pad_type = var_11808_pad_type_0, strides = var_11804, weight = conv_out_weight_to_fp16, x = input_cast);
            tensor<string, []> var_11808_cast_to_fp32_dtype_0 = const()[name = tensor<string, []>("op_11808_cast_to_fp32_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<fp32, [2, 4, 64, 64]> noise_pred = cast(dtype = var_11808_cast_to_fp32_dtype_0, x = var_11808_cast);
        } -> (noise_pred);
}