program(1.0)
[buildInfo = dict<tensor<string, []>, tensor<string, []>>({{"coremlc-component-MIL", "4.28.4"}, {"coremlc-version", "1429.0.0"}, {"coremltools-component-torch", "1.13.1"}, {"coremltools-version", "6.1"}})]
{
    func main<ios16>(tensor<fp16, [1, 4, 64, 64]> z) {
            tensor<int32, []> var_7 = const()[name = tensor<string, []>("op_7"), val = tensor<int32, []>(1)];
            tensor<int32, [2]> var_10 = const()[name = tensor<string, []>("op_10"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_12 = const()[name = tensor<string, []>("op_12"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_1_pad_type_0 = const()[name = tensor<string, []>("input_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_1_pad_0 = const()[name = tensor<string, []>("input_1_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [4, 4, 1, 1]> post_quant_conv_weight_to_fp16 = const()[name = tensor<string, []>("post_quant_conv_weight_to_fp16"), val = tensor<fp16, [4, 4, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(64)))];
            tensor<fp16, [4]> post_quant_conv_bias_to_fp16 = const()[name = tensor<string, []>("post_quant_conv_bias_to_fp16"), val = tensor<fp16, [4]>([0x1.06cp-5, -0x1.594p-4, -0x1.f24p-3, 0x1.0d8p-3])];
            tensor<fp16, [1, 4, 64, 64]> input_1_cast = conv(bias = post_quant_conv_bias_to_fp16, dilations = var_12, groups = var_7, pad = input_1_pad_0, pad_type = input_1_pad_type_0, strides = var_10, weight = post_quant_conv_weight_to_fp16, x = z);
            tensor<int32, []> var_22 = const()[name = tensor<string, []>("op_22"), val = tensor<int32, []>(-1)];
            tensor<int32, []> var_28 = const()[name = tensor<string, []>("op_28"), val = tensor<int32, []>(1)];
            tensor<int32, [2]> var_46 = const()[name = tensor<string, []>("op_46"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_48 = const()[name = tensor<string, []>("op_48"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_3_pad_type_0 = const()[name = tensor<string, []>("input_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_3_pad_0 = const()[name = tensor<string, []>("input_3_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [512, 4, 3, 3]> decoder_conv_in_weight_to_fp16 = const()[name = tensor<string, []>("decoder_conv_in_weight_to_fp16"), val = tensor<fp16, [512, 4, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(192)))];
            tensor<fp16, [512]> decoder_conv_in_bias_to_fp16 = const()[name = tensor<string, []>("decoder_conv_in_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(37120)))];
            tensor<fp16, [1, 512, 64, 64]> input_3_cast = conv(bias = decoder_conv_in_bias_to_fp16, dilations = var_48, groups = var_28, pad = input_3_pad_0, pad_type = input_3_pad_type_0, strides = var_46, weight = decoder_conv_in_weight_to_fp16, x = input_1_cast);
            tensor<int32, [5]> reshape_0_shape_0 = const()[name = tensor<string, []>("reshape_0_shape_0"), val = tensor<int32, [5]>([1, 32, 16, 64, 64])];
            tensor<fp16, [1, 32, 16, 64, 64]> reshape_0_cast = reshape(shape = reshape_0_shape_0, x = input_3_cast);
            tensor<int32, [3]> reduce_mean_0_axes_0 = const()[name = tensor<string, []>("reduce_mean_0_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_0_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_0_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_0_cast = reduce_mean(axes = reduce_mean_0_axes_0, keep_dims = reduce_mean_0_keep_dims_0, x = reshape_0_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> sub_0_cast = sub(x = reshape_0_cast, y = reduce_mean_0_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> square_0_cast = square(x = sub_0_cast);
            tensor<int32, [3]> reduce_mean_2_axes_0 = const()[name = tensor<string, []>("reduce_mean_2_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_2_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_2_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_2_cast = reduce_mean(axes = reduce_mean_2_axes_0, keep_dims = reduce_mean_2_keep_dims_0, x = square_0_cast);
            tensor<fp16, []> add_0_y_0_to_fp16 = const()[name = tensor<string, []>("add_0_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_0_cast = add(x = reduce_mean_2_cast, y = add_0_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_0_cast = sqrt(x = add_0_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> real_div_0_cast = real_div(x = sub_0_cast, y = sqrt_0_cast);
            tensor<int32, [4]> reshape_1_shape_0 = const()[name = tensor<string, []>("reshape_1_shape_0"), val = tensor<int32, [4]>([1, 512, 64, 64])];
            tensor<fp16, [1, 512, 64, 64]> reshape_1_cast = reshape(shape = reshape_1_shape_0, x = real_div_0_cast);
            tensor<fp16, [512]> add_1_mean_0_to_fp16 = const()[name = tensor<string, []>("add_1_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(38208)))];
            tensor<fp16, [512]> add_1_variance_0_to_fp16 = const()[name = tensor<string, []>("add_1_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(39296)))];
            tensor<fp16, [512]> add_1_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_1_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(40384)))];
            tensor<fp16, [512]> add_1_beta_0_to_fp16 = const()[name = tensor<string, []>("add_1_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(41472)))];
            tensor<fp16, []> add_1_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_1_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 64, 64]> add_1_cast = batch_norm(beta = add_1_beta_0_to_fp16, epsilon = add_1_epsilon_0_to_fp16, gamma = add_1_gamma_0_to_fp16, mean = add_1_mean_0_to_fp16, variance = add_1_variance_0_to_fp16, x = reshape_1_cast);
            tensor<fp16, [1, 512, 64, 64]> input_7_cast = silu(x = add_1_cast);
            tensor<int32, [2]> var_67 = const()[name = tensor<string, []>("op_67"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_69 = const()[name = tensor<string, []>("op_69"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_9_pad_type_0 = const()[name = tensor<string, []>("input_9_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_9_pad_0 = const()[name = tensor<string, []>("input_9_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [512, 512, 3, 3]> decoder_mid_block_resnets_0_conv1_weight_to_fp16 = const()[name = tensor<string, []>("decoder_mid_block_resnets_0_conv1_weight_to_fp16"), val = tensor<fp16, [512, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42560)))];
            tensor<fp16, [512]> decoder_mid_block_resnets_0_conv1_bias_to_fp16 = const()[name = tensor<string, []>("decoder_mid_block_resnets_0_conv1_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4761216)))];
            tensor<fp16, [1, 512, 64, 64]> input_9_cast = conv(bias = decoder_mid_block_resnets_0_conv1_bias_to_fp16, dilations = var_69, groups = var_28, pad = input_9_pad_0, pad_type = input_9_pad_type_0, strides = var_67, weight = decoder_mid_block_resnets_0_conv1_weight_to_fp16, x = input_7_cast);
            tensor<int32, [5]> reshape_4_shape_0 = const()[name = tensor<string, []>("reshape_4_shape_0"), val = tensor<int32, [5]>([1, 32, 16, 64, 64])];
            tensor<fp16, [1, 32, 16, 64, 64]> reshape_4_cast = reshape(shape = reshape_4_shape_0, x = input_9_cast);
            tensor<int32, [3]> reduce_mean_3_axes_0 = const()[name = tensor<string, []>("reduce_mean_3_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_3_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_3_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_3_cast = reduce_mean(axes = reduce_mean_3_axes_0, keep_dims = reduce_mean_3_keep_dims_0, x = reshape_4_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> sub_2_cast = sub(x = reshape_4_cast, y = reduce_mean_3_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> square_1_cast = square(x = sub_2_cast);
            tensor<int32, [3]> reduce_mean_5_axes_0 = const()[name = tensor<string, []>("reduce_mean_5_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_5_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_5_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_5_cast = reduce_mean(axes = reduce_mean_5_axes_0, keep_dims = reduce_mean_5_keep_dims_0, x = square_1_cast);
            tensor<fp16, []> add_2_y_0_to_fp16 = const()[name = tensor<string, []>("add_2_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_2_cast = add(x = reduce_mean_5_cast, y = add_2_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_1_cast = sqrt(x = add_2_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> real_div_1_cast = real_div(x = sub_2_cast, y = sqrt_1_cast);
            tensor<int32, [4]> reshape_5_shape_0 = const()[name = tensor<string, []>("reshape_5_shape_0"), val = tensor<int32, [4]>([1, 512, 64, 64])];
            tensor<fp16, [1, 512, 64, 64]> reshape_5_cast = reshape(shape = reshape_5_shape_0, x = real_div_1_cast);
            tensor<fp16, [512]> add_3_mean_0_to_fp16 = const()[name = tensor<string, []>("add_3_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4762304)))];
            tensor<fp16, [512]> add_3_variance_0_to_fp16 = const()[name = tensor<string, []>("add_3_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4763392)))];
            tensor<fp16, [512]> add_3_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_3_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4764480)))];
            tensor<fp16, [512]> add_3_beta_0_to_fp16 = const()[name = tensor<string, []>("add_3_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4765568)))];
            tensor<fp16, []> add_3_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_3_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 64, 64]> add_3_cast = batch_norm(beta = add_3_beta_0_to_fp16, epsilon = add_3_epsilon_0_to_fp16, gamma = add_3_gamma_0_to_fp16, mean = add_3_mean_0_to_fp16, variance = add_3_variance_0_to_fp16, x = reshape_5_cast);
            tensor<fp16, [1, 512, 64, 64]> input_13_cast = silu(x = add_3_cast);
            tensor<int32, [2]> var_79 = const()[name = tensor<string, []>("op_79"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_81 = const()[name = tensor<string, []>("op_81"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_1_pad_type_0 = const()[name = tensor<string, []>("hidden_states_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_1_pad_0 = const()[name = tensor<string, []>("hidden_states_1_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [512, 512, 3, 3]> decoder_mid_block_resnets_0_conv2_weight_to_fp16 = const()[name = tensor<string, []>("decoder_mid_block_resnets_0_conv2_weight_to_fp16"), val = tensor<fp16, [512, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4766656)))];
            tensor<fp16, [512]> decoder_mid_block_resnets_0_conv2_bias_to_fp16 = const()[name = tensor<string, []>("decoder_mid_block_resnets_0_conv2_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9485312)))];
            tensor<fp16, [1, 512, 64, 64]> hidden_states_1_cast = conv(bias = decoder_mid_block_resnets_0_conv2_bias_to_fp16, dilations = var_81, groups = var_28, pad = hidden_states_1_pad_0, pad_type = hidden_states_1_pad_type_0, strides = var_79, weight = decoder_mid_block_resnets_0_conv2_weight_to_fp16, x = input_13_cast);
            tensor<fp16, [1, 512, 64, 64]> var_84_cast = add(x = input_3_cast, y = hidden_states_1_cast);
            tensor<int32, [5]> reshape_8_shape_0 = const()[name = tensor<string, []>("reshape_8_shape_0"), val = tensor<int32, [5]>([1, 32, 16, 64, 64])];
            tensor<fp16, [1, 32, 16, 64, 64]> reshape_8_cast = reshape(shape = reshape_8_shape_0, x = var_84_cast);
            tensor<int32, [3]> reduce_mean_6_axes_0 = const()[name = tensor<string, []>("reduce_mean_6_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_6_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_6_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_6_cast = reduce_mean(axes = reduce_mean_6_axes_0, keep_dims = reduce_mean_6_keep_dims_0, x = reshape_8_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> sub_4_cast = sub(x = reshape_8_cast, y = reduce_mean_6_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> square_2_cast = square(x = sub_4_cast);
            tensor<int32, [3]> reduce_mean_8_axes_0 = const()[name = tensor<string, []>("reduce_mean_8_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_8_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_8_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_8_cast = reduce_mean(axes = reduce_mean_8_axes_0, keep_dims = reduce_mean_8_keep_dims_0, x = square_2_cast);
            tensor<fp16, []> add_4_y_0_to_fp16 = const()[name = tensor<string, []>("add_4_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_4_cast = add(x = reduce_mean_8_cast, y = add_4_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_2_cast = sqrt(x = add_4_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> real_div_2_cast = real_div(x = sub_4_cast, y = sqrt_2_cast);
            tensor<int32, [4]> reshape_9_shape_0 = const()[name = tensor<string, []>("reshape_9_shape_0"), val = tensor<int32, [4]>([1, 512, 64, 64])];
            tensor<fp16, [1, 512, 64, 64]> reshape_9_cast = reshape(shape = reshape_9_shape_0, x = real_div_2_cast);
            tensor<fp16, [512]> add_5_mean_0_to_fp16 = const()[name = tensor<string, []>("add_5_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9486400)))];
            tensor<fp16, [512]> add_5_variance_0_to_fp16 = const()[name = tensor<string, []>("add_5_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9487488)))];
            tensor<fp16, [512]> add_5_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_5_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9488576)))];
            tensor<fp16, [512]> add_5_beta_0_to_fp16 = const()[name = tensor<string, []>("add_5_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9489664)))];
            tensor<fp16, []> add_5_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_5_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 64, 64]> add_5_cast = batch_norm(beta = add_5_beta_0_to_fp16, epsilon = add_5_epsilon_0_to_fp16, gamma = add_5_gamma_0_to_fp16, mean = add_5_mean_0_to_fp16, variance = add_5_variance_0_to_fp16, x = reshape_9_cast);
            tensor<int32, [3]> var_103 = const()[name = tensor<string, []>("op_103"), val = tensor<int32, [3]>([1, 512, 4096])];
            tensor<fp16, [1, 512, 4096]> var_104_cast = reshape(shape = var_103, x = add_5_cast);
            tensor<int32, [3]> input_17_perm_0 = const()[name = tensor<string, []>("input_17_perm_0"), val = tensor<int32, [3]>([0, 2, 1])];
            tensor<fp16, [512, 512]> decoder_mid_block_attentions_0_query_weight_to_fp16 = const()[name = tensor<string, []>("decoder_mid_block_attentions_0_query_weight_to_fp16"), val = tensor<fp16, [512, 512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9490752)))];
            tensor<fp16, [512]> decoder_mid_block_attentions_0_query_bias_to_fp16 = const()[name = tensor<string, []>("decoder_mid_block_attentions_0_query_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10015104)))];
            tensor<fp16, [1, 4096, 512]> transpose_6 = transpose(perm = input_17_perm_0, x = var_104_cast);
            tensor<fp16, [1, 4096, 512]> tensor_1_cast = linear(bias = decoder_mid_block_attentions_0_query_bias_to_fp16, weight = decoder_mid_block_attentions_0_query_weight_to_fp16, x = transpose_6);
            tensor<fp16, [512, 512]> decoder_mid_block_attentions_0_key_weight_to_fp16 = const()[name = tensor<string, []>("decoder_mid_block_attentions_0_key_weight_to_fp16"), val = tensor<fp16, [512, 512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10016192)))];
            tensor<fp16, [512]> decoder_mid_block_attentions_0_key_bias_to_fp16 = const()[name = tensor<string, []>("decoder_mid_block_attentions_0_key_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10540544)))];
            tensor<fp16, [1, 4096, 512]> tensor_5_cast = linear(bias = decoder_mid_block_attentions_0_key_bias_to_fp16, weight = decoder_mid_block_attentions_0_key_weight_to_fp16, x = transpose_6);
            tensor<fp16, [512, 512]> decoder_mid_block_attentions_0_value_weight_to_fp16 = const()[name = tensor<string, []>("decoder_mid_block_attentions_0_value_weight_to_fp16"), val = tensor<fp16, [512, 512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10541632)))];
            tensor<fp16, [512]> decoder_mid_block_attentions_0_value_bias_to_fp16 = const()[name = tensor<string, []>("decoder_mid_block_attentions_0_value_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11065984)))];
            tensor<fp16, [1, 4096, 512]> tensor_9_cast = linear(bias = decoder_mid_block_attentions_0_value_bias_to_fp16, weight = decoder_mid_block_attentions_0_value_weight_to_fp16, x = transpose_6);
            tensor<int32, [4]> var_122 = const()[name = tensor<string, []>("op_122"), val = tensor<int32, [4]>([1, 4096, 1, 512])];
            tensor<fp16, [1, 4096, 1, 512]> tensor_3_cast = reshape(shape = var_122, x = tensor_1_cast);
            tensor<int32, [4]> var_124 = const()[name = tensor<string, []>("op_124"), val = tensor<int32, [4]>([0, 2, 1, 3])];
            tensor<int32, [3]> var_131 = const()[name = tensor<string, []>("op_131"), val = tensor<int32, [3]>([1, 4096, 512])];
            tensor<fp16, [1, 1, 4096, 512]> transpose_5 = transpose(perm = var_124, x = tensor_3_cast);
            tensor<fp16, [1, 4096, 512]> query_proj_cast = reshape(shape = var_131, x = transpose_5);
            tensor<int32, [4]> var_140 = const()[name = tensor<string, []>("op_140"), val = tensor<int32, [4]>([1, 4096, 1, 512])];
            tensor<fp16, [1, 4096, 1, 512]> tensor_7_cast = reshape(shape = var_140, x = tensor_5_cast);
            tensor<int32, [4]> var_142 = const()[name = tensor<string, []>("op_142"), val = tensor<int32, [4]>([0, 2, 1, 3])];
            tensor<int32, [3]> var_149 = const()[name = tensor<string, []>("op_149"), val = tensor<int32, [3]>([1, 4096, 512])];
            tensor<fp16, [1, 1, 4096, 512]> transpose_4 = transpose(perm = var_142, x = tensor_7_cast);
            tensor<fp16, [1, 4096, 512]> key_proj_cast = reshape(shape = var_149, x = transpose_4);
            tensor<int32, [4]> var_158 = const()[name = tensor<string, []>("op_158"), val = tensor<int32, [4]>([1, 4096, 1, 512])];
            tensor<fp16, [1, 4096, 1, 512]> tensor_11_cast = reshape(shape = var_158, x = tensor_9_cast);
            tensor<int32, [4]> var_160 = const()[name = tensor<string, []>("op_160"), val = tensor<int32, [4]>([0, 2, 1, 3])];
            tensor<int32, [3]> var_167 = const()[name = tensor<string, []>("op_167"), val = tensor<int32, [3]>([1, 4096, 512])];
            tensor<fp16, [1, 1, 4096, 512]> transpose_3 = transpose(perm = var_160, x = tensor_11_cast);
            tensor<fp16, [1, 4096, 512]> value_proj_cast = reshape(shape = var_167, x = transpose_3);
            tensor<int32, [3]> var_174_perm_0 = const()[name = tensor<string, []>("op_174_perm_0"), val = tensor<int32, [3]>([0, -1, -2])];
            tensor<fp16, []> var_20_to_fp16 = const()[name = tensor<string, []>("op_20_to_fp16"), val = tensor<fp16, []>(0x1.6ap-5)];
            tensor<fp16, [1, 4096, 512]> query_proj_scaled_cast = mul(x = var_20_to_fp16, y = query_proj_cast);
            tensor<bool, []> attention_scores_1_bmm_transpose_x_0 = const()[name = tensor<string, []>("attention_scores_1_bmm_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attention_scores_1_bmm_transpose_y_0 = const()[name = tensor<string, []>("attention_scores_1_bmm_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 512, 4096]> transpose_2 = transpose(perm = var_174_perm_0, x = key_proj_cast);
            tensor<fp16, [1, 4096, 4096]> attention_scores_1_bmm_cast = matmul(transpose_x = attention_scores_1_bmm_transpose_x_0, transpose_y = attention_scores_1_bmm_transpose_y_0, x = query_proj_scaled_cast, y = transpose_2);
            tensor<fp16, [1, 4096, 4096]> var_177_cast = softmax(axis = var_22, x = attention_scores_1_bmm_cast);
            tensor<bool, []> tensor_13_transpose_x_0 = const()[name = tensor<string, []>("tensor_13_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> tensor_13_transpose_y_0 = const()[name = tensor<string, []>("tensor_13_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 4096, 512]> tensor_13_cast = matmul(transpose_x = tensor_13_transpose_x_0, transpose_y = tensor_13_transpose_y_0, x = var_177_cast, y = value_proj_cast);
            tensor<int32, [4]> var_187 = const()[name = tensor<string, []>("op_187"), val = tensor<int32, [4]>([1, 1, 4096, 512])];
            tensor<fp16, [1, 1, 4096, 512]> tensor_cast = reshape(shape = var_187, x = tensor_13_cast);
            tensor<int32, [4]> var_189 = const()[name = tensor<string, []>("op_189"), val = tensor<int32, [4]>([0, 2, 1, 3])];
            tensor<int32, [3]> var_196 = const()[name = tensor<string, []>("op_196"), val = tensor<int32, [3]>([1, 4096, 512])];
            tensor<fp16, [1, 4096, 1, 512]> transpose_1 = transpose(perm = var_189, x = tensor_cast);
            tensor<fp16, [1, 4096, 512]> input_19_cast = reshape(shape = var_196, x = transpose_1);
            tensor<fp16, [512, 512]> decoder_mid_block_attentions_0_proj_attn_weight_to_fp16 = const()[name = tensor<string, []>("decoder_mid_block_attentions_0_proj_attn_weight_to_fp16"), val = tensor<fp16, [512, 512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11067072)))];
            tensor<fp16, [512]> decoder_mid_block_attentions_0_proj_attn_bias_to_fp16 = const()[name = tensor<string, []>("decoder_mid_block_attentions_0_proj_attn_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11591424)))];
            tensor<fp16, [1, 4096, 512]> hidden_states_7_cast = linear(bias = decoder_mid_block_attentions_0_proj_attn_bias_to_fp16, weight = decoder_mid_block_attentions_0_proj_attn_weight_to_fp16, x = input_19_cast);
            tensor<int32, [3]> var_201_perm_0 = const()[name = tensor<string, []>("op_201_perm_0"), val = tensor<int32, [3]>([0, -1, -2])];
            tensor<int32, [4]> var_202 = const()[name = tensor<string, []>("op_202"), val = tensor<int32, [4]>([1, 512, 64, 64])];
            tensor<fp16, [1, 512, 4096]> transpose_0 = transpose(perm = var_201_perm_0, x = hidden_states_7_cast);
            tensor<fp16, [1, 512, 64, 64]> hidden_states_9_cast = reshape(shape = var_202, x = transpose_0);
            tensor<fp16, [1, 512, 64, 64]> var_204_cast = add(x = hidden_states_9_cast, y = var_84_cast);
            tensor<int32, [5]> reshape_12_shape_0 = const()[name = tensor<string, []>("reshape_12_shape_0"), val = tensor<int32, [5]>([1, 32, 16, 64, 64])];
            tensor<fp16, [1, 32, 16, 64, 64]> reshape_12_cast = reshape(shape = reshape_12_shape_0, x = var_204_cast);
            tensor<int32, [3]> reduce_mean_9_axes_0 = const()[name = tensor<string, []>("reduce_mean_9_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_9_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_9_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_9_cast = reduce_mean(axes = reduce_mean_9_axes_0, keep_dims = reduce_mean_9_keep_dims_0, x = reshape_12_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> sub_6_cast = sub(x = reshape_12_cast, y = reduce_mean_9_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> square_3_cast = square(x = sub_6_cast);
            tensor<int32, [3]> reduce_mean_11_axes_0 = const()[name = tensor<string, []>("reduce_mean_11_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_11_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_11_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_11_cast = reduce_mean(axes = reduce_mean_11_axes_0, keep_dims = reduce_mean_11_keep_dims_0, x = square_3_cast);
            tensor<fp16, []> add_6_y_0_to_fp16 = const()[name = tensor<string, []>("add_6_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_6_cast = add(x = reduce_mean_11_cast, y = add_6_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_3_cast = sqrt(x = add_6_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> real_div_3_cast = real_div(x = sub_6_cast, y = sqrt_3_cast);
            tensor<int32, [4]> reshape_13_shape_0 = const()[name = tensor<string, []>("reshape_13_shape_0"), val = tensor<int32, [4]>([1, 512, 64, 64])];
            tensor<fp16, [1, 512, 64, 64]> reshape_13_cast = reshape(shape = reshape_13_shape_0, x = real_div_3_cast);
            tensor<fp16, [512]> add_7_mean_0_to_fp16 = const()[name = tensor<string, []>("add_7_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11592512)))];
            tensor<fp16, [512]> add_7_variance_0_to_fp16 = const()[name = tensor<string, []>("add_7_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11593600)))];
            tensor<fp16, [512]> add_7_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_7_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11594688)))];
            tensor<fp16, [512]> add_7_beta_0_to_fp16 = const()[name = tensor<string, []>("add_7_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11595776)))];
            tensor<fp16, []> add_7_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_7_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 64, 64]> add_7_cast = batch_norm(beta = add_7_beta_0_to_fp16, epsilon = add_7_epsilon_0_to_fp16, gamma = add_7_gamma_0_to_fp16, mean = add_7_mean_0_to_fp16, variance = add_7_variance_0_to_fp16, x = reshape_13_cast);
            tensor<fp16, [1, 512, 64, 64]> input_25_cast = silu(x = add_7_cast);
            tensor<int32, [2]> var_217 = const()[name = tensor<string, []>("op_217"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_219 = const()[name = tensor<string, []>("op_219"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_27_pad_type_0 = const()[name = tensor<string, []>("input_27_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_27_pad_0 = const()[name = tensor<string, []>("input_27_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [512, 512, 3, 3]> decoder_mid_block_resnets_1_conv1_weight_to_fp16 = const()[name = tensor<string, []>("decoder_mid_block_resnets_1_conv1_weight_to_fp16"), val = tensor<fp16, [512, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11596864)))];
            tensor<fp16, [512]> decoder_mid_block_resnets_1_conv1_bias_to_fp16 = const()[name = tensor<string, []>("decoder_mid_block_resnets_1_conv1_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16315520)))];
            tensor<fp16, [1, 512, 64, 64]> input_27_cast = conv(bias = decoder_mid_block_resnets_1_conv1_bias_to_fp16, dilations = var_219, groups = var_28, pad = input_27_pad_0, pad_type = input_27_pad_type_0, strides = var_217, weight = decoder_mid_block_resnets_1_conv1_weight_to_fp16, x = input_25_cast);
            tensor<int32, [5]> reshape_16_shape_0 = const()[name = tensor<string, []>("reshape_16_shape_0"), val = tensor<int32, [5]>([1, 32, 16, 64, 64])];
            tensor<fp16, [1, 32, 16, 64, 64]> reshape_16_cast = reshape(shape = reshape_16_shape_0, x = input_27_cast);
            tensor<int32, [3]> reduce_mean_12_axes_0 = const()[name = tensor<string, []>("reduce_mean_12_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_12_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_12_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_12_cast = reduce_mean(axes = reduce_mean_12_axes_0, keep_dims = reduce_mean_12_keep_dims_0, x = reshape_16_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> sub_8_cast = sub(x = reshape_16_cast, y = reduce_mean_12_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> square_4_cast = square(x = sub_8_cast);
            tensor<int32, [3]> reduce_mean_14_axes_0 = const()[name = tensor<string, []>("reduce_mean_14_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_14_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_14_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_14_cast = reduce_mean(axes = reduce_mean_14_axes_0, keep_dims = reduce_mean_14_keep_dims_0, x = square_4_cast);
            tensor<fp16, []> add_8_y_0_to_fp16 = const()[name = tensor<string, []>("add_8_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_8_cast = add(x = reduce_mean_14_cast, y = add_8_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_4_cast = sqrt(x = add_8_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> real_div_4_cast = real_div(x = sub_8_cast, y = sqrt_4_cast);
            tensor<int32, [4]> reshape_17_shape_0 = const()[name = tensor<string, []>("reshape_17_shape_0"), val = tensor<int32, [4]>([1, 512, 64, 64])];
            tensor<fp16, [1, 512, 64, 64]> reshape_17_cast = reshape(shape = reshape_17_shape_0, x = real_div_4_cast);
            tensor<fp16, [512]> add_9_mean_0_to_fp16 = const()[name = tensor<string, []>("add_9_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16316608)))];
            tensor<fp16, [512]> add_9_variance_0_to_fp16 = const()[name = tensor<string, []>("add_9_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16317696)))];
            tensor<fp16, [512]> add_9_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_9_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16318784)))];
            tensor<fp16, [512]> add_9_beta_0_to_fp16 = const()[name = tensor<string, []>("add_9_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16319872)))];
            tensor<fp16, []> add_9_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_9_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 64, 64]> add_9_cast = batch_norm(beta = add_9_beta_0_to_fp16, epsilon = add_9_epsilon_0_to_fp16, gamma = add_9_gamma_0_to_fp16, mean = add_9_mean_0_to_fp16, variance = add_9_variance_0_to_fp16, x = reshape_17_cast);
            tensor<fp16, [1, 512, 64, 64]> input_31_cast = silu(x = add_9_cast);
            tensor<int32, [2]> var_229 = const()[name = tensor<string, []>("op_229"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_231 = const()[name = tensor<string, []>("op_231"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_11_pad_type_0 = const()[name = tensor<string, []>("hidden_states_11_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_11_pad_0 = const()[name = tensor<string, []>("hidden_states_11_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [512, 512, 3, 3]> decoder_mid_block_resnets_1_conv2_weight_to_fp16 = const()[name = tensor<string, []>("decoder_mid_block_resnets_1_conv2_weight_to_fp16"), val = tensor<fp16, [512, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16320960)))];
            tensor<fp16, [512]> decoder_mid_block_resnets_1_conv2_bias_to_fp16 = const()[name = tensor<string, []>("decoder_mid_block_resnets_1_conv2_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(21039616)))];
            tensor<fp16, [1, 512, 64, 64]> hidden_states_11_cast = conv(bias = decoder_mid_block_resnets_1_conv2_bias_to_fp16, dilations = var_231, groups = var_28, pad = hidden_states_11_pad_0, pad_type = hidden_states_11_pad_type_0, strides = var_229, weight = decoder_mid_block_resnets_1_conv2_weight_to_fp16, x = input_31_cast);
            tensor<fp16, [1, 512, 64, 64]> var_234_cast = add(x = var_204_cast, y = hidden_states_11_cast);
            tensor<int32, [5]> reshape_20_shape_0 = const()[name = tensor<string, []>("reshape_20_shape_0"), val = tensor<int32, [5]>([1, 32, 16, 64, 64])];
            tensor<fp16, [1, 32, 16, 64, 64]> reshape_20_cast = reshape(shape = reshape_20_shape_0, x = var_234_cast);
            tensor<int32, [3]> reduce_mean_15_axes_0 = const()[name = tensor<string, []>("reduce_mean_15_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_15_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_15_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_15_cast = reduce_mean(axes = reduce_mean_15_axes_0, keep_dims = reduce_mean_15_keep_dims_0, x = reshape_20_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> sub_10_cast = sub(x = reshape_20_cast, y = reduce_mean_15_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> square_5_cast = square(x = sub_10_cast);
            tensor<int32, [3]> reduce_mean_17_axes_0 = const()[name = tensor<string, []>("reduce_mean_17_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_17_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_17_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_17_cast = reduce_mean(axes = reduce_mean_17_axes_0, keep_dims = reduce_mean_17_keep_dims_0, x = square_5_cast);
            tensor<fp16, []> add_10_y_0_to_fp16 = const()[name = tensor<string, []>("add_10_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_10_cast = add(x = reduce_mean_17_cast, y = add_10_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_5_cast = sqrt(x = add_10_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> real_div_5_cast = real_div(x = sub_10_cast, y = sqrt_5_cast);
            tensor<int32, [4]> reshape_21_shape_0 = const()[name = tensor<string, []>("reshape_21_shape_0"), val = tensor<int32, [4]>([1, 512, 64, 64])];
            tensor<fp16, [1, 512, 64, 64]> reshape_21_cast = reshape(shape = reshape_21_shape_0, x = real_div_5_cast);
            tensor<fp16, [512]> add_11_mean_0_to_fp16 = const()[name = tensor<string, []>("add_11_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(21040704)))];
            tensor<fp16, [512]> add_11_variance_0_to_fp16 = const()[name = tensor<string, []>("add_11_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(21041792)))];
            tensor<fp16, [512]> add_11_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_11_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(21042880)))];
            tensor<fp16, [512]> add_11_beta_0_to_fp16 = const()[name = tensor<string, []>("add_11_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(21043968)))];
            tensor<fp16, []> add_11_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_11_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 64, 64]> add_11_cast = batch_norm(beta = add_11_beta_0_to_fp16, epsilon = add_11_epsilon_0_to_fp16, gamma = add_11_gamma_0_to_fp16, mean = add_11_mean_0_to_fp16, variance = add_11_variance_0_to_fp16, x = reshape_21_cast);
            tensor<fp16, [1, 512, 64, 64]> input_39_cast = silu(x = add_11_cast);
            tensor<int32, [2]> var_255 = const()[name = tensor<string, []>("op_255"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_257 = const()[name = tensor<string, []>("op_257"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_41_pad_type_0 = const()[name = tensor<string, []>("input_41_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_41_pad_0 = const()[name = tensor<string, []>("input_41_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [512, 512, 3, 3]> decoder_up_blocks_0_resnets_0_conv1_weight_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_0_resnets_0_conv1_weight_to_fp16"), val = tensor<fp16, [512, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(21045056)))];
            tensor<fp16, [512]> decoder_up_blocks_0_resnets_0_conv1_bias_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_0_resnets_0_conv1_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25763712)))];
            tensor<fp16, [1, 512, 64, 64]> input_41_cast = conv(bias = decoder_up_blocks_0_resnets_0_conv1_bias_to_fp16, dilations = var_257, groups = var_28, pad = input_41_pad_0, pad_type = input_41_pad_type_0, strides = var_255, weight = decoder_up_blocks_0_resnets_0_conv1_weight_to_fp16, x = input_39_cast);
            tensor<int32, [5]> reshape_24_shape_0 = const()[name = tensor<string, []>("reshape_24_shape_0"), val = tensor<int32, [5]>([1, 32, 16, 64, 64])];
            tensor<fp16, [1, 32, 16, 64, 64]> reshape_24_cast = reshape(shape = reshape_24_shape_0, x = input_41_cast);
            tensor<int32, [3]> reduce_mean_18_axes_0 = const()[name = tensor<string, []>("reduce_mean_18_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_18_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_18_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_18_cast = reduce_mean(axes = reduce_mean_18_axes_0, keep_dims = reduce_mean_18_keep_dims_0, x = reshape_24_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> sub_12_cast = sub(x = reshape_24_cast, y = reduce_mean_18_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> square_6_cast = square(x = sub_12_cast);
            tensor<int32, [3]> reduce_mean_20_axes_0 = const()[name = tensor<string, []>("reduce_mean_20_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_20_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_20_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_20_cast = reduce_mean(axes = reduce_mean_20_axes_0, keep_dims = reduce_mean_20_keep_dims_0, x = square_6_cast);
            tensor<fp16, []> add_12_y_0_to_fp16 = const()[name = tensor<string, []>("add_12_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_12_cast = add(x = reduce_mean_20_cast, y = add_12_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_6_cast = sqrt(x = add_12_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> real_div_6_cast = real_div(x = sub_12_cast, y = sqrt_6_cast);
            tensor<int32, [4]> reshape_25_shape_0 = const()[name = tensor<string, []>("reshape_25_shape_0"), val = tensor<int32, [4]>([1, 512, 64, 64])];
            tensor<fp16, [1, 512, 64, 64]> reshape_25_cast = reshape(shape = reshape_25_shape_0, x = real_div_6_cast);
            tensor<fp16, [512]> add_13_mean_0_to_fp16 = const()[name = tensor<string, []>("add_13_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25764800)))];
            tensor<fp16, [512]> add_13_variance_0_to_fp16 = const()[name = tensor<string, []>("add_13_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25765888)))];
            tensor<fp16, [512]> add_13_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_13_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25766976)))];
            tensor<fp16, [512]> add_13_beta_0_to_fp16 = const()[name = tensor<string, []>("add_13_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25768064)))];
            tensor<fp16, []> add_13_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_13_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 64, 64]> add_13_cast = batch_norm(beta = add_13_beta_0_to_fp16, epsilon = add_13_epsilon_0_to_fp16, gamma = add_13_gamma_0_to_fp16, mean = add_13_mean_0_to_fp16, variance = add_13_variance_0_to_fp16, x = reshape_25_cast);
            tensor<fp16, [1, 512, 64, 64]> input_45_cast = silu(x = add_13_cast);
            tensor<int32, [2]> var_267 = const()[name = tensor<string, []>("op_267"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_269 = const()[name = tensor<string, []>("op_269"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_13_pad_type_0 = const()[name = tensor<string, []>("hidden_states_13_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_13_pad_0 = const()[name = tensor<string, []>("hidden_states_13_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [512, 512, 3, 3]> decoder_up_blocks_0_resnets_0_conv2_weight_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_0_resnets_0_conv2_weight_to_fp16"), val = tensor<fp16, [512, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25769152)))];
            tensor<fp16, [512]> decoder_up_blocks_0_resnets_0_conv2_bias_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_0_resnets_0_conv2_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(30487808)))];
            tensor<fp16, [1, 512, 64, 64]> hidden_states_13_cast = conv(bias = decoder_up_blocks_0_resnets_0_conv2_bias_to_fp16, dilations = var_269, groups = var_28, pad = hidden_states_13_pad_0, pad_type = hidden_states_13_pad_type_0, strides = var_267, weight = decoder_up_blocks_0_resnets_0_conv2_weight_to_fp16, x = input_45_cast);
            tensor<fp16, [1, 512, 64, 64]> var_272_cast = add(x = var_234_cast, y = hidden_states_13_cast);
            tensor<int32, [5]> reshape_28_shape_0 = const()[name = tensor<string, []>("reshape_28_shape_0"), val = tensor<int32, [5]>([1, 32, 16, 64, 64])];
            tensor<fp16, [1, 32, 16, 64, 64]> reshape_28_cast = reshape(shape = reshape_28_shape_0, x = var_272_cast);
            tensor<int32, [3]> reduce_mean_21_axes_0 = const()[name = tensor<string, []>("reduce_mean_21_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_21_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_21_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_21_cast = reduce_mean(axes = reduce_mean_21_axes_0, keep_dims = reduce_mean_21_keep_dims_0, x = reshape_28_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> sub_14_cast = sub(x = reshape_28_cast, y = reduce_mean_21_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> square_7_cast = square(x = sub_14_cast);
            tensor<int32, [3]> reduce_mean_23_axes_0 = const()[name = tensor<string, []>("reduce_mean_23_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_23_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_23_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_23_cast = reduce_mean(axes = reduce_mean_23_axes_0, keep_dims = reduce_mean_23_keep_dims_0, x = square_7_cast);
            tensor<fp16, []> add_14_y_0_to_fp16 = const()[name = tensor<string, []>("add_14_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_14_cast = add(x = reduce_mean_23_cast, y = add_14_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_7_cast = sqrt(x = add_14_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> real_div_7_cast = real_div(x = sub_14_cast, y = sqrt_7_cast);
            tensor<int32, [4]> reshape_29_shape_0 = const()[name = tensor<string, []>("reshape_29_shape_0"), val = tensor<int32, [4]>([1, 512, 64, 64])];
            tensor<fp16, [1, 512, 64, 64]> reshape_29_cast = reshape(shape = reshape_29_shape_0, x = real_div_7_cast);
            tensor<fp16, [512]> add_15_mean_0_to_fp16 = const()[name = tensor<string, []>("add_15_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(30488896)))];
            tensor<fp16, [512]> add_15_variance_0_to_fp16 = const()[name = tensor<string, []>("add_15_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(30489984)))];
            tensor<fp16, [512]> add_15_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_15_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(30491072)))];
            tensor<fp16, [512]> add_15_beta_0_to_fp16 = const()[name = tensor<string, []>("add_15_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(30492160)))];
            tensor<fp16, []> add_15_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_15_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 64, 64]> add_15_cast = batch_norm(beta = add_15_beta_0_to_fp16, epsilon = add_15_epsilon_0_to_fp16, gamma = add_15_gamma_0_to_fp16, mean = add_15_mean_0_to_fp16, variance = add_15_variance_0_to_fp16, x = reshape_29_cast);
            tensor<fp16, [1, 512, 64, 64]> input_53_cast = silu(x = add_15_cast);
            tensor<int32, [2]> var_285 = const()[name = tensor<string, []>("op_285"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_287 = const()[name = tensor<string, []>("op_287"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_55_pad_type_0 = const()[name = tensor<string, []>("input_55_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_55_pad_0 = const()[name = tensor<string, []>("input_55_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [512, 512, 3, 3]> decoder_up_blocks_0_resnets_1_conv1_weight_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_0_resnets_1_conv1_weight_to_fp16"), val = tensor<fp16, [512, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(30493248)))];
            tensor<fp16, [512]> decoder_up_blocks_0_resnets_1_conv1_bias_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_0_resnets_1_conv1_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(35211904)))];
            tensor<fp16, [1, 512, 64, 64]> input_55_cast = conv(bias = decoder_up_blocks_0_resnets_1_conv1_bias_to_fp16, dilations = var_287, groups = var_28, pad = input_55_pad_0, pad_type = input_55_pad_type_0, strides = var_285, weight = decoder_up_blocks_0_resnets_1_conv1_weight_to_fp16, x = input_53_cast);
            tensor<int32, [5]> reshape_32_shape_0 = const()[name = tensor<string, []>("reshape_32_shape_0"), val = tensor<int32, [5]>([1, 32, 16, 64, 64])];
            tensor<fp16, [1, 32, 16, 64, 64]> reshape_32_cast = reshape(shape = reshape_32_shape_0, x = input_55_cast);
            tensor<int32, [3]> reduce_mean_24_axes_0 = const()[name = tensor<string, []>("reduce_mean_24_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_24_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_24_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_24_cast = reduce_mean(axes = reduce_mean_24_axes_0, keep_dims = reduce_mean_24_keep_dims_0, x = reshape_32_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> sub_16_cast = sub(x = reshape_32_cast, y = reduce_mean_24_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> square_8_cast = square(x = sub_16_cast);
            tensor<int32, [3]> reduce_mean_26_axes_0 = const()[name = tensor<string, []>("reduce_mean_26_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_26_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_26_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_26_cast = reduce_mean(axes = reduce_mean_26_axes_0, keep_dims = reduce_mean_26_keep_dims_0, x = square_8_cast);
            tensor<fp16, []> add_16_y_0_to_fp16 = const()[name = tensor<string, []>("add_16_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_16_cast = add(x = reduce_mean_26_cast, y = add_16_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_8_cast = sqrt(x = add_16_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> real_div_8_cast = real_div(x = sub_16_cast, y = sqrt_8_cast);
            tensor<int32, [4]> reshape_33_shape_0 = const()[name = tensor<string, []>("reshape_33_shape_0"), val = tensor<int32, [4]>([1, 512, 64, 64])];
            tensor<fp16, [1, 512, 64, 64]> reshape_33_cast = reshape(shape = reshape_33_shape_0, x = real_div_8_cast);
            tensor<fp16, [512]> add_17_mean_0_to_fp16 = const()[name = tensor<string, []>("add_17_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(35212992)))];
            tensor<fp16, [512]> add_17_variance_0_to_fp16 = const()[name = tensor<string, []>("add_17_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(35214080)))];
            tensor<fp16, [512]> add_17_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_17_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(35215168)))];
            tensor<fp16, [512]> add_17_beta_0_to_fp16 = const()[name = tensor<string, []>("add_17_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(35216256)))];
            tensor<fp16, []> add_17_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_17_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 64, 64]> add_17_cast = batch_norm(beta = add_17_beta_0_to_fp16, epsilon = add_17_epsilon_0_to_fp16, gamma = add_17_gamma_0_to_fp16, mean = add_17_mean_0_to_fp16, variance = add_17_variance_0_to_fp16, x = reshape_33_cast);
            tensor<fp16, [1, 512, 64, 64]> input_59_cast = silu(x = add_17_cast);
            tensor<int32, [2]> var_297 = const()[name = tensor<string, []>("op_297"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_299 = const()[name = tensor<string, []>("op_299"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_15_pad_type_0 = const()[name = tensor<string, []>("hidden_states_15_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_15_pad_0 = const()[name = tensor<string, []>("hidden_states_15_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [512, 512, 3, 3]> decoder_up_blocks_0_resnets_1_conv2_weight_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_0_resnets_1_conv2_weight_to_fp16"), val = tensor<fp16, [512, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(35217344)))];
            tensor<fp16, [512]> decoder_up_blocks_0_resnets_1_conv2_bias_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_0_resnets_1_conv2_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(39936000)))];
            tensor<fp16, [1, 512, 64, 64]> hidden_states_15_cast = conv(bias = decoder_up_blocks_0_resnets_1_conv2_bias_to_fp16, dilations = var_299, groups = var_28, pad = hidden_states_15_pad_0, pad_type = hidden_states_15_pad_type_0, strides = var_297, weight = decoder_up_blocks_0_resnets_1_conv2_weight_to_fp16, x = input_59_cast);
            tensor<fp16, [1, 512, 64, 64]> var_302_cast = add(x = var_272_cast, y = hidden_states_15_cast);
            tensor<int32, [5]> reshape_36_shape_0 = const()[name = tensor<string, []>("reshape_36_shape_0"), val = tensor<int32, [5]>([1, 32, 16, 64, 64])];
            tensor<fp16, [1, 32, 16, 64, 64]> reshape_36_cast = reshape(shape = reshape_36_shape_0, x = var_302_cast);
            tensor<int32, [3]> reduce_mean_27_axes_0 = const()[name = tensor<string, []>("reduce_mean_27_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_27_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_27_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_27_cast = reduce_mean(axes = reduce_mean_27_axes_0, keep_dims = reduce_mean_27_keep_dims_0, x = reshape_36_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> sub_18_cast = sub(x = reshape_36_cast, y = reduce_mean_27_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> square_9_cast = square(x = sub_18_cast);
            tensor<int32, [3]> reduce_mean_29_axes_0 = const()[name = tensor<string, []>("reduce_mean_29_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_29_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_29_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_29_cast = reduce_mean(axes = reduce_mean_29_axes_0, keep_dims = reduce_mean_29_keep_dims_0, x = square_9_cast);
            tensor<fp16, []> add_18_y_0_to_fp16 = const()[name = tensor<string, []>("add_18_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_18_cast = add(x = reduce_mean_29_cast, y = add_18_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_9_cast = sqrt(x = add_18_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> real_div_9_cast = real_div(x = sub_18_cast, y = sqrt_9_cast);
            tensor<int32, [4]> reshape_37_shape_0 = const()[name = tensor<string, []>("reshape_37_shape_0"), val = tensor<int32, [4]>([1, 512, 64, 64])];
            tensor<fp16, [1, 512, 64, 64]> reshape_37_cast = reshape(shape = reshape_37_shape_0, x = real_div_9_cast);
            tensor<fp16, [512]> add_19_mean_0_to_fp16 = const()[name = tensor<string, []>("add_19_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(39937088)))];
            tensor<fp16, [512]> add_19_variance_0_to_fp16 = const()[name = tensor<string, []>("add_19_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(39938176)))];
            tensor<fp16, [512]> add_19_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_19_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(39939264)))];
            tensor<fp16, [512]> add_19_beta_0_to_fp16 = const()[name = tensor<string, []>("add_19_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(39940352)))];
            tensor<fp16, []> add_19_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_19_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 64, 64]> add_19_cast = batch_norm(beta = add_19_beta_0_to_fp16, epsilon = add_19_epsilon_0_to_fp16, gamma = add_19_gamma_0_to_fp16, mean = add_19_mean_0_to_fp16, variance = add_19_variance_0_to_fp16, x = reshape_37_cast);
            tensor<fp16, [1, 512, 64, 64]> input_67_cast = silu(x = add_19_cast);
            tensor<int32, [2]> var_315 = const()[name = tensor<string, []>("op_315"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_317 = const()[name = tensor<string, []>("op_317"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_69_pad_type_0 = const()[name = tensor<string, []>("input_69_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_69_pad_0 = const()[name = tensor<string, []>("input_69_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [512, 512, 3, 3]> decoder_up_blocks_0_resnets_2_conv1_weight_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_0_resnets_2_conv1_weight_to_fp16"), val = tensor<fp16, [512, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(39941440)))];
            tensor<fp16, [512]> decoder_up_blocks_0_resnets_2_conv1_bias_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_0_resnets_2_conv1_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(44660096)))];
            tensor<fp16, [1, 512, 64, 64]> input_69_cast = conv(bias = decoder_up_blocks_0_resnets_2_conv1_bias_to_fp16, dilations = var_317, groups = var_28, pad = input_69_pad_0, pad_type = input_69_pad_type_0, strides = var_315, weight = decoder_up_blocks_0_resnets_2_conv1_weight_to_fp16, x = input_67_cast);
            tensor<int32, [5]> reshape_40_shape_0 = const()[name = tensor<string, []>("reshape_40_shape_0"), val = tensor<int32, [5]>([1, 32, 16, 64, 64])];
            tensor<fp16, [1, 32, 16, 64, 64]> reshape_40_cast = reshape(shape = reshape_40_shape_0, x = input_69_cast);
            tensor<int32, [3]> reduce_mean_30_axes_0 = const()[name = tensor<string, []>("reduce_mean_30_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_30_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_30_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_30_cast = reduce_mean(axes = reduce_mean_30_axes_0, keep_dims = reduce_mean_30_keep_dims_0, x = reshape_40_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> sub_20_cast = sub(x = reshape_40_cast, y = reduce_mean_30_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> square_10_cast = square(x = sub_20_cast);
            tensor<int32, [3]> reduce_mean_32_axes_0 = const()[name = tensor<string, []>("reduce_mean_32_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_32_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_32_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_32_cast = reduce_mean(axes = reduce_mean_32_axes_0, keep_dims = reduce_mean_32_keep_dims_0, x = square_10_cast);
            tensor<fp16, []> add_20_y_0_to_fp16 = const()[name = tensor<string, []>("add_20_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_20_cast = add(x = reduce_mean_32_cast, y = add_20_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_10_cast = sqrt(x = add_20_cast);
            tensor<fp16, [1, 32, 16, 64, 64]> real_div_10_cast = real_div(x = sub_20_cast, y = sqrt_10_cast);
            tensor<int32, [4]> reshape_41_shape_0 = const()[name = tensor<string, []>("reshape_41_shape_0"), val = tensor<int32, [4]>([1, 512, 64, 64])];
            tensor<fp16, [1, 512, 64, 64]> reshape_41_cast = reshape(shape = reshape_41_shape_0, x = real_div_10_cast);
            tensor<fp16, [512]> add_21_mean_0_to_fp16 = const()[name = tensor<string, []>("add_21_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(44661184)))];
            tensor<fp16, [512]> add_21_variance_0_to_fp16 = const()[name = tensor<string, []>("add_21_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(44662272)))];
            tensor<fp16, [512]> add_21_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_21_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(44663360)))];
            tensor<fp16, [512]> add_21_beta_0_to_fp16 = const()[name = tensor<string, []>("add_21_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(44664448)))];
            tensor<fp16, []> add_21_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_21_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 64, 64]> add_21_cast = batch_norm(beta = add_21_beta_0_to_fp16, epsilon = add_21_epsilon_0_to_fp16, gamma = add_21_gamma_0_to_fp16, mean = add_21_mean_0_to_fp16, variance = add_21_variance_0_to_fp16, x = reshape_41_cast);
            tensor<fp16, [1, 512, 64, 64]> input_73_cast = silu(x = add_21_cast);
            tensor<int32, [2]> var_327 = const()[name = tensor<string, []>("op_327"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_329 = const()[name = tensor<string, []>("op_329"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_17_pad_type_0 = const()[name = tensor<string, []>("hidden_states_17_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_17_pad_0 = const()[name = tensor<string, []>("hidden_states_17_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [512, 512, 3, 3]> decoder_up_blocks_0_resnets_2_conv2_weight_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_0_resnets_2_conv2_weight_to_fp16"), val = tensor<fp16, [512, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(44665536)))];
            tensor<fp16, [512]> decoder_up_blocks_0_resnets_2_conv2_bias_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_0_resnets_2_conv2_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(49384192)))];
            tensor<fp16, [1, 512, 64, 64]> hidden_states_17_cast = conv(bias = decoder_up_blocks_0_resnets_2_conv2_bias_to_fp16, dilations = var_329, groups = var_28, pad = hidden_states_17_pad_0, pad_type = hidden_states_17_pad_type_0, strides = var_327, weight = decoder_up_blocks_0_resnets_2_conv2_weight_to_fp16, x = input_73_cast);
            tensor<fp16, [1, 512, 64, 64]> var_332_cast = add(x = var_302_cast, y = hidden_states_17_cast);
            tensor<fp32, []> input_77_scale_factor_height_0 = const()[name = tensor<string, []>("input_77_scale_factor_height_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp32, []> input_77_scale_factor_width_0 = const()[name = tensor<string, []>("input_77_scale_factor_width_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp16, [1, 512, 128, 128]> input_77_cast = upsample_nearest_neighbor(scale_factor_height = input_77_scale_factor_height_0, scale_factor_width = input_77_scale_factor_width_0, x = var_332_cast);
            tensor<int32, [2]> var_340 = const()[name = tensor<string, []>("op_340"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_342 = const()[name = tensor<string, []>("op_342"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_79_pad_type_0 = const()[name = tensor<string, []>("input_79_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_79_pad_0 = const()[name = tensor<string, []>("input_79_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [512, 512, 3, 3]> decoder_up_blocks_0_upsamplers_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_0_upsamplers_0_conv_weight_to_fp16"), val = tensor<fp16, [512, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(49385280)))];
            tensor<fp16, [512]> decoder_up_blocks_0_upsamplers_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_0_upsamplers_0_conv_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54103936)))];
            tensor<fp16, [1, 512, 128, 128]> input_79_cast = conv(bias = decoder_up_blocks_0_upsamplers_0_conv_bias_to_fp16, dilations = var_342, groups = var_28, pad = input_79_pad_0, pad_type = input_79_pad_type_0, strides = var_340, weight = decoder_up_blocks_0_upsamplers_0_conv_weight_to_fp16, x = input_77_cast);
            tensor<int32, [5]> reshape_44_shape_0 = const()[name = tensor<string, []>("reshape_44_shape_0"), val = tensor<int32, [5]>([1, 32, 16, 128, 128])];
            tensor<fp16, [1, 32, 16, 128, 128]> reshape_44_cast = reshape(shape = reshape_44_shape_0, x = input_79_cast);
            tensor<int32, [3]> reduce_mean_33_axes_0 = const()[name = tensor<string, []>("reduce_mean_33_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_33_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_33_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_33_cast = reduce_mean(axes = reduce_mean_33_axes_0, keep_dims = reduce_mean_33_keep_dims_0, x = reshape_44_cast);
            tensor<fp16, [1, 32, 16, 128, 128]> sub_22_cast = sub(x = reshape_44_cast, y = reduce_mean_33_cast);
            tensor<fp16, [1, 32, 16, 128, 128]> square_11_cast = square(x = sub_22_cast);
            tensor<int32, [3]> reduce_mean_35_axes_0 = const()[name = tensor<string, []>("reduce_mean_35_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_35_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_35_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_35_cast = reduce_mean(axes = reduce_mean_35_axes_0, keep_dims = reduce_mean_35_keep_dims_0, x = square_11_cast);
            tensor<fp16, []> add_22_y_0_to_fp16 = const()[name = tensor<string, []>("add_22_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_22_cast = add(x = reduce_mean_35_cast, y = add_22_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_11_cast = sqrt(x = add_22_cast);
            tensor<fp16, [1, 32, 16, 128, 128]> real_div_11_cast = real_div(x = sub_22_cast, y = sqrt_11_cast);
            tensor<int32, [4]> reshape_45_shape_0 = const()[name = tensor<string, []>("reshape_45_shape_0"), val = tensor<int32, [4]>([1, 512, 128, 128])];
            tensor<fp16, [1, 512, 128, 128]> reshape_45_cast = reshape(shape = reshape_45_shape_0, x = real_div_11_cast);
            tensor<fp16, [512]> add_23_mean_0_to_fp16 = const()[name = tensor<string, []>("add_23_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54105024)))];
            tensor<fp16, [512]> add_23_variance_0_to_fp16 = const()[name = tensor<string, []>("add_23_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54106112)))];
            tensor<fp16, [512]> add_23_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_23_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54107200)))];
            tensor<fp16, [512]> add_23_beta_0_to_fp16 = const()[name = tensor<string, []>("add_23_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54108288)))];
            tensor<fp16, []> add_23_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_23_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 128, 128]> add_23_cast = batch_norm(beta = add_23_beta_0_to_fp16, epsilon = add_23_epsilon_0_to_fp16, gamma = add_23_gamma_0_to_fp16, mean = add_23_mean_0_to_fp16, variance = add_23_variance_0_to_fp16, x = reshape_45_cast);
            tensor<fp16, [1, 512, 128, 128]> input_83_cast = silu(x = add_23_cast);
            tensor<int32, [2]> var_363 = const()[name = tensor<string, []>("op_363"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_365 = const()[name = tensor<string, []>("op_365"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_85_pad_type_0 = const()[name = tensor<string, []>("input_85_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_85_pad_0 = const()[name = tensor<string, []>("input_85_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [512, 512, 3, 3]> decoder_up_blocks_1_resnets_0_conv1_weight_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_1_resnets_0_conv1_weight_to_fp16"), val = tensor<fp16, [512, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54109376)))];
            tensor<fp16, [512]> decoder_up_blocks_1_resnets_0_conv1_bias_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_1_resnets_0_conv1_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(58828032)))];
            tensor<fp16, [1, 512, 128, 128]> input_85_cast = conv(bias = decoder_up_blocks_1_resnets_0_conv1_bias_to_fp16, dilations = var_365, groups = var_28, pad = input_85_pad_0, pad_type = input_85_pad_type_0, strides = var_363, weight = decoder_up_blocks_1_resnets_0_conv1_weight_to_fp16, x = input_83_cast);
            tensor<int32, [5]> reshape_48_shape_0 = const()[name = tensor<string, []>("reshape_48_shape_0"), val = tensor<int32, [5]>([1, 32, 16, 128, 128])];
            tensor<fp16, [1, 32, 16, 128, 128]> reshape_48_cast = reshape(shape = reshape_48_shape_0, x = input_85_cast);
            tensor<int32, [3]> reduce_mean_36_axes_0 = const()[name = tensor<string, []>("reduce_mean_36_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_36_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_36_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_36_cast = reduce_mean(axes = reduce_mean_36_axes_0, keep_dims = reduce_mean_36_keep_dims_0, x = reshape_48_cast);
            tensor<fp16, [1, 32, 16, 128, 128]> sub_24_cast = sub(x = reshape_48_cast, y = reduce_mean_36_cast);
            tensor<fp16, [1, 32, 16, 128, 128]> square_12_cast = square(x = sub_24_cast);
            tensor<int32, [3]> reduce_mean_38_axes_0 = const()[name = tensor<string, []>("reduce_mean_38_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_38_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_38_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_38_cast = reduce_mean(axes = reduce_mean_38_axes_0, keep_dims = reduce_mean_38_keep_dims_0, x = square_12_cast);
            tensor<fp16, []> add_24_y_0_to_fp16 = const()[name = tensor<string, []>("add_24_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_24_cast = add(x = reduce_mean_38_cast, y = add_24_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_12_cast = sqrt(x = add_24_cast);
            tensor<fp16, [1, 32, 16, 128, 128]> real_div_12_cast = real_div(x = sub_24_cast, y = sqrt_12_cast);
            tensor<int32, [4]> reshape_49_shape_0 = const()[name = tensor<string, []>("reshape_49_shape_0"), val = tensor<int32, [4]>([1, 512, 128, 128])];
            tensor<fp16, [1, 512, 128, 128]> reshape_49_cast = reshape(shape = reshape_49_shape_0, x = real_div_12_cast);
            tensor<fp16, [512]> add_25_mean_0_to_fp16 = const()[name = tensor<string, []>("add_25_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(58829120)))];
            tensor<fp16, [512]> add_25_variance_0_to_fp16 = const()[name = tensor<string, []>("add_25_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(58830208)))];
            tensor<fp16, [512]> add_25_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_25_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(58831296)))];
            tensor<fp16, [512]> add_25_beta_0_to_fp16 = const()[name = tensor<string, []>("add_25_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(58832384)))];
            tensor<fp16, []> add_25_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_25_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 128, 128]> add_25_cast = batch_norm(beta = add_25_beta_0_to_fp16, epsilon = add_25_epsilon_0_to_fp16, gamma = add_25_gamma_0_to_fp16, mean = add_25_mean_0_to_fp16, variance = add_25_variance_0_to_fp16, x = reshape_49_cast);
            tensor<fp16, [1, 512, 128, 128]> input_89_cast = silu(x = add_25_cast);
            tensor<int32, [2]> var_375 = const()[name = tensor<string, []>("op_375"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_377 = const()[name = tensor<string, []>("op_377"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_21_pad_type_0 = const()[name = tensor<string, []>("hidden_states_21_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_21_pad_0 = const()[name = tensor<string, []>("hidden_states_21_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [512, 512, 3, 3]> decoder_up_blocks_1_resnets_0_conv2_weight_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_1_resnets_0_conv2_weight_to_fp16"), val = tensor<fp16, [512, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(58833472)))];
            tensor<fp16, [512]> decoder_up_blocks_1_resnets_0_conv2_bias_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_1_resnets_0_conv2_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(63552128)))];
            tensor<fp16, [1, 512, 128, 128]> hidden_states_21_cast = conv(bias = decoder_up_blocks_1_resnets_0_conv2_bias_to_fp16, dilations = var_377, groups = var_28, pad = hidden_states_21_pad_0, pad_type = hidden_states_21_pad_type_0, strides = var_375, weight = decoder_up_blocks_1_resnets_0_conv2_weight_to_fp16, x = input_89_cast);
            tensor<fp16, [1, 512, 128, 128]> var_380_cast = add(x = input_79_cast, y = hidden_states_21_cast);
            tensor<int32, [5]> reshape_52_shape_0 = const()[name = tensor<string, []>("reshape_52_shape_0"), val = tensor<int32, [5]>([1, 32, 16, 128, 128])];
            tensor<fp16, [1, 32, 16, 128, 128]> reshape_52_cast = reshape(shape = reshape_52_shape_0, x = var_380_cast);
            tensor<int32, [3]> reduce_mean_39_axes_0 = const()[name = tensor<string, []>("reduce_mean_39_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_39_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_39_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_39_cast = reduce_mean(axes = reduce_mean_39_axes_0, keep_dims = reduce_mean_39_keep_dims_0, x = reshape_52_cast);
            tensor<fp16, [1, 32, 16, 128, 128]> sub_26_cast = sub(x = reshape_52_cast, y = reduce_mean_39_cast);
            tensor<fp16, [1, 32, 16, 128, 128]> square_13_cast = square(x = sub_26_cast);
            tensor<int32, [3]> reduce_mean_41_axes_0 = const()[name = tensor<string, []>("reduce_mean_41_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_41_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_41_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_41_cast = reduce_mean(axes = reduce_mean_41_axes_0, keep_dims = reduce_mean_41_keep_dims_0, x = square_13_cast);
            tensor<fp16, []> add_26_y_0_to_fp16 = const()[name = tensor<string, []>("add_26_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_26_cast = add(x = reduce_mean_41_cast, y = add_26_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_13_cast = sqrt(x = add_26_cast);
            tensor<fp16, [1, 32, 16, 128, 128]> real_div_13_cast = real_div(x = sub_26_cast, y = sqrt_13_cast);
            tensor<int32, [4]> reshape_53_shape_0 = const()[name = tensor<string, []>("reshape_53_shape_0"), val = tensor<int32, [4]>([1, 512, 128, 128])];
            tensor<fp16, [1, 512, 128, 128]> reshape_53_cast = reshape(shape = reshape_53_shape_0, x = real_div_13_cast);
            tensor<fp16, [512]> add_27_mean_0_to_fp16 = const()[name = tensor<string, []>("add_27_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(63553216)))];
            tensor<fp16, [512]> add_27_variance_0_to_fp16 = const()[name = tensor<string, []>("add_27_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(63554304)))];
            tensor<fp16, [512]> add_27_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_27_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(63555392)))];
            tensor<fp16, [512]> add_27_beta_0_to_fp16 = const()[name = tensor<string, []>("add_27_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(63556480)))];
            tensor<fp16, []> add_27_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_27_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 128, 128]> add_27_cast = batch_norm(beta = add_27_beta_0_to_fp16, epsilon = add_27_epsilon_0_to_fp16, gamma = add_27_gamma_0_to_fp16, mean = add_27_mean_0_to_fp16, variance = add_27_variance_0_to_fp16, x = reshape_53_cast);
            tensor<fp16, [1, 512, 128, 128]> input_97_cast = silu(x = add_27_cast);
            tensor<int32, [2]> var_393 = const()[name = tensor<string, []>("op_393"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_395 = const()[name = tensor<string, []>("op_395"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_99_pad_type_0 = const()[name = tensor<string, []>("input_99_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_99_pad_0 = const()[name = tensor<string, []>("input_99_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [512, 512, 3, 3]> decoder_up_blocks_1_resnets_1_conv1_weight_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_1_resnets_1_conv1_weight_to_fp16"), val = tensor<fp16, [512, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(63557568)))];
            tensor<fp16, [512]> decoder_up_blocks_1_resnets_1_conv1_bias_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_1_resnets_1_conv1_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68276224)))];
            tensor<fp16, [1, 512, 128, 128]> input_99_cast = conv(bias = decoder_up_blocks_1_resnets_1_conv1_bias_to_fp16, dilations = var_395, groups = var_28, pad = input_99_pad_0, pad_type = input_99_pad_type_0, strides = var_393, weight = decoder_up_blocks_1_resnets_1_conv1_weight_to_fp16, x = input_97_cast);
            tensor<int32, [5]> reshape_56_shape_0 = const()[name = tensor<string, []>("reshape_56_shape_0"), val = tensor<int32, [5]>([1, 32, 16, 128, 128])];
            tensor<fp16, [1, 32, 16, 128, 128]> reshape_56_cast = reshape(shape = reshape_56_shape_0, x = input_99_cast);
            tensor<int32, [3]> reduce_mean_42_axes_0 = const()[name = tensor<string, []>("reduce_mean_42_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_42_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_42_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_42_cast = reduce_mean(axes = reduce_mean_42_axes_0, keep_dims = reduce_mean_42_keep_dims_0, x = reshape_56_cast);
            tensor<fp16, [1, 32, 16, 128, 128]> sub_28_cast = sub(x = reshape_56_cast, y = reduce_mean_42_cast);
            tensor<fp16, [1, 32, 16, 128, 128]> square_14_cast = square(x = sub_28_cast);
            tensor<int32, [3]> reduce_mean_44_axes_0 = const()[name = tensor<string, []>("reduce_mean_44_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_44_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_44_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_44_cast = reduce_mean(axes = reduce_mean_44_axes_0, keep_dims = reduce_mean_44_keep_dims_0, x = square_14_cast);
            tensor<fp16, []> add_28_y_0_to_fp16 = const()[name = tensor<string, []>("add_28_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_28_cast = add(x = reduce_mean_44_cast, y = add_28_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_14_cast = sqrt(x = add_28_cast);
            tensor<fp16, [1, 32, 16, 128, 128]> real_div_14_cast = real_div(x = sub_28_cast, y = sqrt_14_cast);
            tensor<int32, [4]> reshape_57_shape_0 = const()[name = tensor<string, []>("reshape_57_shape_0"), val = tensor<int32, [4]>([1, 512, 128, 128])];
            tensor<fp16, [1, 512, 128, 128]> reshape_57_cast = reshape(shape = reshape_57_shape_0, x = real_div_14_cast);
            tensor<fp16, [512]> add_29_mean_0_to_fp16 = const()[name = tensor<string, []>("add_29_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68277312)))];
            tensor<fp16, [512]> add_29_variance_0_to_fp16 = const()[name = tensor<string, []>("add_29_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68278400)))];
            tensor<fp16, [512]> add_29_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_29_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68279488)))];
            tensor<fp16, [512]> add_29_beta_0_to_fp16 = const()[name = tensor<string, []>("add_29_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68280576)))];
            tensor<fp16, []> add_29_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_29_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 128, 128]> add_29_cast = batch_norm(beta = add_29_beta_0_to_fp16, epsilon = add_29_epsilon_0_to_fp16, gamma = add_29_gamma_0_to_fp16, mean = add_29_mean_0_to_fp16, variance = add_29_variance_0_to_fp16, x = reshape_57_cast);
            tensor<fp16, [1, 512, 128, 128]> input_103_cast = silu(x = add_29_cast);
            tensor<int32, [2]> var_405 = const()[name = tensor<string, []>("op_405"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_407 = const()[name = tensor<string, []>("op_407"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_23_pad_type_0 = const()[name = tensor<string, []>("hidden_states_23_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_23_pad_0 = const()[name = tensor<string, []>("hidden_states_23_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [512, 512, 3, 3]> decoder_up_blocks_1_resnets_1_conv2_weight_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_1_resnets_1_conv2_weight_to_fp16"), val = tensor<fp16, [512, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68281664)))];
            tensor<fp16, [512]> decoder_up_blocks_1_resnets_1_conv2_bias_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_1_resnets_1_conv2_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(73000320)))];
            tensor<fp16, [1, 512, 128, 128]> hidden_states_23_cast = conv(bias = decoder_up_blocks_1_resnets_1_conv2_bias_to_fp16, dilations = var_407, groups = var_28, pad = hidden_states_23_pad_0, pad_type = hidden_states_23_pad_type_0, strides = var_405, weight = decoder_up_blocks_1_resnets_1_conv2_weight_to_fp16, x = input_103_cast);
            tensor<fp16, [1, 512, 128, 128]> var_410_cast = add(x = var_380_cast, y = hidden_states_23_cast);
            tensor<int32, [5]> reshape_60_shape_0 = const()[name = tensor<string, []>("reshape_60_shape_0"), val = tensor<int32, [5]>([1, 32, 16, 128, 128])];
            tensor<fp16, [1, 32, 16, 128, 128]> reshape_60_cast = reshape(shape = reshape_60_shape_0, x = var_410_cast);
            tensor<int32, [3]> reduce_mean_45_axes_0 = const()[name = tensor<string, []>("reduce_mean_45_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_45_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_45_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_45_cast = reduce_mean(axes = reduce_mean_45_axes_0, keep_dims = reduce_mean_45_keep_dims_0, x = reshape_60_cast);
            tensor<fp16, [1, 32, 16, 128, 128]> sub_30_cast = sub(x = reshape_60_cast, y = reduce_mean_45_cast);
            tensor<fp16, [1, 32, 16, 128, 128]> square_15_cast = square(x = sub_30_cast);
            tensor<int32, [3]> reduce_mean_47_axes_0 = const()[name = tensor<string, []>("reduce_mean_47_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_47_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_47_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_47_cast = reduce_mean(axes = reduce_mean_47_axes_0, keep_dims = reduce_mean_47_keep_dims_0, x = square_15_cast);
            tensor<fp16, []> add_30_y_0_to_fp16 = const()[name = tensor<string, []>("add_30_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_30_cast = add(x = reduce_mean_47_cast, y = add_30_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_15_cast = sqrt(x = add_30_cast);
            tensor<fp16, [1, 32, 16, 128, 128]> real_div_15_cast = real_div(x = sub_30_cast, y = sqrt_15_cast);
            tensor<int32, [4]> reshape_61_shape_0 = const()[name = tensor<string, []>("reshape_61_shape_0"), val = tensor<int32, [4]>([1, 512, 128, 128])];
            tensor<fp16, [1, 512, 128, 128]> reshape_61_cast = reshape(shape = reshape_61_shape_0, x = real_div_15_cast);
            tensor<fp16, [512]> add_31_mean_0_to_fp16 = const()[name = tensor<string, []>("add_31_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(73001408)))];
            tensor<fp16, [512]> add_31_variance_0_to_fp16 = const()[name = tensor<string, []>("add_31_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(73002496)))];
            tensor<fp16, [512]> add_31_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_31_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(73003584)))];
            tensor<fp16, [512]> add_31_beta_0_to_fp16 = const()[name = tensor<string, []>("add_31_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(73004672)))];
            tensor<fp16, []> add_31_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_31_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 128, 128]> add_31_cast = batch_norm(beta = add_31_beta_0_to_fp16, epsilon = add_31_epsilon_0_to_fp16, gamma = add_31_gamma_0_to_fp16, mean = add_31_mean_0_to_fp16, variance = add_31_variance_0_to_fp16, x = reshape_61_cast);
            tensor<fp16, [1, 512, 128, 128]> input_111_cast = silu(x = add_31_cast);
            tensor<int32, [2]> var_423 = const()[name = tensor<string, []>("op_423"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_425 = const()[name = tensor<string, []>("op_425"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_113_pad_type_0 = const()[name = tensor<string, []>("input_113_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_113_pad_0 = const()[name = tensor<string, []>("input_113_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [512, 512, 3, 3]> decoder_up_blocks_1_resnets_2_conv1_weight_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_1_resnets_2_conv1_weight_to_fp16"), val = tensor<fp16, [512, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(73005760)))];
            tensor<fp16, [512]> decoder_up_blocks_1_resnets_2_conv1_bias_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_1_resnets_2_conv1_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(77724416)))];
            tensor<fp16, [1, 512, 128, 128]> input_113_cast = conv(bias = decoder_up_blocks_1_resnets_2_conv1_bias_to_fp16, dilations = var_425, groups = var_28, pad = input_113_pad_0, pad_type = input_113_pad_type_0, strides = var_423, weight = decoder_up_blocks_1_resnets_2_conv1_weight_to_fp16, x = input_111_cast);
            tensor<int32, [5]> reshape_64_shape_0 = const()[name = tensor<string, []>("reshape_64_shape_0"), val = tensor<int32, [5]>([1, 32, 16, 128, 128])];
            tensor<fp16, [1, 32, 16, 128, 128]> reshape_64_cast = reshape(shape = reshape_64_shape_0, x = input_113_cast);
            tensor<int32, [3]> reduce_mean_48_axes_0 = const()[name = tensor<string, []>("reduce_mean_48_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_48_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_48_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_48_cast = reduce_mean(axes = reduce_mean_48_axes_0, keep_dims = reduce_mean_48_keep_dims_0, x = reshape_64_cast);
            tensor<fp16, [1, 32, 16, 128, 128]> sub_32_cast = sub(x = reshape_64_cast, y = reduce_mean_48_cast);
            tensor<fp16, [1, 32, 16, 128, 128]> square_16_cast = square(x = sub_32_cast);
            tensor<int32, [3]> reduce_mean_50_axes_0 = const()[name = tensor<string, []>("reduce_mean_50_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_50_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_50_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_50_cast = reduce_mean(axes = reduce_mean_50_axes_0, keep_dims = reduce_mean_50_keep_dims_0, x = square_16_cast);
            tensor<fp16, []> add_32_y_0_to_fp16 = const()[name = tensor<string, []>("add_32_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_32_cast = add(x = reduce_mean_50_cast, y = add_32_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_16_cast = sqrt(x = add_32_cast);
            tensor<fp16, [1, 32, 16, 128, 128]> real_div_16_cast = real_div(x = sub_32_cast, y = sqrt_16_cast);
            tensor<int32, [4]> reshape_65_shape_0 = const()[name = tensor<string, []>("reshape_65_shape_0"), val = tensor<int32, [4]>([1, 512, 128, 128])];
            tensor<fp16, [1, 512, 128, 128]> reshape_65_cast = reshape(shape = reshape_65_shape_0, x = real_div_16_cast);
            tensor<fp16, [512]> add_33_mean_0_to_fp16 = const()[name = tensor<string, []>("add_33_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(77725504)))];
            tensor<fp16, [512]> add_33_variance_0_to_fp16 = const()[name = tensor<string, []>("add_33_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(77726592)))];
            tensor<fp16, [512]> add_33_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_33_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(77727680)))];
            tensor<fp16, [512]> add_33_beta_0_to_fp16 = const()[name = tensor<string, []>("add_33_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(77728768)))];
            tensor<fp16, []> add_33_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_33_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 128, 128]> add_33_cast = batch_norm(beta = add_33_beta_0_to_fp16, epsilon = add_33_epsilon_0_to_fp16, gamma = add_33_gamma_0_to_fp16, mean = add_33_mean_0_to_fp16, variance = add_33_variance_0_to_fp16, x = reshape_65_cast);
            tensor<fp16, [1, 512, 128, 128]> input_117_cast = silu(x = add_33_cast);
            tensor<int32, [2]> var_435 = const()[name = tensor<string, []>("op_435"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_437 = const()[name = tensor<string, []>("op_437"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_25_pad_type_0 = const()[name = tensor<string, []>("hidden_states_25_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_25_pad_0 = const()[name = tensor<string, []>("hidden_states_25_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [512, 512, 3, 3]> decoder_up_blocks_1_resnets_2_conv2_weight_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_1_resnets_2_conv2_weight_to_fp16"), val = tensor<fp16, [512, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(77729856)))];
            tensor<fp16, [512]> decoder_up_blocks_1_resnets_2_conv2_bias_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_1_resnets_2_conv2_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(82448512)))];
            tensor<fp16, [1, 512, 128, 128]> hidden_states_25_cast = conv(bias = decoder_up_blocks_1_resnets_2_conv2_bias_to_fp16, dilations = var_437, groups = var_28, pad = hidden_states_25_pad_0, pad_type = hidden_states_25_pad_type_0, strides = var_435, weight = decoder_up_blocks_1_resnets_2_conv2_weight_to_fp16, x = input_117_cast);
            tensor<fp16, [1, 512, 128, 128]> var_440_cast = add(x = var_410_cast, y = hidden_states_25_cast);
            tensor<fp32, []> input_121_scale_factor_height_0 = const()[name = tensor<string, []>("input_121_scale_factor_height_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp32, []> input_121_scale_factor_width_0 = const()[name = tensor<string, []>("input_121_scale_factor_width_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp16, [1, 512, 256, 256]> input_121_cast = upsample_nearest_neighbor(scale_factor_height = input_121_scale_factor_height_0, scale_factor_width = input_121_scale_factor_width_0, x = var_440_cast);
            tensor<int32, [2]> var_448 = const()[name = tensor<string, []>("op_448"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_450 = const()[name = tensor<string, []>("op_450"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_123_pad_type_0 = const()[name = tensor<string, []>("input_123_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_123_pad_0 = const()[name = tensor<string, []>("input_123_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [512, 512, 3, 3]> decoder_up_blocks_1_upsamplers_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_1_upsamplers_0_conv_weight_to_fp16"), val = tensor<fp16, [512, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(82449600)))];
            tensor<fp16, [512]> decoder_up_blocks_1_upsamplers_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_1_upsamplers_0_conv_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(87168256)))];
            tensor<fp16, [1, 512, 256, 256]> input_123_cast = conv(bias = decoder_up_blocks_1_upsamplers_0_conv_bias_to_fp16, dilations = var_450, groups = var_28, pad = input_123_pad_0, pad_type = input_123_pad_type_0, strides = var_448, weight = decoder_up_blocks_1_upsamplers_0_conv_weight_to_fp16, x = input_121_cast);
            tensor<int32, [5]> reshape_68_shape_0 = const()[name = tensor<string, []>("reshape_68_shape_0"), val = tensor<int32, [5]>([1, 32, 16, 256, 256])];
            tensor<fp16, [1, 32, 16, 256, 256]> reshape_68_cast = reshape(shape = reshape_68_shape_0, x = input_123_cast);
            tensor<int32, [3]> reduce_mean_51_axes_0 = const()[name = tensor<string, []>("reduce_mean_51_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_51_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_51_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_51_cast = reduce_mean(axes = reduce_mean_51_axes_0, keep_dims = reduce_mean_51_keep_dims_0, x = reshape_68_cast);
            tensor<fp16, [1, 32, 16, 256, 256]> sub_34_cast = sub(x = reshape_68_cast, y = reduce_mean_51_cast);
            tensor<fp16, [1, 32, 16, 256, 256]> square_17_cast = square(x = sub_34_cast);
            tensor<int32, [3]> reduce_mean_53_axes_0 = const()[name = tensor<string, []>("reduce_mean_53_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_53_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_53_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_53_cast = reduce_mean(axes = reduce_mean_53_axes_0, keep_dims = reduce_mean_53_keep_dims_0, x = square_17_cast);
            tensor<fp16, []> add_34_y_0_to_fp16 = const()[name = tensor<string, []>("add_34_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_34_cast = add(x = reduce_mean_53_cast, y = add_34_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_17_cast = sqrt(x = add_34_cast);
            tensor<fp16, [1, 32, 16, 256, 256]> real_div_17_cast = real_div(x = sub_34_cast, y = sqrt_17_cast);
            tensor<int32, [4]> reshape_69_shape_0 = const()[name = tensor<string, []>("reshape_69_shape_0"), val = tensor<int32, [4]>([1, 512, 256, 256])];
            tensor<fp16, [1, 512, 256, 256]> reshape_69_cast = reshape(shape = reshape_69_shape_0, x = real_div_17_cast);
            tensor<fp16, [512]> add_35_mean_0_to_fp16 = const()[name = tensor<string, []>("add_35_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(87169344)))];
            tensor<fp16, [512]> add_35_variance_0_to_fp16 = const()[name = tensor<string, []>("add_35_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(87170432)))];
            tensor<fp16, [512]> add_35_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_35_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(87171520)))];
            tensor<fp16, [512]> add_35_beta_0_to_fp16 = const()[name = tensor<string, []>("add_35_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(87172608)))];
            tensor<fp16, []> add_35_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_35_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 256, 256]> add_35_cast = batch_norm(beta = add_35_beta_0_to_fp16, epsilon = add_35_epsilon_0_to_fp16, gamma = add_35_gamma_0_to_fp16, mean = add_35_mean_0_to_fp16, variance = add_35_variance_0_to_fp16, x = reshape_69_cast);
            tensor<fp16, [1, 512, 256, 256]> input_127_cast = silu(x = add_35_cast);
            tensor<int32, [2]> var_472 = const()[name = tensor<string, []>("op_472"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_474 = const()[name = tensor<string, []>("op_474"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_129_pad_type_0 = const()[name = tensor<string, []>("input_129_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_129_pad_0 = const()[name = tensor<string, []>("input_129_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [256, 512, 3, 3]> decoder_up_blocks_2_resnets_0_conv1_weight_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_2_resnets_0_conv1_weight_to_fp16"), val = tensor<fp16, [256, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(87173696)))];
            tensor<fp16, [256]> decoder_up_blocks_2_resnets_0_conv1_bias_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_2_resnets_0_conv1_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(89533056)))];
            tensor<fp16, [1, 256, 256, 256]> input_129_cast = conv(bias = decoder_up_blocks_2_resnets_0_conv1_bias_to_fp16, dilations = var_474, groups = var_28, pad = input_129_pad_0, pad_type = input_129_pad_type_0, strides = var_472, weight = decoder_up_blocks_2_resnets_0_conv1_weight_to_fp16, x = input_127_cast);
            tensor<int32, [5]> reshape_72_shape_0 = const()[name = tensor<string, []>("reshape_72_shape_0"), val = tensor<int32, [5]>([1, 32, 8, 256, 256])];
            tensor<fp16, [1, 32, 8, 256, 256]> reshape_72_cast = reshape(shape = reshape_72_shape_0, x = input_129_cast);
            tensor<int32, [3]> reduce_mean_54_axes_0 = const()[name = tensor<string, []>("reduce_mean_54_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_54_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_54_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_54_cast = reduce_mean(axes = reduce_mean_54_axes_0, keep_dims = reduce_mean_54_keep_dims_0, x = reshape_72_cast);
            tensor<fp16, [1, 32, 8, 256, 256]> sub_36_cast = sub(x = reshape_72_cast, y = reduce_mean_54_cast);
            tensor<fp16, [1, 32, 8, 256, 256]> square_18_cast = square(x = sub_36_cast);
            tensor<int32, [3]> reduce_mean_56_axes_0 = const()[name = tensor<string, []>("reduce_mean_56_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_56_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_56_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_56_cast = reduce_mean(axes = reduce_mean_56_axes_0, keep_dims = reduce_mean_56_keep_dims_0, x = square_18_cast);
            tensor<fp16, []> add_36_y_0_to_fp16 = const()[name = tensor<string, []>("add_36_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_36_cast = add(x = reduce_mean_56_cast, y = add_36_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_18_cast = sqrt(x = add_36_cast);
            tensor<fp16, [1, 32, 8, 256, 256]> real_div_18_cast = real_div(x = sub_36_cast, y = sqrt_18_cast);
            tensor<int32, [4]> reshape_73_shape_0 = const()[name = tensor<string, []>("reshape_73_shape_0"), val = tensor<int32, [4]>([1, 256, 256, 256])];
            tensor<fp16, [1, 256, 256, 256]> reshape_73_cast = reshape(shape = reshape_73_shape_0, x = real_div_18_cast);
            tensor<fp16, [256]> add_37_mean_0_to_fp16 = const()[name = tensor<string, []>("add_37_mean_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(89533632)))];
            tensor<fp16, [256]> add_37_variance_0_to_fp16 = const()[name = tensor<string, []>("add_37_variance_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(89534208)))];
            tensor<fp16, [256]> add_37_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_37_gamma_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(89534784)))];
            tensor<fp16, [256]> add_37_beta_0_to_fp16 = const()[name = tensor<string, []>("add_37_beta_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(89535360)))];
            tensor<fp16, []> add_37_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_37_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 256, 256, 256]> add_37_cast = batch_norm(beta = add_37_beta_0_to_fp16, epsilon = add_37_epsilon_0_to_fp16, gamma = add_37_gamma_0_to_fp16, mean = add_37_mean_0_to_fp16, variance = add_37_variance_0_to_fp16, x = reshape_73_cast);
            tensor<fp16, [1, 256, 256, 256]> input_133_cast = silu(x = add_37_cast);
            tensor<int32, [2]> var_484 = const()[name = tensor<string, []>("op_484"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_486 = const()[name = tensor<string, []>("op_486"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_29_pad_type_0 = const()[name = tensor<string, []>("hidden_states_29_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_29_pad_0 = const()[name = tensor<string, []>("hidden_states_29_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [256, 256, 3, 3]> decoder_up_blocks_2_resnets_0_conv2_weight_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_2_resnets_0_conv2_weight_to_fp16"), val = tensor<fp16, [256, 256, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(89535936)))];
            tensor<fp16, [256]> decoder_up_blocks_2_resnets_0_conv2_bias_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_2_resnets_0_conv2_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(90715648)))];
            tensor<fp16, [1, 256, 256, 256]> hidden_states_29_cast = conv(bias = decoder_up_blocks_2_resnets_0_conv2_bias_to_fp16, dilations = var_486, groups = var_28, pad = hidden_states_29_pad_0, pad_type = hidden_states_29_pad_type_0, strides = var_484, weight = decoder_up_blocks_2_resnets_0_conv2_weight_to_fp16, x = input_133_cast);
            tensor<int32, [2]> var_491 = const()[name = tensor<string, []>("op_491"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_493 = const()[name = tensor<string, []>("op_493"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_tensor_1_pad_type_0 = const()[name = tensor<string, []>("input_tensor_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_tensor_1_pad_0 = const()[name = tensor<string, []>("input_tensor_1_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 512, 1, 1]> decoder_up_blocks_2_resnets_0_conv_shortcut_weight_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_2_resnets_0_conv_shortcut_weight_to_fp16"), val = tensor<fp16, [256, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(90716224)))];
            tensor<fp16, [256]> decoder_up_blocks_2_resnets_0_conv_shortcut_bias_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_2_resnets_0_conv_shortcut_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(90978432)))];
            tensor<fp16, [1, 256, 256, 256]> input_tensor_1_cast = conv(bias = decoder_up_blocks_2_resnets_0_conv_shortcut_bias_to_fp16, dilations = var_493, groups = var_28, pad = input_tensor_1_pad_0, pad_type = input_tensor_1_pad_type_0, strides = var_491, weight = decoder_up_blocks_2_resnets_0_conv_shortcut_weight_to_fp16, x = input_123_cast);
            tensor<fp16, [1, 256, 256, 256]> var_496_cast = add(x = input_tensor_1_cast, y = hidden_states_29_cast);
            tensor<int32, [5]> reshape_76_shape_0 = const()[name = tensor<string, []>("reshape_76_shape_0"), val = tensor<int32, [5]>([1, 32, 8, 256, 256])];
            tensor<fp16, [1, 32, 8, 256, 256]> reshape_76_cast = reshape(shape = reshape_76_shape_0, x = var_496_cast);
            tensor<int32, [3]> reduce_mean_57_axes_0 = const()[name = tensor<string, []>("reduce_mean_57_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_57_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_57_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_57_cast = reduce_mean(axes = reduce_mean_57_axes_0, keep_dims = reduce_mean_57_keep_dims_0, x = reshape_76_cast);
            tensor<fp16, [1, 32, 8, 256, 256]> sub_38_cast = sub(x = reshape_76_cast, y = reduce_mean_57_cast);
            tensor<fp16, [1, 32, 8, 256, 256]> square_19_cast = square(x = sub_38_cast);
            tensor<int32, [3]> reduce_mean_59_axes_0 = const()[name = tensor<string, []>("reduce_mean_59_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_59_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_59_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_59_cast = reduce_mean(axes = reduce_mean_59_axes_0, keep_dims = reduce_mean_59_keep_dims_0, x = square_19_cast);
            tensor<fp16, []> add_38_y_0_to_fp16 = const()[name = tensor<string, []>("add_38_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_38_cast = add(x = reduce_mean_59_cast, y = add_38_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_19_cast = sqrt(x = add_38_cast);
            tensor<fp16, [1, 32, 8, 256, 256]> real_div_19_cast = real_div(x = sub_38_cast, y = sqrt_19_cast);
            tensor<int32, [4]> reshape_77_shape_0 = const()[name = tensor<string, []>("reshape_77_shape_0"), val = tensor<int32, [4]>([1, 256, 256, 256])];
            tensor<fp16, [1, 256, 256, 256]> reshape_77_cast = reshape(shape = reshape_77_shape_0, x = real_div_19_cast);
            tensor<fp16, [256]> add_39_mean_0_to_fp16 = const()[name = tensor<string, []>("add_39_mean_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(90979008)))];
            tensor<fp16, [256]> add_39_variance_0_to_fp16 = const()[name = tensor<string, []>("add_39_variance_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(90979584)))];
            tensor<fp16, [256]> add_39_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_39_gamma_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(90980160)))];
            tensor<fp16, [256]> add_39_beta_0_to_fp16 = const()[name = tensor<string, []>("add_39_beta_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(90980736)))];
            tensor<fp16, []> add_39_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_39_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 256, 256, 256]> add_39_cast = batch_norm(beta = add_39_beta_0_to_fp16, epsilon = add_39_epsilon_0_to_fp16, gamma = add_39_gamma_0_to_fp16, mean = add_39_mean_0_to_fp16, variance = add_39_variance_0_to_fp16, x = reshape_77_cast);
            tensor<fp16, [1, 256, 256, 256]> input_141_cast = silu(x = add_39_cast);
            tensor<int32, [2]> var_509 = const()[name = tensor<string, []>("op_509"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_511 = const()[name = tensor<string, []>("op_511"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_143_pad_type_0 = const()[name = tensor<string, []>("input_143_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_143_pad_0 = const()[name = tensor<string, []>("input_143_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [256, 256, 3, 3]> decoder_up_blocks_2_resnets_1_conv1_weight_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_2_resnets_1_conv1_weight_to_fp16"), val = tensor<fp16, [256, 256, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(90981312)))];
            tensor<fp16, [256]> decoder_up_blocks_2_resnets_1_conv1_bias_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_2_resnets_1_conv1_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(92161024)))];
            tensor<fp16, [1, 256, 256, 256]> input_143_cast = conv(bias = decoder_up_blocks_2_resnets_1_conv1_bias_to_fp16, dilations = var_511, groups = var_28, pad = input_143_pad_0, pad_type = input_143_pad_type_0, strides = var_509, weight = decoder_up_blocks_2_resnets_1_conv1_weight_to_fp16, x = input_141_cast);
            tensor<int32, [5]> reshape_80_shape_0 = const()[name = tensor<string, []>("reshape_80_shape_0"), val = tensor<int32, [5]>([1, 32, 8, 256, 256])];
            tensor<fp16, [1, 32, 8, 256, 256]> reshape_80_cast = reshape(shape = reshape_80_shape_0, x = input_143_cast);
            tensor<int32, [3]> reduce_mean_60_axes_0 = const()[name = tensor<string, []>("reduce_mean_60_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_60_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_60_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_60_cast = reduce_mean(axes = reduce_mean_60_axes_0, keep_dims = reduce_mean_60_keep_dims_0, x = reshape_80_cast);
            tensor<fp16, [1, 32, 8, 256, 256]> sub_40_cast = sub(x = reshape_80_cast, y = reduce_mean_60_cast);
            tensor<fp16, [1, 32, 8, 256, 256]> square_20_cast = square(x = sub_40_cast);
            tensor<int32, [3]> reduce_mean_62_axes_0 = const()[name = tensor<string, []>("reduce_mean_62_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_62_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_62_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_62_cast = reduce_mean(axes = reduce_mean_62_axes_0, keep_dims = reduce_mean_62_keep_dims_0, x = square_20_cast);
            tensor<fp16, []> add_40_y_0_to_fp16 = const()[name = tensor<string, []>("add_40_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_40_cast = add(x = reduce_mean_62_cast, y = add_40_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_20_cast = sqrt(x = add_40_cast);
            tensor<fp16, [1, 32, 8, 256, 256]> real_div_20_cast = real_div(x = sub_40_cast, y = sqrt_20_cast);
            tensor<int32, [4]> reshape_81_shape_0 = const()[name = tensor<string, []>("reshape_81_shape_0"), val = tensor<int32, [4]>([1, 256, 256, 256])];
            tensor<fp16, [1, 256, 256, 256]> reshape_81_cast = reshape(shape = reshape_81_shape_0, x = real_div_20_cast);
            tensor<fp16, [256]> add_41_mean_0_to_fp16 = const()[name = tensor<string, []>("add_41_mean_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(92161600)))];
            tensor<fp16, [256]> add_41_variance_0_to_fp16 = const()[name = tensor<string, []>("add_41_variance_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(92162176)))];
            tensor<fp16, [256]> add_41_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_41_gamma_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(92162752)))];
            tensor<fp16, [256]> add_41_beta_0_to_fp16 = const()[name = tensor<string, []>("add_41_beta_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(92163328)))];
            tensor<fp16, []> add_41_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_41_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 256, 256, 256]> add_41_cast = batch_norm(beta = add_41_beta_0_to_fp16, epsilon = add_41_epsilon_0_to_fp16, gamma = add_41_gamma_0_to_fp16, mean = add_41_mean_0_to_fp16, variance = add_41_variance_0_to_fp16, x = reshape_81_cast);
            tensor<fp16, [1, 256, 256, 256]> input_147_cast = silu(x = add_41_cast);
            tensor<int32, [2]> var_521 = const()[name = tensor<string, []>("op_521"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_523 = const()[name = tensor<string, []>("op_523"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_31_pad_type_0 = const()[name = tensor<string, []>("hidden_states_31_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_31_pad_0 = const()[name = tensor<string, []>("hidden_states_31_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [256, 256, 3, 3]> decoder_up_blocks_2_resnets_1_conv2_weight_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_2_resnets_1_conv2_weight_to_fp16"), val = tensor<fp16, [256, 256, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(92163904)))];
            tensor<fp16, [256]> decoder_up_blocks_2_resnets_1_conv2_bias_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_2_resnets_1_conv2_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(93343616)))];
            tensor<fp16, [1, 256, 256, 256]> hidden_states_31_cast = conv(bias = decoder_up_blocks_2_resnets_1_conv2_bias_to_fp16, dilations = var_523, groups = var_28, pad = hidden_states_31_pad_0, pad_type = hidden_states_31_pad_type_0, strides = var_521, weight = decoder_up_blocks_2_resnets_1_conv2_weight_to_fp16, x = input_147_cast);
            tensor<fp16, [1, 256, 256, 256]> var_526_cast = add(x = var_496_cast, y = hidden_states_31_cast);
            tensor<int32, [5]> reshape_84_shape_0 = const()[name = tensor<string, []>("reshape_84_shape_0"), val = tensor<int32, [5]>([1, 32, 8, 256, 256])];
            tensor<fp16, [1, 32, 8, 256, 256]> reshape_84_cast = reshape(shape = reshape_84_shape_0, x = var_526_cast);
            tensor<int32, [3]> reduce_mean_63_axes_0 = const()[name = tensor<string, []>("reduce_mean_63_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_63_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_63_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_63_cast = reduce_mean(axes = reduce_mean_63_axes_0, keep_dims = reduce_mean_63_keep_dims_0, x = reshape_84_cast);
            tensor<fp16, [1, 32, 8, 256, 256]> sub_42_cast = sub(x = reshape_84_cast, y = reduce_mean_63_cast);
            tensor<fp16, [1, 32, 8, 256, 256]> square_21_cast = square(x = sub_42_cast);
            tensor<int32, [3]> reduce_mean_65_axes_0 = const()[name = tensor<string, []>("reduce_mean_65_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_65_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_65_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_65_cast = reduce_mean(axes = reduce_mean_65_axes_0, keep_dims = reduce_mean_65_keep_dims_0, x = square_21_cast);
            tensor<fp16, []> add_42_y_0_to_fp16 = const()[name = tensor<string, []>("add_42_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_42_cast = add(x = reduce_mean_65_cast, y = add_42_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_21_cast = sqrt(x = add_42_cast);
            tensor<fp16, [1, 32, 8, 256, 256]> real_div_21_cast = real_div(x = sub_42_cast, y = sqrt_21_cast);
            tensor<int32, [4]> reshape_85_shape_0 = const()[name = tensor<string, []>("reshape_85_shape_0"), val = tensor<int32, [4]>([1, 256, 256, 256])];
            tensor<fp16, [1, 256, 256, 256]> reshape_85_cast = reshape(shape = reshape_85_shape_0, x = real_div_21_cast);
            tensor<fp16, [256]> add_43_mean_0_to_fp16 = const()[name = tensor<string, []>("add_43_mean_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(93344192)))];
            tensor<fp16, [256]> add_43_variance_0_to_fp16 = const()[name = tensor<string, []>("add_43_variance_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(93344768)))];
            tensor<fp16, [256]> add_43_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_43_gamma_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(93345344)))];
            tensor<fp16, [256]> add_43_beta_0_to_fp16 = const()[name = tensor<string, []>("add_43_beta_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(93345920)))];
            tensor<fp16, []> add_43_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_43_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 256, 256, 256]> add_43_cast = batch_norm(beta = add_43_beta_0_to_fp16, epsilon = add_43_epsilon_0_to_fp16, gamma = add_43_gamma_0_to_fp16, mean = add_43_mean_0_to_fp16, variance = add_43_variance_0_to_fp16, x = reshape_85_cast);
            tensor<fp16, [1, 256, 256, 256]> input_155_cast = silu(x = add_43_cast);
            tensor<int32, [2]> var_539 = const()[name = tensor<string, []>("op_539"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_541 = const()[name = tensor<string, []>("op_541"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_157_pad_type_0 = const()[name = tensor<string, []>("input_157_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_157_pad_0 = const()[name = tensor<string, []>("input_157_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [256, 256, 3, 3]> decoder_up_blocks_2_resnets_2_conv1_weight_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_2_resnets_2_conv1_weight_to_fp16"), val = tensor<fp16, [256, 256, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(93346496)))];
            tensor<fp16, [256]> decoder_up_blocks_2_resnets_2_conv1_bias_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_2_resnets_2_conv1_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(94526208)))];
            tensor<fp16, [1, 256, 256, 256]> input_157_cast = conv(bias = decoder_up_blocks_2_resnets_2_conv1_bias_to_fp16, dilations = var_541, groups = var_28, pad = input_157_pad_0, pad_type = input_157_pad_type_0, strides = var_539, weight = decoder_up_blocks_2_resnets_2_conv1_weight_to_fp16, x = input_155_cast);
            tensor<int32, [5]> reshape_88_shape_0 = const()[name = tensor<string, []>("reshape_88_shape_0"), val = tensor<int32, [5]>([1, 32, 8, 256, 256])];
            tensor<fp16, [1, 32, 8, 256, 256]> reshape_88_cast = reshape(shape = reshape_88_shape_0, x = input_157_cast);
            tensor<int32, [3]> reduce_mean_66_axes_0 = const()[name = tensor<string, []>("reduce_mean_66_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_66_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_66_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_66_cast = reduce_mean(axes = reduce_mean_66_axes_0, keep_dims = reduce_mean_66_keep_dims_0, x = reshape_88_cast);
            tensor<fp16, [1, 32, 8, 256, 256]> sub_44_cast = sub(x = reshape_88_cast, y = reduce_mean_66_cast);
            tensor<fp16, [1, 32, 8, 256, 256]> square_22_cast = square(x = sub_44_cast);
            tensor<int32, [3]> reduce_mean_68_axes_0 = const()[name = tensor<string, []>("reduce_mean_68_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_68_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_68_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_68_cast = reduce_mean(axes = reduce_mean_68_axes_0, keep_dims = reduce_mean_68_keep_dims_0, x = square_22_cast);
            tensor<fp16, []> add_44_y_0_to_fp16 = const()[name = tensor<string, []>("add_44_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_44_cast = add(x = reduce_mean_68_cast, y = add_44_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_22_cast = sqrt(x = add_44_cast);
            tensor<fp16, [1, 32, 8, 256, 256]> real_div_22_cast = real_div(x = sub_44_cast, y = sqrt_22_cast);
            tensor<int32, [4]> reshape_89_shape_0 = const()[name = tensor<string, []>("reshape_89_shape_0"), val = tensor<int32, [4]>([1, 256, 256, 256])];
            tensor<fp16, [1, 256, 256, 256]> reshape_89_cast = reshape(shape = reshape_89_shape_0, x = real_div_22_cast);
            tensor<fp16, [256]> add_45_mean_0_to_fp16 = const()[name = tensor<string, []>("add_45_mean_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(94526784)))];
            tensor<fp16, [256]> add_45_variance_0_to_fp16 = const()[name = tensor<string, []>("add_45_variance_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(94527360)))];
            tensor<fp16, [256]> add_45_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_45_gamma_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(94527936)))];
            tensor<fp16, [256]> add_45_beta_0_to_fp16 = const()[name = tensor<string, []>("add_45_beta_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(94528512)))];
            tensor<fp16, []> add_45_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_45_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 256, 256, 256]> add_45_cast = batch_norm(beta = add_45_beta_0_to_fp16, epsilon = add_45_epsilon_0_to_fp16, gamma = add_45_gamma_0_to_fp16, mean = add_45_mean_0_to_fp16, variance = add_45_variance_0_to_fp16, x = reshape_89_cast);
            tensor<fp16, [1, 256, 256, 256]> input_161_cast = silu(x = add_45_cast);
            tensor<int32, [2]> var_551 = const()[name = tensor<string, []>("op_551"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_553 = const()[name = tensor<string, []>("op_553"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_33_pad_type_0 = const()[name = tensor<string, []>("hidden_states_33_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_33_pad_0 = const()[name = tensor<string, []>("hidden_states_33_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [256, 256, 3, 3]> decoder_up_blocks_2_resnets_2_conv2_weight_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_2_resnets_2_conv2_weight_to_fp16"), val = tensor<fp16, [256, 256, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(94529088)))];
            tensor<fp16, [256]> decoder_up_blocks_2_resnets_2_conv2_bias_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_2_resnets_2_conv2_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(95708800)))];
            tensor<fp16, [1, 256, 256, 256]> hidden_states_33_cast = conv(bias = decoder_up_blocks_2_resnets_2_conv2_bias_to_fp16, dilations = var_553, groups = var_28, pad = hidden_states_33_pad_0, pad_type = hidden_states_33_pad_type_0, strides = var_551, weight = decoder_up_blocks_2_resnets_2_conv2_weight_to_fp16, x = input_161_cast);
            tensor<fp16, [1, 256, 256, 256]> var_556_cast = add(x = var_526_cast, y = hidden_states_33_cast);
            tensor<fp32, []> input_165_scale_factor_height_0 = const()[name = tensor<string, []>("input_165_scale_factor_height_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp32, []> input_165_scale_factor_width_0 = const()[name = tensor<string, []>("input_165_scale_factor_width_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp16, [1, 256, 512, 512]> input_165_cast = upsample_nearest_neighbor(scale_factor_height = input_165_scale_factor_height_0, scale_factor_width = input_165_scale_factor_width_0, x = var_556_cast);
            tensor<int32, [2]> var_564 = const()[name = tensor<string, []>("op_564"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_566 = const()[name = tensor<string, []>("op_566"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_167_pad_type_0 = const()[name = tensor<string, []>("input_167_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_167_pad_0 = const()[name = tensor<string, []>("input_167_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [256, 256, 3, 3]> decoder_up_blocks_2_upsamplers_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_2_upsamplers_0_conv_weight_to_fp16"), val = tensor<fp16, [256, 256, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(95709376)))];
            tensor<fp16, [256]> decoder_up_blocks_2_upsamplers_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_2_upsamplers_0_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(96889088)))];
            tensor<fp16, [1, 256, 512, 512]> input_167_cast = conv(bias = decoder_up_blocks_2_upsamplers_0_conv_bias_to_fp16, dilations = var_566, groups = var_28, pad = input_167_pad_0, pad_type = input_167_pad_type_0, strides = var_564, weight = decoder_up_blocks_2_upsamplers_0_conv_weight_to_fp16, x = input_165_cast);
            tensor<int32, [5]> reshape_92_shape_0 = const()[name = tensor<string, []>("reshape_92_shape_0"), val = tensor<int32, [5]>([1, 32, 8, 512, 512])];
            tensor<fp16, [1, 32, 8, 512, 512]> reshape_92_cast = reshape(shape = reshape_92_shape_0, x = input_167_cast);
            tensor<int32, [3]> reduce_mean_69_axes_0 = const()[name = tensor<string, []>("reduce_mean_69_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_69_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_69_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_69_cast = reduce_mean(axes = reduce_mean_69_axes_0, keep_dims = reduce_mean_69_keep_dims_0, x = reshape_92_cast);
            tensor<fp16, [1, 32, 8, 512, 512]> sub_46_cast = sub(x = reshape_92_cast, y = reduce_mean_69_cast);
            tensor<fp16, [1, 32, 8, 512, 512]> square_23_cast = square(x = sub_46_cast);
            tensor<int32, [3]> reduce_mean_71_axes_0 = const()[name = tensor<string, []>("reduce_mean_71_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_71_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_71_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_71_cast = reduce_mean(axes = reduce_mean_71_axes_0, keep_dims = reduce_mean_71_keep_dims_0, x = square_23_cast);
            tensor<fp16, []> add_46_y_0_to_fp16 = const()[name = tensor<string, []>("add_46_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_46_cast = add(x = reduce_mean_71_cast, y = add_46_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_23_cast = sqrt(x = add_46_cast);
            tensor<fp16, [1, 32, 8, 512, 512]> real_div_23_cast = real_div(x = sub_46_cast, y = sqrt_23_cast);
            tensor<int32, [4]> reshape_93_shape_0 = const()[name = tensor<string, []>("reshape_93_shape_0"), val = tensor<int32, [4]>([1, 256, 512, 512])];
            tensor<fp16, [1, 256, 512, 512]> reshape_93_cast = reshape(shape = reshape_93_shape_0, x = real_div_23_cast);
            tensor<fp16, [256]> add_47_mean_0_to_fp16 = const()[name = tensor<string, []>("add_47_mean_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(96889664)))];
            tensor<fp16, [256]> add_47_variance_0_to_fp16 = const()[name = tensor<string, []>("add_47_variance_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(96890240)))];
            tensor<fp16, [256]> add_47_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_47_gamma_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(96890816)))];
            tensor<fp16, [256]> add_47_beta_0_to_fp16 = const()[name = tensor<string, []>("add_47_beta_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(96891392)))];
            tensor<fp16, []> add_47_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_47_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 256, 512, 512]> add_47_cast = batch_norm(beta = add_47_beta_0_to_fp16, epsilon = add_47_epsilon_0_to_fp16, gamma = add_47_gamma_0_to_fp16, mean = add_47_mean_0_to_fp16, variance = add_47_variance_0_to_fp16, x = reshape_93_cast);
            tensor<fp16, [1, 256, 512, 512]> input_171_cast = silu(x = add_47_cast);
            tensor<int32, [2]> var_586 = const()[name = tensor<string, []>("op_586"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_588 = const()[name = tensor<string, []>("op_588"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_173_pad_type_0 = const()[name = tensor<string, []>("input_173_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_173_pad_0 = const()[name = tensor<string, []>("input_173_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 256, 3, 3]> decoder_up_blocks_3_resnets_0_conv1_weight_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_3_resnets_0_conv1_weight_to_fp16"), val = tensor<fp16, [128, 256, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(96891968)))];
            tensor<fp16, [128]> decoder_up_blocks_3_resnets_0_conv1_bias_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_3_resnets_0_conv1_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(97481856)))];
            tensor<fp16, [1, 128, 512, 512]> input_173_cast = conv(bias = decoder_up_blocks_3_resnets_0_conv1_bias_to_fp16, dilations = var_588, groups = var_28, pad = input_173_pad_0, pad_type = input_173_pad_type_0, strides = var_586, weight = decoder_up_blocks_3_resnets_0_conv1_weight_to_fp16, x = input_171_cast);
            tensor<int32, [5]> reshape_96_shape_0 = const()[name = tensor<string, []>("reshape_96_shape_0"), val = tensor<int32, [5]>([1, 32, 4, 512, 512])];
            tensor<fp16, [1, 32, 4, 512, 512]> reshape_96_cast = reshape(shape = reshape_96_shape_0, x = input_173_cast);
            tensor<int32, [3]> reduce_mean_72_axes_0 = const()[name = tensor<string, []>("reduce_mean_72_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_72_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_72_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_72_cast = reduce_mean(axes = reduce_mean_72_axes_0, keep_dims = reduce_mean_72_keep_dims_0, x = reshape_96_cast);
            tensor<fp16, [1, 32, 4, 512, 512]> sub_48_cast = sub(x = reshape_96_cast, y = reduce_mean_72_cast);
            tensor<fp16, [1, 32, 4, 512, 512]> square_24_cast = square(x = sub_48_cast);
            tensor<int32, [3]> reduce_mean_74_axes_0 = const()[name = tensor<string, []>("reduce_mean_74_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_74_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_74_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_74_cast = reduce_mean(axes = reduce_mean_74_axes_0, keep_dims = reduce_mean_74_keep_dims_0, x = square_24_cast);
            tensor<fp16, []> add_48_y_0_to_fp16 = const()[name = tensor<string, []>("add_48_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_48_cast = add(x = reduce_mean_74_cast, y = add_48_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_24_cast = sqrt(x = add_48_cast);
            tensor<fp16, [1, 32, 4, 512, 512]> real_div_24_cast = real_div(x = sub_48_cast, y = sqrt_24_cast);
            tensor<int32, [4]> reshape_97_shape_0 = const()[name = tensor<string, []>("reshape_97_shape_0"), val = tensor<int32, [4]>([1, 128, 512, 512])];
            tensor<fp16, [1, 128, 512, 512]> reshape_97_cast = reshape(shape = reshape_97_shape_0, x = real_div_24_cast);
            tensor<fp16, [128]> add_49_mean_0_to_fp16 = const()[name = tensor<string, []>("add_49_mean_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(97482176)))];
            tensor<fp16, [128]> add_49_variance_0_to_fp16 = const()[name = tensor<string, []>("add_49_variance_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(97482496)))];
            tensor<fp16, [128]> add_49_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_49_gamma_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(97482816)))];
            tensor<fp16, [128]> add_49_beta_0_to_fp16 = const()[name = tensor<string, []>("add_49_beta_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(97483136)))];
            tensor<fp16, []> add_49_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_49_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 128, 512, 512]> add_49_cast = batch_norm(beta = add_49_beta_0_to_fp16, epsilon = add_49_epsilon_0_to_fp16, gamma = add_49_gamma_0_to_fp16, mean = add_49_mean_0_to_fp16, variance = add_49_variance_0_to_fp16, x = reshape_97_cast);
            tensor<fp16, [1, 128, 512, 512]> input_177_cast = silu(x = add_49_cast);
            tensor<int32, [2]> var_598 = const()[name = tensor<string, []>("op_598"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_600 = const()[name = tensor<string, []>("op_600"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_37_pad_type_0 = const()[name = tensor<string, []>("hidden_states_37_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_37_pad_0 = const()[name = tensor<string, []>("hidden_states_37_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 128, 3, 3]> decoder_up_blocks_3_resnets_0_conv2_weight_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_3_resnets_0_conv2_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(97483456)))];
            tensor<fp16, [128]> decoder_up_blocks_3_resnets_0_conv2_bias_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_3_resnets_0_conv2_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(97778432)))];
            tensor<fp16, [1, 128, 512, 512]> hidden_states_37_cast = conv(bias = decoder_up_blocks_3_resnets_0_conv2_bias_to_fp16, dilations = var_600, groups = var_28, pad = hidden_states_37_pad_0, pad_type = hidden_states_37_pad_type_0, strides = var_598, weight = decoder_up_blocks_3_resnets_0_conv2_weight_to_fp16, x = input_177_cast);
            tensor<int32, [2]> var_605 = const()[name = tensor<string, []>("op_605"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_607 = const()[name = tensor<string, []>("op_607"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_tensor_pad_type_0 = const()[name = tensor<string, []>("input_tensor_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_tensor_pad_0 = const()[name = tensor<string, []>("input_tensor_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [128, 256, 1, 1]> decoder_up_blocks_3_resnets_0_conv_shortcut_weight_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_3_resnets_0_conv_shortcut_weight_to_fp16"), val = tensor<fp16, [128, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(97778752)))];
            tensor<fp16, [128]> decoder_up_blocks_3_resnets_0_conv_shortcut_bias_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_3_resnets_0_conv_shortcut_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(97844352)))];
            tensor<fp16, [1, 128, 512, 512]> input_tensor_cast = conv(bias = decoder_up_blocks_3_resnets_0_conv_shortcut_bias_to_fp16, dilations = var_607, groups = var_28, pad = input_tensor_pad_0, pad_type = input_tensor_pad_type_0, strides = var_605, weight = decoder_up_blocks_3_resnets_0_conv_shortcut_weight_to_fp16, x = input_167_cast);
            tensor<fp16, [1, 128, 512, 512]> var_610_cast = add(x = input_tensor_cast, y = hidden_states_37_cast);
            tensor<int32, [5]> reshape_100_shape_0 = const()[name = tensor<string, []>("reshape_100_shape_0"), val = tensor<int32, [5]>([1, 32, 4, 512, 512])];
            tensor<fp16, [1, 32, 4, 512, 512]> reshape_100_cast = reshape(shape = reshape_100_shape_0, x = var_610_cast);
            tensor<int32, [3]> reduce_mean_75_axes_0 = const()[name = tensor<string, []>("reduce_mean_75_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_75_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_75_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_75_cast = reduce_mean(axes = reduce_mean_75_axes_0, keep_dims = reduce_mean_75_keep_dims_0, x = reshape_100_cast);
            tensor<fp16, [1, 32, 4, 512, 512]> sub_50_cast = sub(x = reshape_100_cast, y = reduce_mean_75_cast);
            tensor<fp16, [1, 32, 4, 512, 512]> square_25_cast = square(x = sub_50_cast);
            tensor<int32, [3]> reduce_mean_77_axes_0 = const()[name = tensor<string, []>("reduce_mean_77_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_77_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_77_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_77_cast = reduce_mean(axes = reduce_mean_77_axes_0, keep_dims = reduce_mean_77_keep_dims_0, x = square_25_cast);
            tensor<fp16, []> add_50_y_0_to_fp16 = const()[name = tensor<string, []>("add_50_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_50_cast = add(x = reduce_mean_77_cast, y = add_50_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_25_cast = sqrt(x = add_50_cast);
            tensor<fp16, [1, 32, 4, 512, 512]> real_div_25_cast = real_div(x = sub_50_cast, y = sqrt_25_cast);
            tensor<int32, [4]> reshape_101_shape_0 = const()[name = tensor<string, []>("reshape_101_shape_0"), val = tensor<int32, [4]>([1, 128, 512, 512])];
            tensor<fp16, [1, 128, 512, 512]> reshape_101_cast = reshape(shape = reshape_101_shape_0, x = real_div_25_cast);
            tensor<fp16, [128]> add_51_mean_0_to_fp16 = const()[name = tensor<string, []>("add_51_mean_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(97844672)))];
            tensor<fp16, [128]> add_51_variance_0_to_fp16 = const()[name = tensor<string, []>("add_51_variance_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(97844992)))];
            tensor<fp16, [128]> add_51_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_51_gamma_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(97845312)))];
            tensor<fp16, [128]> add_51_beta_0_to_fp16 = const()[name = tensor<string, []>("add_51_beta_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(97845632)))];
            tensor<fp16, []> add_51_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_51_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 128, 512, 512]> add_51_cast = batch_norm(beta = add_51_beta_0_to_fp16, epsilon = add_51_epsilon_0_to_fp16, gamma = add_51_gamma_0_to_fp16, mean = add_51_mean_0_to_fp16, variance = add_51_variance_0_to_fp16, x = reshape_101_cast);
            tensor<fp16, [1, 128, 512, 512]> input_185_cast = silu(x = add_51_cast);
            tensor<int32, [2]> var_623 = const()[name = tensor<string, []>("op_623"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_625 = const()[name = tensor<string, []>("op_625"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_187_pad_type_0 = const()[name = tensor<string, []>("input_187_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_187_pad_0 = const()[name = tensor<string, []>("input_187_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 128, 3, 3]> decoder_up_blocks_3_resnets_1_conv1_weight_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_3_resnets_1_conv1_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(97845952)))];
            tensor<fp16, [128]> decoder_up_blocks_3_resnets_1_conv1_bias_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_3_resnets_1_conv1_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(98140928)))];
            tensor<fp16, [1, 128, 512, 512]> input_187_cast = conv(bias = decoder_up_blocks_3_resnets_1_conv1_bias_to_fp16, dilations = var_625, groups = var_28, pad = input_187_pad_0, pad_type = input_187_pad_type_0, strides = var_623, weight = decoder_up_blocks_3_resnets_1_conv1_weight_to_fp16, x = input_185_cast);
            tensor<int32, [5]> reshape_104_shape_0 = const()[name = tensor<string, []>("reshape_104_shape_0"), val = tensor<int32, [5]>([1, 32, 4, 512, 512])];
            tensor<fp16, [1, 32, 4, 512, 512]> reshape_104_cast = reshape(shape = reshape_104_shape_0, x = input_187_cast);
            tensor<int32, [3]> reduce_mean_78_axes_0 = const()[name = tensor<string, []>("reduce_mean_78_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_78_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_78_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_78_cast = reduce_mean(axes = reduce_mean_78_axes_0, keep_dims = reduce_mean_78_keep_dims_0, x = reshape_104_cast);
            tensor<fp16, [1, 32, 4, 512, 512]> sub_52_cast = sub(x = reshape_104_cast, y = reduce_mean_78_cast);
            tensor<fp16, [1, 32, 4, 512, 512]> square_26_cast = square(x = sub_52_cast);
            tensor<int32, [3]> reduce_mean_80_axes_0 = const()[name = tensor<string, []>("reduce_mean_80_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_80_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_80_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_80_cast = reduce_mean(axes = reduce_mean_80_axes_0, keep_dims = reduce_mean_80_keep_dims_0, x = square_26_cast);
            tensor<fp16, []> add_52_y_0_to_fp16 = const()[name = tensor<string, []>("add_52_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_52_cast = add(x = reduce_mean_80_cast, y = add_52_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_26_cast = sqrt(x = add_52_cast);
            tensor<fp16, [1, 32, 4, 512, 512]> real_div_26_cast = real_div(x = sub_52_cast, y = sqrt_26_cast);
            tensor<int32, [4]> reshape_105_shape_0 = const()[name = tensor<string, []>("reshape_105_shape_0"), val = tensor<int32, [4]>([1, 128, 512, 512])];
            tensor<fp16, [1, 128, 512, 512]> reshape_105_cast = reshape(shape = reshape_105_shape_0, x = real_div_26_cast);
            tensor<fp16, [128]> add_53_mean_0_to_fp16 = const()[name = tensor<string, []>("add_53_mean_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(98141248)))];
            tensor<fp16, [128]> add_53_variance_0_to_fp16 = const()[name = tensor<string, []>("add_53_variance_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(98141568)))];
            tensor<fp16, [128]> add_53_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_53_gamma_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(98141888)))];
            tensor<fp16, [128]> add_53_beta_0_to_fp16 = const()[name = tensor<string, []>("add_53_beta_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(98142208)))];
            tensor<fp16, []> add_53_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_53_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 128, 512, 512]> add_53_cast = batch_norm(beta = add_53_beta_0_to_fp16, epsilon = add_53_epsilon_0_to_fp16, gamma = add_53_gamma_0_to_fp16, mean = add_53_mean_0_to_fp16, variance = add_53_variance_0_to_fp16, x = reshape_105_cast);
            tensor<fp16, [1, 128, 512, 512]> input_191_cast = silu(x = add_53_cast);
            tensor<int32, [2]> var_635 = const()[name = tensor<string, []>("op_635"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_637 = const()[name = tensor<string, []>("op_637"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_39_pad_type_0 = const()[name = tensor<string, []>("hidden_states_39_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_39_pad_0 = const()[name = tensor<string, []>("hidden_states_39_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 128, 3, 3]> decoder_up_blocks_3_resnets_1_conv2_weight_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_3_resnets_1_conv2_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(98142528)))];
            tensor<fp16, [128]> decoder_up_blocks_3_resnets_1_conv2_bias_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_3_resnets_1_conv2_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(98437504)))];
            tensor<fp16, [1, 128, 512, 512]> hidden_states_39_cast = conv(bias = decoder_up_blocks_3_resnets_1_conv2_bias_to_fp16, dilations = var_637, groups = var_28, pad = hidden_states_39_pad_0, pad_type = hidden_states_39_pad_type_0, strides = var_635, weight = decoder_up_blocks_3_resnets_1_conv2_weight_to_fp16, x = input_191_cast);
            tensor<fp16, [1, 128, 512, 512]> var_640_cast = add(x = var_610_cast, y = hidden_states_39_cast);
            tensor<int32, [5]> reshape_108_shape_0 = const()[name = tensor<string, []>("reshape_108_shape_0"), val = tensor<int32, [5]>([1, 32, 4, 512, 512])];
            tensor<fp16, [1, 32, 4, 512, 512]> reshape_108_cast = reshape(shape = reshape_108_shape_0, x = var_640_cast);
            tensor<int32, [3]> reduce_mean_81_axes_0 = const()[name = tensor<string, []>("reduce_mean_81_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_81_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_81_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_81_cast = reduce_mean(axes = reduce_mean_81_axes_0, keep_dims = reduce_mean_81_keep_dims_0, x = reshape_108_cast);
            tensor<fp16, [1, 32, 4, 512, 512]> sub_54_cast = sub(x = reshape_108_cast, y = reduce_mean_81_cast);
            tensor<fp16, [1, 32, 4, 512, 512]> square_27_cast = square(x = sub_54_cast);
            tensor<int32, [3]> reduce_mean_83_axes_0 = const()[name = tensor<string, []>("reduce_mean_83_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_83_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_83_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_83_cast = reduce_mean(axes = reduce_mean_83_axes_0, keep_dims = reduce_mean_83_keep_dims_0, x = square_27_cast);
            tensor<fp16, []> add_54_y_0_to_fp16 = const()[name = tensor<string, []>("add_54_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_54_cast = add(x = reduce_mean_83_cast, y = add_54_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_27_cast = sqrt(x = add_54_cast);
            tensor<fp16, [1, 32, 4, 512, 512]> real_div_27_cast = real_div(x = sub_54_cast, y = sqrt_27_cast);
            tensor<int32, [4]> reshape_109_shape_0 = const()[name = tensor<string, []>("reshape_109_shape_0"), val = tensor<int32, [4]>([1, 128, 512, 512])];
            tensor<fp16, [1, 128, 512, 512]> reshape_109_cast = reshape(shape = reshape_109_shape_0, x = real_div_27_cast);
            tensor<fp16, [128]> add_55_mean_0_to_fp16 = const()[name = tensor<string, []>("add_55_mean_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(98437824)))];
            tensor<fp16, [128]> add_55_variance_0_to_fp16 = const()[name = tensor<string, []>("add_55_variance_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(98438144)))];
            tensor<fp16, [128]> add_55_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_55_gamma_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(98438464)))];
            tensor<fp16, [128]> add_55_beta_0_to_fp16 = const()[name = tensor<string, []>("add_55_beta_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(98438784)))];
            tensor<fp16, []> add_55_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_55_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 128, 512, 512]> add_55_cast = batch_norm(beta = add_55_beta_0_to_fp16, epsilon = add_55_epsilon_0_to_fp16, gamma = add_55_gamma_0_to_fp16, mean = add_55_mean_0_to_fp16, variance = add_55_variance_0_to_fp16, x = reshape_109_cast);
            tensor<fp16, [1, 128, 512, 512]> input_199_cast = silu(x = add_55_cast);
            tensor<int32, [2]> var_653 = const()[name = tensor<string, []>("op_653"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_655 = const()[name = tensor<string, []>("op_655"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_201_pad_type_0 = const()[name = tensor<string, []>("input_201_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_201_pad_0 = const()[name = tensor<string, []>("input_201_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 128, 3, 3]> decoder_up_blocks_3_resnets_2_conv1_weight_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_3_resnets_2_conv1_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(98439104)))];
            tensor<fp16, [128]> decoder_up_blocks_3_resnets_2_conv1_bias_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_3_resnets_2_conv1_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(98734080)))];
            tensor<fp16, [1, 128, 512, 512]> input_201_cast = conv(bias = decoder_up_blocks_3_resnets_2_conv1_bias_to_fp16, dilations = var_655, groups = var_28, pad = input_201_pad_0, pad_type = input_201_pad_type_0, strides = var_653, weight = decoder_up_blocks_3_resnets_2_conv1_weight_to_fp16, x = input_199_cast);
            tensor<int32, [5]> reshape_112_shape_0 = const()[name = tensor<string, []>("reshape_112_shape_0"), val = tensor<int32, [5]>([1, 32, 4, 512, 512])];
            tensor<fp16, [1, 32, 4, 512, 512]> reshape_112_cast = reshape(shape = reshape_112_shape_0, x = input_201_cast);
            tensor<int32, [3]> reduce_mean_84_axes_0 = const()[name = tensor<string, []>("reduce_mean_84_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_84_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_84_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_84_cast = reduce_mean(axes = reduce_mean_84_axes_0, keep_dims = reduce_mean_84_keep_dims_0, x = reshape_112_cast);
            tensor<fp16, [1, 32, 4, 512, 512]> sub_56_cast = sub(x = reshape_112_cast, y = reduce_mean_84_cast);
            tensor<fp16, [1, 32, 4, 512, 512]> square_28_cast = square(x = sub_56_cast);
            tensor<int32, [3]> reduce_mean_86_axes_0 = const()[name = tensor<string, []>("reduce_mean_86_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_86_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_86_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_86_cast = reduce_mean(axes = reduce_mean_86_axes_0, keep_dims = reduce_mean_86_keep_dims_0, x = square_28_cast);
            tensor<fp16, []> add_56_y_0_to_fp16 = const()[name = tensor<string, []>("add_56_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_56_cast = add(x = reduce_mean_86_cast, y = add_56_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_28_cast = sqrt(x = add_56_cast);
            tensor<fp16, [1, 32, 4, 512, 512]> real_div_28_cast = real_div(x = sub_56_cast, y = sqrt_28_cast);
            tensor<int32, [4]> reshape_113_shape_0 = const()[name = tensor<string, []>("reshape_113_shape_0"), val = tensor<int32, [4]>([1, 128, 512, 512])];
            tensor<fp16, [1, 128, 512, 512]> reshape_113_cast = reshape(shape = reshape_113_shape_0, x = real_div_28_cast);
            tensor<fp16, [128]> add_57_mean_0_to_fp16 = const()[name = tensor<string, []>("add_57_mean_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(98734400)))];
            tensor<fp16, [128]> add_57_variance_0_to_fp16 = const()[name = tensor<string, []>("add_57_variance_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(98734720)))];
            tensor<fp16, [128]> add_57_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_57_gamma_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(98735040)))];
            tensor<fp16, [128]> add_57_beta_0_to_fp16 = const()[name = tensor<string, []>("add_57_beta_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(98735360)))];
            tensor<fp16, []> add_57_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_57_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 128, 512, 512]> add_57_cast = batch_norm(beta = add_57_beta_0_to_fp16, epsilon = add_57_epsilon_0_to_fp16, gamma = add_57_gamma_0_to_fp16, mean = add_57_mean_0_to_fp16, variance = add_57_variance_0_to_fp16, x = reshape_113_cast);
            tensor<fp16, [1, 128, 512, 512]> input_205_cast = silu(x = add_57_cast);
            tensor<int32, [2]> var_665 = const()[name = tensor<string, []>("op_665"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_667 = const()[name = tensor<string, []>("op_667"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_pad_type_0 = const()[name = tensor<string, []>("hidden_states_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_pad_0 = const()[name = tensor<string, []>("hidden_states_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 128, 3, 3]> decoder_up_blocks_3_resnets_2_conv2_weight_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_3_resnets_2_conv2_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(98735680)))];
            tensor<fp16, [128]> decoder_up_blocks_3_resnets_2_conv2_bias_to_fp16 = const()[name = tensor<string, []>("decoder_up_blocks_3_resnets_2_conv2_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(99030656)))];
            tensor<fp16, [1, 128, 512, 512]> hidden_states_cast = conv(bias = decoder_up_blocks_3_resnets_2_conv2_bias_to_fp16, dilations = var_667, groups = var_28, pad = hidden_states_pad_0, pad_type = hidden_states_pad_type_0, strides = var_665, weight = decoder_up_blocks_3_resnets_2_conv2_weight_to_fp16, x = input_205_cast);
            tensor<fp16, [1, 128, 512, 512]> var_670_cast = add(x = var_640_cast, y = hidden_states_cast);
            tensor<int32, [5]> reshape_116_shape_0 = const()[name = tensor<string, []>("reshape_116_shape_0"), val = tensor<int32, [5]>([1, 32, 4, 512, 512])];
            tensor<fp16, [1, 32, 4, 512, 512]> reshape_116_cast = reshape(shape = reshape_116_shape_0, x = var_670_cast);
            tensor<int32, [3]> reduce_mean_87_axes_0 = const()[name = tensor<string, []>("reduce_mean_87_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_87_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_87_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_87_cast = reduce_mean(axes = reduce_mean_87_axes_0, keep_dims = reduce_mean_87_keep_dims_0, x = reshape_116_cast);
            tensor<fp16, [1, 32, 4, 512, 512]> sub_58_cast = sub(x = reshape_116_cast, y = reduce_mean_87_cast);
            tensor<fp16, [1, 32, 4, 512, 512]> square_29_cast = square(x = sub_58_cast);
            tensor<int32, [3]> reduce_mean_89_axes_0 = const()[name = tensor<string, []>("reduce_mean_89_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_89_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_89_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_89_cast = reduce_mean(axes = reduce_mean_89_axes_0, keep_dims = reduce_mean_89_keep_dims_0, x = square_29_cast);
            tensor<fp16, []> add_58_y_0_to_fp16 = const()[name = tensor<string, []>("add_58_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_58_cast = add(x = reduce_mean_89_cast, y = add_58_y_0_to_fp16);
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_29_cast = sqrt(x = add_58_cast);
            tensor<fp16, [1, 32, 4, 512, 512]> real_div_29_cast = real_div(x = sub_58_cast, y = sqrt_29_cast);
            tensor<int32, [4]> reshape_117_shape_0 = const()[name = tensor<string, []>("reshape_117_shape_0"), val = tensor<int32, [4]>([1, 128, 512, 512])];
            tensor<fp16, [1, 128, 512, 512]> reshape_117_cast = reshape(shape = reshape_117_shape_0, x = real_div_29_cast);
            tensor<fp16, [128]> add_59_mean_0_to_fp16 = const()[name = tensor<string, []>("add_59_mean_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(99030976)))];
            tensor<fp16, [128]> add_59_variance_0_to_fp16 = const()[name = tensor<string, []>("add_59_variance_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(99031296)))];
            tensor<fp16, [128]> add_59_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_59_gamma_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(99031616)))];
            tensor<fp16, [128]> add_59_beta_0_to_fp16 = const()[name = tensor<string, []>("add_59_beta_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(99031936)))];
            tensor<fp16, []> add_59_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_59_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 128, 512, 512]> add_59_cast = batch_norm(beta = add_59_beta_0_to_fp16, epsilon = add_59_epsilon_0_to_fp16, gamma = add_59_gamma_0_to_fp16, mean = add_59_mean_0_to_fp16, variance = add_59_variance_0_to_fp16, x = reshape_117_cast);
            tensor<fp16, [1, 128, 512, 512]> input_cast = silu(x = add_59_cast);
            tensor<int32, [2]> var_679 = const()[name = tensor<string, []>("op_679"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_681 = const()[name = tensor<string, []>("op_681"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_683_pad_type_0 = const()[name = tensor<string, []>("op_683_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_683_pad_0 = const()[name = tensor<string, []>("op_683_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [3, 128, 3, 3]> decoder_conv_out_weight_to_fp16 = const()[name = tensor<string, []>("decoder_conv_out_weight_to_fp16"), val = tensor<fp16, [3, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(99032256)))];
            tensor<fp16, [3]> decoder_conv_out_bias_to_fp16 = const()[name = tensor<string, []>("decoder_conv_out_bias_to_fp16"), val = tensor<fp16, [3]>([0x1.02p-6, -0x1.4ccp-6, -0x1.7bcp-5])];
            tensor<fp16, [1, 3, 512, 512]> var_683_cast = conv(bias = decoder_conv_out_bias_to_fp16, dilations = var_681, groups = var_28, pad = var_683_pad_0, pad_type = var_683_pad_type_0, strides = var_679, weight = decoder_conv_out_weight_to_fp16, x = input_cast);
            tensor<string, []> var_683_cast_to_fp32_dtype_0 = const()[name = tensor<string, []>("op_683_cast_to_fp32_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<fp32, [1, 3, 512, 512]> image = cast(dtype = var_683_cast_to_fp32_dtype_0, x = var_683_cast);
        } -> (image);
}